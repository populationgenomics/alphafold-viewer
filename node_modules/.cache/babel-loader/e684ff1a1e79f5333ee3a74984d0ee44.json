{"ast":null,"code":"/*\r\n * Copyright (c) 2018 Mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nvar Type;\n\n(function (Type) {\n  function Variable(name, type, isConstraint) {\n    return {\n      kind: 'variable',\n      name: name,\n      type: type,\n      isConstraint: isConstraint\n    };\n  }\n\n  Type.Variable = Variable;\n\n  function Value(namespace, name, parent) {\n    return {\n      kind: 'value',\n      namespace: namespace,\n      name: name,\n      parent: parent\n    };\n  }\n\n  Type.Value = Value;\n\n  function Container(namespace, name, child, alias) {\n    return {\n      kind: 'container',\n      namespace: namespace,\n      name: name,\n      child: child,\n      alias: alias\n    };\n  }\n\n  Type.Container = Container;\n\n  function Union(types) {\n    return {\n      kind: 'union',\n      types: types\n    };\n  }\n\n  Type.Union = Union;\n\n  function OneOf(namespace, name, type, values) {\n    var vals = Object.create(null);\n\n    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n      var v = values_1[_i];\n      vals[v] = true;\n    }\n\n    return {\n      kind: 'oneof',\n      namespace: namespace,\n      name: name,\n      type: type,\n      values: vals\n    };\n  }\n\n  Type.OneOf = OneOf;\n  Type.Any = {\n    kind: 'any'\n  };\n  Type.AnyValue = {\n    kind: 'any-value'\n  };\n  Type.Num = Value('', 'Number');\n  Type.Str = Value('', 'String');\n  Type.Bool = OneOf('', 'Bool', Type.Str, ['true', 'false']);\n\n  function oneOfValues(_a) {\n    var values = _a.values;\n    return Object.keys(values).sort();\n  }\n\n  Type.oneOfValues = oneOfValues;\n})(Type || (Type = {}));\n\nexport { Type };","map":{"version":3,"sources":["../../../src/mol-script/language/type.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\n * Copyright (c) 2018 Mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nvar Type;\r\n(function (Type) {\r\n    function Variable(name, type, isConstraint) { return { kind: 'variable', name: name, type: type, isConstraint: isConstraint }; }\r\n    Type.Variable = Variable;\r\n    function Value(namespace, name, parent) { return { kind: 'value', namespace: namespace, name: name, parent: parent }; }\r\n    Type.Value = Value;\r\n    function Container(namespace, name, child, alias) { return { kind: 'container', namespace: namespace, name: name, child: child, alias: alias }; }\r\n    Type.Container = Container;\r\n    function Union(types) { return { kind: 'union', types: types }; }\r\n    Type.Union = Union;\r\n    function OneOf(namespace, name, type, values) {\r\n        var vals = Object.create(null);\r\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\r\n            var v = values_1[_i];\r\n            vals[v] = true;\r\n        }\r\n        return { kind: 'oneof', namespace: namespace, name: name, type: type, values: vals };\r\n    }\r\n    Type.OneOf = OneOf;\r\n    Type.Any = { kind: 'any' };\r\n    Type.AnyValue = { kind: 'any-value' };\r\n    Type.Num = Value('', 'Number');\r\n    Type.Str = Value('', 'String');\r\n    Type.Bool = OneOf('', 'Bool', Type.Str, ['true', 'false']);\r\n    function oneOfValues(_a) {\r\n        var values = _a.values;\r\n        return Object.keys(values).sort();\r\n    }\r\n    Type.oneOfValues = oneOfValues;\r\n})(Type || (Type = {}));\r\nexport { Type };\r\n//# sourceMappingURL=type.js.map"]},"metadata":{},"sourceType":"module"}