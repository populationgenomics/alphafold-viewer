{"ast":null,"code":"/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nexport function normalize(value, min, max) {\n  return (value - min) / (max - min);\n}\nexport function clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nexport function pclamp(value) {\n  return clamp(value, 0, 100);\n}\nexport function saturate(value) {\n  return clamp(value, 0, 1);\n}\nexport function damp(value, dampingFactor) {\n  var dampedValue = value * dampingFactor;\n  return Math.abs(dampedValue) < 0.1 ? 0 : dampedValue;\n}\nexport function lerp(start, stop, alpha) {\n  return start + (stop - start) * alpha;\n}\n/** Catmul-Rom spline */\n\nexport function spline(p0, p1, p2, p3, t, tension) {\n  var v0 = (p2 - p0) * tension;\n  var v1 = (p3 - p1) * tension;\n  var t2 = t * t;\n  var t3 = t * t2;\n  return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\nexport function quadraticBezier(p0, p1, p2, t) {\n  var k = 1 - t;\n  return k * k * p0 + 2 * k * t * p1 + t * t * p2;\n}\nexport function smoothstep(min, max, x) {\n  x = saturate(normalize(x, min, max));\n  return x * x * (3 - 2 * x);\n}\nexport function smootherstep(min, max, x) {\n  x = saturate(normalize(x, min, max));\n  return x * x * x * (x * (x * 6 - 15) + 10);\n}\nexport function smootheststep(min, max, x) {\n  x = saturate(normalize(x, min, max));\n  return -20 * Math.pow(x, 7) + 70 * Math.pow(x, 6) - 84 * Math.pow(x, 5) + 35 * Math.pow(x, 4);\n}\nexport function almostIdentity(value, start, stop) {\n  if (value > start) return value;\n  var a = 2 * stop - start;\n  var b = 2 * start - 3 * stop;\n  var t = value / start;\n  return (a * t + b) * t * t + stop;\n}","map":{"version":3,"sources":["../../src/mol-math/interpolate.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nexport function normalize(value, min, max) {\r\n    return (value - min) / (max - min);\r\n}\r\nexport function clamp(value, min, max) {\r\n    return Math.max(min, Math.min(max, value));\r\n}\r\nexport function pclamp(value) {\r\n    return clamp(value, 0, 100);\r\n}\r\nexport function saturate(value) {\r\n    return clamp(value, 0, 1);\r\n}\r\nexport function damp(value, dampingFactor) {\r\n    var dampedValue = value * dampingFactor;\r\n    return Math.abs(dampedValue) < 0.1 ? 0 : dampedValue;\r\n}\r\nexport function lerp(start, stop, alpha) {\r\n    return start + (stop - start) * alpha;\r\n}\r\n/** Catmul-Rom spline */\r\nexport function spline(p0, p1, p2, p3, t, tension) {\r\n    var v0 = (p2 - p0) * tension;\r\n    var v1 = (p3 - p1) * tension;\r\n    var t2 = t * t;\r\n    var t3 = t * t2;\r\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\r\n}\r\nexport function quadraticBezier(p0, p1, p2, t) {\r\n    var k = 1 - t;\r\n    return (k * k * p0) + (2 * k * t * p1) + (t * t * p2);\r\n}\r\nexport function smoothstep(min, max, x) {\r\n    x = saturate(normalize(x, min, max));\r\n    return x * x * (3 - 2 * x);\r\n}\r\nexport function smootherstep(min, max, x) {\r\n    x = saturate(normalize(x, min, max));\r\n    return x * x * x * (x * (x * 6 - 15) + 10);\r\n}\r\nexport function smootheststep(min, max, x) {\r\n    x = saturate(normalize(x, min, max));\r\n    return -20 * Math.pow(x, 7) + 70 * Math.pow(x, 6) - 84 * Math.pow(x, 5) + 35 * Math.pow(x, 4);\r\n}\r\nexport function almostIdentity(value, start, stop) {\r\n    if (value > start)\r\n        return value;\r\n    var a = 2 * stop - start;\r\n    var b = 2 * start - 3 * stop;\r\n    var t = value / start;\r\n    return (a * t + b) * t * t + stop;\r\n}\r\n//# sourceMappingURL=interpolate.js.map"]},"metadata":{},"sourceType":"module"}