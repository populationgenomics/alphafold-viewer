{"ast":null,"code":"/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { produce } from 'immer';\nexport function ParamMapping(def) {\n  return function (_a) {\n    var values = _a.values,\n        update = _a.update,\n        apply = _a.apply;\n    return {\n      params: typeof def.params === 'function' ? def.params : function (ctx) {\n        return def.params;\n      },\n      getTarget: def.target,\n      getValues: values,\n      update: function (s, ctx) {\n        var t = def.target(ctx);\n        return produce(t, function (t1) {\n          return update(s, t1, ctx);\n        });\n      },\n      apply: apply ? apply : function () {}\n    };\n  };\n}","map":{"version":3,"sources":["../../src/mol-util/param-mapping.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAGH,SAAS,OAAT,QAAwB,OAAxB;AAWA,OAAM,SAAU,YAAV,CAAkC,GAAlC,EAGL;AAKG,SAAO,UAAC,EAAD,EAA0B;QAAvB,MAAM,GAAA,EAAA,CAAA,M;QAAE,MAAM,GAAA,EAAA,CAAA,M;QAAE,KAAK,GAAA,EAAA,CAAA,K;AAAO,WAAC;AACnC,MAAA,MAAM,EAAE,OAAO,GAAG,CAAC,MAAX,KAAsB,UAAtB,GAAmC,GAAG,CAAC,MAAvC,GAAuD,UAAA,GAAA,EAAG;AAAI,eAAA,GAAG,CAAH,MAAA;AAAU,OAD7C;AAEnC,MAAA,SAAS,EAAE,GAAG,CAAC,MAFoB;AAGnC,MAAA,SAAS,EAAE,MAHwB;AAInC,MAAA,MAAM,EAAN,UAAO,CAAP,EAAU,GAAV,EAAa;AACT,YAAM,CAAC,GAAG,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAV;AACA,eAAO,OAAO,CAAC,CAAD,EAAI,UAAC,EAAD,EAAe;AAAK,iBAAA,MAAM,CAAC,CAAD,EAAI,EAAJ,EAAN,GAAM,CAAN;AAAkB,SAA1C,CAAd;AACH,OAPkC;AAQnC,MAAA,KAAK,EAAE,KAAK,GAAG,KAAH,GAAW,YAAA,CAAS;AARG,KAAD;AASpC,GATF;AAUH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { produce } from 'immer';\r\nexport function ParamMapping(def) {\r\n    return function (_a) {\r\n        var values = _a.values, update = _a.update, apply = _a.apply;\r\n        return ({\r\n            params: typeof def.params === 'function' ? def.params : function (ctx) { return def.params; },\r\n            getTarget: def.target,\r\n            getValues: values,\r\n            update: function (s, ctx) {\r\n                var t = def.target(ctx);\r\n                return produce(t, function (t1) { return update(s, t1, ctx); });\r\n            },\r\n            apply: apply ? apply : function () { }\r\n        });\r\n    };\r\n}\r\n//# sourceMappingURL=param-mapping.js.map"]},"metadata":{},"sourceType":"module"}