{"ast":null,"code":"/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { StructureElement, Bond } from '../../mol-model/structure';\nimport { ColorScale, Color } from '../../mol-util/color';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nvar DefaultColor = Color(0xCCCCCC);\nvar Description = 'Gives every polymer residue a color based on its `seq_id` value.';\nexport var SequenceIdColorThemeParams = {\n  list: PD.ColorList('turbo', {\n    presetKind: 'scale'\n  })\n};\nexport function getSequenceIdColorThemeParams(ctx) {\n  return SequenceIdColorThemeParams; // TODO return copy\n}\n\nfunction getSeqId(unit, element) {\n  var model = unit.model;\n\n  switch (unit.kind) {\n    case 0\n    /* Atomic */\n    :\n      var residueIndex = model.atomicHierarchy.residueAtomSegments.index[element];\n      return model.atomicHierarchy.residues.label_seq_id.value(residueIndex);\n\n    case 1\n    /* Spheres */\n    :\n      return Math.round((model.coarseHierarchy.spheres.seq_id_begin.value(element) + model.coarseHierarchy.spheres.seq_id_end.value(element)) / 2);\n\n    case 2\n    /* Gaussians */\n    :\n      return Math.round((model.coarseHierarchy.gaussians.seq_id_begin.value(element) + model.coarseHierarchy.gaussians.seq_id_end.value(element)) / 2);\n  }\n}\n\nfunction getSequenceLength(unit, element) {\n  var model = unit.model;\n  var entityId = '';\n\n  switch (unit.kind) {\n    case 0\n    /* Atomic */\n    :\n      var chainIndex = model.atomicHierarchy.chainAtomSegments.index[element];\n      entityId = model.atomicHierarchy.chains.label_entity_id.value(chainIndex);\n      break;\n\n    case 1\n    /* Spheres */\n    :\n      entityId = model.coarseHierarchy.spheres.entity_id.value(element);\n      break;\n\n    case 2\n    /* Gaussians */\n    :\n      entityId = model.coarseHierarchy.gaussians.entity_id.value(element);\n      break;\n  }\n\n  if (entityId === '') return 0;\n  var entityIndex = model.entities.getEntityIndex(entityId);\n  if (entityIndex === -1) return 0;\n  var entity = model.sequence.byEntityKey[entityIndex];\n  if (entity === undefined) return 0;\n  return entity.sequence.length;\n}\n\nexport function SequenceIdColorTheme(ctx, props) {\n  var scale = ColorScale.create({\n    listOrName: props.list.colors,\n    minLabel: 'Start',\n    maxLabel: 'End'\n  });\n\n  var color = function (location) {\n    if (StructureElement.Location.is(location)) {\n      var unit = location.unit,\n          element = location.element;\n      var seq_id = getSeqId(unit, element);\n\n      if (seq_id > 0) {\n        var seqLen = getSequenceLength(unit, element);\n\n        if (seqLen) {\n          scale.setDomain(0, seqLen - 1);\n          return scale.color(seq_id);\n        }\n      }\n    } else if (Bond.isLocation(location)) {\n      var aUnit = location.aUnit,\n          aIndex = location.aIndex;\n      var seq_id = getSeqId(aUnit, aUnit.elements[aIndex]);\n\n      if (seq_id > 0) {\n        var seqLen = getSequenceLength(aUnit, aUnit.elements[aIndex]);\n\n        if (seqLen) {\n          scale.setDomain(0, seqLen - 1);\n          return scale.color(seq_id);\n        }\n      }\n    }\n\n    return DefaultColor;\n  };\n\n  return {\n    factory: SequenceIdColorTheme,\n    granularity: 'group',\n    preferSmoothing: true,\n    color: color,\n    props: props,\n    description: Description,\n    legend: scale ? scale.legend : undefined\n  };\n}\nexport var SequenceIdColorThemeProvider = {\n  name: 'sequence-id',\n  label: 'Sequence Id',\n  category: \"Residue Property\"\n  /* Residue */\n  ,\n  factory: SequenceIdColorTheme,\n  getParams: getSequenceIdColorThemeParams,\n  defaultValues: PD.getDefaultValues(SequenceIdColorThemeParams),\n  isApplicable: function (ctx) {\n    return !!ctx.structure;\n  }\n};","map":{"version":3,"sources":["../../../src/mol-theme/color/sequence-id.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { StructureElement, Bond } from '../../mol-model/structure';\r\nimport { ColorScale, Color } from '../../mol-util/color';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nvar DefaultColor = Color(0xCCCCCC);\r\nvar Description = 'Gives every polymer residue a color based on its `seq_id` value.';\r\nexport var SequenceIdColorThemeParams = {\r\n    list: PD.ColorList('turbo', { presetKind: 'scale' }),\r\n};\r\nexport function getSequenceIdColorThemeParams(ctx) {\r\n    return SequenceIdColorThemeParams; // TODO return copy\r\n}\r\nfunction getSeqId(unit, element) {\r\n    var model = unit.model;\r\n    switch (unit.kind) {\r\n        case 0 /* Atomic */:\r\n            var residueIndex = model.atomicHierarchy.residueAtomSegments.index[element];\r\n            return model.atomicHierarchy.residues.label_seq_id.value(residueIndex);\r\n        case 1 /* Spheres */:\r\n            return Math.round((model.coarseHierarchy.spheres.seq_id_begin.value(element) +\r\n                model.coarseHierarchy.spheres.seq_id_end.value(element)) / 2);\r\n        case 2 /* Gaussians */:\r\n            return Math.round((model.coarseHierarchy.gaussians.seq_id_begin.value(element) +\r\n                model.coarseHierarchy.gaussians.seq_id_end.value(element)) / 2);\r\n    }\r\n}\r\nfunction getSequenceLength(unit, element) {\r\n    var model = unit.model;\r\n    var entityId = '';\r\n    switch (unit.kind) {\r\n        case 0 /* Atomic */:\r\n            var chainIndex = model.atomicHierarchy.chainAtomSegments.index[element];\r\n            entityId = model.atomicHierarchy.chains.label_entity_id.value(chainIndex);\r\n            break;\r\n        case 1 /* Spheres */:\r\n            entityId = model.coarseHierarchy.spheres.entity_id.value(element);\r\n            break;\r\n        case 2 /* Gaussians */:\r\n            entityId = model.coarseHierarchy.gaussians.entity_id.value(element);\r\n            break;\r\n    }\r\n    if (entityId === '')\r\n        return 0;\r\n    var entityIndex = model.entities.getEntityIndex(entityId);\r\n    if (entityIndex === -1)\r\n        return 0;\r\n    var entity = model.sequence.byEntityKey[entityIndex];\r\n    if (entity === undefined)\r\n        return 0;\r\n    return entity.sequence.length;\r\n}\r\nexport function SequenceIdColorTheme(ctx, props) {\r\n    var scale = ColorScale.create({\r\n        listOrName: props.list.colors,\r\n        minLabel: 'Start',\r\n        maxLabel: 'End',\r\n    });\r\n    var color = function (location) {\r\n        if (StructureElement.Location.is(location)) {\r\n            var unit = location.unit, element = location.element;\r\n            var seq_id = getSeqId(unit, element);\r\n            if (seq_id > 0) {\r\n                var seqLen = getSequenceLength(unit, element);\r\n                if (seqLen) {\r\n                    scale.setDomain(0, seqLen - 1);\r\n                    return scale.color(seq_id);\r\n                }\r\n            }\r\n        }\r\n        else if (Bond.isLocation(location)) {\r\n            var aUnit = location.aUnit, aIndex = location.aIndex;\r\n            var seq_id = getSeqId(aUnit, aUnit.elements[aIndex]);\r\n            if (seq_id > 0) {\r\n                var seqLen = getSequenceLength(aUnit, aUnit.elements[aIndex]);\r\n                if (seqLen) {\r\n                    scale.setDomain(0, seqLen - 1);\r\n                    return scale.color(seq_id);\r\n                }\r\n            }\r\n        }\r\n        return DefaultColor;\r\n    };\r\n    return {\r\n        factory: SequenceIdColorTheme,\r\n        granularity: 'group',\r\n        preferSmoothing: true,\r\n        color: color,\r\n        props: props,\r\n        description: Description,\r\n        legend: scale ? scale.legend : undefined\r\n    };\r\n}\r\nexport var SequenceIdColorThemeProvider = {\r\n    name: 'sequence-id',\r\n    label: 'Sequence Id',\r\n    category: \"Residue Property\" /* Residue */,\r\n    factory: SequenceIdColorTheme,\r\n    getParams: getSequenceIdColorThemeParams,\r\n    defaultValues: PD.getDefaultValues(SequenceIdColorThemeParams),\r\n    isApplicable: function (ctx) { return !!ctx.structure; }\r\n};\r\n//# sourceMappingURL=sequence-id.js.map"]},"metadata":{},"sourceType":"module"}