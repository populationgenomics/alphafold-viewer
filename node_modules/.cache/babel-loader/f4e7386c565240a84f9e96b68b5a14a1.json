{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\n\nimport { PluginUIComponent } from './base';\nimport { OrderedMap } from 'immutable';\nimport { filter } from 'rxjs/operators';\nimport { IconButton } from './controls/common';\nimport { CancelSvg } from './controls/icons';\n\nvar BackgroundTaskProgress =\n/** @class */\nfunction (_super) {\n  __extends(BackgroundTaskProgress, _super);\n\n  function BackgroundTaskProgress() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      tracked: OrderedMap()\n    };\n    return _this;\n  }\n\n  BackgroundTaskProgress.prototype.componentDidMount = function () {\n    var _this = this;\n\n    var _a;\n\n    var hideOverlay = !!((_a = this.plugin.spec.components) === null || _a === void 0 ? void 0 : _a.hideTaskOverlay);\n    this.subscribe(this.plugin.events.task.progress.pipe(filter(function (e) {\n      return e.level === 'background' && (hideOverlay || !e.useOverlay);\n    })), function (e) {\n      _this.setState({\n        tracked: _this.state.tracked.set(e.id, e)\n      });\n    });\n    this.subscribe(this.plugin.events.task.finished, function (_a) {\n      var id = _a.id;\n\n      _this.setState({\n        tracked: _this.state.tracked.delete(id)\n      });\n    });\n  };\n\n  BackgroundTaskProgress.prototype.render = function () {\n    return _jsx(\"div\", __assign({\n      className: 'msp-background-tasks'\n    }, {\n      children: this.state.tracked.valueSeq().map(function (e) {\n        return _jsx(ProgressEntry, {\n          event: e\n        }, e.id);\n      })\n    }), void 0);\n  };\n\n  return BackgroundTaskProgress;\n}(PluginUIComponent);\n\nexport { BackgroundTaskProgress };\n\nvar ProgressEntry =\n/** @class */\nfunction (_super) {\n  __extends(ProgressEntry, _super);\n\n  function ProgressEntry() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.abort = function () {\n      _this.plugin.managers.task.requestAbort(_this.props.event.progress.root.progress.taskId, 'User Request');\n    };\n\n    return _this;\n  }\n\n  ProgressEntry.prototype.render = function () {\n    var root = this.props.event.progress.root;\n    var subtaskCount = countSubtasks(this.props.event.progress.root) - 1;\n    var pr = root.progress.isIndeterminate ? void 0 : _jsxs(_Fragment, {\n      children: [\"[\", root.progress.current, \"/\", root.progress.max, \"]\"]\n    }, void 0);\n    var subtasks = subtaskCount > 0 ? _jsxs(_Fragment, {\n      children: [\"[\", subtaskCount, \" subtask(s)]\"]\n    }, void 0) : void 0;\n    return _jsx(\"div\", __assign({\n      className: 'msp-task-state'\n    }, {\n      children: _jsxs(\"div\", {\n        children: [root.progress.canAbort && _jsx(IconButton, {\n          svg: CancelSvg,\n          onClick: this.abort,\n          title: 'Abort'\n        }, void 0), _jsxs(\"div\", {\n          children: [root.progress.message, \" \", pr, \" \", subtasks]\n        }, void 0)]\n      }, void 0)\n    }), void 0);\n  };\n\n  return ProgressEntry;\n}(PluginUIComponent);\n\nfunction countSubtasks(progress) {\n  if (progress.children.length === 0) return 1;\n  var sum = 0;\n\n  for (var _i = 0, _a = progress.children; _i < _a.length; _i++) {\n    var c = _a[_i];\n    sum += countSubtasks(c);\n  }\n\n  return sum;\n}\n\nvar OverlayTaskProgress =\n/** @class */\nfunction (_super) {\n  __extends(OverlayTaskProgress, _super);\n\n  function OverlayTaskProgress() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      tracked: OrderedMap()\n    };\n    return _this;\n  }\n\n  OverlayTaskProgress.prototype.componentDidMount = function () {\n    var _this = this;\n\n    this.subscribe(this.plugin.events.task.progress.pipe(filter(function (e) {\n      return !!e.useOverlay;\n    })), function (e) {\n      _this.setState({\n        tracked: _this.state.tracked.set(e.id, e)\n      });\n    });\n    this.subscribe(this.plugin.events.task.finished, function (_a) {\n      var id = _a.id;\n\n      _this.setState({\n        tracked: _this.state.tracked.delete(id)\n      });\n    });\n  };\n\n  OverlayTaskProgress.prototype.render = function () {\n    if (this.state.tracked.size === 0) return null;\n    return _jsx(\"div\", __assign({\n      className: 'msp-overlay-tasks'\n    }, {\n      children: this.state.tracked.valueSeq().map(function (e) {\n        return _jsx(ProgressEntry, {\n          event: e\n        }, e.id);\n      })\n    }), void 0);\n  };\n\n  return OverlayTaskProgress;\n}(PluginUIComponent);\n\nexport { OverlayTaskProgress };","map":{"version":3,"sources":["../../src/mol-plugin-ui/task.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\r\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\r\n/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { PluginUIComponent } from './base';\r\nimport { OrderedMap } from 'immutable';\r\nimport { filter } from 'rxjs/operators';\r\nimport { IconButton } from './controls/common';\r\nimport { CancelSvg } from './controls/icons';\r\nvar BackgroundTaskProgress = /** @class */ (function (_super) {\r\n    __extends(BackgroundTaskProgress, _super);\r\n    function BackgroundTaskProgress() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = { tracked: OrderedMap() };\r\n        return _this;\r\n    }\r\n    BackgroundTaskProgress.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        var _a;\r\n        var hideOverlay = !!((_a = this.plugin.spec.components) === null || _a === void 0 ? void 0 : _a.hideTaskOverlay);\r\n        this.subscribe(this.plugin.events.task.progress.pipe(filter(function (e) { return e.level === 'background' && (hideOverlay || !e.useOverlay); })), function (e) {\r\n            _this.setState({ tracked: _this.state.tracked.set(e.id, e) });\r\n        });\r\n        this.subscribe(this.plugin.events.task.finished, function (_a) {\r\n            var id = _a.id;\r\n            _this.setState({ tracked: _this.state.tracked.delete(id) });\r\n        });\r\n    };\r\n    BackgroundTaskProgress.prototype.render = function () {\r\n        return _jsx(\"div\", __assign({ className: 'msp-background-tasks' }, { children: this.state.tracked.valueSeq().map(function (e) { return _jsx(ProgressEntry, { event: e }, e.id); }) }), void 0);\r\n    };\r\n    return BackgroundTaskProgress;\r\n}(PluginUIComponent));\r\nexport { BackgroundTaskProgress };\r\nvar ProgressEntry = /** @class */ (function (_super) {\r\n    __extends(ProgressEntry, _super);\r\n    function ProgressEntry() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.abort = function () {\r\n            _this.plugin.managers.task.requestAbort(_this.props.event.progress.root.progress.taskId, 'User Request');\r\n        };\r\n        return _this;\r\n    }\r\n    ProgressEntry.prototype.render = function () {\r\n        var root = this.props.event.progress.root;\r\n        var subtaskCount = countSubtasks(this.props.event.progress.root) - 1;\r\n        var pr = root.progress.isIndeterminate\r\n            ? void 0\r\n            : _jsxs(_Fragment, { children: [\"[\", root.progress.current, \"/\", root.progress.max, \"]\"] }, void 0);\r\n        var subtasks = subtaskCount > 0\r\n            ? _jsxs(_Fragment, { children: [\"[\", subtaskCount, \" subtask(s)]\"] }, void 0)\r\n            : void 0;\r\n        return _jsx(\"div\", __assign({ className: 'msp-task-state' }, { children: _jsxs(\"div\", { children: [root.progress.canAbort && _jsx(IconButton, { svg: CancelSvg, onClick: this.abort, title: 'Abort' }, void 0), _jsxs(\"div\", { children: [root.progress.message, \" \", pr, \" \", subtasks] }, void 0)] }, void 0) }), void 0);\r\n    };\r\n    return ProgressEntry;\r\n}(PluginUIComponent));\r\nfunction countSubtasks(progress) {\r\n    if (progress.children.length === 0)\r\n        return 1;\r\n    var sum = 0;\r\n    for (var _i = 0, _a = progress.children; _i < _a.length; _i++) {\r\n        var c = _a[_i];\r\n        sum += countSubtasks(c);\r\n    }\r\n    return sum;\r\n}\r\nvar OverlayTaskProgress = /** @class */ (function (_super) {\r\n    __extends(OverlayTaskProgress, _super);\r\n    function OverlayTaskProgress() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = { tracked: OrderedMap() };\r\n        return _this;\r\n    }\r\n    OverlayTaskProgress.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        this.subscribe(this.plugin.events.task.progress.pipe(filter(function (e) { return !!e.useOverlay; })), function (e) {\r\n            _this.setState({ tracked: _this.state.tracked.set(e.id, e) });\r\n        });\r\n        this.subscribe(this.plugin.events.task.finished, function (_a) {\r\n            var id = _a.id;\r\n            _this.setState({ tracked: _this.state.tracked.delete(id) });\r\n        });\r\n    };\r\n    OverlayTaskProgress.prototype.render = function () {\r\n        if (this.state.tracked.size === 0)\r\n            return null;\r\n        return _jsx(\"div\", __assign({ className: 'msp-overlay-tasks' }, { children: this.state.tracked.valueSeq().map(function (e) { return _jsx(ProgressEntry, { event: e }, e.id); }) }), void 0);\r\n    };\r\n    return OverlayTaskProgress;\r\n}(PluginUIComponent));\r\nexport { OverlayTaskProgress };\r\n//# sourceMappingURL=task.js.map"]},"metadata":{},"sourceType":"module"}