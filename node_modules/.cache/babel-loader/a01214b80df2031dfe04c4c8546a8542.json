{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Viewport } from '../mol-canvas3d/camera/util';\nimport { Mat4, Vec3, Vec4, Vec2, Quat } from '../mol-math/linear-algebra';\nimport { Color } from '../mol-util/color';\nimport { ValueCell, deepEqual } from '../mol-util';\nimport { ParamDefinition as PD } from '../mol-util/param-definition';\nimport { Clipping } from '../mol-theme/clipping';\nimport { stringToWords } from '../mol-util/string';\nimport { degToRad } from '../mol-math/misc';\nimport { createNullTexture } from './webgl/texture';\nimport { arrayMapUpsert } from '../mol-util/array';\nimport { clamp } from '../mol-math/interpolate';\nexport var RendererParams = {\n  backgroundColor: PD.Color(Color(0x000000), {\n    description: 'Background color of the 3D canvas'\n  }),\n  // the following are general 'material' parameters\n  pickingAlphaThreshold: PD.Numeric(0.5, {\n    min: 0.0,\n    max: 1.0,\n    step: 0.01\n  }, {\n    description: 'The minimum opacity value needed for an object to be pickable.'\n  }),\n  interiorDarkening: PD.Numeric(0.5, {\n    min: 0.0,\n    max: 1.0,\n    step: 0.01\n  }),\n  interiorColorFlag: PD.Boolean(true, {\n    label: 'Use Interior Color'\n  }),\n  interiorColor: PD.Color(Color.fromNormalizedRgb(0.3, 0.3, 0.3)),\n  highlightColor: PD.Color(Color.fromNormalizedRgb(1.0, 0.4, 0.6)),\n  selectColor: PD.Color(Color.fromNormalizedRgb(0.2, 1.0, 0.1)),\n  highlightStrength: PD.Numeric(0.7, {\n    min: 0.0,\n    max: 1.0,\n    step: 0.1\n  }),\n  selectStrength: PD.Numeric(0.7, {\n    min: 0.0,\n    max: 1.0,\n    step: 0.1\n  }),\n  markerPriority: PD.Select(1, [[1, 'Highlight'], [2, 'Select']]),\n  xrayEdgeFalloff: PD.Numeric(1, {\n    min: 0.0,\n    max: 3.0,\n    step: 0.1\n  }),\n  style: PD.MappedStatic('matte', {\n    custom: PD.Group({\n      lightIntensity: PD.Numeric(0.6, {\n        min: 0.0,\n        max: 1.0,\n        step: 0.01\n      }),\n      ambientIntensity: PD.Numeric(0.4, {\n        min: 0.0,\n        max: 1.0,\n        step: 0.01\n      }),\n      metalness: PD.Numeric(0.0, {\n        min: 0.0,\n        max: 1.0,\n        step: 0.01\n      }),\n      roughness: PD.Numeric(1.0, {\n        min: 0.0,\n        max: 1.0,\n        step: 0.01\n      }),\n      reflectivity: PD.Numeric(0.5, {\n        min: 0.0,\n        max: 1.0,\n        step: 0.01\n      })\n    }, {\n      isExpanded: true\n    }),\n    flat: PD.Group({}),\n    matte: PD.Group({}),\n    glossy: PD.Group({}),\n    metallic: PD.Group({}),\n    plastic: PD.Group({})\n  }, {\n    label: 'Lighting',\n    description: 'Style in which the 3D scene is rendered/lighted'\n  }),\n  clip: PD.Group({\n    variant: PD.Select('instance', PD.arrayToOptions(['instance', 'pixel'])),\n    objects: PD.ObjectList({\n      type: PD.Select('plane', PD.objectToOptions(Clipping.Type, function (t) {\n        return stringToWords(t);\n      })),\n      invert: PD.Boolean(false),\n      position: PD.Vec3(Vec3()),\n      rotation: PD.Group({\n        axis: PD.Vec3(Vec3.create(1, 0, 0)),\n        angle: PD.Numeric(0, {\n          min: -180,\n          max: 180,\n          step: 1\n        }, {\n          description: 'Angle in Degrees'\n        })\n      }, {\n        isExpanded: true\n      }),\n      scale: PD.Vec3(Vec3.create(1, 1, 1))\n    }, function (o) {\n      return stringToWords(o.type);\n    })\n  })\n};\nexport function getStyle(props) {\n  switch (props.name) {\n    case 'custom':\n      return props.params;\n\n    case 'flat':\n      return {\n        lightIntensity: 0,\n        ambientIntensity: 1,\n        metalness: 0,\n        roughness: 0.4,\n        reflectivity: 0.5\n      };\n\n    case 'matte':\n      return {\n        lightIntensity: 0.7,\n        ambientIntensity: 0.3,\n        metalness: 0,\n        roughness: 1,\n        reflectivity: 0.5\n      };\n\n    case 'glossy':\n      return {\n        lightIntensity: 0.7,\n        ambientIntensity: 0.3,\n        metalness: 0,\n        roughness: 0.4,\n        reflectivity: 0.5\n      };\n\n    case 'metallic':\n      return {\n        lightIntensity: 0.7,\n        ambientIntensity: 0.7,\n        metalness: 0.6,\n        roughness: 0.6,\n        reflectivity: 0.5\n      };\n\n    case 'plastic':\n      return {\n        lightIntensity: 0.7,\n        ambientIntensity: 0.3,\n        metalness: 0,\n        roughness: 0.2,\n        reflectivity: 0.5\n      };\n  }\n}\nvar tmpQuat = Quat();\n\nfunction getClip(props, clip) {\n  var _a = (clip === null || clip === void 0 ? void 0 : clip.objects) || {\n    type: new Array(5).fill(1),\n    invert: new Array(5).fill(false),\n    position: new Array(5 * 3).fill(0),\n    rotation: new Array(5 * 4).fill(0),\n    scale: new Array(5 * 3).fill(1)\n  },\n      type = _a.type,\n      invert = _a.invert,\n      position = _a.position,\n      rotation = _a.rotation,\n      scale = _a.scale;\n\n  for (var i = 0, il = props.objects.length; i < il; ++i) {\n    var p = props.objects[i];\n    type[i] = Clipping.Type[p.type];\n    invert[i] = p.invert;\n    Vec3.toArray(p.position, position, i * 3);\n    Quat.toArray(Quat.setAxisAngle(tmpQuat, p.rotation.axis, degToRad(p.rotation.angle)), rotation, i * 4);\n    Vec3.toArray(p.scale, scale, i * 3);\n  }\n\n  return {\n    variant: props.variant,\n    objects: {\n      count: props.objects.length,\n      type: type,\n      invert: invert,\n      position: position,\n      rotation: rotation,\n      scale: scale\n    }\n  };\n}\n\nvar Renderer;\n\n(function (Renderer) {\n  function create(ctx, props) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    var gl = ctx.gl,\n        state = ctx.state,\n        stats = ctx.stats,\n        fragDepth = ctx.extensions.fragDepth;\n    var p = PD.merge(RendererParams, PD.getDefaultValues(RendererParams), props);\n    var style = getStyle(p.style);\n    var clip = getClip(p.clip);\n    var viewport = Viewport();\n    var drawingBufferSize = Vec2.create(gl.drawingBufferWidth, gl.drawingBufferHeight);\n    var bgColor = Color.toVec3Normalized(Vec3(), p.backgroundColor);\n    var transparentBackground = false;\n    var nullDepthTexture = createNullTexture(gl);\n    var sharedTexturesList = [['tDepth', nullDepthTexture]];\n    var view = Mat4();\n    var invView = Mat4();\n    var modelView = Mat4();\n    var invModelView = Mat4();\n    var invProjection = Mat4();\n    var modelViewProjection = Mat4();\n    var invModelViewProjection = Mat4();\n    var cameraDir = Vec3();\n    var viewOffset = Vec2();\n    var globalUniforms = {\n      uModel: ValueCell.create(Mat4.identity()),\n      uView: ValueCell.create(view),\n      uInvView: ValueCell.create(invView),\n      uModelView: ValueCell.create(modelView),\n      uInvModelView: ValueCell.create(invModelView),\n      uInvProjection: ValueCell.create(invProjection),\n      uProjection: ValueCell.create(Mat4()),\n      uModelViewProjection: ValueCell.create(modelViewProjection),\n      uInvModelViewProjection: ValueCell.create(invModelViewProjection),\n      uIsOrtho: ValueCell.create(1),\n      uViewOffset: ValueCell.create(viewOffset),\n      uPixelRatio: ValueCell.create(ctx.pixelRatio),\n      uViewport: ValueCell.create(Viewport.toVec4(Vec4(), viewport)),\n      uDrawingBufferSize: ValueCell.create(drawingBufferSize),\n      uCameraPosition: ValueCell.create(Vec3()),\n      uCameraDir: ValueCell.create(cameraDir),\n      uNear: ValueCell.create(1),\n      uFar: ValueCell.create(10000),\n      uFogNear: ValueCell.create(1),\n      uFogFar: ValueCell.create(10000),\n      uFogColor: ValueCell.create(bgColor),\n      uRenderWboit: ValueCell.create(false),\n      uMarkingDepthTest: ValueCell.create(false),\n      uTransparentBackground: ValueCell.create(false),\n      uClipObjectType: ValueCell.create(clip.objects.type),\n      uClipObjectInvert: ValueCell.create(clip.objects.invert),\n      uClipObjectPosition: ValueCell.create(clip.objects.position),\n      uClipObjectRotation: ValueCell.create(clip.objects.rotation),\n      uClipObjectScale: ValueCell.create(clip.objects.scale),\n      // the following are general 'material' uniforms\n      uLightIntensity: ValueCell.create(style.lightIntensity),\n      uAmbientIntensity: ValueCell.create(style.ambientIntensity),\n      uMetalness: ValueCell.create(style.metalness),\n      uRoughness: ValueCell.create(style.roughness),\n      uReflectivity: ValueCell.create(style.reflectivity),\n      uPickingAlphaThreshold: ValueCell.create(p.pickingAlphaThreshold),\n      uInteriorDarkening: ValueCell.create(p.interiorDarkening),\n      uInteriorColorFlag: ValueCell.create(p.interiorColorFlag),\n      uInteriorColor: ValueCell.create(Color.toVec3Normalized(Vec3(), p.interiorColor)),\n      uHighlightColor: ValueCell.create(Color.toVec3Normalized(Vec3(), p.highlightColor)),\n      uSelectColor: ValueCell.create(Color.toVec3Normalized(Vec3(), p.selectColor)),\n      uHighlightStrength: ValueCell.create(p.highlightStrength),\n      uSelectStrength: ValueCell.create(p.selectStrength),\n      uMarkerPriority: ValueCell.create(p.markerPriority),\n      uXrayEdgeFalloff: ValueCell.create(p.xrayEdgeFalloff)\n    };\n    var globalUniformList = Object.entries(globalUniforms);\n    var globalUniformsNeedUpdate = true;\n\n    var renderObject = function (r, variant) {\n      if (r.state.disposed || !r.state.visible || !r.state.pickable && variant[0] === 'p') {\n        return;\n      }\n\n      var definesNeedUpdate = false;\n\n      if (r.state.noClip) {\n        if (r.values.dClipObjectCount.ref.value !== 0) {\n          ValueCell.update(r.values.dClipObjectCount, 0);\n          definesNeedUpdate = true;\n        }\n      } else {\n        if (r.values.dClipObjectCount.ref.value !== clip.objects.count) {\n          ValueCell.update(r.values.dClipObjectCount, clip.objects.count);\n          definesNeedUpdate = true;\n        }\n\n        if (r.values.dClipVariant.ref.value !== clip.variant) {\n          ValueCell.update(r.values.dClipVariant, clip.variant);\n          definesNeedUpdate = true;\n        }\n      }\n\n      if (definesNeedUpdate) r.update();\n      var program = r.getProgram(variant);\n\n      if (state.currentProgramId !== program.id) {\n        // console.log('new program')\n        globalUniformsNeedUpdate = true;\n        program.use();\n      }\n\n      if (globalUniformsNeedUpdate) {\n        // console.log('globalUniformsNeedUpdate')\n        program.setUniforms(globalUniformList);\n        globalUniformsNeedUpdate = false;\n      }\n\n      if (r.values.dRenderMode) {\n        // indicates direct-volume\n        // culling done in fragment shader\n        state.disable(gl.CULL_FACE);\n        state.frontFace(gl.CCW);\n\n        if (variant === 'colorBlended') {\n          // depth test done manually in shader against `depthTexture`\n          // still need to enable when fragDepth can be used to write depth\n          if (r.values.dRenderMode.ref.value === 'volume' || !fragDepth) {\n            state.disable(gl.DEPTH_TEST);\n            state.depthMask(false);\n          } else {\n            state.enable(gl.DEPTH_TEST);\n            state.depthMask(r.values.uAlpha.ref.value === 1.0);\n          }\n        }\n      } else {\n        if (r.values.dDoubleSided) {\n          if (r.values.dDoubleSided.ref.value || r.values.hasReflection.ref.value) {\n            state.disable(gl.CULL_FACE);\n          } else {\n            state.enable(gl.CULL_FACE);\n          }\n        } else {\n          // webgl default\n          state.disable(gl.CULL_FACE);\n        }\n\n        if (r.values.dFlipSided) {\n          if (r.values.dFlipSided.ref.value) {\n            state.frontFace(gl.CW);\n            state.cullFace(gl.FRONT);\n          } else {\n            state.frontFace(gl.CCW);\n            state.cullFace(gl.BACK);\n          }\n        } else {\n          // webgl default\n          state.frontFace(gl.CCW);\n          state.cullFace(gl.BACK);\n        }\n      }\n\n      r.render(variant, sharedTexturesList);\n    };\n\n    var update = function (camera) {\n      ValueCell.update(globalUniforms.uView, camera.view);\n      ValueCell.update(globalUniforms.uInvView, Mat4.invert(invView, camera.view));\n      ValueCell.update(globalUniforms.uProjection, camera.projection);\n      ValueCell.update(globalUniforms.uInvProjection, Mat4.invert(invProjection, camera.projection));\n      ValueCell.updateIfChanged(globalUniforms.uIsOrtho, camera.state.mode === 'orthographic' ? 1 : 0);\n      ValueCell.update(globalUniforms.uViewOffset, camera.viewOffset.enabled ? Vec2.set(viewOffset, camera.viewOffset.offsetX * 16, camera.viewOffset.offsetY * 16) : Vec2.set(viewOffset, 0, 0));\n      ValueCell.update(globalUniforms.uCameraPosition, camera.state.position);\n      ValueCell.update(globalUniforms.uCameraDir, Vec3.normalize(cameraDir, Vec3.sub(cameraDir, camera.state.target, camera.state.position)));\n      ValueCell.updateIfChanged(globalUniforms.uFar, camera.far);\n      ValueCell.updateIfChanged(globalUniforms.uNear, camera.near);\n      ValueCell.updateIfChanged(globalUniforms.uFogFar, camera.fogFar);\n      ValueCell.updateIfChanged(globalUniforms.uFogNear, camera.fogNear);\n      ValueCell.updateIfChanged(globalUniforms.uTransparentBackground, transparentBackground);\n    };\n\n    var updateInternal = function (group, camera, depthTexture, renderWboit, markingDepthTest) {\n      arrayMapUpsert(sharedTexturesList, 'tDepth', depthTexture || nullDepthTexture);\n      ValueCell.update(globalUniforms.uModel, group.view);\n      ValueCell.update(globalUniforms.uModelView, Mat4.mul(modelView, group.view, camera.view));\n      ValueCell.update(globalUniforms.uInvModelView, Mat4.invert(invModelView, modelView));\n      ValueCell.update(globalUniforms.uModelViewProjection, Mat4.mul(modelViewProjection, modelView, camera.projection));\n      ValueCell.update(globalUniforms.uInvModelViewProjection, Mat4.invert(invModelViewProjection, modelViewProjection));\n      ValueCell.updateIfChanged(globalUniforms.uRenderWboit, renderWboit);\n      ValueCell.updateIfChanged(globalUniforms.uMarkingDepthTest, markingDepthTest);\n      state.enable(gl.SCISSOR_TEST);\n      state.colorMask(true, true, true, true);\n      var x = viewport.x,\n          y = viewport.y,\n          width = viewport.width,\n          height = viewport.height;\n      gl.viewport(x, y, width, height);\n      gl.scissor(x, y, width, height);\n      globalUniformsNeedUpdate = true;\n      state.currentRenderItemId = -1;\n    };\n\n    var renderPick = function (group, camera, variant, depthTexture) {\n      state.disable(gl.BLEND);\n      state.enable(gl.DEPTH_TEST);\n      state.depthMask(true);\n      updateInternal(group, camera, depthTexture, false, false);\n      var renderables = group.renderables;\n\n      for (var i = 0, il = renderables.length; i < il; ++i) {\n        if (!renderables[i].state.colorOnly) {\n          renderObject(renderables[i], variant);\n        }\n      }\n    };\n\n    var renderDepth = function (group, camera, depthTexture) {\n      state.disable(gl.BLEND);\n      state.enable(gl.DEPTH_TEST);\n      state.depthMask(true);\n      updateInternal(group, camera, depthTexture, false, false);\n      var renderables = group.renderables;\n\n      for (var i = 0, il = renderables.length; i < il; ++i) {\n        renderObject(renderables[i], 'depth');\n      }\n    };\n\n    var renderMarkingDepth = function (group, camera, depthTexture) {\n      state.disable(gl.BLEND);\n      state.enable(gl.DEPTH_TEST);\n      state.depthMask(true);\n      updateInternal(group, camera, depthTexture, false, false);\n      var renderables = group.renderables;\n\n      for (var i = 0, il = renderables.length; i < il; ++i) {\n        var r = renderables[i];\n\n        if (r.values.markerAverage.ref.value !== 1) {\n          renderObject(renderables[i], 'markingDepth');\n        }\n      }\n    };\n\n    var renderMarkingMask = function (group, camera, depthTexture) {\n      state.disable(gl.BLEND);\n      state.enable(gl.DEPTH_TEST);\n      state.depthMask(true);\n      updateInternal(group, camera, depthTexture, false, !!depthTexture);\n      var renderables = group.renderables;\n\n      for (var i = 0, il = renderables.length; i < il; ++i) {\n        var r = renderables[i];\n\n        if (r.values.markerAverage.ref.value > 0) {\n          renderObject(renderables[i], 'markingMask');\n        }\n      }\n    };\n\n    var renderBlended = function (group, camera, depthTexture) {\n      renderBlendedOpaque(group, camera, depthTexture);\n      renderBlendedTransparent(group, camera, depthTexture);\n    };\n\n    var renderBlendedOpaque = function (group, camera, depthTexture) {\n      state.disable(gl.BLEND);\n      state.enable(gl.DEPTH_TEST);\n      state.depthMask(true);\n      updateInternal(group, camera, depthTexture, false, false);\n      var renderables = group.renderables;\n\n      for (var i = 0, il = renderables.length; i < il; ++i) {\n        var r = renderables[i];\n\n        if (r.state.opaque) {\n          renderObject(r, 'colorBlended');\n        }\n      }\n    };\n\n    var renderBlendedTransparent = function (group, camera, depthTexture) {\n      state.enable(gl.DEPTH_TEST);\n      updateInternal(group, camera, depthTexture, false, false);\n      var renderables = group.renderables;\n\n      if (transparentBackground) {\n        state.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      } else {\n        state.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      }\n\n      state.enable(gl.BLEND);\n      state.depthMask(true);\n\n      for (var i = 0, il = renderables.length; i < il; ++i) {\n        var r = renderables[i];\n\n        if (!r.state.opaque && r.state.writeDepth) {\n          renderObject(r, 'colorBlended');\n        }\n      }\n\n      state.depthMask(false);\n\n      for (var i = 0, il = renderables.length; i < il; ++i) {\n        var r = renderables[i];\n\n        if (!r.state.opaque && !r.state.writeDepth) {\n          renderObject(r, 'colorBlended');\n        }\n      }\n    };\n\n    var renderBlendedVolumeOpaque = function (group, camera, depthTexture) {\n      var _a;\n\n      state.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      state.enable(gl.BLEND);\n      updateInternal(group, camera, depthTexture, false, false);\n      var renderables = group.renderables;\n\n      for (var i = 0, il = renderables.length; i < il; ++i) {\n        var r = renderables[i]; // TODO: simplify, handle in renderable.state???\n        // uAlpha is updated in \"render\" so we need to recompute it here\n\n        var alpha = clamp(r.values.alpha.ref.value * r.state.alphaFactor, 0, 1);\n\n        if (alpha === 1 && r.values.transparencyAverage.ref.value !== 1 && !((_a = r.values.dXrayShaded) === null || _a === void 0 ? void 0 : _a.ref.value)) {\n          renderObject(r, 'colorBlended');\n        }\n      }\n    };\n\n    var renderBlendedVolumeTransparent = function (group, camera, depthTexture) {\n      var _a;\n\n      state.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n      state.enable(gl.BLEND);\n      updateInternal(group, camera, depthTexture, false, false);\n      var renderables = group.renderables;\n\n      for (var i = 0, il = renderables.length; i < il; ++i) {\n        var r = renderables[i]; // TODO: simplify, handle in renderable.state???\n        // uAlpha is updated in \"render\" so we need to recompute it here\n\n        var alpha = clamp(r.values.alpha.ref.value * r.state.alphaFactor, 0, 1);\n\n        if (alpha < 1 || r.values.transparencyAverage.ref.value > 0 || ((_a = r.values.dXrayShaded) === null || _a === void 0 ? void 0 : _a.ref.value)) {\n          renderObject(r, 'colorBlended');\n        }\n      }\n    };\n\n    var renderWboitOpaque = function (group, camera, depthTexture) {\n      var _a, _b, _c;\n\n      state.disable(gl.BLEND);\n      state.enable(gl.DEPTH_TEST);\n      state.depthMask(true);\n      updateInternal(group, camera, depthTexture, false, false);\n      var renderables = group.renderables;\n\n      for (var i = 0, il = renderables.length; i < il; ++i) {\n        var r = renderables[i]; // TODO: simplify, handle in renderable.state???\n        // uAlpha is updated in \"render\" so we need to recompute it here\n\n        var alpha = clamp(r.values.alpha.ref.value * r.state.alphaFactor, 0, 1);\n\n        if (alpha === 1 && r.values.transparencyAverage.ref.value !== 1 && ((_a = r.values.dRenderMode) === null || _a === void 0 ? void 0 : _a.ref.value) !== 'volume' && ((_b = r.values.dPointStyle) === null || _b === void 0 ? void 0 : _b.ref.value) !== 'fuzzy' && !((_c = r.values.dXrayShaded) === null || _c === void 0 ? void 0 : _c.ref.value)) {\n          renderObject(r, 'colorWboit');\n        }\n      }\n    };\n\n    var renderWboitTransparent = function (group, camera, depthTexture) {\n      var _a, _b, _c;\n\n      updateInternal(group, camera, depthTexture, true, false);\n      var renderables = group.renderables;\n\n      for (var i = 0, il = renderables.length; i < il; ++i) {\n        var r = renderables[i]; // TODO: simplify, handle in renderable.state???\n        // uAlpha is updated in \"render\" so we need to recompute it here\n\n        var alpha = clamp(r.values.alpha.ref.value * r.state.alphaFactor, 0, 1);\n\n        if (alpha < 1 || r.values.transparencyAverage.ref.value > 0 || ((_a = r.values.dRenderMode) === null || _a === void 0 ? void 0 : _a.ref.value) === 'volume' || ((_b = r.values.dPointStyle) === null || _b === void 0 ? void 0 : _b.ref.value) === 'fuzzy' || !!r.values.uBackgroundColor || ((_c = r.values.dXrayShaded) === null || _c === void 0 ? void 0 : _c.ref.value)) {\n          renderObject(r, 'colorWboit');\n        }\n      }\n    };\n\n    return {\n      clear: function (toBackgroundColor) {\n        state.enable(gl.SCISSOR_TEST);\n        state.enable(gl.DEPTH_TEST);\n        state.colorMask(true, true, true, true);\n        state.depthMask(true);\n\n        if (transparentBackground) {\n          state.clearColor(0, 0, 0, 0);\n        } else if (toBackgroundColor) {\n          state.clearColor(bgColor[0], bgColor[1], bgColor[2], 1);\n        } else {\n          state.clearColor(1, 1, 1, 1);\n        }\n\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n      },\n      clearDepth: function () {\n        state.enable(gl.SCISSOR_TEST);\n        state.enable(gl.DEPTH_TEST);\n        state.depthMask(true);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      },\n      update: update,\n      renderPick: renderPick,\n      renderDepth: renderDepth,\n      renderMarkingDepth: renderMarkingDepth,\n      renderMarkingMask: renderMarkingMask,\n      renderBlended: renderBlended,\n      renderBlendedOpaque: renderBlendedOpaque,\n      renderBlendedTransparent: renderBlendedTransparent,\n      renderBlendedVolumeOpaque: renderBlendedVolumeOpaque,\n      renderBlendedVolumeTransparent: renderBlendedVolumeTransparent,\n      renderWboitOpaque: renderWboitOpaque,\n      renderWboitTransparent: renderWboitTransparent,\n      setProps: function (props) {\n        if (props.backgroundColor !== undefined && props.backgroundColor !== p.backgroundColor) {\n          p.backgroundColor = props.backgroundColor;\n          Color.toVec3Normalized(bgColor, p.backgroundColor);\n          ValueCell.update(globalUniforms.uFogColor, Vec3.copy(globalUniforms.uFogColor.ref.value, bgColor));\n        }\n\n        if (props.pickingAlphaThreshold !== undefined && props.pickingAlphaThreshold !== p.pickingAlphaThreshold) {\n          p.pickingAlphaThreshold = props.pickingAlphaThreshold;\n          ValueCell.update(globalUniforms.uPickingAlphaThreshold, p.pickingAlphaThreshold);\n        }\n\n        if (props.interiorDarkening !== undefined && props.interiorDarkening !== p.interiorDarkening) {\n          p.interiorDarkening = props.interiorDarkening;\n          ValueCell.update(globalUniforms.uInteriorDarkening, p.interiorDarkening);\n        }\n\n        if (props.interiorColorFlag !== undefined && props.interiorColorFlag !== p.interiorColorFlag) {\n          p.interiorColorFlag = props.interiorColorFlag;\n          ValueCell.update(globalUniforms.uInteriorColorFlag, p.interiorColorFlag);\n        }\n\n        if (props.interiorColor !== undefined && props.interiorColor !== p.interiorColor) {\n          p.interiorColor = props.interiorColor;\n          ValueCell.update(globalUniforms.uInteriorColor, Color.toVec3Normalized(globalUniforms.uInteriorColor.ref.value, p.interiorColor));\n        }\n\n        if (props.highlightColor !== undefined && props.highlightColor !== p.highlightColor) {\n          p.highlightColor = props.highlightColor;\n          ValueCell.update(globalUniforms.uHighlightColor, Color.toVec3Normalized(globalUniforms.uHighlightColor.ref.value, p.highlightColor));\n        }\n\n        if (props.selectColor !== undefined && props.selectColor !== p.selectColor) {\n          p.selectColor = props.selectColor;\n          ValueCell.update(globalUniforms.uSelectColor, Color.toVec3Normalized(globalUniforms.uSelectColor.ref.value, p.selectColor));\n        }\n\n        if (props.highlightStrength !== undefined && props.highlightStrength !== p.highlightStrength) {\n          p.highlightStrength = props.highlightStrength;\n          ValueCell.update(globalUniforms.uHighlightStrength, p.highlightStrength);\n        }\n\n        if (props.selectStrength !== undefined && props.selectStrength !== p.selectStrength) {\n          p.selectStrength = props.selectStrength;\n          ValueCell.update(globalUniforms.uSelectStrength, p.selectStrength);\n        }\n\n        if (props.markerPriority !== undefined && props.markerPriority !== p.markerPriority) {\n          p.markerPriority = props.markerPriority;\n          ValueCell.update(globalUniforms.uMarkerPriority, p.markerPriority);\n        }\n\n        if (props.xrayEdgeFalloff !== undefined && props.xrayEdgeFalloff !== p.xrayEdgeFalloff) {\n          p.xrayEdgeFalloff = props.xrayEdgeFalloff;\n          ValueCell.update(globalUniforms.uXrayEdgeFalloff, p.xrayEdgeFalloff);\n        }\n\n        if (props.style !== undefined) {\n          p.style = props.style;\n          Object.assign(style, getStyle(props.style));\n          ValueCell.updateIfChanged(globalUniforms.uLightIntensity, style.lightIntensity);\n          ValueCell.updateIfChanged(globalUniforms.uAmbientIntensity, style.ambientIntensity);\n          ValueCell.updateIfChanged(globalUniforms.uMetalness, style.metalness);\n          ValueCell.updateIfChanged(globalUniforms.uRoughness, style.roughness);\n          ValueCell.updateIfChanged(globalUniforms.uReflectivity, style.reflectivity);\n        }\n\n        if (props.clip !== undefined && !deepEqual(props.clip, p.clip)) {\n          p.clip = props.clip;\n          Object.assign(clip, getClip(props.clip, clip));\n          ValueCell.update(globalUniforms.uClipObjectPosition, clip.objects.position);\n          ValueCell.update(globalUniforms.uClipObjectRotation, clip.objects.rotation);\n          ValueCell.update(globalUniforms.uClipObjectScale, clip.objects.scale);\n          ValueCell.update(globalUniforms.uClipObjectType, clip.objects.type);\n        }\n      },\n      setViewport: function (x, y, width, height) {\n        gl.viewport(x, y, width, height);\n        gl.scissor(x, y, width, height);\n\n        if (x !== viewport.x || y !== viewport.y || width !== viewport.width || height !== viewport.height) {\n          Viewport.set(viewport, x, y, width, height);\n          ValueCell.update(globalUniforms.uViewport, Vec4.set(globalUniforms.uViewport.ref.value, x, y, width, height));\n        }\n      },\n      setTransparentBackground: function (value) {\n        transparentBackground = value;\n      },\n      setDrawingBufferSize: function (width, height) {\n        if (width !== drawingBufferSize[0] || height !== drawingBufferSize[1]) {\n          ValueCell.update(globalUniforms.uDrawingBufferSize, Vec2.set(drawingBufferSize, width, height));\n        }\n      },\n      setPixelRatio: function (value) {\n        ValueCell.update(globalUniforms.uPixelRatio, value);\n      },\n      props: p,\n\n      get stats() {\n        return {\n          programCount: ctx.stats.resourceCounts.program,\n          shaderCount: ctx.stats.resourceCounts.shader,\n          attributeCount: ctx.stats.resourceCounts.attribute,\n          elementsCount: ctx.stats.resourceCounts.elements,\n          framebufferCount: ctx.stats.resourceCounts.framebuffer,\n          renderbufferCount: ctx.stats.resourceCounts.renderbuffer,\n          textureCount: ctx.stats.resourceCounts.texture,\n          vertexArrayCount: ctx.stats.resourceCounts.vertexArray,\n          drawCount: stats.drawCount,\n          instanceCount: stats.instanceCount,\n          instancedDrawCount: stats.instancedDrawCount\n        };\n      },\n\n      dispose: function () {// TODO\n      }\n    };\n  }\n\n  Renderer.create = create;\n})(Renderer || (Renderer = {}));\n\nexport { Renderer };","map":{"version":3,"sources":["../../src/mol-gl/renderer.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,SAAS,QAAT,QAAyB,6BAAzB;AAIA,SAAS,IAAT,EAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,QAA6C,4BAA7C;AAEA,SAAS,KAAT,QAAsB,mBAAtB;AACA,SAAS,SAAT,EAAoB,SAApB,QAAqC,aAArC;AAGA,SAAS,eAAe,IAAI,EAA5B,QAAsC,8BAAtC;AACA,SAAS,QAAT,QAAyB,uBAAzB;AACA,SAAS,aAAT,QAA8B,oBAA9B;AACA,SAAS,QAAT,QAAyB,kBAAzB;AACA,SAAS,iBAAT,QAAqD,iBAArD;AACA,SAAS,cAAT,QAA+B,mBAA/B;AACA,SAAS,KAAT,QAAsB,yBAAtB;AA+CA,OAAO,IAAM,cAAc,GAAG;AAC1B,EAAA,eAAe,EAAE,EAAE,CAAC,KAAH,CAAS,KAAK,CAAC,QAAD,CAAd,EAA0B;AAAE,IAAA,WAAW,EAAE;AAAf,GAA1B,CADS;AAG1B;AACA,EAAA,qBAAqB,EAAE,EAAE,CAAC,OAAH,CAAW,GAAX,EAAgB;AAAE,IAAA,GAAG,EAAE,GAAP;AAAY,IAAA,GAAG,EAAE,GAAjB;AAAsB,IAAA,IAAI,EAAE;AAA5B,GAAhB,EAAoD;AAAE,IAAA,WAAW,EAAE;AAAf,GAApD,CAJG;AAM1B,EAAA,iBAAiB,EAAE,EAAE,CAAC,OAAH,CAAW,GAAX,EAAgB;AAAE,IAAA,GAAG,EAAE,GAAP;AAAY,IAAA,GAAG,EAAE,GAAjB;AAAsB,IAAA,IAAI,EAAE;AAA5B,GAAhB,CANO;AAO1B,EAAA,iBAAiB,EAAE,EAAE,CAAC,OAAH,CAAW,IAAX,EAAiB;AAAE,IAAA,KAAK,EAAE;AAAT,GAAjB,CAPO;AAQ1B,EAAA,aAAa,EAAE,EAAE,CAAC,KAAH,CAAS,KAAK,CAAC,iBAAN,CAAwB,GAAxB,EAA6B,GAA7B,EAAkC,GAAlC,CAAT,CARW;AAU1B,EAAA,cAAc,EAAE,EAAE,CAAC,KAAH,CAAS,KAAK,CAAC,iBAAN,CAAwB,GAAxB,EAA6B,GAA7B,EAAkC,GAAlC,CAAT,CAVU;AAW1B,EAAA,WAAW,EAAE,EAAE,CAAC,KAAH,CAAS,KAAK,CAAC,iBAAN,CAAwB,GAAxB,EAA6B,GAA7B,EAAkC,GAAlC,CAAT,CAXa;AAY1B,EAAA,iBAAiB,EAAE,EAAE,CAAC,OAAH,CAAW,GAAX,EAAgB;AAAE,IAAA,GAAG,EAAE,GAAP;AAAY,IAAA,GAAG,EAAE,GAAjB;AAAsB,IAAA,IAAI,EAAE;AAA5B,GAAhB,CAZO;AAa1B,EAAA,cAAc,EAAE,EAAE,CAAC,OAAH,CAAW,GAAX,EAAgB;AAAE,IAAA,GAAG,EAAE,GAAP;AAAY,IAAA,GAAG,EAAE,GAAjB;AAAsB,IAAA,IAAI,EAAE;AAA5B,GAAhB,CAbU;AAc1B,EAAA,cAAc,EAAE,EAAE,CAAC,MAAH,CAAU,CAAV,EAAa,CAAC,CAAC,CAAD,EAAI,WAAJ,CAAD,EAAmB,CAAC,CAAD,EAAI,QAAJ,CAAnB,CAAb,CAdU;AAgB1B,EAAA,eAAe,EAAE,EAAE,CAAC,OAAH,CAAW,CAAX,EAAc;AAAE,IAAA,GAAG,EAAE,GAAP;AAAY,IAAA,GAAG,EAAE,GAAjB;AAAsB,IAAA,IAAI,EAAE;AAA5B,GAAd,CAhBS;AAkB1B,EAAA,KAAK,EAAE,EAAE,CAAC,YAAH,CAAgB,OAAhB,EAAyB;AAC5B,IAAA,MAAM,EAAE,EAAE,CAAC,KAAH,CAAS;AACb,MAAA,cAAc,EAAE,EAAE,CAAC,OAAH,CAAW,GAAX,EAAgB;AAAE,QAAA,GAAG,EAAE,GAAP;AAAY,QAAA,GAAG,EAAE,GAAjB;AAAsB,QAAA,IAAI,EAAE;AAA5B,OAAhB,CADH;AAEb,MAAA,gBAAgB,EAAE,EAAE,CAAC,OAAH,CAAW,GAAX,EAAgB;AAAE,QAAA,GAAG,EAAE,GAAP;AAAY,QAAA,GAAG,EAAE,GAAjB;AAAsB,QAAA,IAAI,EAAE;AAA5B,OAAhB,CAFL;AAGb,MAAA,SAAS,EAAE,EAAE,CAAC,OAAH,CAAW,GAAX,EAAgB;AAAE,QAAA,GAAG,EAAE,GAAP;AAAY,QAAA,GAAG,EAAE,GAAjB;AAAsB,QAAA,IAAI,EAAE;AAA5B,OAAhB,CAHE;AAIb,MAAA,SAAS,EAAE,EAAE,CAAC,OAAH,CAAW,GAAX,EAAgB;AAAE,QAAA,GAAG,EAAE,GAAP;AAAY,QAAA,GAAG,EAAE,GAAjB;AAAsB,QAAA,IAAI,EAAE;AAA5B,OAAhB,CAJE;AAKb,MAAA,YAAY,EAAE,EAAE,CAAC,OAAH,CAAW,GAAX,EAAgB;AAAE,QAAA,GAAG,EAAE,GAAP;AAAY,QAAA,GAAG,EAAE,GAAjB;AAAsB,QAAA,IAAI,EAAE;AAA5B,OAAhB;AALD,KAAT,EAML;AAAE,MAAA,UAAU,EAAE;AAAd,KANK,CADoB;AAQ5B,IAAA,IAAI,EAAE,EAAE,CAAC,KAAH,CAAS,EAAT,CARsB;AAS5B,IAAA,KAAK,EAAE,EAAE,CAAC,KAAH,CAAS,EAAT,CATqB;AAU5B,IAAA,MAAM,EAAE,EAAE,CAAC,KAAH,CAAS,EAAT,CAVoB;AAW5B,IAAA,QAAQ,EAAE,EAAE,CAAC,KAAH,CAAS,EAAT,CAXkB;AAY5B,IAAA,OAAO,EAAE,EAAE,CAAC,KAAH,CAAS,EAAT;AAZmB,GAAzB,EAaJ;AAAE,IAAA,KAAK,EAAE,UAAT;AAAqB,IAAA,WAAW,EAAE;AAAlC,GAbI,CAlBmB;AAiC1B,EAAA,IAAI,EAAE,EAAE,CAAC,KAAH,CAAS;AACX,IAAA,OAAO,EAAE,EAAE,CAAC,MAAH,CAAU,UAAV,EAAsB,EAAE,CAAC,cAAH,CAAoC,CAAC,UAAD,EAAa,OAAb,CAApC,CAAtB,CADE;AAEX,IAAA,OAAO,EAAE,EAAE,CAAC,UAAH,CAAc;AACnB,MAAA,IAAI,EAAE,EAAE,CAAC,MAAH,CAAU,OAAV,EAAmB,EAAE,CAAC,eAAH,CAAmB,QAAQ,CAAC,IAA5B,EAAkC,UAAA,CAAA,EAAC;AAAI,eAAA,aAAa,CAAb,CAAa,CAAb;AAAgB,OAAvD,CAAnB,CADa;AAEnB,MAAA,MAAM,EAAE,EAAE,CAAC,OAAH,CAAW,KAAX,CAFW;AAGnB,MAAA,QAAQ,EAAE,EAAE,CAAC,IAAH,CAAQ,IAAI,EAAZ,CAHS;AAInB,MAAA,QAAQ,EAAE,EAAE,CAAC,KAAH,CAAS;AACf,QAAA,IAAI,EAAE,EAAE,CAAC,IAAH,CAAQ,IAAI,CAAC,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAR,CADS;AAEf,QAAA,KAAK,EAAE,EAAE,CAAC,OAAH,CAAW,CAAX,EAAc;AAAE,UAAA,GAAG,EAAE,CAAC,GAAR;AAAa,UAAA,GAAG,EAAE,GAAlB;AAAuB,UAAA,IAAI,EAAE;AAA7B,SAAd,EAAgD;AAAE,UAAA,WAAW,EAAE;AAAf,SAAhD;AAFQ,OAAT,EAGP;AAAE,QAAA,UAAU,EAAE;AAAd,OAHO,CAJS;AAQnB,MAAA,KAAK,EAAE,EAAE,CAAC,IAAH,CAAQ,IAAI,CAAC,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAR;AARY,KAAd,EASN,UAAA,CAAA,EAAC;AAAI,aAAA,aAAa,CAAC,CAAC,CAAf,IAAa,CAAb;AAAqB,KATpB;AAFE,GAAT;AAjCoB,CAAvB;AAyDP,OAAM,SAAU,QAAV,CAAmB,KAAnB,EAAgD;AAClD,UAAQ,KAAK,CAAC,IAAd;AACI,SAAK,QAAL;AACI,aAAO,KAAK,CAAC,MAAb;;AACJ,SAAK,MAAL;AACI,aAAO;AACH,QAAA,cAAc,EAAE,CADb;AACgB,QAAA,gBAAgB,EAAE,CADlC;AAEH,QAAA,SAAS,EAAE,CAFR;AAEW,QAAA,SAAS,EAAE,GAFtB;AAE2B,QAAA,YAAY,EAAE;AAFzC,OAAP;;AAIJ,SAAK,OAAL;AACI,aAAO;AACH,QAAA,cAAc,EAAE,GADb;AACkB,QAAA,gBAAgB,EAAE,GADpC;AAEH,QAAA,SAAS,EAAE,CAFR;AAEW,QAAA,SAAS,EAAE,CAFtB;AAEyB,QAAA,YAAY,EAAE;AAFvC,OAAP;;AAIJ,SAAK,QAAL;AACI,aAAO;AACH,QAAA,cAAc,EAAE,GADb;AACkB,QAAA,gBAAgB,EAAE,GADpC;AAEH,QAAA,SAAS,EAAE,CAFR;AAEW,QAAA,SAAS,EAAE,GAFtB;AAE2B,QAAA,YAAY,EAAE;AAFzC,OAAP;;AAIJ,SAAK,UAAL;AACI,aAAO;AACH,QAAA,cAAc,EAAE,GADb;AACkB,QAAA,gBAAgB,EAAE,GADpC;AAEH,QAAA,SAAS,EAAE,GAFR;AAEa,QAAA,SAAS,EAAE,GAFxB;AAE6B,QAAA,YAAY,EAAE;AAF3C,OAAP;;AAIJ,SAAK,SAAL;AACI,aAAO;AACH,QAAA,cAAc,EAAE,GADb;AACkB,QAAA,gBAAgB,EAAE,GADpC;AAEH,QAAA,SAAS,EAAE,CAFR;AAEW,QAAA,SAAS,EAAE,GAFtB;AAE2B,QAAA,YAAY,EAAE;AAFzC,OAAP;AAxBR;AA6BH;AAcD,IAAM,OAAO,GAAG,IAAI,EAApB;;AACA,SAAS,OAAT,CAAiB,KAAjB,EAA+C,IAA/C,EAA0D;AAChD,MAAA,EAAA,GAA8C,CAAA,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,OAAN,KAAiB;AACjE,IAAA,IAAI,EAAG,IAAI,KAAJ,CAAU,CAAV,CAAD,CAAe,IAAf,CAAoB,CAApB,CAD2D;AAEjE,IAAA,MAAM,EAAG,IAAI,KAAJ,CAAU,CAAV,CAAD,CAAe,IAAf,CAAoB,KAApB,CAFyD;AAGjE,IAAA,QAAQ,EAAG,IAAI,KAAJ,CAAU,IAAI,CAAd,CAAD,CAAmB,IAAnB,CAAwB,CAAxB,CAHuD;AAIjE,IAAA,QAAQ,EAAG,IAAI,KAAJ,CAAU,IAAI,CAAd,CAAD,CAAmB,IAAnB,CAAwB,CAAxB,CAJuD;AAKjE,IAAA,KAAK,EAAG,IAAI,KAAJ,CAAU,IAAI,CAAd,CAAD,CAAmB,IAAnB,CAAwB,CAAxB;AAL0D,GAA/D;AAAA,MAAE,IAAI,GAAA,EAAA,CAAA,IAAN;AAAA,MAAQ,MAAM,GAAA,EAAA,CAAA,MAAd;AAAA,MAAgB,QAAQ,GAAA,EAAA,CAAA,QAAxB;AAAA,MAA0B,QAAQ,GAAA,EAAA,CAAA,QAAlC;AAAA,MAAoC,KAAK,GAAA,EAAA,CAAA,KAAzC;;AAON,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,KAAK,CAAC,OAAN,CAAc,MAAnC,EAA2C,CAAC,GAAG,EAA/C,EAAmD,EAAE,CAArD,EAAwD;AACpD,QAAM,CAAC,GAAG,KAAK,CAAC,OAAN,CAAc,CAAd,CAAV;AACA,IAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,QAAQ,CAAC,IAAT,CAAc,CAAC,CAAC,IAAhB,CAAV;AACA,IAAA,MAAM,CAAC,CAAD,CAAN,GAAY,CAAC,CAAC,MAAd;AACA,IAAA,IAAI,CAAC,OAAL,CAAa,CAAC,CAAC,QAAf,EAAyB,QAAzB,EAAmC,CAAC,GAAG,CAAvC;AACA,IAAA,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,YAAL,CAAkB,OAAlB,EAA2B,CAAC,CAAC,QAAF,CAAW,IAAtC,EAA4C,QAAQ,CAAC,CAAC,CAAC,QAAF,CAAW,KAAZ,CAApD,CAAb,EAAsF,QAAtF,EAAgG,CAAC,GAAG,CAApG;AACA,IAAA,IAAI,CAAC,OAAL,CAAa,CAAC,CAAC,KAAf,EAAsB,KAAtB,EAA6B,CAAC,GAAG,CAAjC;AACH;;AACD,SAAO;AACH,IAAA,OAAO,EAAE,KAAK,CAAC,OADZ;AAEH,IAAA,OAAO,EAAE;AAAE,MAAA,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc,MAAvB;AAA+B,MAAA,IAAI,EAAA,IAAnC;AAAqC,MAAA,MAAM,EAAA,MAA3C;AAA6C,MAAA,QAAQ,EAAA,QAArD;AAAuD,MAAA,QAAQ,EAAA,QAA/D;AAAiE,MAAA,KAAK,EAAA;AAAtE;AAFN,GAAP;AAIH;;AAED,IAAU,QAAV;;AAAA,CAAA,UAAU,QAAV,EAAkB;AACd,WAAgB,MAAhB,CAAuB,GAAvB,EAA0C,KAA1C,EAA4E;AAAlC,QAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,KAAA,GAAA,EAAA;AAAkC;;AAChE,QAAA,EAAE,GAA8C,GAAG,CAAjD,EAAF;AAAA,QAAI,KAAK,GAAuC,GAAG,CAA1C,KAAT;AAAA,QAAW,KAAK,GAAgC,GAAG,CAAnC,KAAhB;AAAA,QAAgC,SAAS,GAAO,GAAG,CAAA,UAAH,CAAP,SAAzC;AACR,QAAM,CAAC,GAAG,EAAE,CAAC,KAAH,CAAS,cAAT,EAAyB,EAAE,CAAC,gBAAH,CAAoB,cAApB,CAAzB,EAA8D,KAA9D,CAAV;AACA,QAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAH,CAAtB;AACA,QAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,IAAH,CAApB;AAEA,QAAM,QAAQ,GAAG,QAAQ,EAAzB;AACA,QAAM,iBAAiB,GAAG,IAAI,CAAC,MAAL,CAAY,EAAE,CAAC,kBAAf,EAAmC,EAAE,CAAC,mBAAtC,CAA1B;AACA,QAAM,OAAO,GAAG,KAAK,CAAC,gBAAN,CAAuB,IAAI,EAA3B,EAA+B,CAAC,CAAC,eAAjC,CAAhB;AAEA,QAAI,qBAAqB,GAAG,KAA5B;AAEA,QAAM,gBAAgB,GAAG,iBAAiB,CAAC,EAAD,CAA1C;AACA,QAAM,kBAAkB,GAAa,CACjC,CAAC,QAAD,EAAW,gBAAX,CADiC,CAArC;AAIA,QAAM,IAAI,GAAG,IAAI,EAAjB;AACA,QAAM,OAAO,GAAG,IAAI,EAApB;AACA,QAAM,SAAS,GAAG,IAAI,EAAtB;AACA,QAAM,YAAY,GAAG,IAAI,EAAzB;AACA,QAAM,aAAa,GAAG,IAAI,EAA1B;AACA,QAAM,mBAAmB,GAAG,IAAI,EAAhC;AACA,QAAM,sBAAsB,GAAG,IAAI,EAAnC;AAEA,QAAM,SAAS,GAAG,IAAI,EAAtB;AACA,QAAM,UAAU,GAAG,IAAI,EAAvB;AAEA,QAAM,cAAc,GAAwB;AACxC,MAAA,MAAM,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,QAAL,EAAjB,CADgC;AAExC,MAAA,KAAK,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAjB,CAFiC;AAGxC,MAAA,QAAQ,EAAE,SAAS,CAAC,MAAV,CAAiB,OAAjB,CAH8B;AAIxC,MAAA,UAAU,EAAE,SAAS,CAAC,MAAV,CAAiB,SAAjB,CAJ4B;AAKxC,MAAA,aAAa,EAAE,SAAS,CAAC,MAAV,CAAiB,YAAjB,CALyB;AAMxC,MAAA,cAAc,EAAE,SAAS,CAAC,MAAV,CAAiB,aAAjB,CANwB;AAOxC,MAAA,WAAW,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,EAArB,CAP2B;AAQxC,MAAA,oBAAoB,EAAE,SAAS,CAAC,MAAV,CAAiB,mBAAjB,CARkB;AASxC,MAAA,uBAAuB,EAAE,SAAS,CAAC,MAAV,CAAiB,sBAAjB,CATe;AAWxC,MAAA,QAAQ,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAjB,CAX8B;AAYxC,MAAA,WAAW,EAAE,SAAS,CAAC,MAAV,CAAiB,UAAjB,CAZ2B;AAcxC,MAAA,WAAW,EAAE,SAAS,CAAC,MAAV,CAAiB,GAAG,CAAC,UAArB,CAd2B;AAexC,MAAA,SAAS,EAAE,SAAS,CAAC,MAAV,CAAiB,QAAQ,CAAC,MAAT,CAAgB,IAAI,EAApB,EAAwB,QAAxB,CAAjB,CAf6B;AAgBxC,MAAA,kBAAkB,EAAE,SAAS,CAAC,MAAV,CAAiB,iBAAjB,CAhBoB;AAkBxC,MAAA,eAAe,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,EAArB,CAlBuB;AAmBxC,MAAA,UAAU,EAAE,SAAS,CAAC,MAAV,CAAiB,SAAjB,CAnB4B;AAoBxC,MAAA,KAAK,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAjB,CApBiC;AAqBxC,MAAA,IAAI,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAjB,CArBkC;AAsBxC,MAAA,QAAQ,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAjB,CAtB8B;AAuBxC,MAAA,OAAO,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAjB,CAvB+B;AAwBxC,MAAA,SAAS,EAAE,SAAS,CAAC,MAAV,CAAiB,OAAjB,CAxB6B;AA0BxC,MAAA,YAAY,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAjB,CA1B0B;AA2BxC,MAAA,iBAAiB,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAjB,CA3BqB;AA6BxC,MAAA,sBAAsB,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAjB,CA7BgB;AA+BxC,MAAA,eAAe,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,OAAL,CAAa,IAA9B,CA/BuB;AAgCxC,MAAA,iBAAiB,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,OAAL,CAAa,MAA9B,CAhCqB;AAiCxC,MAAA,mBAAmB,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,OAAL,CAAa,QAA9B,CAjCmB;AAkCxC,MAAA,mBAAmB,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,OAAL,CAAa,QAA9B,CAlCmB;AAmCxC,MAAA,gBAAgB,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,OAAL,CAAa,KAA9B,CAnCsB;AAqCxC;AACA,MAAA,eAAe,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAK,CAAC,cAAvB,CAtCuB;AAuCxC,MAAA,iBAAiB,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAK,CAAC,gBAAvB,CAvCqB;AAyCxC,MAAA,UAAU,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAK,CAAC,SAAvB,CAzC4B;AA0CxC,MAAA,UAAU,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAK,CAAC,SAAvB,CA1C4B;AA2CxC,MAAA,aAAa,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAK,CAAC,YAAvB,CA3CyB;AA6CxC,MAAA,sBAAsB,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAC,CAAC,qBAAnB,CA7CgB;AA+CxC,MAAA,kBAAkB,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAC,CAAC,iBAAnB,CA/CoB;AAgDxC,MAAA,kBAAkB,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAC,CAAC,iBAAnB,CAhDoB;AAiDxC,MAAA,cAAc,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAK,CAAC,gBAAN,CAAuB,IAAI,EAA3B,EAA+B,CAAC,CAAC,aAAjC,CAAjB,CAjDwB;AAmDxC,MAAA,eAAe,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAK,CAAC,gBAAN,CAAuB,IAAI,EAA3B,EAA+B,CAAC,CAAC,cAAjC,CAAjB,CAnDuB;AAoDxC,MAAA,YAAY,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAK,CAAC,gBAAN,CAAuB,IAAI,EAA3B,EAA+B,CAAC,CAAC,WAAjC,CAAjB,CApD0B;AAqDxC,MAAA,kBAAkB,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAC,CAAC,iBAAnB,CArDoB;AAsDxC,MAAA,eAAe,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAC,CAAC,cAAnB,CAtDuB;AAuDxC,MAAA,eAAe,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAC,CAAC,cAAnB,CAvDuB;AAyDxC,MAAA,gBAAgB,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAC,CAAC,eAAnB;AAzDsB,KAA5C;AA2DA,QAAM,iBAAiB,GAAG,MAAM,CAAC,OAAP,CAAe,cAAf,CAA1B;AAEA,QAAI,wBAAwB,GAAG,IAA/B;;AAEA,QAAM,YAAY,GAAG,UAAC,CAAD,EAAwB,OAAxB,EAAsD;AACvE,UAAI,CAAC,CAAC,KAAF,CAAQ,QAAR,IAAoB,CAAC,CAAC,CAAC,KAAF,CAAQ,OAA7B,IAAyC,CAAC,CAAC,CAAC,KAAF,CAAQ,QAAT,IAAqB,OAAO,CAAC,CAAD,CAAP,KAAe,GAAjF,EAAuF;AACnF;AACH;;AAED,UAAI,iBAAiB,GAAG,KAAxB;;AACA,UAAI,CAAC,CAAC,KAAF,CAAQ,MAAZ,EAAoB;AAChB,YAAI,CAAC,CAAC,MAAF,CAAS,gBAAT,CAA0B,GAA1B,CAA8B,KAA9B,KAAwC,CAA5C,EAA+C;AAC3C,UAAA,SAAS,CAAC,MAAV,CAAiB,CAAC,CAAC,MAAF,CAAS,gBAA1B,EAA4C,CAA5C;AACA,UAAA,iBAAiB,GAAG,IAApB;AACH;AACJ,OALD,MAKO;AACH,YAAI,CAAC,CAAC,MAAF,CAAS,gBAAT,CAA0B,GAA1B,CAA8B,KAA9B,KAAwC,IAAI,CAAC,OAAL,CAAa,KAAzD,EAAgE;AAC5D,UAAA,SAAS,CAAC,MAAV,CAAiB,CAAC,CAAC,MAAF,CAAS,gBAA1B,EAA4C,IAAI,CAAC,OAAL,CAAa,KAAzD;AACA,UAAA,iBAAiB,GAAG,IAApB;AACH;;AACD,YAAI,CAAC,CAAC,MAAF,CAAS,YAAT,CAAsB,GAAtB,CAA0B,KAA1B,KAAoC,IAAI,CAAC,OAA7C,EAAsD;AAClD,UAAA,SAAS,CAAC,MAAV,CAAiB,CAAC,CAAC,MAAF,CAAS,YAA1B,EAAwC,IAAI,CAAC,OAA7C;AACA,UAAA,iBAAiB,GAAG,IAApB;AACH;AACJ;;AACD,UAAI,iBAAJ,EAAuB,CAAC,CAAC,MAAF;AAEvB,UAAM,OAAO,GAAG,CAAC,CAAC,UAAF,CAAa,OAAb,CAAhB;;AACA,UAAI,KAAK,CAAC,gBAAN,KAA2B,OAAO,CAAC,EAAvC,EAA2C;AACvC;AACA,QAAA,wBAAwB,GAAG,IAA3B;AACA,QAAA,OAAO,CAAC,GAAR;AACH;;AAED,UAAI,wBAAJ,EAA8B;AAC1B;AACA,QAAA,OAAO,CAAC,WAAR,CAAoB,iBAApB;AACA,QAAA,wBAAwB,GAAG,KAA3B;AACH;;AAED,UAAI,CAAC,CAAC,MAAF,CAAS,WAAb,EAA0B;AAAE;AACxB;AACA,QAAA,KAAK,CAAC,OAAN,CAAc,EAAE,CAAC,SAAjB;AACA,QAAA,KAAK,CAAC,SAAN,CAAgB,EAAE,CAAC,GAAnB;;AAEA,YAAI,OAAO,KAAK,cAAhB,EAAgC;AAC5B;AACA;AACA,cAAI,CAAC,CAAC,MAAF,CAAS,WAAT,CAAqB,GAArB,CAAyB,KAAzB,KAAmC,QAAnC,IAA+C,CAAC,SAApD,EAA+D;AAC3D,YAAA,KAAK,CAAC,OAAN,CAAc,EAAE,CAAC,UAAjB;AACA,YAAA,KAAK,CAAC,SAAN,CAAgB,KAAhB;AACH,WAHD,MAGO;AACH,YAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,UAAhB;AACA,YAAA,KAAK,CAAC,SAAN,CAAgB,CAAC,CAAC,MAAF,CAAS,MAAT,CAAgB,GAAhB,CAAoB,KAApB,KAA8B,GAA9C;AACH;AACJ;AACJ,OAhBD,MAgBO;AACH,YAAI,CAAC,CAAC,MAAF,CAAS,YAAb,EAA2B;AACvB,cAAI,CAAC,CAAC,MAAF,CAAS,YAAT,CAAsB,GAAtB,CAA0B,KAA1B,IAAmC,CAAC,CAAC,MAAF,CAAS,aAAT,CAAuB,GAAvB,CAA2B,KAAlE,EAAyE;AACrE,YAAA,KAAK,CAAC,OAAN,CAAc,EAAE,CAAC,SAAjB;AACH,WAFD,MAEO;AACH,YAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,SAAhB;AACH;AACJ,SAND,MAMO;AACH;AACA,UAAA,KAAK,CAAC,OAAN,CAAc,EAAE,CAAC,SAAjB;AACH;;AAED,YAAI,CAAC,CAAC,MAAF,CAAS,UAAb,EAAyB;AACrB,cAAI,CAAC,CAAC,MAAF,CAAS,UAAT,CAAoB,GAApB,CAAwB,KAA5B,EAAmC;AAC/B,YAAA,KAAK,CAAC,SAAN,CAAgB,EAAE,CAAC,EAAnB;AACA,YAAA,KAAK,CAAC,QAAN,CAAe,EAAE,CAAC,KAAlB;AACH,WAHD,MAGO;AACH,YAAA,KAAK,CAAC,SAAN,CAAgB,EAAE,CAAC,GAAnB;AACA,YAAA,KAAK,CAAC,QAAN,CAAe,EAAE,CAAC,IAAlB;AACH;AACJ,SARD,MAQO;AACH;AACA,UAAA,KAAK,CAAC,SAAN,CAAgB,EAAE,CAAC,GAAnB;AACA,UAAA,KAAK,CAAC,QAAN,CAAe,EAAE,CAAC,IAAlB;AACH;AACJ;;AAED,MAAA,CAAC,CAAC,MAAF,CAAS,OAAT,EAAkB,kBAAlB;AACH,KAhFD;;AAkFA,QAAM,MAAM,GAAG,UAAC,MAAD,EAAgB;AAC3B,MAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,KAAhC,EAAuC,MAAM,CAAC,IAA9C;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,QAAhC,EAA0C,IAAI,CAAC,MAAL,CAAY,OAAZ,EAAqB,MAAM,CAAC,IAA5B,CAA1C;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,WAAhC,EAA6C,MAAM,CAAC,UAApD;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,cAAhC,EAAgD,IAAI,CAAC,MAAL,CAAY,aAAZ,EAA2B,MAAM,CAAC,UAAlC,CAAhD;AAEA,MAAA,SAAS,CAAC,eAAV,CAA0B,cAAc,CAAC,QAAzC,EAAmD,MAAM,CAAC,KAAP,CAAa,IAAb,KAAsB,cAAtB,GAAuC,CAAvC,GAA2C,CAA9F;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,WAAhC,EAA6C,MAAM,CAAC,UAAP,CAAkB,OAAlB,GAA4B,IAAI,CAAC,GAAL,CAAS,UAAT,EAAqB,MAAM,CAAC,UAAP,CAAkB,OAAlB,GAA4B,EAAjD,EAAqD,MAAM,CAAC,UAAP,CAAkB,OAAlB,GAA4B,EAAjF,CAA5B,GAAmH,IAAI,CAAC,GAAL,CAAS,UAAT,EAAqB,CAArB,EAAwB,CAAxB,CAAhK;AAEA,MAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,eAAhC,EAAiD,MAAM,CAAC,KAAP,CAAa,QAA9D;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,UAAhC,EAA4C,IAAI,CAAC,SAAL,CAAe,SAAf,EAA0B,IAAI,CAAC,GAAL,CAAS,SAAT,EAAoB,MAAM,CAAC,KAAP,CAAa,MAAjC,EAAyC,MAAM,CAAC,KAAP,CAAa,QAAtD,CAA1B,CAA5C;AAEA,MAAA,SAAS,CAAC,eAAV,CAA0B,cAAc,CAAC,IAAzC,EAA+C,MAAM,CAAC,GAAtD;AACA,MAAA,SAAS,CAAC,eAAV,CAA0B,cAAc,CAAC,KAAzC,EAAgD,MAAM,CAAC,IAAvD;AACA,MAAA,SAAS,CAAC,eAAV,CAA0B,cAAc,CAAC,OAAzC,EAAkD,MAAM,CAAC,MAAzD;AACA,MAAA,SAAS,CAAC,eAAV,CAA0B,cAAc,CAAC,QAAzC,EAAmD,MAAM,CAAC,OAA1D;AACA,MAAA,SAAS,CAAC,eAAV,CAA0B,cAAc,CAAC,sBAAzC,EAAiE,qBAAjE;AACH,KAjBD;;AAmBA,QAAM,cAAc,GAAG,UAAC,KAAD,EAAqB,MAArB,EAAsC,YAAtC,EAAoE,WAApE,EAA0F,gBAA1F,EAAmH;AACtI,MAAA,cAAc,CAAC,kBAAD,EAAqB,QAArB,EAA+B,YAAY,IAAI,gBAA/C,CAAd;AAEA,MAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,MAAhC,EAAwC,KAAK,CAAC,IAA9C;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,UAAhC,EAA4C,IAAI,CAAC,GAAL,CAAS,SAAT,EAAoB,KAAK,CAAC,IAA1B,EAAgC,MAAM,CAAC,IAAvC,CAA5C;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,aAAhC,EAA+C,IAAI,CAAC,MAAL,CAAY,YAAZ,EAA0B,SAA1B,CAA/C;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,oBAAhC,EAAsD,IAAI,CAAC,GAAL,CAAS,mBAAT,EAA8B,SAA9B,EAAyC,MAAM,CAAC,UAAhD,CAAtD;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,uBAAhC,EAAyD,IAAI,CAAC,MAAL,CAAY,sBAAZ,EAAoC,mBAApC,CAAzD;AAEA,MAAA,SAAS,CAAC,eAAV,CAA0B,cAAc,CAAC,YAAzC,EAAuD,WAAvD;AACA,MAAA,SAAS,CAAC,eAAV,CAA0B,cAAc,CAAC,iBAAzC,EAA4D,gBAA5D;AAEA,MAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,YAAhB;AACA,MAAA,KAAK,CAAC,SAAN,CAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC;AAEQ,UAAA,CAAC,GAAuB,QAAQ,CAA/B,CAAD;AAAA,UAAG,CAAC,GAAoB,QAAQ,CAA5B,CAAJ;AAAA,UAAM,KAAK,GAAa,QAAQ,CAArB,KAAX;AAAA,UAAa,MAAM,GAAK,QAAQ,CAAb,MAAnB;AACR,MAAA,EAAE,CAAC,QAAH,CAAY,CAAZ,EAAe,CAAf,EAAkB,KAAlB,EAAyB,MAAzB;AACA,MAAA,EAAE,CAAC,OAAH,CAAW,CAAX,EAAc,CAAd,EAAiB,KAAjB,EAAwB,MAAxB;AAEA,MAAA,wBAAwB,GAAG,IAA3B;AACA,MAAA,KAAK,CAAC,mBAAN,GAA4B,CAAC,CAA7B;AACH,KArBD;;AAuBA,QAAM,UAAU,GAAG,UAAC,KAAD,EAAqB,MAArB,EAAsC,OAAtC,EAAsE,YAAtE,EAAkG;AACjH,MAAA,KAAK,CAAC,OAAN,CAAc,EAAE,CAAC,KAAjB;AACA,MAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,UAAhB;AACA,MAAA,KAAK,CAAC,SAAN,CAAgB,IAAhB;AAEA,MAAA,cAAc,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,EAA8B,KAA9B,EAAqC,KAArC,CAAd;AAEQ,UAAA,WAAW,GAAK,KAAK,CAAV,WAAX;;AACR,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,WAAW,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;AAClD,YAAI,CAAC,WAAW,CAAC,CAAD,CAAX,CAAe,KAAf,CAAqB,SAA1B,EAAqC;AACjC,UAAA,YAAY,CAAC,WAAW,CAAC,CAAD,CAAZ,EAAiB,OAAjB,CAAZ;AACH;AACJ;AACJ,KAbD;;AAeA,QAAM,WAAW,GAAG,UAAC,KAAD,EAAqB,MAArB,EAAsC,YAAtC,EAAkE;AAClF,MAAA,KAAK,CAAC,OAAN,CAAc,EAAE,CAAC,KAAjB;AACA,MAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,UAAhB;AACA,MAAA,KAAK,CAAC,SAAN,CAAgB,IAAhB;AAEA,MAAA,cAAc,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,EAA8B,KAA9B,EAAqC,KAArC,CAAd;AAEQ,UAAA,WAAW,GAAK,KAAK,CAAV,WAAX;;AACR,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,WAAW,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;AAClD,QAAA,YAAY,CAAC,WAAW,CAAC,CAAD,CAAZ,EAAiB,OAAjB,CAAZ;AACH;AACJ,KAXD;;AAaA,QAAM,kBAAkB,GAAG,UAAC,KAAD,EAAqB,MAArB,EAAsC,YAAtC,EAAkE;AACzF,MAAA,KAAK,CAAC,OAAN,CAAc,EAAE,CAAC,KAAjB;AACA,MAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,UAAhB;AACA,MAAA,KAAK,CAAC,SAAN,CAAgB,IAAhB;AAEA,MAAA,cAAc,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,EAA8B,KAA9B,EAAqC,KAArC,CAAd;AAEQ,UAAA,WAAW,GAAK,KAAK,CAAV,WAAX;;AACR,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,WAAW,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;AAClD,YAAM,CAAC,GAAG,WAAW,CAAC,CAAD,CAArB;;AAEA,YAAI,CAAC,CAAC,MAAF,CAAS,aAAT,CAAuB,GAAvB,CAA2B,KAA3B,KAAqC,CAAzC,EAA4C;AACxC,UAAA,YAAY,CAAC,WAAW,CAAC,CAAD,CAAZ,EAAiB,cAAjB,CAAZ;AACH;AACJ;AACJ,KAfD;;AAiBA,QAAM,iBAAiB,GAAG,UAAC,KAAD,EAAqB,MAArB,EAAsC,YAAtC,EAAkE;AACxF,MAAA,KAAK,CAAC,OAAN,CAAc,EAAE,CAAC,KAAjB;AACA,MAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,UAAhB;AACA,MAAA,KAAK,CAAC,SAAN,CAAgB,IAAhB;AAEA,MAAA,cAAc,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,EAA8B,KAA9B,EAAqC,CAAC,CAAC,YAAvC,CAAd;AAEQ,UAAA,WAAW,GAAK,KAAK,CAAV,WAAX;;AACR,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,WAAW,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;AAClD,YAAM,CAAC,GAAG,WAAW,CAAC,CAAD,CAArB;;AAEA,YAAI,CAAC,CAAC,MAAF,CAAS,aAAT,CAAuB,GAAvB,CAA2B,KAA3B,GAAmC,CAAvC,EAA0C;AACtC,UAAA,YAAY,CAAC,WAAW,CAAC,CAAD,CAAZ,EAAiB,aAAjB,CAAZ;AACH;AACJ;AACJ,KAfD;;AAiBA,QAAM,aAAa,GAAG,UAAC,KAAD,EAAqB,MAArB,EAAsC,YAAtC,EAAkE;AACpF,MAAA,mBAAmB,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,CAAnB;AACA,MAAA,wBAAwB,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,CAAxB;AACH,KAHD;;AAKA,QAAM,mBAAmB,GAAG,UAAC,KAAD,EAAqB,MAArB,EAAsC,YAAtC,EAAkE;AAC1F,MAAA,KAAK,CAAC,OAAN,CAAc,EAAE,CAAC,KAAjB;AACA,MAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,UAAhB;AACA,MAAA,KAAK,CAAC,SAAN,CAAgB,IAAhB;AAEA,MAAA,cAAc,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,EAA8B,KAA9B,EAAqC,KAArC,CAAd;AAEQ,UAAA,WAAW,GAAK,KAAK,CAAV,WAAX;;AACR,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,WAAW,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;AAClD,YAAM,CAAC,GAAG,WAAW,CAAC,CAAD,CAArB;;AACA,YAAI,CAAC,CAAC,KAAF,CAAQ,MAAZ,EAAoB;AAChB,UAAA,YAAY,CAAC,CAAD,EAAI,cAAJ,CAAZ;AACH;AACJ;AACJ,KAdD;;AAgBA,QAAM,wBAAwB,GAAG,UAAC,KAAD,EAAqB,MAArB,EAAsC,YAAtC,EAAkE;AAC/F,MAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,UAAhB;AAEA,MAAA,cAAc,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,EAA8B,KAA9B,EAAqC,KAArC,CAAd;AAEQ,UAAA,WAAW,GAAK,KAAK,CAAV,WAAX;;AAER,UAAI,qBAAJ,EAA2B;AACvB,QAAA,KAAK,CAAC,SAAN,CAAgB,EAAE,CAAC,GAAnB,EAAwB,EAAE,CAAC,mBAA3B;AACH,OAFD,MAEO;AACH,QAAA,KAAK,CAAC,iBAAN,CAAwB,EAAE,CAAC,SAA3B,EAAsC,EAAE,CAAC,mBAAzC,EAA8D,EAAE,CAAC,GAAjE,EAAsE,EAAE,CAAC,mBAAzE;AACH;;AACD,MAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,KAAhB;AAEA,MAAA,KAAK,CAAC,SAAN,CAAgB,IAAhB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,WAAW,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;AAClD,YAAM,CAAC,GAAG,WAAW,CAAC,CAAD,CAArB;;AACA,YAAI,CAAC,CAAC,CAAC,KAAF,CAAQ,MAAT,IAAmB,CAAC,CAAC,KAAF,CAAQ,UAA/B,EAA2C;AACvC,UAAA,YAAY,CAAC,CAAD,EAAI,cAAJ,CAAZ;AACH;AACJ;;AAED,MAAA,KAAK,CAAC,SAAN,CAAgB,KAAhB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,WAAW,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;AAClD,YAAM,CAAC,GAAG,WAAW,CAAC,CAAD,CAArB;;AACA,YAAI,CAAC,CAAC,CAAC,KAAF,CAAQ,MAAT,IAAmB,CAAC,CAAC,CAAC,KAAF,CAAQ,UAAhC,EAA4C;AACxC,UAAA,YAAY,CAAC,CAAD,EAAI,cAAJ,CAAZ;AACH;AACJ;AACJ,KA7BD;;AA+BA,QAAM,yBAAyB,GAAG,UAAC,KAAD,EAAqB,MAArB,EAAsC,YAAtC,EAAkE;;;AAChG,MAAA,KAAK,CAAC,SAAN,CAAgB,EAAE,CAAC,GAAnB,EAAwB,EAAE,CAAC,mBAA3B;AACA,MAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,KAAhB;AAEA,MAAA,cAAc,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,EAA8B,KAA9B,EAAqC,KAArC,CAAd;AAEQ,UAAA,WAAW,GAAK,KAAK,CAAV,WAAX;;AACR,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,WAAW,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;AAClD,YAAM,CAAC,GAAG,WAAW,CAAC,CAAD,CAArB,CADkD,CAGlD;AACA;;AACA,YAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,MAAF,CAAS,KAAT,CAAe,GAAf,CAAmB,KAAnB,GAA2B,CAAC,CAAC,KAAF,CAAQ,WAApC,EAAiD,CAAjD,EAAoD,CAApD,CAAnB;;AACA,YAAI,KAAK,KAAK,CAAV,IAAe,CAAC,CAAC,MAAF,CAAS,mBAAT,CAA6B,GAA7B,CAAiC,KAAjC,KAA2C,CAA1D,IAA+D,EAAC,CAAA,EAAA,GAAA,CAAC,CAAC,MAAF,CAAS,WAAT,MAAoB,IAApB,IAAoB,EAAA,KAAA,KAAA,CAApB,GAAoB,KAAA,CAApB,GAAoB,EAAA,CAAE,GAAF,CAAM,KAA3B,CAAnE,EAAqG;AACjG,UAAA,YAAY,CAAC,CAAD,EAAI,cAAJ,CAAZ;AACH;AACJ;AACJ,KAjBD;;AAmBA,QAAM,8BAA8B,GAAG,UAAC,KAAD,EAAqB,MAArB,EAAsC,YAAtC,EAAkE;;;AACrG,MAAA,KAAK,CAAC,SAAN,CAAgB,EAAE,CAAC,GAAnB,EAAwB,EAAE,CAAC,mBAA3B;AACA,MAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,KAAhB;AAEA,MAAA,cAAc,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,EAA8B,KAA9B,EAAqC,KAArC,CAAd;AAEQ,UAAA,WAAW,GAAK,KAAK,CAAV,WAAX;;AACR,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,WAAW,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;AAClD,YAAM,CAAC,GAAG,WAAW,CAAC,CAAD,CAArB,CADkD,CAGlD;AACA;;AACA,YAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,MAAF,CAAS,KAAT,CAAe,GAAf,CAAmB,KAAnB,GAA2B,CAAC,CAAC,KAAF,CAAQ,WAApC,EAAiD,CAAjD,EAAoD,CAApD,CAAnB;;AACA,YAAI,KAAK,GAAG,CAAR,IAAa,CAAC,CAAC,MAAF,CAAS,mBAAT,CAA6B,GAA7B,CAAiC,KAAjC,GAAyC,CAAtD,KAA2D,CAAA,EAAA,GAAA,CAAC,CAAC,MAAF,CAAS,WAAT,MAAoB,IAApB,IAAoB,EAAA,KAAA,KAAA,CAApB,GAAoB,KAAA,CAApB,GAAoB,EAAA,CAAE,GAAF,CAAM,KAArF,CAAJ,EAAgG;AAC5F,UAAA,YAAY,CAAC,CAAD,EAAI,cAAJ,CAAZ;AACH;AACJ;AACJ,KAjBD;;AAmBA,QAAM,iBAAiB,GAAG,UAAC,KAAD,EAAqB,MAArB,EAAsC,YAAtC,EAAkE;;;AACxF,MAAA,KAAK,CAAC,OAAN,CAAc,EAAE,CAAC,KAAjB;AACA,MAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,UAAhB;AACA,MAAA,KAAK,CAAC,SAAN,CAAgB,IAAhB;AAEA,MAAA,cAAc,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,EAA8B,KAA9B,EAAqC,KAArC,CAAd;AAEQ,UAAA,WAAW,GAAK,KAAK,CAAV,WAAX;;AACR,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,WAAW,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;AAClD,YAAM,CAAC,GAAG,WAAW,CAAC,CAAD,CAArB,CADkD,CAGlD;AACA;;AACA,YAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,MAAF,CAAS,KAAT,CAAe,GAAf,CAAmB,KAAnB,GAA2B,CAAC,CAAC,KAAF,CAAQ,WAApC,EAAiD,CAAjD,EAAoD,CAApD,CAAnB;;AACA,YAAI,KAAK,KAAK,CAAV,IAAe,CAAC,CAAC,MAAF,CAAS,mBAAT,CAA6B,GAA7B,CAAiC,KAAjC,KAA2C,CAA1D,IAA+D,CAAA,CAAA,EAAA,GAAA,CAAC,CAAC,MAAF,CAAS,WAAT,MAAoB,IAApB,IAAoB,EAAA,KAAA,KAAA,CAApB,GAAoB,KAAA,CAApB,GAAoB,EAAA,CAAE,GAAF,CAAM,KAA1B,MAAoC,QAAnG,IAA+G,CAAA,CAAA,EAAA,GAAA,CAAC,CAAC,MAAF,CAAS,WAAT,MAAoB,IAApB,IAAoB,EAAA,KAAA,KAAA,CAApB,GAAoB,KAAA,CAApB,GAAoB,EAAA,CAAE,GAAF,CAAM,KAA1B,MAAoC,OAAnJ,IAA8J,EAAC,CAAA,EAAA,GAAA,CAAC,CAAC,MAAF,CAAS,WAAT,MAAoB,IAApB,IAAoB,EAAA,KAAA,KAAA,CAApB,GAAoB,KAAA,CAApB,GAAoB,EAAA,CAAE,GAAF,CAAM,KAA3B,CAAlK,EAAoM;AAChM,UAAA,YAAY,CAAC,CAAD,EAAI,YAAJ,CAAZ;AACH;AACJ;AACJ,KAlBD;;AAoBA,QAAM,sBAAsB,GAAG,UAAC,KAAD,EAAqB,MAArB,EAAsC,YAAtC,EAAkE;;;AAC7F,MAAA,cAAc,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,EAA8B,IAA9B,EAAoC,KAApC,CAAd;AAEQ,UAAA,WAAW,GAAK,KAAK,CAAV,WAAX;;AACR,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,WAAW,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAA7C,EAAiD,EAAE,CAAnD,EAAsD;AAClD,YAAM,CAAC,GAAG,WAAW,CAAC,CAAD,CAArB,CADkD,CAGlD;AACA;;AACA,YAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,MAAF,CAAS,KAAT,CAAe,GAAf,CAAmB,KAAnB,GAA2B,CAAC,CAAC,KAAF,CAAQ,WAApC,EAAiD,CAAjD,EAAoD,CAApD,CAAnB;;AACA,YAAI,KAAK,GAAG,CAAR,IAAa,CAAC,CAAC,MAAF,CAAS,mBAAT,CAA6B,GAA7B,CAAiC,KAAjC,GAAyC,CAAtD,IAA2D,CAAA,CAAA,EAAA,GAAA,CAAC,CAAC,MAAF,CAAS,WAAT,MAAoB,IAApB,IAAoB,EAAA,KAAA,KAAA,CAApB,GAAoB,KAAA,CAApB,GAAoB,EAAA,CAAE,GAAF,CAAM,KAA1B,MAAoC,QAA/F,IAA2G,CAAA,CAAA,EAAA,GAAA,CAAC,CAAC,MAAF,CAAS,WAAT,MAAoB,IAApB,IAAoB,EAAA,KAAA,KAAA,CAApB,GAAoB,KAAA,CAApB,GAAoB,EAAA,CAAE,GAAF,CAAM,KAA1B,MAAoC,OAA/I,IAA0J,CAAC,CAAC,CAAC,CAAC,MAAF,CAAS,gBAArK,KAAyL,CAAA,EAAA,GAAA,CAAC,CAAC,MAAF,CAAS,WAAT,MAAoB,IAApB,IAAoB,EAAA,KAAA,KAAA,CAApB,GAAoB,KAAA,CAApB,GAAoB,EAAA,CAAE,GAAF,CAAM,KAAnN,CAAJ,EAA8N;AAC1N,UAAA,YAAY,CAAC,CAAD,EAAI,YAAJ,CAAZ;AACH;AACJ;AACJ,KAdD;;AAgBA,WAAO;AACH,MAAA,KAAK,EAAE,UAAC,iBAAD,EAA2B;AAC9B,QAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,YAAhB;AACA,QAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,UAAhB;AACA,QAAA,KAAK,CAAC,SAAN,CAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC;AACA,QAAA,KAAK,CAAC,SAAN,CAAgB,IAAhB;;AAEA,YAAI,qBAAJ,EAA2B;AACvB,UAAA,KAAK,CAAC,UAAN,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACH,SAFD,MAEO,IAAI,iBAAJ,EAAuB;AAC1B,UAAA,KAAK,CAAC,UAAN,CAAiB,OAAO,CAAC,CAAD,CAAxB,EAA6B,OAAO,CAAC,CAAD,CAApC,EAAyC,OAAO,CAAC,CAAD,CAAhD,EAAqD,CAArD;AACH,SAFM,MAEA;AACH,UAAA,KAAK,CAAC,UAAN,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACH;;AACD,QAAA,EAAE,CAAC,KAAH,CAAS,EAAE,CAAC,gBAAH,GAAsB,EAAE,CAAC,gBAAlC;AACH,OAfE;AAgBH,MAAA,UAAU,EAAE,YAAA;AACR,QAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,YAAhB;AACA,QAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,UAAhB;AACA,QAAA,KAAK,CAAC,SAAN,CAAgB,IAAhB;AACA,QAAA,EAAE,CAAC,KAAH,CAAS,EAAE,CAAC,gBAAZ;AACH,OArBE;AAsBH,MAAA,MAAM,EAAA,MAtBH;AAwBH,MAAA,UAAU,EAAA,UAxBP;AAyBH,MAAA,WAAW,EAAA,WAzBR;AA0BH,MAAA,kBAAkB,EAAA,kBA1Bf;AA2BH,MAAA,iBAAiB,EAAA,iBA3Bd;AA4BH,MAAA,aAAa,EAAA,aA5BV;AA6BH,MAAA,mBAAmB,EAAA,mBA7BhB;AA8BH,MAAA,wBAAwB,EAAA,wBA9BrB;AA+BH,MAAA,yBAAyB,EAAA,yBA/BtB;AAgCH,MAAA,8BAA8B,EAAA,8BAhC3B;AAiCH,MAAA,iBAAiB,EAAA,iBAjCd;AAkCH,MAAA,sBAAsB,EAAA,sBAlCnB;AAoCH,MAAA,QAAQ,EAAE,UAAC,KAAD,EAA8B;AACpC,YAAI,KAAK,CAAC,eAAN,KAA0B,SAA1B,IAAuC,KAAK,CAAC,eAAN,KAA0B,CAAC,CAAC,eAAvE,EAAwF;AACpF,UAAA,CAAC,CAAC,eAAF,GAAoB,KAAK,CAAC,eAA1B;AACA,UAAA,KAAK,CAAC,gBAAN,CAAuB,OAAvB,EAAgC,CAAC,CAAC,eAAlC;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,SAAhC,EAA2C,IAAI,CAAC,IAAL,CAAU,cAAc,CAAC,SAAf,CAAyB,GAAzB,CAA6B,KAAvC,EAA8C,OAA9C,CAA3C;AACH;;AAED,YAAI,KAAK,CAAC,qBAAN,KAAgC,SAAhC,IAA6C,KAAK,CAAC,qBAAN,KAAgC,CAAC,CAAC,qBAAnF,EAA0G;AACtG,UAAA,CAAC,CAAC,qBAAF,GAA0B,KAAK,CAAC,qBAAhC;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,sBAAhC,EAAwD,CAAC,CAAC,qBAA1D;AACH;;AAED,YAAI,KAAK,CAAC,iBAAN,KAA4B,SAA5B,IAAyC,KAAK,CAAC,iBAAN,KAA4B,CAAC,CAAC,iBAA3E,EAA8F;AAC1F,UAAA,CAAC,CAAC,iBAAF,GAAsB,KAAK,CAAC,iBAA5B;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,kBAAhC,EAAoD,CAAC,CAAC,iBAAtD;AACH;;AACD,YAAI,KAAK,CAAC,iBAAN,KAA4B,SAA5B,IAAyC,KAAK,CAAC,iBAAN,KAA4B,CAAC,CAAC,iBAA3E,EAA8F;AAC1F,UAAA,CAAC,CAAC,iBAAF,GAAsB,KAAK,CAAC,iBAA5B;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,kBAAhC,EAAoD,CAAC,CAAC,iBAAtD;AACH;;AACD,YAAI,KAAK,CAAC,aAAN,KAAwB,SAAxB,IAAqC,KAAK,CAAC,aAAN,KAAwB,CAAC,CAAC,aAAnE,EAAkF;AAC9E,UAAA,CAAC,CAAC,aAAF,GAAkB,KAAK,CAAC,aAAxB;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,cAAhC,EAAgD,KAAK,CAAC,gBAAN,CAAuB,cAAc,CAAC,cAAf,CAA8B,GAA9B,CAAkC,KAAzD,EAAgE,CAAC,CAAC,aAAlE,CAAhD;AACH;;AAED,YAAI,KAAK,CAAC,cAAN,KAAyB,SAAzB,IAAsC,KAAK,CAAC,cAAN,KAAyB,CAAC,CAAC,cAArE,EAAqF;AACjF,UAAA,CAAC,CAAC,cAAF,GAAmB,KAAK,CAAC,cAAzB;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,eAAhC,EAAiD,KAAK,CAAC,gBAAN,CAAuB,cAAc,CAAC,eAAf,CAA+B,GAA/B,CAAmC,KAA1D,EAAiE,CAAC,CAAC,cAAnE,CAAjD;AACH;;AACD,YAAI,KAAK,CAAC,WAAN,KAAsB,SAAtB,IAAmC,KAAK,CAAC,WAAN,KAAsB,CAAC,CAAC,WAA/D,EAA4E;AACxE,UAAA,CAAC,CAAC,WAAF,GAAgB,KAAK,CAAC,WAAtB;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,YAAhC,EAA8C,KAAK,CAAC,gBAAN,CAAuB,cAAc,CAAC,YAAf,CAA4B,GAA5B,CAAgC,KAAvD,EAA8D,CAAC,CAAC,WAAhE,CAA9C;AACH;;AACD,YAAI,KAAK,CAAC,iBAAN,KAA4B,SAA5B,IAAyC,KAAK,CAAC,iBAAN,KAA4B,CAAC,CAAC,iBAA3E,EAA8F;AAC1F,UAAA,CAAC,CAAC,iBAAF,GAAsB,KAAK,CAAC,iBAA5B;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,kBAAhC,EAAoD,CAAC,CAAC,iBAAtD;AACH;;AACD,YAAI,KAAK,CAAC,cAAN,KAAyB,SAAzB,IAAsC,KAAK,CAAC,cAAN,KAAyB,CAAC,CAAC,cAArE,EAAqF;AACjF,UAAA,CAAC,CAAC,cAAF,GAAmB,KAAK,CAAC,cAAzB;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,eAAhC,EAAiD,CAAC,CAAC,cAAnD;AACH;;AACD,YAAI,KAAK,CAAC,cAAN,KAAyB,SAAzB,IAAsC,KAAK,CAAC,cAAN,KAAyB,CAAC,CAAC,cAArE,EAAqF;AACjF,UAAA,CAAC,CAAC,cAAF,GAAmB,KAAK,CAAC,cAAzB;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,eAAhC,EAAiD,CAAC,CAAC,cAAnD;AACH;;AAED,YAAI,KAAK,CAAC,eAAN,KAA0B,SAA1B,IAAuC,KAAK,CAAC,eAAN,KAA0B,CAAC,CAAC,eAAvE,EAAwF;AACpF,UAAA,CAAC,CAAC,eAAF,GAAoB,KAAK,CAAC,eAA1B;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,gBAAhC,EAAkD,CAAC,CAAC,eAApD;AACH;;AAED,YAAI,KAAK,CAAC,KAAN,KAAgB,SAApB,EAA+B;AAC3B,UAAA,CAAC,CAAC,KAAF,GAAU,KAAK,CAAC,KAAhB;AACA,UAAA,MAAM,CAAC,MAAP,CAAc,KAAd,EAAqB,QAAQ,CAAC,KAAK,CAAC,KAAP,CAA7B;AACA,UAAA,SAAS,CAAC,eAAV,CAA0B,cAAc,CAAC,eAAzC,EAA0D,KAAK,CAAC,cAAhE;AACA,UAAA,SAAS,CAAC,eAAV,CAA0B,cAAc,CAAC,iBAAzC,EAA4D,KAAK,CAAC,gBAAlE;AACA,UAAA,SAAS,CAAC,eAAV,CAA0B,cAAc,CAAC,UAAzC,EAAqD,KAAK,CAAC,SAA3D;AACA,UAAA,SAAS,CAAC,eAAV,CAA0B,cAAc,CAAC,UAAzC,EAAqD,KAAK,CAAC,SAA3D;AACA,UAAA,SAAS,CAAC,eAAV,CAA0B,cAAc,CAAC,aAAzC,EAAwD,KAAK,CAAC,YAA9D;AACH;;AAED,YAAI,KAAK,CAAC,IAAN,KAAe,SAAf,IAA4B,CAAC,SAAS,CAAC,KAAK,CAAC,IAAP,EAAa,CAAC,CAAC,IAAf,CAA1C,EAAgE;AAC5D,UAAA,CAAC,CAAC,IAAF,GAAS,KAAK,CAAC,IAAf;AACA,UAAA,MAAM,CAAC,MAAP,CAAc,IAAd,EAAoB,OAAO,CAAC,KAAK,CAAC,IAAP,EAAa,IAAb,CAA3B;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,mBAAhC,EAAqD,IAAI,CAAC,OAAL,CAAa,QAAlE;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,mBAAhC,EAAqD,IAAI,CAAC,OAAL,CAAa,QAAlE;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,gBAAhC,EAAkD,IAAI,CAAC,OAAL,CAAa,KAA/D;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,eAAhC,EAAiD,IAAI,CAAC,OAAL,CAAa,IAA9D;AACH;AACJ,OAzGE;AA0GH,MAAA,WAAW,EAAE,UAAC,CAAD,EAAY,CAAZ,EAAuB,KAAvB,EAAsC,MAAtC,EAAoD;AAC7D,QAAA,EAAE,CAAC,QAAH,CAAY,CAAZ,EAAe,CAAf,EAAkB,KAAlB,EAAyB,MAAzB;AACA,QAAA,EAAE,CAAC,OAAH,CAAW,CAAX,EAAc,CAAd,EAAiB,KAAjB,EAAwB,MAAxB;;AACA,YAAI,CAAC,KAAK,QAAQ,CAAC,CAAf,IAAoB,CAAC,KAAK,QAAQ,CAAC,CAAnC,IAAwC,KAAK,KAAK,QAAQ,CAAC,KAA3D,IAAoE,MAAM,KAAK,QAAQ,CAAC,MAA5F,EAAoG;AAChG,UAAA,QAAQ,CAAC,GAAT,CAAa,QAAb,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,KAA7B,EAAoC,MAApC;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,SAAhC,EAA2C,IAAI,CAAC,GAAL,CAAS,cAAc,CAAC,SAAf,CAAyB,GAAzB,CAA6B,KAAtC,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,KAAnD,EAA0D,MAA1D,CAA3C;AACH;AACJ,OAjHE;AAkHH,MAAA,wBAAwB,EAAE,UAAC,KAAD,EAAe;AACrC,QAAA,qBAAqB,GAAG,KAAxB;AACH,OApHE;AAqHH,MAAA,oBAAoB,EAAE,UAAC,KAAD,EAAgB,MAAhB,EAA8B;AAChD,YAAI,KAAK,KAAK,iBAAiB,CAAC,CAAD,CAA3B,IAAkC,MAAM,KAAK,iBAAiB,CAAC,CAAD,CAAlE,EAAuE;AACnE,UAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,kBAAhC,EAAoD,IAAI,CAAC,GAAL,CAAS,iBAAT,EAA4B,KAA5B,EAAmC,MAAnC,CAApD;AACH;AACJ,OAzHE;AA0HH,MAAA,aAAa,EAAE,UAAC,KAAD,EAAc;AACzB,QAAA,SAAS,CAAC,MAAV,CAAiB,cAAc,CAAC,WAAhC,EAA6C,KAA7C;AACH,OA5HE;AA8HH,MAAA,KAAK,EAAE,CA9HJ;;AA+HH,UAAI,KAAJ,GAAS;AACL,eAAO;AACH,UAAA,YAAY,EAAE,GAAG,CAAC,KAAJ,CAAU,cAAV,CAAyB,OADpC;AAEH,UAAA,WAAW,EAAE,GAAG,CAAC,KAAJ,CAAU,cAAV,CAAyB,MAFnC;AAIH,UAAA,cAAc,EAAE,GAAG,CAAC,KAAJ,CAAU,cAAV,CAAyB,SAJtC;AAKH,UAAA,aAAa,EAAE,GAAG,CAAC,KAAJ,CAAU,cAAV,CAAyB,QALrC;AAMH,UAAA,gBAAgB,EAAE,GAAG,CAAC,KAAJ,CAAU,cAAV,CAAyB,WANxC;AAOH,UAAA,iBAAiB,EAAE,GAAG,CAAC,KAAJ,CAAU,cAAV,CAAyB,YAPzC;AAQH,UAAA,YAAY,EAAE,GAAG,CAAC,KAAJ,CAAU,cAAV,CAAyB,OARpC;AASH,UAAA,gBAAgB,EAAE,GAAG,CAAC,KAAJ,CAAU,cAAV,CAAyB,WATxC;AAWH,UAAA,SAAS,EAAE,KAAK,CAAC,SAXd;AAYH,UAAA,aAAa,EAAE,KAAK,CAAC,aAZlB;AAaH,UAAA,kBAAkB,EAAE,KAAK,CAAC;AAbvB,SAAP;AAeH,OA/IE;;AAgJH,MAAA,OAAO,EAAE,YAAA,CACL;AACH;AAlJE,KAAP;AAoJH;;AAviBe,EAAA,QAAA,CAAA,MAAA,GAAM,MAAN;AAwiBnB,CAziBD,EAAU,QAAQ,KAAR,QAAQ,GAAA,EAAA,CAAlB;;AA2iBA,SAAS,QAAT","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Viewport } from '../mol-canvas3d/camera/util';\r\nimport { Mat4, Vec3, Vec4, Vec2, Quat } from '../mol-math/linear-algebra';\r\nimport { Color } from '../mol-util/color';\r\nimport { ValueCell, deepEqual } from '../mol-util';\r\nimport { ParamDefinition as PD } from '../mol-util/param-definition';\r\nimport { Clipping } from '../mol-theme/clipping';\r\nimport { stringToWords } from '../mol-util/string';\r\nimport { degToRad } from '../mol-math/misc';\r\nimport { createNullTexture } from './webgl/texture';\r\nimport { arrayMapUpsert } from '../mol-util/array';\r\nimport { clamp } from '../mol-math/interpolate';\r\nexport var RendererParams = {\r\n    backgroundColor: PD.Color(Color(0x000000), { description: 'Background color of the 3D canvas' }),\r\n    // the following are general 'material' parameters\r\n    pickingAlphaThreshold: PD.Numeric(0.5, { min: 0.0, max: 1.0, step: 0.01 }, { description: 'The minimum opacity value needed for an object to be pickable.' }),\r\n    interiorDarkening: PD.Numeric(0.5, { min: 0.0, max: 1.0, step: 0.01 }),\r\n    interiorColorFlag: PD.Boolean(true, { label: 'Use Interior Color' }),\r\n    interiorColor: PD.Color(Color.fromNormalizedRgb(0.3, 0.3, 0.3)),\r\n    highlightColor: PD.Color(Color.fromNormalizedRgb(1.0, 0.4, 0.6)),\r\n    selectColor: PD.Color(Color.fromNormalizedRgb(0.2, 1.0, 0.1)),\r\n    highlightStrength: PD.Numeric(0.7, { min: 0.0, max: 1.0, step: 0.1 }),\r\n    selectStrength: PD.Numeric(0.7, { min: 0.0, max: 1.0, step: 0.1 }),\r\n    markerPriority: PD.Select(1, [[1, 'Highlight'], [2, 'Select']]),\r\n    xrayEdgeFalloff: PD.Numeric(1, { min: 0.0, max: 3.0, step: 0.1 }),\r\n    style: PD.MappedStatic('matte', {\r\n        custom: PD.Group({\r\n            lightIntensity: PD.Numeric(0.6, { min: 0.0, max: 1.0, step: 0.01 }),\r\n            ambientIntensity: PD.Numeric(0.4, { min: 0.0, max: 1.0, step: 0.01 }),\r\n            metalness: PD.Numeric(0.0, { min: 0.0, max: 1.0, step: 0.01 }),\r\n            roughness: PD.Numeric(1.0, { min: 0.0, max: 1.0, step: 0.01 }),\r\n            reflectivity: PD.Numeric(0.5, { min: 0.0, max: 1.0, step: 0.01 }),\r\n        }, { isExpanded: true }),\r\n        flat: PD.Group({}),\r\n        matte: PD.Group({}),\r\n        glossy: PD.Group({}),\r\n        metallic: PD.Group({}),\r\n        plastic: PD.Group({}),\r\n    }, { label: 'Lighting', description: 'Style in which the 3D scene is rendered/lighted' }),\r\n    clip: PD.Group({\r\n        variant: PD.Select('instance', PD.arrayToOptions(['instance', 'pixel'])),\r\n        objects: PD.ObjectList({\r\n            type: PD.Select('plane', PD.objectToOptions(Clipping.Type, function (t) { return stringToWords(t); })),\r\n            invert: PD.Boolean(false),\r\n            position: PD.Vec3(Vec3()),\r\n            rotation: PD.Group({\r\n                axis: PD.Vec3(Vec3.create(1, 0, 0)),\r\n                angle: PD.Numeric(0, { min: -180, max: 180, step: 1 }, { description: 'Angle in Degrees' }),\r\n            }, { isExpanded: true }),\r\n            scale: PD.Vec3(Vec3.create(1, 1, 1)),\r\n        }, function (o) { return stringToWords(o.type); })\r\n    })\r\n};\r\nexport function getStyle(props) {\r\n    switch (props.name) {\r\n        case 'custom':\r\n            return props.params;\r\n        case 'flat':\r\n            return {\r\n                lightIntensity: 0, ambientIntensity: 1,\r\n                metalness: 0, roughness: 0.4, reflectivity: 0.5\r\n            };\r\n        case 'matte':\r\n            return {\r\n                lightIntensity: 0.7, ambientIntensity: 0.3,\r\n                metalness: 0, roughness: 1, reflectivity: 0.5\r\n            };\r\n        case 'glossy':\r\n            return {\r\n                lightIntensity: 0.7, ambientIntensity: 0.3,\r\n                metalness: 0, roughness: 0.4, reflectivity: 0.5\r\n            };\r\n        case 'metallic':\r\n            return {\r\n                lightIntensity: 0.7, ambientIntensity: 0.7,\r\n                metalness: 0.6, roughness: 0.6, reflectivity: 0.5\r\n            };\r\n        case 'plastic':\r\n            return {\r\n                lightIntensity: 0.7, ambientIntensity: 0.3,\r\n                metalness: 0, roughness: 0.2, reflectivity: 0.5\r\n            };\r\n    }\r\n}\r\nvar tmpQuat = Quat();\r\nfunction getClip(props, clip) {\r\n    var _a = (clip === null || clip === void 0 ? void 0 : clip.objects) || {\r\n        type: (new Array(5)).fill(1),\r\n        invert: (new Array(5)).fill(false),\r\n        position: (new Array(5 * 3)).fill(0),\r\n        rotation: (new Array(5 * 4)).fill(0),\r\n        scale: (new Array(5 * 3)).fill(1),\r\n    }, type = _a.type, invert = _a.invert, position = _a.position, rotation = _a.rotation, scale = _a.scale;\r\n    for (var i = 0, il = props.objects.length; i < il; ++i) {\r\n        var p = props.objects[i];\r\n        type[i] = Clipping.Type[p.type];\r\n        invert[i] = p.invert;\r\n        Vec3.toArray(p.position, position, i * 3);\r\n        Quat.toArray(Quat.setAxisAngle(tmpQuat, p.rotation.axis, degToRad(p.rotation.angle)), rotation, i * 4);\r\n        Vec3.toArray(p.scale, scale, i * 3);\r\n    }\r\n    return {\r\n        variant: props.variant,\r\n        objects: { count: props.objects.length, type: type, invert: invert, position: position, rotation: rotation, scale: scale }\r\n    };\r\n}\r\nvar Renderer;\r\n(function (Renderer) {\r\n    function create(ctx, props) {\r\n        if (props === void 0) { props = {}; }\r\n        var gl = ctx.gl, state = ctx.state, stats = ctx.stats, fragDepth = ctx.extensions.fragDepth;\r\n        var p = PD.merge(RendererParams, PD.getDefaultValues(RendererParams), props);\r\n        var style = getStyle(p.style);\r\n        var clip = getClip(p.clip);\r\n        var viewport = Viewport();\r\n        var drawingBufferSize = Vec2.create(gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n        var bgColor = Color.toVec3Normalized(Vec3(), p.backgroundColor);\r\n        var transparentBackground = false;\r\n        var nullDepthTexture = createNullTexture(gl);\r\n        var sharedTexturesList = [\r\n            ['tDepth', nullDepthTexture]\r\n        ];\r\n        var view = Mat4();\r\n        var invView = Mat4();\r\n        var modelView = Mat4();\r\n        var invModelView = Mat4();\r\n        var invProjection = Mat4();\r\n        var modelViewProjection = Mat4();\r\n        var invModelViewProjection = Mat4();\r\n        var cameraDir = Vec3();\r\n        var viewOffset = Vec2();\r\n        var globalUniforms = {\r\n            uModel: ValueCell.create(Mat4.identity()),\r\n            uView: ValueCell.create(view),\r\n            uInvView: ValueCell.create(invView),\r\n            uModelView: ValueCell.create(modelView),\r\n            uInvModelView: ValueCell.create(invModelView),\r\n            uInvProjection: ValueCell.create(invProjection),\r\n            uProjection: ValueCell.create(Mat4()),\r\n            uModelViewProjection: ValueCell.create(modelViewProjection),\r\n            uInvModelViewProjection: ValueCell.create(invModelViewProjection),\r\n            uIsOrtho: ValueCell.create(1),\r\n            uViewOffset: ValueCell.create(viewOffset),\r\n            uPixelRatio: ValueCell.create(ctx.pixelRatio),\r\n            uViewport: ValueCell.create(Viewport.toVec4(Vec4(), viewport)),\r\n            uDrawingBufferSize: ValueCell.create(drawingBufferSize),\r\n            uCameraPosition: ValueCell.create(Vec3()),\r\n            uCameraDir: ValueCell.create(cameraDir),\r\n            uNear: ValueCell.create(1),\r\n            uFar: ValueCell.create(10000),\r\n            uFogNear: ValueCell.create(1),\r\n            uFogFar: ValueCell.create(10000),\r\n            uFogColor: ValueCell.create(bgColor),\r\n            uRenderWboit: ValueCell.create(false),\r\n            uMarkingDepthTest: ValueCell.create(false),\r\n            uTransparentBackground: ValueCell.create(false),\r\n            uClipObjectType: ValueCell.create(clip.objects.type),\r\n            uClipObjectInvert: ValueCell.create(clip.objects.invert),\r\n            uClipObjectPosition: ValueCell.create(clip.objects.position),\r\n            uClipObjectRotation: ValueCell.create(clip.objects.rotation),\r\n            uClipObjectScale: ValueCell.create(clip.objects.scale),\r\n            // the following are general 'material' uniforms\r\n            uLightIntensity: ValueCell.create(style.lightIntensity),\r\n            uAmbientIntensity: ValueCell.create(style.ambientIntensity),\r\n            uMetalness: ValueCell.create(style.metalness),\r\n            uRoughness: ValueCell.create(style.roughness),\r\n            uReflectivity: ValueCell.create(style.reflectivity),\r\n            uPickingAlphaThreshold: ValueCell.create(p.pickingAlphaThreshold),\r\n            uInteriorDarkening: ValueCell.create(p.interiorDarkening),\r\n            uInteriorColorFlag: ValueCell.create(p.interiorColorFlag),\r\n            uInteriorColor: ValueCell.create(Color.toVec3Normalized(Vec3(), p.interiorColor)),\r\n            uHighlightColor: ValueCell.create(Color.toVec3Normalized(Vec3(), p.highlightColor)),\r\n            uSelectColor: ValueCell.create(Color.toVec3Normalized(Vec3(), p.selectColor)),\r\n            uHighlightStrength: ValueCell.create(p.highlightStrength),\r\n            uSelectStrength: ValueCell.create(p.selectStrength),\r\n            uMarkerPriority: ValueCell.create(p.markerPriority),\r\n            uXrayEdgeFalloff: ValueCell.create(p.xrayEdgeFalloff),\r\n        };\r\n        var globalUniformList = Object.entries(globalUniforms);\r\n        var globalUniformsNeedUpdate = true;\r\n        var renderObject = function (r, variant) {\r\n            if (r.state.disposed || !r.state.visible || (!r.state.pickable && variant[0] === 'p')) {\r\n                return;\r\n            }\r\n            var definesNeedUpdate = false;\r\n            if (r.state.noClip) {\r\n                if (r.values.dClipObjectCount.ref.value !== 0) {\r\n                    ValueCell.update(r.values.dClipObjectCount, 0);\r\n                    definesNeedUpdate = true;\r\n                }\r\n            }\r\n            else {\r\n                if (r.values.dClipObjectCount.ref.value !== clip.objects.count) {\r\n                    ValueCell.update(r.values.dClipObjectCount, clip.objects.count);\r\n                    definesNeedUpdate = true;\r\n                }\r\n                if (r.values.dClipVariant.ref.value !== clip.variant) {\r\n                    ValueCell.update(r.values.dClipVariant, clip.variant);\r\n                    definesNeedUpdate = true;\r\n                }\r\n            }\r\n            if (definesNeedUpdate)\r\n                r.update();\r\n            var program = r.getProgram(variant);\r\n            if (state.currentProgramId !== program.id) {\r\n                // console.log('new program')\r\n                globalUniformsNeedUpdate = true;\r\n                program.use();\r\n            }\r\n            if (globalUniformsNeedUpdate) {\r\n                // console.log('globalUniformsNeedUpdate')\r\n                program.setUniforms(globalUniformList);\r\n                globalUniformsNeedUpdate = false;\r\n            }\r\n            if (r.values.dRenderMode) { // indicates direct-volume\r\n                // culling done in fragment shader\r\n                state.disable(gl.CULL_FACE);\r\n                state.frontFace(gl.CCW);\r\n                if (variant === 'colorBlended') {\r\n                    // depth test done manually in shader against `depthTexture`\r\n                    // still need to enable when fragDepth can be used to write depth\r\n                    if (r.values.dRenderMode.ref.value === 'volume' || !fragDepth) {\r\n                        state.disable(gl.DEPTH_TEST);\r\n                        state.depthMask(false);\r\n                    }\r\n                    else {\r\n                        state.enable(gl.DEPTH_TEST);\r\n                        state.depthMask(r.values.uAlpha.ref.value === 1.0);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (r.values.dDoubleSided) {\r\n                    if (r.values.dDoubleSided.ref.value || r.values.hasReflection.ref.value) {\r\n                        state.disable(gl.CULL_FACE);\r\n                    }\r\n                    else {\r\n                        state.enable(gl.CULL_FACE);\r\n                    }\r\n                }\r\n                else {\r\n                    // webgl default\r\n                    state.disable(gl.CULL_FACE);\r\n                }\r\n                if (r.values.dFlipSided) {\r\n                    if (r.values.dFlipSided.ref.value) {\r\n                        state.frontFace(gl.CW);\r\n                        state.cullFace(gl.FRONT);\r\n                    }\r\n                    else {\r\n                        state.frontFace(gl.CCW);\r\n                        state.cullFace(gl.BACK);\r\n                    }\r\n                }\r\n                else {\r\n                    // webgl default\r\n                    state.frontFace(gl.CCW);\r\n                    state.cullFace(gl.BACK);\r\n                }\r\n            }\r\n            r.render(variant, sharedTexturesList);\r\n        };\r\n        var update = function (camera) {\r\n            ValueCell.update(globalUniforms.uView, camera.view);\r\n            ValueCell.update(globalUniforms.uInvView, Mat4.invert(invView, camera.view));\r\n            ValueCell.update(globalUniforms.uProjection, camera.projection);\r\n            ValueCell.update(globalUniforms.uInvProjection, Mat4.invert(invProjection, camera.projection));\r\n            ValueCell.updateIfChanged(globalUniforms.uIsOrtho, camera.state.mode === 'orthographic' ? 1 : 0);\r\n            ValueCell.update(globalUniforms.uViewOffset, camera.viewOffset.enabled ? Vec2.set(viewOffset, camera.viewOffset.offsetX * 16, camera.viewOffset.offsetY * 16) : Vec2.set(viewOffset, 0, 0));\r\n            ValueCell.update(globalUniforms.uCameraPosition, camera.state.position);\r\n            ValueCell.update(globalUniforms.uCameraDir, Vec3.normalize(cameraDir, Vec3.sub(cameraDir, camera.state.target, camera.state.position)));\r\n            ValueCell.updateIfChanged(globalUniforms.uFar, camera.far);\r\n            ValueCell.updateIfChanged(globalUniforms.uNear, camera.near);\r\n            ValueCell.updateIfChanged(globalUniforms.uFogFar, camera.fogFar);\r\n            ValueCell.updateIfChanged(globalUniforms.uFogNear, camera.fogNear);\r\n            ValueCell.updateIfChanged(globalUniforms.uTransparentBackground, transparentBackground);\r\n        };\r\n        var updateInternal = function (group, camera, depthTexture, renderWboit, markingDepthTest) {\r\n            arrayMapUpsert(sharedTexturesList, 'tDepth', depthTexture || nullDepthTexture);\r\n            ValueCell.update(globalUniforms.uModel, group.view);\r\n            ValueCell.update(globalUniforms.uModelView, Mat4.mul(modelView, group.view, camera.view));\r\n            ValueCell.update(globalUniforms.uInvModelView, Mat4.invert(invModelView, modelView));\r\n            ValueCell.update(globalUniforms.uModelViewProjection, Mat4.mul(modelViewProjection, modelView, camera.projection));\r\n            ValueCell.update(globalUniforms.uInvModelViewProjection, Mat4.invert(invModelViewProjection, modelViewProjection));\r\n            ValueCell.updateIfChanged(globalUniforms.uRenderWboit, renderWboit);\r\n            ValueCell.updateIfChanged(globalUniforms.uMarkingDepthTest, markingDepthTest);\r\n            state.enable(gl.SCISSOR_TEST);\r\n            state.colorMask(true, true, true, true);\r\n            var x = viewport.x, y = viewport.y, width = viewport.width, height = viewport.height;\r\n            gl.viewport(x, y, width, height);\r\n            gl.scissor(x, y, width, height);\r\n            globalUniformsNeedUpdate = true;\r\n            state.currentRenderItemId = -1;\r\n        };\r\n        var renderPick = function (group, camera, variant, depthTexture) {\r\n            state.disable(gl.BLEND);\r\n            state.enable(gl.DEPTH_TEST);\r\n            state.depthMask(true);\r\n            updateInternal(group, camera, depthTexture, false, false);\r\n            var renderables = group.renderables;\r\n            for (var i = 0, il = renderables.length; i < il; ++i) {\r\n                if (!renderables[i].state.colorOnly) {\r\n                    renderObject(renderables[i], variant);\r\n                }\r\n            }\r\n        };\r\n        var renderDepth = function (group, camera, depthTexture) {\r\n            state.disable(gl.BLEND);\r\n            state.enable(gl.DEPTH_TEST);\r\n            state.depthMask(true);\r\n            updateInternal(group, camera, depthTexture, false, false);\r\n            var renderables = group.renderables;\r\n            for (var i = 0, il = renderables.length; i < il; ++i) {\r\n                renderObject(renderables[i], 'depth');\r\n            }\r\n        };\r\n        var renderMarkingDepth = function (group, camera, depthTexture) {\r\n            state.disable(gl.BLEND);\r\n            state.enable(gl.DEPTH_TEST);\r\n            state.depthMask(true);\r\n            updateInternal(group, camera, depthTexture, false, false);\r\n            var renderables = group.renderables;\r\n            for (var i = 0, il = renderables.length; i < il; ++i) {\r\n                var r = renderables[i];\r\n                if (r.values.markerAverage.ref.value !== 1) {\r\n                    renderObject(renderables[i], 'markingDepth');\r\n                }\r\n            }\r\n        };\r\n        var renderMarkingMask = function (group, camera, depthTexture) {\r\n            state.disable(gl.BLEND);\r\n            state.enable(gl.DEPTH_TEST);\r\n            state.depthMask(true);\r\n            updateInternal(group, camera, depthTexture, false, !!depthTexture);\r\n            var renderables = group.renderables;\r\n            for (var i = 0, il = renderables.length; i < il; ++i) {\r\n                var r = renderables[i];\r\n                if (r.values.markerAverage.ref.value > 0) {\r\n                    renderObject(renderables[i], 'markingMask');\r\n                }\r\n            }\r\n        };\r\n        var renderBlended = function (group, camera, depthTexture) {\r\n            renderBlendedOpaque(group, camera, depthTexture);\r\n            renderBlendedTransparent(group, camera, depthTexture);\r\n        };\r\n        var renderBlendedOpaque = function (group, camera, depthTexture) {\r\n            state.disable(gl.BLEND);\r\n            state.enable(gl.DEPTH_TEST);\r\n            state.depthMask(true);\r\n            updateInternal(group, camera, depthTexture, false, false);\r\n            var renderables = group.renderables;\r\n            for (var i = 0, il = renderables.length; i < il; ++i) {\r\n                var r = renderables[i];\r\n                if (r.state.opaque) {\r\n                    renderObject(r, 'colorBlended');\r\n                }\r\n            }\r\n        };\r\n        var renderBlendedTransparent = function (group, camera, depthTexture) {\r\n            state.enable(gl.DEPTH_TEST);\r\n            updateInternal(group, camera, depthTexture, false, false);\r\n            var renderables = group.renderables;\r\n            if (transparentBackground) {\r\n                state.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n            }\r\n            else {\r\n                state.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n            }\r\n            state.enable(gl.BLEND);\r\n            state.depthMask(true);\r\n            for (var i = 0, il = renderables.length; i < il; ++i) {\r\n                var r = renderables[i];\r\n                if (!r.state.opaque && r.state.writeDepth) {\r\n                    renderObject(r, 'colorBlended');\r\n                }\r\n            }\r\n            state.depthMask(false);\r\n            for (var i = 0, il = renderables.length; i < il; ++i) {\r\n                var r = renderables[i];\r\n                if (!r.state.opaque && !r.state.writeDepth) {\r\n                    renderObject(r, 'colorBlended');\r\n                }\r\n            }\r\n        };\r\n        var renderBlendedVolumeOpaque = function (group, camera, depthTexture) {\r\n            var _a;\r\n            state.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n            state.enable(gl.BLEND);\r\n            updateInternal(group, camera, depthTexture, false, false);\r\n            var renderables = group.renderables;\r\n            for (var i = 0, il = renderables.length; i < il; ++i) {\r\n                var r = renderables[i];\r\n                // TODO: simplify, handle in renderable.state???\r\n                // uAlpha is updated in \"render\" so we need to recompute it here\r\n                var alpha = clamp(r.values.alpha.ref.value * r.state.alphaFactor, 0, 1);\r\n                if (alpha === 1 && r.values.transparencyAverage.ref.value !== 1 && !((_a = r.values.dXrayShaded) === null || _a === void 0 ? void 0 : _a.ref.value)) {\r\n                    renderObject(r, 'colorBlended');\r\n                }\r\n            }\r\n        };\r\n        var renderBlendedVolumeTransparent = function (group, camera, depthTexture) {\r\n            var _a;\r\n            state.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n            state.enable(gl.BLEND);\r\n            updateInternal(group, camera, depthTexture, false, false);\r\n            var renderables = group.renderables;\r\n            for (var i = 0, il = renderables.length; i < il; ++i) {\r\n                var r = renderables[i];\r\n                // TODO: simplify, handle in renderable.state???\r\n                // uAlpha is updated in \"render\" so we need to recompute it here\r\n                var alpha = clamp(r.values.alpha.ref.value * r.state.alphaFactor, 0, 1);\r\n                if (alpha < 1 || r.values.transparencyAverage.ref.value > 0 || ((_a = r.values.dXrayShaded) === null || _a === void 0 ? void 0 : _a.ref.value)) {\r\n                    renderObject(r, 'colorBlended');\r\n                }\r\n            }\r\n        };\r\n        var renderWboitOpaque = function (group, camera, depthTexture) {\r\n            var _a, _b, _c;\r\n            state.disable(gl.BLEND);\r\n            state.enable(gl.DEPTH_TEST);\r\n            state.depthMask(true);\r\n            updateInternal(group, camera, depthTexture, false, false);\r\n            var renderables = group.renderables;\r\n            for (var i = 0, il = renderables.length; i < il; ++i) {\r\n                var r = renderables[i];\r\n                // TODO: simplify, handle in renderable.state???\r\n                // uAlpha is updated in \"render\" so we need to recompute it here\r\n                var alpha = clamp(r.values.alpha.ref.value * r.state.alphaFactor, 0, 1);\r\n                if (alpha === 1 && r.values.transparencyAverage.ref.value !== 1 && ((_a = r.values.dRenderMode) === null || _a === void 0 ? void 0 : _a.ref.value) !== 'volume' && ((_b = r.values.dPointStyle) === null || _b === void 0 ? void 0 : _b.ref.value) !== 'fuzzy' && !((_c = r.values.dXrayShaded) === null || _c === void 0 ? void 0 : _c.ref.value)) {\r\n                    renderObject(r, 'colorWboit');\r\n                }\r\n            }\r\n        };\r\n        var renderWboitTransparent = function (group, camera, depthTexture) {\r\n            var _a, _b, _c;\r\n            updateInternal(group, camera, depthTexture, true, false);\r\n            var renderables = group.renderables;\r\n            for (var i = 0, il = renderables.length; i < il; ++i) {\r\n                var r = renderables[i];\r\n                // TODO: simplify, handle in renderable.state???\r\n                // uAlpha is updated in \"render\" so we need to recompute it here\r\n                var alpha = clamp(r.values.alpha.ref.value * r.state.alphaFactor, 0, 1);\r\n                if (alpha < 1 || r.values.transparencyAverage.ref.value > 0 || ((_a = r.values.dRenderMode) === null || _a === void 0 ? void 0 : _a.ref.value) === 'volume' || ((_b = r.values.dPointStyle) === null || _b === void 0 ? void 0 : _b.ref.value) === 'fuzzy' || !!r.values.uBackgroundColor || ((_c = r.values.dXrayShaded) === null || _c === void 0 ? void 0 : _c.ref.value)) {\r\n                    renderObject(r, 'colorWboit');\r\n                }\r\n            }\r\n        };\r\n        return {\r\n            clear: function (toBackgroundColor) {\r\n                state.enable(gl.SCISSOR_TEST);\r\n                state.enable(gl.DEPTH_TEST);\r\n                state.colorMask(true, true, true, true);\r\n                state.depthMask(true);\r\n                if (transparentBackground) {\r\n                    state.clearColor(0, 0, 0, 0);\r\n                }\r\n                else if (toBackgroundColor) {\r\n                    state.clearColor(bgColor[0], bgColor[1], bgColor[2], 1);\r\n                }\r\n                else {\r\n                    state.clearColor(1, 1, 1, 1);\r\n                }\r\n                gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n            },\r\n            clearDepth: function () {\r\n                state.enable(gl.SCISSOR_TEST);\r\n                state.enable(gl.DEPTH_TEST);\r\n                state.depthMask(true);\r\n                gl.clear(gl.DEPTH_BUFFER_BIT);\r\n            },\r\n            update: update,\r\n            renderPick: renderPick,\r\n            renderDepth: renderDepth,\r\n            renderMarkingDepth: renderMarkingDepth,\r\n            renderMarkingMask: renderMarkingMask,\r\n            renderBlended: renderBlended,\r\n            renderBlendedOpaque: renderBlendedOpaque,\r\n            renderBlendedTransparent: renderBlendedTransparent,\r\n            renderBlendedVolumeOpaque: renderBlendedVolumeOpaque,\r\n            renderBlendedVolumeTransparent: renderBlendedVolumeTransparent,\r\n            renderWboitOpaque: renderWboitOpaque,\r\n            renderWboitTransparent: renderWboitTransparent,\r\n            setProps: function (props) {\r\n                if (props.backgroundColor !== undefined && props.backgroundColor !== p.backgroundColor) {\r\n                    p.backgroundColor = props.backgroundColor;\r\n                    Color.toVec3Normalized(bgColor, p.backgroundColor);\r\n                    ValueCell.update(globalUniforms.uFogColor, Vec3.copy(globalUniforms.uFogColor.ref.value, bgColor));\r\n                }\r\n                if (props.pickingAlphaThreshold !== undefined && props.pickingAlphaThreshold !== p.pickingAlphaThreshold) {\r\n                    p.pickingAlphaThreshold = props.pickingAlphaThreshold;\r\n                    ValueCell.update(globalUniforms.uPickingAlphaThreshold, p.pickingAlphaThreshold);\r\n                }\r\n                if (props.interiorDarkening !== undefined && props.interiorDarkening !== p.interiorDarkening) {\r\n                    p.interiorDarkening = props.interiorDarkening;\r\n                    ValueCell.update(globalUniforms.uInteriorDarkening, p.interiorDarkening);\r\n                }\r\n                if (props.interiorColorFlag !== undefined && props.interiorColorFlag !== p.interiorColorFlag) {\r\n                    p.interiorColorFlag = props.interiorColorFlag;\r\n                    ValueCell.update(globalUniforms.uInteriorColorFlag, p.interiorColorFlag);\r\n                }\r\n                if (props.interiorColor !== undefined && props.interiorColor !== p.interiorColor) {\r\n                    p.interiorColor = props.interiorColor;\r\n                    ValueCell.update(globalUniforms.uInteriorColor, Color.toVec3Normalized(globalUniforms.uInteriorColor.ref.value, p.interiorColor));\r\n                }\r\n                if (props.highlightColor !== undefined && props.highlightColor !== p.highlightColor) {\r\n                    p.highlightColor = props.highlightColor;\r\n                    ValueCell.update(globalUniforms.uHighlightColor, Color.toVec3Normalized(globalUniforms.uHighlightColor.ref.value, p.highlightColor));\r\n                }\r\n                if (props.selectColor !== undefined && props.selectColor !== p.selectColor) {\r\n                    p.selectColor = props.selectColor;\r\n                    ValueCell.update(globalUniforms.uSelectColor, Color.toVec3Normalized(globalUniforms.uSelectColor.ref.value, p.selectColor));\r\n                }\r\n                if (props.highlightStrength !== undefined && props.highlightStrength !== p.highlightStrength) {\r\n                    p.highlightStrength = props.highlightStrength;\r\n                    ValueCell.update(globalUniforms.uHighlightStrength, p.highlightStrength);\r\n                }\r\n                if (props.selectStrength !== undefined && props.selectStrength !== p.selectStrength) {\r\n                    p.selectStrength = props.selectStrength;\r\n                    ValueCell.update(globalUniforms.uSelectStrength, p.selectStrength);\r\n                }\r\n                if (props.markerPriority !== undefined && props.markerPriority !== p.markerPriority) {\r\n                    p.markerPriority = props.markerPriority;\r\n                    ValueCell.update(globalUniforms.uMarkerPriority, p.markerPriority);\r\n                }\r\n                if (props.xrayEdgeFalloff !== undefined && props.xrayEdgeFalloff !== p.xrayEdgeFalloff) {\r\n                    p.xrayEdgeFalloff = props.xrayEdgeFalloff;\r\n                    ValueCell.update(globalUniforms.uXrayEdgeFalloff, p.xrayEdgeFalloff);\r\n                }\r\n                if (props.style !== undefined) {\r\n                    p.style = props.style;\r\n                    Object.assign(style, getStyle(props.style));\r\n                    ValueCell.updateIfChanged(globalUniforms.uLightIntensity, style.lightIntensity);\r\n                    ValueCell.updateIfChanged(globalUniforms.uAmbientIntensity, style.ambientIntensity);\r\n                    ValueCell.updateIfChanged(globalUniforms.uMetalness, style.metalness);\r\n                    ValueCell.updateIfChanged(globalUniforms.uRoughness, style.roughness);\r\n                    ValueCell.updateIfChanged(globalUniforms.uReflectivity, style.reflectivity);\r\n                }\r\n                if (props.clip !== undefined && !deepEqual(props.clip, p.clip)) {\r\n                    p.clip = props.clip;\r\n                    Object.assign(clip, getClip(props.clip, clip));\r\n                    ValueCell.update(globalUniforms.uClipObjectPosition, clip.objects.position);\r\n                    ValueCell.update(globalUniforms.uClipObjectRotation, clip.objects.rotation);\r\n                    ValueCell.update(globalUniforms.uClipObjectScale, clip.objects.scale);\r\n                    ValueCell.update(globalUniforms.uClipObjectType, clip.objects.type);\r\n                }\r\n            },\r\n            setViewport: function (x, y, width, height) {\r\n                gl.viewport(x, y, width, height);\r\n                gl.scissor(x, y, width, height);\r\n                if (x !== viewport.x || y !== viewport.y || width !== viewport.width || height !== viewport.height) {\r\n                    Viewport.set(viewport, x, y, width, height);\r\n                    ValueCell.update(globalUniforms.uViewport, Vec4.set(globalUniforms.uViewport.ref.value, x, y, width, height));\r\n                }\r\n            },\r\n            setTransparentBackground: function (value) {\r\n                transparentBackground = value;\r\n            },\r\n            setDrawingBufferSize: function (width, height) {\r\n                if (width !== drawingBufferSize[0] || height !== drawingBufferSize[1]) {\r\n                    ValueCell.update(globalUniforms.uDrawingBufferSize, Vec2.set(drawingBufferSize, width, height));\r\n                }\r\n            },\r\n            setPixelRatio: function (value) {\r\n                ValueCell.update(globalUniforms.uPixelRatio, value);\r\n            },\r\n            props: p,\r\n            get stats() {\r\n                return {\r\n                    programCount: ctx.stats.resourceCounts.program,\r\n                    shaderCount: ctx.stats.resourceCounts.shader,\r\n                    attributeCount: ctx.stats.resourceCounts.attribute,\r\n                    elementsCount: ctx.stats.resourceCounts.elements,\r\n                    framebufferCount: ctx.stats.resourceCounts.framebuffer,\r\n                    renderbufferCount: ctx.stats.resourceCounts.renderbuffer,\r\n                    textureCount: ctx.stats.resourceCounts.texture,\r\n                    vertexArrayCount: ctx.stats.resourceCounts.vertexArray,\r\n                    drawCount: stats.drawCount,\r\n                    instanceCount: stats.instanceCount,\r\n                    instancedDrawCount: stats.instancedDrawCount,\r\n                };\r\n            },\r\n            dispose: function () {\r\n                // TODO\r\n            }\r\n        };\r\n    }\r\n    Renderer.create = create;\r\n})(Renderer || (Renderer = {}));\r\nexport { Renderer };\r\n//# sourceMappingURL=renderer.js.map"]},"metadata":{},"sourceType":"module"}