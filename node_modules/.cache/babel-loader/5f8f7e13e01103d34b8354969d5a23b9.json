{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { Sphere3D } from '../../mol-math/geometry';\nimport { Vec3, Mat4 } from '../../mol-math/linear-algebra';\nimport { BoundaryHelper } from '../../mol-math/geometry/boundary-helper';\nexport function calculateTextureInfo(n, itemSize) {\n  n = Math.max(n, 2); // observed issues with 1 pixel textures\n\n  var sqN = Math.sqrt(n);\n  var width = Math.ceil(sqN);\n  width = width + (itemSize - width % itemSize) % itemSize;\n  var height = width > 0 ? Math.ceil(n / width) : 0;\n  return {\n    width: width,\n    height: height,\n    length: width * height * itemSize\n  };\n}\nexport function createTextureImage(n, itemSize, arrayCtor, array) {\n  var _a = calculateTextureInfo(n, itemSize),\n      length = _a.length,\n      width = _a.width,\n      height = _a.height;\n\n  array = array && array.length >= length ? array : new arrayCtor(length);\n  return {\n    array: array,\n    width: width,\n    height: height\n  };\n}\nvar DefaultPrintImageOptions = {\n  scale: 1,\n  pixelated: false,\n  id: 'molstar.debug.image'\n};\nexport function printTextureImage(textureImage, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var array = textureImage.array,\n      width = textureImage.width,\n      height = textureImage.height;\n  var itemSize = array.length / (width * height);\n  var data = new Uint8ClampedArray(width * height * 4);\n\n  if (itemSize === 1) {\n    for (var y = 0; y < height; ++y) {\n      for (var x = 0; x < width; ++x) {\n        data[(y * width + x) * 4 + 3] = array[y * width + x];\n      }\n    }\n  } else if (itemSize === 4) {\n    data.set(array);\n  } else {\n    console.warn(\"itemSize '\" + itemSize + \"' not supported\");\n  }\n\n  return printImageData(new ImageData(data, width, height), options);\n}\nvar tmpCanvas;\nvar tmpCanvasCtx;\nvar tmpContainer;\nexport function printImageData(imageData, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var o = __assign(__assign({}, DefaultPrintImageOptions), options);\n\n  var canvas = tmpCanvas || document.createElement('canvas');\n  tmpCanvas = canvas;\n  canvas.width = imageData.width;\n  canvas.height = imageData.height;\n  var ctx = tmpCanvasCtx || canvas.getContext('2d');\n  tmpCanvasCtx = ctx;\n  if (!ctx) throw new Error('Could not create canvas 2d context');\n  ctx.putImageData(imageData, 0, 0);\n\n  if (!tmpContainer) {\n    tmpContainer = document.createElement('div');\n    tmpContainer.style.position = 'absolute';\n    tmpContainer.style.bottom = '0px';\n    tmpContainer.style.right = '0px';\n    tmpContainer.style.border = 'solid orange';\n    tmpContainer.style.pointerEvents = 'none';\n    document.body.appendChild(tmpContainer);\n  }\n\n  canvas.toBlob(function (imgBlob) {\n    var objectURL = URL.createObjectURL(imgBlob);\n    var existingImg = document.getElementById(o.id);\n    var img = existingImg || document.createElement('img');\n    img.id = o.id;\n    img.src = objectURL;\n    img.style.width = imageData.width * o.scale + 'px';\n    img.style.height = imageData.height * o.scale + 'px';\n\n    if (o.pixelated) {\n      // not supported in Firefox and IE\n      img.style.imageRendering = 'pixelated';\n    }\n\n    img.style.position = 'relative';\n    img.style.border = 'solid grey';\n    img.style.pointerEvents = 'none';\n    if (!existingImg) tmpContainer.appendChild(img);\n  }, 'image/png');\n} //\n\nvar v = Vec3();\nvar boundaryHelperCoarse = new BoundaryHelper('14');\nvar boundaryHelperFine = new BoundaryHelper('98');\n\nfunction getHelper(count) {\n  return count > 100000 ? boundaryHelperCoarse : boundaryHelperFine;\n}\n\nexport function calculateInvariantBoundingSphere(position, positionCount, stepFactor) {\n  var step = stepFactor * 3;\n  var boundaryHelper = getHelper(positionCount);\n  boundaryHelper.reset();\n\n  for (var i = 0, _i = positionCount * 3; i < _i; i += step) {\n    Vec3.fromArray(v, position, i);\n    boundaryHelper.includePosition(v);\n  }\n\n  boundaryHelper.finishedIncludeStep();\n\n  for (var i = 0, _i = positionCount * 3; i < _i; i += step) {\n    Vec3.fromArray(v, position, i);\n    boundaryHelper.radiusPosition(v);\n  }\n\n  var sphere = boundaryHelper.getSphere();\n\n  if (positionCount <= 98) {\n    var extrema = [];\n\n    for (var i = 0, _i = positionCount * 3; i < _i; i += step) {\n      extrema.push(Vec3.fromArray(Vec3(), position, i));\n    }\n\n    Sphere3D.setExtrema(sphere, extrema);\n  }\n\n  return sphere;\n}\n\nvar _mat4 = Mat4();\n\nexport function calculateTransformBoundingSphere(invariantBoundingSphere, transform, transformCount) {\n  if (transformCount === 1) {\n    Mat4.fromArray(_mat4, transform, 0);\n    var s = Sphere3D.clone(invariantBoundingSphere);\n    return Mat4.isIdentity(_mat4) ? s : Sphere3D.transform(s, s, _mat4);\n  }\n\n  var boundaryHelper = getHelper(transformCount);\n  boundaryHelper.reset();\n  var center = invariantBoundingSphere.center,\n      radius = invariantBoundingSphere.radius,\n      extrema = invariantBoundingSphere.extrema; // only use extrema if there are not too many transforms\n\n  if (extrema && transformCount < 50) {\n    for (var i = 0, _i = transformCount; i < _i; ++i) {\n      for (var _a = 0, extrema_1 = extrema; _a < extrema_1.length; _a++) {\n        var e = extrema_1[_a];\n        Vec3.transformMat4Offset(v, e, transform, 0, 0, i * 16);\n        boundaryHelper.includePosition(v);\n      }\n    }\n\n    boundaryHelper.finishedIncludeStep();\n\n    for (var i = 0, _i = transformCount; i < _i; ++i) {\n      for (var _b = 0, extrema_2 = extrema; _b < extrema_2.length; _b++) {\n        var e = extrema_2[_b];\n        Vec3.transformMat4Offset(v, e, transform, 0, 0, i * 16);\n        boundaryHelper.radiusPosition(v);\n      }\n    }\n  } else {\n    for (var i = 0, _i = transformCount; i < _i; ++i) {\n      Vec3.transformMat4Offset(v, center, transform, 0, 0, i * 16);\n      boundaryHelper.includePositionRadius(v, radius);\n    }\n\n    boundaryHelper.finishedIncludeStep();\n\n    for (var i = 0, _i = transformCount; i < _i; ++i) {\n      Vec3.transformMat4Offset(v, center, transform, 0, 0, i * 16);\n      boundaryHelper.radiusPositionRadius(v, radius);\n    }\n  }\n\n  return boundaryHelper.getSphere();\n}\nexport function calculateBoundingSphere(position, positionCount, transform, transformCount, padding, stepFactor) {\n  if (padding === void 0) {\n    padding = 0;\n  }\n\n  if (stepFactor === void 0) {\n    stepFactor = 1;\n  }\n\n  var invariantBoundingSphere = calculateInvariantBoundingSphere(position, positionCount, stepFactor);\n  var boundingSphere = calculateTransformBoundingSphere(invariantBoundingSphere, transform, transformCount);\n  Sphere3D.expand(boundingSphere, boundingSphere, padding);\n  Sphere3D.expand(invariantBoundingSphere, invariantBoundingSphere, padding);\n  return {\n    boundingSphere: boundingSphere,\n    invariantBoundingSphere: invariantBoundingSphere\n  };\n}","map":{"version":3,"sources":["../../../src/mol-gl/renderable/util.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { Sphere3D } from '../../mol-math/geometry';\r\nimport { Vec3, Mat4 } from '../../mol-math/linear-algebra';\r\nimport { BoundaryHelper } from '../../mol-math/geometry/boundary-helper';\r\nexport function calculateTextureInfo(n, itemSize) {\r\n    n = Math.max(n, 2); // observed issues with 1 pixel textures\r\n    var sqN = Math.sqrt(n);\r\n    var width = Math.ceil(sqN);\r\n    width = width + (itemSize - (width % itemSize)) % itemSize;\r\n    var height = width > 0 ? Math.ceil(n / width) : 0;\r\n    return { width: width, height: height, length: width * height * itemSize };\r\n}\r\nexport function createTextureImage(n, itemSize, arrayCtor, array) {\r\n    var _a = calculateTextureInfo(n, itemSize), length = _a.length, width = _a.width, height = _a.height;\r\n    array = array && array.length >= length ? array : new arrayCtor(length);\r\n    return { array: array, width: width, height: height };\r\n}\r\nvar DefaultPrintImageOptions = {\r\n    scale: 1,\r\n    pixelated: false,\r\n    id: 'molstar.debug.image'\r\n};\r\nexport function printTextureImage(textureImage, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var array = textureImage.array, width = textureImage.width, height = textureImage.height;\r\n    var itemSize = array.length / (width * height);\r\n    var data = new Uint8ClampedArray(width * height * 4);\r\n    if (itemSize === 1) {\r\n        for (var y = 0; y < height; ++y) {\r\n            for (var x = 0; x < width; ++x) {\r\n                data[(y * width + x) * 4 + 3] = array[y * width + x];\r\n            }\r\n        }\r\n    }\r\n    else if (itemSize === 4) {\r\n        data.set(array);\r\n    }\r\n    else {\r\n        console.warn(\"itemSize '\" + itemSize + \"' not supported\");\r\n    }\r\n    return printImageData(new ImageData(data, width, height), options);\r\n}\r\nvar tmpCanvas;\r\nvar tmpCanvasCtx;\r\nvar tmpContainer;\r\nexport function printImageData(imageData, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var o = __assign(__assign({}, DefaultPrintImageOptions), options);\r\n    var canvas = tmpCanvas || document.createElement('canvas');\r\n    tmpCanvas = canvas;\r\n    canvas.width = imageData.width;\r\n    canvas.height = imageData.height;\r\n    var ctx = tmpCanvasCtx || canvas.getContext('2d');\r\n    tmpCanvasCtx = ctx;\r\n    if (!ctx)\r\n        throw new Error('Could not create canvas 2d context');\r\n    ctx.putImageData(imageData, 0, 0);\r\n    if (!tmpContainer) {\r\n        tmpContainer = document.createElement('div');\r\n        tmpContainer.style.position = 'absolute';\r\n        tmpContainer.style.bottom = '0px';\r\n        tmpContainer.style.right = '0px';\r\n        tmpContainer.style.border = 'solid orange';\r\n        tmpContainer.style.pointerEvents = 'none';\r\n        document.body.appendChild(tmpContainer);\r\n    }\r\n    canvas.toBlob(function (imgBlob) {\r\n        var objectURL = URL.createObjectURL(imgBlob);\r\n        var existingImg = document.getElementById(o.id);\r\n        var img = existingImg || document.createElement('img');\r\n        img.id = o.id;\r\n        img.src = objectURL;\r\n        img.style.width = imageData.width * o.scale + 'px';\r\n        img.style.height = imageData.height * o.scale + 'px';\r\n        if (o.pixelated) {\r\n            // not supported in Firefox and IE\r\n            img.style.imageRendering = 'pixelated';\r\n        }\r\n        img.style.position = 'relative';\r\n        img.style.border = 'solid grey';\r\n        img.style.pointerEvents = 'none';\r\n        if (!existingImg)\r\n            tmpContainer.appendChild(img);\r\n    }, 'image/png');\r\n}\r\n//\r\nvar v = Vec3();\r\nvar boundaryHelperCoarse = new BoundaryHelper('14');\r\nvar boundaryHelperFine = new BoundaryHelper('98');\r\nfunction getHelper(count) {\r\n    return count > 100000 ? boundaryHelperCoarse : boundaryHelperFine;\r\n}\r\nexport function calculateInvariantBoundingSphere(position, positionCount, stepFactor) {\r\n    var step = stepFactor * 3;\r\n    var boundaryHelper = getHelper(positionCount);\r\n    boundaryHelper.reset();\r\n    for (var i = 0, _i = positionCount * 3; i < _i; i += step) {\r\n        Vec3.fromArray(v, position, i);\r\n        boundaryHelper.includePosition(v);\r\n    }\r\n    boundaryHelper.finishedIncludeStep();\r\n    for (var i = 0, _i = positionCount * 3; i < _i; i += step) {\r\n        Vec3.fromArray(v, position, i);\r\n        boundaryHelper.radiusPosition(v);\r\n    }\r\n    var sphere = boundaryHelper.getSphere();\r\n    if (positionCount <= 98) {\r\n        var extrema = [];\r\n        for (var i = 0, _i = positionCount * 3; i < _i; i += step) {\r\n            extrema.push(Vec3.fromArray(Vec3(), position, i));\r\n        }\r\n        Sphere3D.setExtrema(sphere, extrema);\r\n    }\r\n    return sphere;\r\n}\r\nvar _mat4 = Mat4();\r\nexport function calculateTransformBoundingSphere(invariantBoundingSphere, transform, transformCount) {\r\n    if (transformCount === 1) {\r\n        Mat4.fromArray(_mat4, transform, 0);\r\n        var s = Sphere3D.clone(invariantBoundingSphere);\r\n        return Mat4.isIdentity(_mat4) ? s : Sphere3D.transform(s, s, _mat4);\r\n    }\r\n    var boundaryHelper = getHelper(transformCount);\r\n    boundaryHelper.reset();\r\n    var center = invariantBoundingSphere.center, radius = invariantBoundingSphere.radius, extrema = invariantBoundingSphere.extrema;\r\n    // only use extrema if there are not too many transforms\r\n    if (extrema && transformCount < 50) {\r\n        for (var i = 0, _i = transformCount; i < _i; ++i) {\r\n            for (var _a = 0, extrema_1 = extrema; _a < extrema_1.length; _a++) {\r\n                var e = extrema_1[_a];\r\n                Vec3.transformMat4Offset(v, e, transform, 0, 0, i * 16);\r\n                boundaryHelper.includePosition(v);\r\n            }\r\n        }\r\n        boundaryHelper.finishedIncludeStep();\r\n        for (var i = 0, _i = transformCount; i < _i; ++i) {\r\n            for (var _b = 0, extrema_2 = extrema; _b < extrema_2.length; _b++) {\r\n                var e = extrema_2[_b];\r\n                Vec3.transformMat4Offset(v, e, transform, 0, 0, i * 16);\r\n                boundaryHelper.radiusPosition(v);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (var i = 0, _i = transformCount; i < _i; ++i) {\r\n            Vec3.transformMat4Offset(v, center, transform, 0, 0, i * 16);\r\n            boundaryHelper.includePositionRadius(v, radius);\r\n        }\r\n        boundaryHelper.finishedIncludeStep();\r\n        for (var i = 0, _i = transformCount; i < _i; ++i) {\r\n            Vec3.transformMat4Offset(v, center, transform, 0, 0, i * 16);\r\n            boundaryHelper.radiusPositionRadius(v, radius);\r\n        }\r\n    }\r\n    return boundaryHelper.getSphere();\r\n}\r\nexport function calculateBoundingSphere(position, positionCount, transform, transformCount, padding, stepFactor) {\r\n    if (padding === void 0) { padding = 0; }\r\n    if (stepFactor === void 0) { stepFactor = 1; }\r\n    var invariantBoundingSphere = calculateInvariantBoundingSphere(position, positionCount, stepFactor);\r\n    var boundingSphere = calculateTransformBoundingSphere(invariantBoundingSphere, transform, transformCount);\r\n    Sphere3D.expand(boundingSphere, boundingSphere, padding);\r\n    Sphere3D.expand(invariantBoundingSphere, invariantBoundingSphere, padding);\r\n    return { boundingSphere: boundingSphere, invariantBoundingSphere: invariantBoundingSphere };\r\n}\r\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}