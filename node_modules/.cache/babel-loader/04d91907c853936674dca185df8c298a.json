{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { StructureElement, Bond } from '../../../mol-model/structure';\nimport { Mesh } from '../../../mol-geo/geometry/mesh/mesh';\nimport { Vec3 } from '../../../mol-math/linear-algebra';\nimport { BitFlags, arrayEqual } from '../../../mol-util';\nimport { createLinkCylinderImpostors, createLinkCylinderMesh } from './util/link';\nimport { ComplexMeshParams, ComplexMeshVisual, ComplexCylindersParams, ComplexCylindersVisual } from '../complex-visual';\nimport { BondType } from '../../../mol-model/structure/model/types';\nimport { BondCylinderParams, BondIterator, getInterBondLoci, eachInterBond, makeInterBondIgnoreTest } from './util/bond';\nimport { Sphere3D } from '../../../mol-math/geometry';\nimport { Cylinders } from '../../../mol-geo/geometry/cylinders/cylinders';\nimport { SortedArray } from '../../../mol-data/int/sorted-array';\nvar tmpRefPosBondIt = new Bond.ElementBondIterator();\n\nfunction setRefPosition(pos, structure, unit, index) {\n  tmpRefPosBondIt.setElement(structure, unit, index);\n\n  while (tmpRefPosBondIt.hasNext) {\n    var bA = tmpRefPosBondIt.move();\n    bA.otherUnit.conformation.position(bA.otherUnit.elements[bA.otherIndex], pos);\n    return pos;\n  }\n\n  return null;\n}\n\nvar tmpRef = Vec3();\n\nfunction getInterUnitBondCylinderBuilderProps(structure, theme, props) {\n  var locE = StructureElement.Location.create(structure);\n  var locB = Bond.Location(structure, undefined, undefined, structure, undefined, undefined);\n  var bonds = structure.interUnitBonds;\n  var edgeCount = bonds.edgeCount,\n      edges = bonds.edges;\n  var sizeFactor = props.sizeFactor,\n      sizeAspectRatio = props.sizeAspectRatio,\n      adjustCylinderLength = props.adjustCylinderLength,\n      aromaticBonds = props.aromaticBonds,\n      multipleBonds = props.multipleBonds;\n  var mbOff = multipleBonds === 'off';\n  var mbSymmetric = multipleBonds === 'symmetric';\n  var delta = Vec3();\n  var stub;\n  var child = structure.child;\n\n  if (props.includeParent && child) {\n    stub = function (edgeIndex) {\n      var b = edges[edgeIndex];\n      var childUnitA = child.unitMap.get(b.unitA);\n      var childUnitB = child.unitMap.get(b.unitB);\n      var unitA = structure.unitMap.get(b.unitA);\n      var eA = unitA.elements[b.indexA];\n      var unitB = structure.unitMap.get(b.unitB);\n      var eB = unitB.elements[b.indexB];\n      return childUnitA && SortedArray.has(childUnitA.elements, eA) && (!childUnitB || !SortedArray.has(childUnitB.elements, eB));\n    };\n  }\n\n  var radius = function (edgeIndex) {\n    var b = edges[edgeIndex];\n    locB.aUnit = structure.unitMap.get(b.unitA);\n    locB.aIndex = b.indexA;\n    locB.bUnit = structure.unitMap.get(b.unitB);\n    locB.bIndex = b.indexB;\n    return theme.size.size(locB) * sizeFactor;\n  };\n\n  var radiusA = function (edgeIndex) {\n    var b = edges[edgeIndex];\n    locE.unit = structure.unitMap.get(b.unitA);\n    locE.element = locE.unit.elements[b.indexA];\n    return theme.size.size(locE) * sizeFactor;\n  };\n\n  var radiusB = function (edgeIndex) {\n    var b = edges[edgeIndex];\n    locE.unit = structure.unitMap.get(b.unitB);\n    locE.element = locE.unit.elements[b.indexB];\n    return theme.size.size(locE) * sizeFactor;\n  };\n\n  return {\n    linkCount: edgeCount,\n    referencePosition: function (edgeIndex) {\n      var b = edges[edgeIndex];\n      var unitA, unitB;\n      var indexA, indexB;\n\n      if (b.unitA < b.unitB) {\n        unitA = structure.unitMap.get(b.unitA);\n        unitB = structure.unitMap.get(b.unitB);\n        indexA = b.indexA;\n        indexB = b.indexB;\n      } else if (b.unitA > b.unitB) {\n        unitA = structure.unitMap.get(b.unitB);\n        unitB = structure.unitMap.get(b.unitA);\n        indexA = b.indexB;\n        indexB = b.indexA;\n      } else {\n        throw new Error('same units in createInterUnitBondCylinderMesh');\n      }\n\n      return setRefPosition(tmpRef, structure, unitA, indexA) || setRefPosition(tmpRef, structure, unitB, indexB);\n    },\n    position: function (posA, posB, edgeIndex) {\n      var b = edges[edgeIndex];\n      var uA = structure.unitMap.get(b.unitA);\n      var uB = structure.unitMap.get(b.unitB);\n      uA.conformation.position(uA.elements[b.indexA], posA);\n      uB.conformation.position(uB.elements[b.indexB], posB);\n\n      if (adjustCylinderLength) {\n        var rA = radiusA(edgeIndex),\n            rB = radiusB(edgeIndex);\n        var r = Math.min(rA, rB) * sizeAspectRatio;\n        var oA = Math.sqrt(Math.max(0, rA * rA - r * r)) - 0.05;\n        var oB = Math.sqrt(Math.max(0, rB * rB - r * r)) - 0.05;\n        if (oA <= 0.01 && oB <= 0.01) return;\n        Vec3.normalize(delta, Vec3.sub(delta, posB, posA));\n        Vec3.scaleAndAdd(posA, posA, delta, oA);\n        Vec3.scaleAndAdd(posB, posB, delta, -oB);\n      }\n    },\n    style: function (edgeIndex) {\n      var o = edges[edgeIndex].props.order;\n      var f = BitFlags.create(edges[edgeIndex].props.flag);\n\n      if (BondType.is(f, 2\n      /* MetallicCoordination */\n      ) || BondType.is(f, 4\n      /* HydrogenBond */\n      )) {\n        // show metallic coordinations and hydrogen bonds with dashed cylinders\n        return 1\n        /* Dashed */\n        ;\n      } else if (o === 3) {\n        return mbOff ? 0\n        /* Solid */\n        : mbSymmetric ? 4\n        /* Triple */\n        : 5\n        /* OffsetTriple */\n        ;\n      } else if (aromaticBonds && BondType.is(f, 16\n      /* Aromatic */\n      )) {\n        return 7\n        /* Aromatic */\n        ;\n      }\n\n      return o !== 2 || mbOff ? 0\n      /* Solid */\n      : mbSymmetric ? 2\n      /* Double */\n      : 3\n      /* OffsetDouble */\n      ;\n    },\n    radius: function (edgeIndex) {\n      return radius(edgeIndex) * sizeAspectRatio;\n    },\n    ignore: makeInterBondIgnoreTest(structure, props),\n    stub: stub\n  };\n}\n\nfunction createInterUnitBondCylinderImpostors(ctx, structure, theme, props, cylinders) {\n  if (!structure.interUnitBonds.edgeCount) return Cylinders.createEmpty(cylinders);\n  var builderProps = getInterUnitBondCylinderBuilderProps(structure, theme, props);\n  var m = createLinkCylinderImpostors(ctx, builderProps, props, cylinders);\n  var child = structure.child;\n  var sphere = Sphere3D.expand(Sphere3D(), (child !== null && child !== void 0 ? child : structure).boundary.sphere, 1 * props.sizeFactor);\n  m.setBoundingSphere(sphere);\n  return m;\n}\n\nfunction createInterUnitBondCylinderMesh(ctx, structure, theme, props, mesh) {\n  if (!structure.interUnitBonds.edgeCount) return Mesh.createEmpty(mesh);\n  var builderProps = getInterUnitBondCylinderBuilderProps(structure, theme, props);\n  var m = createLinkCylinderMesh(ctx, builderProps, props, mesh);\n  var child = structure.child;\n  var sphere = Sphere3D.expand(Sphere3D(), (child !== null && child !== void 0 ? child : structure).boundary.sphere, 1 * props.sizeFactor);\n  m.setBoundingSphere(sphere);\n  return m;\n}\n\nexport var InterUnitBondCylinderParams = __assign(__assign(__assign(__assign({}, ComplexMeshParams), ComplexCylindersParams), BondCylinderParams), {\n  sizeFactor: PD.Numeric(0.3, {\n    min: 0,\n    max: 10,\n    step: 0.01\n  }),\n  sizeAspectRatio: PD.Numeric(2 / 3, {\n    min: 0,\n    max: 3,\n    step: 0.01\n  }),\n  tryUseImpostor: PD.Boolean(true),\n  includeParent: PD.Boolean(false)\n});\nexport function InterUnitBondCylinderVisual(materialId, structure, props, webgl) {\n  return props.tryUseImpostor && webgl && webgl.extensions.fragDepth ? InterUnitBondCylinderImpostorVisual(materialId) : InterUnitBondCylinderMeshVisual(materialId);\n}\nexport function InterUnitBondCylinderImpostorVisual(materialId) {\n  return ComplexCylindersVisual({\n    defaultProps: PD.getDefaultValues(InterUnitBondCylinderParams),\n    createGeometry: createInterUnitBondCylinderImpostors,\n    createLocationIterator: BondIterator.fromStructure,\n    getLoci: getInterBondLoci,\n    eachLocation: eachInterBond,\n    setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\n      state.createGeometry = newProps.sizeAspectRatio !== currentProps.sizeAspectRatio || newProps.linkScale !== currentProps.linkScale || newProps.linkSpacing !== currentProps.linkSpacing || newProps.ignoreHydrogens !== currentProps.ignoreHydrogens || newProps.linkCap !== currentProps.linkCap || newProps.dashCount !== currentProps.dashCount || newProps.dashScale !== currentProps.dashScale || newProps.dashCap !== currentProps.dashCap || newProps.stubCap !== currentProps.stubCap || !arrayEqual(newProps.includeTypes, currentProps.includeTypes) || !arrayEqual(newProps.excludeTypes, currentProps.excludeTypes) || newProps.adjustCylinderLength !== currentProps.adjustCylinderLength || newProps.multipleBonds !== currentProps.multipleBonds;\n\n      if (newStructure.interUnitBonds !== currentStructure.interUnitBonds) {\n        state.createGeometry = true;\n        state.updateTransform = true;\n        state.updateColor = true;\n        state.updateSize = true;\n      }\n    },\n    mustRecreate: function (structure, props, webgl) {\n      return !props.tryUseImpostor || !webgl;\n    }\n  }, materialId);\n}\nexport function InterUnitBondCylinderMeshVisual(materialId) {\n  return ComplexMeshVisual({\n    defaultProps: PD.getDefaultValues(InterUnitBondCylinderParams),\n    createGeometry: createInterUnitBondCylinderMesh,\n    createLocationIterator: BondIterator.fromStructure,\n    getLoci: getInterBondLoci,\n    eachLocation: eachInterBond,\n    setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\n      state.createGeometry = newProps.sizeFactor !== currentProps.sizeFactor || newProps.sizeAspectRatio !== currentProps.sizeAspectRatio || newProps.radialSegments !== currentProps.radialSegments || newProps.linkScale !== currentProps.linkScale || newProps.linkSpacing !== currentProps.linkSpacing || newProps.ignoreHydrogens !== currentProps.ignoreHydrogens || newProps.linkCap !== currentProps.linkCap || newProps.dashCount !== currentProps.dashCount || newProps.dashScale !== currentProps.dashScale || newProps.dashCap !== currentProps.dashCap || newProps.stubCap !== currentProps.stubCap || !arrayEqual(newProps.includeTypes, currentProps.includeTypes) || !arrayEqual(newProps.excludeTypes, currentProps.excludeTypes) || newProps.adjustCylinderLength !== currentProps.adjustCylinderLength || newProps.multipleBonds !== currentProps.multipleBonds;\n\n      if (newStructure.interUnitBonds !== currentStructure.interUnitBonds) {\n        state.createGeometry = true;\n        state.updateTransform = true;\n        state.updateColor = true;\n        state.updateSize = true;\n      }\n    },\n    mustRecreate: function (structure, props, webgl) {\n      return props.tryUseImpostor && !!webgl;\n    }\n  }, materialId);\n}","map":{"version":3,"sources":["../../../../src/mol-repr/structure/visual/bond-inter-unit-cylinder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { StructureElement, Bond } from '../../../mol-model/structure';\r\nimport { Mesh } from '../../../mol-geo/geometry/mesh/mesh';\r\nimport { Vec3 } from '../../../mol-math/linear-algebra';\r\nimport { BitFlags, arrayEqual } from '../../../mol-util';\r\nimport { createLinkCylinderImpostors, createLinkCylinderMesh } from './util/link';\r\nimport { ComplexMeshParams, ComplexMeshVisual, ComplexCylindersParams, ComplexCylindersVisual } from '../complex-visual';\r\nimport { BondType } from '../../../mol-model/structure/model/types';\r\nimport { BondCylinderParams, BondIterator, getInterBondLoci, eachInterBond, makeInterBondIgnoreTest } from './util/bond';\r\nimport { Sphere3D } from '../../../mol-math/geometry';\r\nimport { Cylinders } from '../../../mol-geo/geometry/cylinders/cylinders';\r\nimport { SortedArray } from '../../../mol-data/int/sorted-array';\r\nvar tmpRefPosBondIt = new Bond.ElementBondIterator();\r\nfunction setRefPosition(pos, structure, unit, index) {\r\n    tmpRefPosBondIt.setElement(structure, unit, index);\r\n    while (tmpRefPosBondIt.hasNext) {\r\n        var bA = tmpRefPosBondIt.move();\r\n        bA.otherUnit.conformation.position(bA.otherUnit.elements[bA.otherIndex], pos);\r\n        return pos;\r\n    }\r\n    return null;\r\n}\r\nvar tmpRef = Vec3();\r\nfunction getInterUnitBondCylinderBuilderProps(structure, theme, props) {\r\n    var locE = StructureElement.Location.create(structure);\r\n    var locB = Bond.Location(structure, undefined, undefined, structure, undefined, undefined);\r\n    var bonds = structure.interUnitBonds;\r\n    var edgeCount = bonds.edgeCount, edges = bonds.edges;\r\n    var sizeFactor = props.sizeFactor, sizeAspectRatio = props.sizeAspectRatio, adjustCylinderLength = props.adjustCylinderLength, aromaticBonds = props.aromaticBonds, multipleBonds = props.multipleBonds;\r\n    var mbOff = multipleBonds === 'off';\r\n    var mbSymmetric = multipleBonds === 'symmetric';\r\n    var delta = Vec3();\r\n    var stub;\r\n    var child = structure.child;\r\n    if (props.includeParent && child) {\r\n        stub = function (edgeIndex) {\r\n            var b = edges[edgeIndex];\r\n            var childUnitA = child.unitMap.get(b.unitA);\r\n            var childUnitB = child.unitMap.get(b.unitB);\r\n            var unitA = structure.unitMap.get(b.unitA);\r\n            var eA = unitA.elements[b.indexA];\r\n            var unitB = structure.unitMap.get(b.unitB);\r\n            var eB = unitB.elements[b.indexB];\r\n            return (childUnitA && SortedArray.has(childUnitA.elements, eA) &&\r\n                (!childUnitB || !SortedArray.has(childUnitB.elements, eB)));\r\n        };\r\n    }\r\n    var radius = function (edgeIndex) {\r\n        var b = edges[edgeIndex];\r\n        locB.aUnit = structure.unitMap.get(b.unitA);\r\n        locB.aIndex = b.indexA;\r\n        locB.bUnit = structure.unitMap.get(b.unitB);\r\n        locB.bIndex = b.indexB;\r\n        return theme.size.size(locB) * sizeFactor;\r\n    };\r\n    var radiusA = function (edgeIndex) {\r\n        var b = edges[edgeIndex];\r\n        locE.unit = structure.unitMap.get(b.unitA);\r\n        locE.element = locE.unit.elements[b.indexA];\r\n        return theme.size.size(locE) * sizeFactor;\r\n    };\r\n    var radiusB = function (edgeIndex) {\r\n        var b = edges[edgeIndex];\r\n        locE.unit = structure.unitMap.get(b.unitB);\r\n        locE.element = locE.unit.elements[b.indexB];\r\n        return theme.size.size(locE) * sizeFactor;\r\n    };\r\n    return {\r\n        linkCount: edgeCount,\r\n        referencePosition: function (edgeIndex) {\r\n            var b = edges[edgeIndex];\r\n            var unitA, unitB;\r\n            var indexA, indexB;\r\n            if (b.unitA < b.unitB) {\r\n                unitA = structure.unitMap.get(b.unitA);\r\n                unitB = structure.unitMap.get(b.unitB);\r\n                indexA = b.indexA;\r\n                indexB = b.indexB;\r\n            }\r\n            else if (b.unitA > b.unitB) {\r\n                unitA = structure.unitMap.get(b.unitB);\r\n                unitB = structure.unitMap.get(b.unitA);\r\n                indexA = b.indexB;\r\n                indexB = b.indexA;\r\n            }\r\n            else {\r\n                throw new Error('same units in createInterUnitBondCylinderMesh');\r\n            }\r\n            return setRefPosition(tmpRef, structure, unitA, indexA) || setRefPosition(tmpRef, structure, unitB, indexB);\r\n        },\r\n        position: function (posA, posB, edgeIndex) {\r\n            var b = edges[edgeIndex];\r\n            var uA = structure.unitMap.get(b.unitA);\r\n            var uB = structure.unitMap.get(b.unitB);\r\n            uA.conformation.position(uA.elements[b.indexA], posA);\r\n            uB.conformation.position(uB.elements[b.indexB], posB);\r\n            if (adjustCylinderLength) {\r\n                var rA = radiusA(edgeIndex), rB = radiusB(edgeIndex);\r\n                var r = Math.min(rA, rB) * sizeAspectRatio;\r\n                var oA = Math.sqrt(Math.max(0, rA * rA - r * r)) - 0.05;\r\n                var oB = Math.sqrt(Math.max(0, rB * rB - r * r)) - 0.05;\r\n                if (oA <= 0.01 && oB <= 0.01)\r\n                    return;\r\n                Vec3.normalize(delta, Vec3.sub(delta, posB, posA));\r\n                Vec3.scaleAndAdd(posA, posA, delta, oA);\r\n                Vec3.scaleAndAdd(posB, posB, delta, -oB);\r\n            }\r\n        },\r\n        style: function (edgeIndex) {\r\n            var o = edges[edgeIndex].props.order;\r\n            var f = BitFlags.create(edges[edgeIndex].props.flag);\r\n            if (BondType.is(f, 2 /* MetallicCoordination */) || BondType.is(f, 4 /* HydrogenBond */)) {\r\n                // show metallic coordinations and hydrogen bonds with dashed cylinders\r\n                return 1 /* Dashed */;\r\n            }\r\n            else if (o === 3) {\r\n                return mbOff ? 0 /* Solid */ :\r\n                    mbSymmetric ? 4 /* Triple */ :\r\n                        5 /* OffsetTriple */;\r\n            }\r\n            else if (aromaticBonds && BondType.is(f, 16 /* Aromatic */)) {\r\n                return 7 /* Aromatic */;\r\n            }\r\n            return (o !== 2 || mbOff) ? 0 /* Solid */ :\r\n                mbSymmetric ? 2 /* Double */ :\r\n                    3 /* OffsetDouble */;\r\n        },\r\n        radius: function (edgeIndex) {\r\n            return radius(edgeIndex) * sizeAspectRatio;\r\n        },\r\n        ignore: makeInterBondIgnoreTest(structure, props),\r\n        stub: stub\r\n    };\r\n}\r\nfunction createInterUnitBondCylinderImpostors(ctx, structure, theme, props, cylinders) {\r\n    if (!structure.interUnitBonds.edgeCount)\r\n        return Cylinders.createEmpty(cylinders);\r\n    var builderProps = getInterUnitBondCylinderBuilderProps(structure, theme, props);\r\n    var m = createLinkCylinderImpostors(ctx, builderProps, props, cylinders);\r\n    var child = structure.child;\r\n    var sphere = Sphere3D.expand(Sphere3D(), (child !== null && child !== void 0 ? child : structure).boundary.sphere, 1 * props.sizeFactor);\r\n    m.setBoundingSphere(sphere);\r\n    return m;\r\n}\r\nfunction createInterUnitBondCylinderMesh(ctx, structure, theme, props, mesh) {\r\n    if (!structure.interUnitBonds.edgeCount)\r\n        return Mesh.createEmpty(mesh);\r\n    var builderProps = getInterUnitBondCylinderBuilderProps(structure, theme, props);\r\n    var m = createLinkCylinderMesh(ctx, builderProps, props, mesh);\r\n    var child = structure.child;\r\n    var sphere = Sphere3D.expand(Sphere3D(), (child !== null && child !== void 0 ? child : structure).boundary.sphere, 1 * props.sizeFactor);\r\n    m.setBoundingSphere(sphere);\r\n    return m;\r\n}\r\nexport var InterUnitBondCylinderParams = __assign(__assign(__assign(__assign({}, ComplexMeshParams), ComplexCylindersParams), BondCylinderParams), { sizeFactor: PD.Numeric(0.3, { min: 0, max: 10, step: 0.01 }), sizeAspectRatio: PD.Numeric(2 / 3, { min: 0, max: 3, step: 0.01 }), tryUseImpostor: PD.Boolean(true), includeParent: PD.Boolean(false) });\r\nexport function InterUnitBondCylinderVisual(materialId, structure, props, webgl) {\r\n    return props.tryUseImpostor && webgl && webgl.extensions.fragDepth\r\n        ? InterUnitBondCylinderImpostorVisual(materialId)\r\n        : InterUnitBondCylinderMeshVisual(materialId);\r\n}\r\nexport function InterUnitBondCylinderImpostorVisual(materialId) {\r\n    return ComplexCylindersVisual({\r\n        defaultProps: PD.getDefaultValues(InterUnitBondCylinderParams),\r\n        createGeometry: createInterUnitBondCylinderImpostors,\r\n        createLocationIterator: BondIterator.fromStructure,\r\n        getLoci: getInterBondLoci,\r\n        eachLocation: eachInterBond,\r\n        setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\r\n            state.createGeometry = (newProps.sizeAspectRatio !== currentProps.sizeAspectRatio ||\r\n                newProps.linkScale !== currentProps.linkScale ||\r\n                newProps.linkSpacing !== currentProps.linkSpacing ||\r\n                newProps.ignoreHydrogens !== currentProps.ignoreHydrogens ||\r\n                newProps.linkCap !== currentProps.linkCap ||\r\n                newProps.dashCount !== currentProps.dashCount ||\r\n                newProps.dashScale !== currentProps.dashScale ||\r\n                newProps.dashCap !== currentProps.dashCap ||\r\n                newProps.stubCap !== currentProps.stubCap ||\r\n                !arrayEqual(newProps.includeTypes, currentProps.includeTypes) ||\r\n                !arrayEqual(newProps.excludeTypes, currentProps.excludeTypes) ||\r\n                newProps.adjustCylinderLength !== currentProps.adjustCylinderLength ||\r\n                newProps.multipleBonds !== currentProps.multipleBonds);\r\n            if (newStructure.interUnitBonds !== currentStructure.interUnitBonds) {\r\n                state.createGeometry = true;\r\n                state.updateTransform = true;\r\n                state.updateColor = true;\r\n                state.updateSize = true;\r\n            }\r\n        },\r\n        mustRecreate: function (structure, props, webgl) {\r\n            return !props.tryUseImpostor || !webgl;\r\n        }\r\n    }, materialId);\r\n}\r\nexport function InterUnitBondCylinderMeshVisual(materialId) {\r\n    return ComplexMeshVisual({\r\n        defaultProps: PD.getDefaultValues(InterUnitBondCylinderParams),\r\n        createGeometry: createInterUnitBondCylinderMesh,\r\n        createLocationIterator: BondIterator.fromStructure,\r\n        getLoci: getInterBondLoci,\r\n        eachLocation: eachInterBond,\r\n        setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\r\n            state.createGeometry = (newProps.sizeFactor !== currentProps.sizeFactor ||\r\n                newProps.sizeAspectRatio !== currentProps.sizeAspectRatio ||\r\n                newProps.radialSegments !== currentProps.radialSegments ||\r\n                newProps.linkScale !== currentProps.linkScale ||\r\n                newProps.linkSpacing !== currentProps.linkSpacing ||\r\n                newProps.ignoreHydrogens !== currentProps.ignoreHydrogens ||\r\n                newProps.linkCap !== currentProps.linkCap ||\r\n                newProps.dashCount !== currentProps.dashCount ||\r\n                newProps.dashScale !== currentProps.dashScale ||\r\n                newProps.dashCap !== currentProps.dashCap ||\r\n                newProps.stubCap !== currentProps.stubCap ||\r\n                !arrayEqual(newProps.includeTypes, currentProps.includeTypes) ||\r\n                !arrayEqual(newProps.excludeTypes, currentProps.excludeTypes) ||\r\n                newProps.adjustCylinderLength !== currentProps.adjustCylinderLength ||\r\n                newProps.multipleBonds !== currentProps.multipleBonds);\r\n            if (newStructure.interUnitBonds !== currentStructure.interUnitBonds) {\r\n                state.createGeometry = true;\r\n                state.updateTransform = true;\r\n                state.updateColor = true;\r\n                state.updateSize = true;\r\n            }\r\n        },\r\n        mustRecreate: function (structure, props, webgl) {\r\n            return props.tryUseImpostor && !!webgl;\r\n        }\r\n    }, materialId);\r\n}\r\n//# sourceMappingURL=bond-inter-unit-cylinder.js.map"]},"metadata":{},"sourceType":"module"}