{"ast":null,"code":"/**\r\n * Copyright (c) 2017-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nexport var IsNativeEndianLittle = new Uint16Array(new Uint8Array([0x12, 0x34]).buffer)[0] === 0x3412;\nexport function flipByteOrder(data, bytes) {\n  var buffer = new ArrayBuffer(data.length);\n  var ret = new Uint8Array(buffer);\n\n  for (var i = 0, n = data.length; i < n; i += bytes) {\n    for (var j = 0; j < bytes; j++) {\n      ret[i + bytes - j - 1] = data[i + j];\n    }\n  }\n\n  return buffer;\n}\nvar ChunkSize = 0x7000;\nexport function uint8ToString(array) {\n  if (array.length > ChunkSize) {\n    var c = [];\n\n    for (var i = 0; i < array.length; i += ChunkSize) {\n      c.push(String.fromCharCode.apply(null, array.subarray(i, i + ChunkSize)));\n    }\n\n    return c.join('');\n  } else {\n    return String.fromCharCode.apply(null, array);\n  }\n}","map":{"version":3,"sources":["../../../src/mol-io/common/binary.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;AAEH,OAAO,IAAM,oBAAoB,GAAG,IAAI,WAAJ,CAAgB,IAAI,UAAJ,CAAe,CAAC,IAAD,EAAO,IAAP,CAAf,EAA6B,MAA7C,EAAqD,CAArD,MAA4D,MAAzF;AAEP,OAAM,SAAU,aAAV,CAAwB,IAAxB,EAA0C,KAA1C,EAAuD;AACzD,MAAM,MAAM,GAAG,IAAI,WAAJ,CAAgB,IAAI,CAAC,MAArB,CAAf;AACA,MAAM,GAAG,GAAG,IAAI,UAAJ,CAAe,MAAf,CAAZ;;AACA,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,GAAG,CAArC,EAAwC,CAAC,IAAI,KAA7C,EAAoD;AAChD,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAApB,EAA2B,CAAC,EAA5B,EAAgC;AAC5B,MAAA,GAAG,CAAC,CAAC,GAAG,KAAJ,GAAY,CAAZ,GAAgB,CAAjB,CAAH,GAAyB,IAAI,CAAC,CAAC,GAAG,CAAL,CAA7B;AACH;AACJ;;AACD,SAAO,MAAP;AACH;AAED,IAAM,SAAS,GAAG,MAAlB;AACA,OAAM,SAAU,aAAV,CAAwB,KAAxB,EAAyC;AAC3C,MAAI,KAAK,CAAC,MAAN,GAAe,SAAnB,EAA8B;AAC1B,QAAM,CAAC,GAAG,EAAV;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,IAAI,SAAvC,EAAkD;AAC9C,MAAA,CAAC,CAAC,IAAF,CAAO,MAAM,CAAC,YAAP,CAAoB,KAApB,CAA0B,IAA1B,EAAgC,KAAK,CAAC,QAAN,CAAe,CAAf,EAAkB,CAAC,GAAG,SAAtB,CAAhC,CAAP;AACH;;AACD,WAAO,CAAC,CAAC,IAAF,CAAO,EAAP,CAAP;AACH,GAND,MAMO;AACH,WAAO,MAAM,CAAC,YAAP,CAAoB,KAApB,CAA0B,IAA1B,EAAgC,KAAhC,CAAP;AACH;AACJ","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2017-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nexport var IsNativeEndianLittle = new Uint16Array(new Uint8Array([0x12, 0x34]).buffer)[0] === 0x3412;\r\nexport function flipByteOrder(data, bytes) {\r\n    var buffer = new ArrayBuffer(data.length);\r\n    var ret = new Uint8Array(buffer);\r\n    for (var i = 0, n = data.length; i < n; i += bytes) {\r\n        for (var j = 0; j < bytes; j++) {\r\n            ret[i + bytes - j - 1] = data[i + j];\r\n        }\r\n    }\r\n    return buffer;\r\n}\r\nvar ChunkSize = 0x7000;\r\nexport function uint8ToString(array) {\r\n    if (array.length > ChunkSize) {\r\n        var c = [];\r\n        for (var i = 0; i < array.length; i += ChunkSize) {\r\n            c.push(String.fromCharCode.apply(null, array.subarray(i, i + ChunkSize)));\r\n        }\r\n        return c.join('');\r\n    }\r\n    else {\r\n        return String.fromCharCode.apply(null, array);\r\n    }\r\n}\r\n//# sourceMappingURL=binary.js.map"]},"metadata":{},"sourceType":"module"}