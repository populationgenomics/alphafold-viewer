{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { idFactory } from '../../mol-util/id-factory';\nvar getNextVertexArrayId = idFactory();\n\nfunction getVertexArray(extensions) {\n  var vertexArrayObject = extensions.vertexArrayObject;\n\n  if (!vertexArrayObject) {\n    throw new Error('VertexArrayObject not supported');\n  }\n\n  var vertexArray = vertexArrayObject.createVertexArray();\n\n  if (!vertexArray) {\n    throw new Error('Could not create WebGL vertex array');\n  }\n\n  return vertexArray;\n}\n\nfunction getVertexArrayObject(extensions) {\n  var vertexArrayObject = extensions.vertexArrayObject;\n\n  if (vertexArrayObject === null) {\n    throw new Error('VertexArrayObject not supported');\n  }\n\n  return vertexArrayObject;\n}\n\nexport function createVertexArray(extensions, program, attributeBuffers, elementsBuffer) {\n  var id = getNextVertexArrayId();\n  var vertexArray = getVertexArray(extensions);\n  var vertexArrayObject = getVertexArrayObject(extensions);\n\n  function update() {\n    vertexArrayObject.bindVertexArray(vertexArray);\n    if (elementsBuffer) elementsBuffer.bind();\n    program.bindAttributes(attributeBuffers);\n    vertexArrayObject.bindVertexArray(null);\n  }\n\n  update();\n  var destroyed = false;\n  return {\n    id: id,\n    bind: function () {\n      vertexArrayObject.bindVertexArray(vertexArray);\n    },\n    update: update,\n    reset: function () {\n      vertexArray = getVertexArray(extensions);\n      vertexArrayObject = getVertexArrayObject(extensions);\n      update();\n    },\n    destroy: function () {\n      if (destroyed) return;\n      vertexArrayObject.deleteVertexArray(vertexArray);\n      destroyed = true;\n    }\n  };\n}","map":{"version":3,"sources":["../../../src/mol-gl/webgl/vertex-array.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAKH,SAAS,SAAT,QAA0B,2BAA1B;AAEA,IAAM,oBAAoB,GAAG,SAAS,EAAtC;;AAEA,SAAS,cAAT,CAAwB,UAAxB,EAAmD;AACvC,MAAA,iBAAiB,GAAK,UAAU,CAAf,iBAAjB;;AACR,MAAI,CAAC,iBAAL,EAAwB;AACpB,UAAM,IAAI,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACD,MAAM,WAAW,GAAG,iBAAiB,CAAC,iBAAlB,EAApB;;AACA,MAAI,CAAC,WAAL,EAAkB;AACd,UAAM,IAAI,KAAJ,CAAU,qCAAV,CAAN;AACH;;AACD,SAAO,WAAP;AACH;;AAED,SAAS,oBAAT,CAA8B,UAA9B,EAAyD;AAC7C,MAAA,iBAAiB,GAAK,UAAU,CAAf,iBAAjB;;AACR,MAAI,iBAAiB,KAAK,IAA1B,EAAgC;AAC5B,UAAM,IAAI,KAAJ,CAAU,iCAAV,CAAN;AACH;;AACD,SAAO,iBAAP;AACH;;AAWD,OAAM,SAAU,iBAAV,CAA4B,UAA5B,EAAyD,OAAzD,EAA2E,gBAA3E,EAA+G,cAA/G,EAA8I;AAChJ,MAAM,EAAE,GAAG,oBAAoB,EAA/B;AACA,MAAI,WAAW,GAAG,cAAc,CAAC,UAAD,CAAhC;AACA,MAAI,iBAAiB,GAAG,oBAAoB,CAAC,UAAD,CAA5C;;AAEA,WAAS,MAAT,GAAe;AACX,IAAA,iBAAiB,CAAC,eAAlB,CAAkC,WAAlC;AACA,QAAI,cAAJ,EAAoB,cAAc,CAAC,IAAf;AACpB,IAAA,OAAO,CAAC,cAAR,CAAuB,gBAAvB;AACA,IAAA,iBAAiB,CAAC,eAAlB,CAAkC,IAAlC;AACH;;AAED,EAAA,MAAM;AACN,MAAI,SAAS,GAAG,KAAhB;AAEA,SAAO;AACH,IAAA,EAAE,EAAA,EADC;AAEH,IAAA,IAAI,EAAE,YAAA;AACF,MAAA,iBAAiB,CAAC,eAAlB,CAAkC,WAAlC;AACH,KAJE;AAKH,IAAA,MAAM,EAAA,MALH;AAMH,IAAA,KAAK,EAAE,YAAA;AACH,MAAA,WAAW,GAAG,cAAc,CAAC,UAAD,CAA5B;AACA,MAAA,iBAAiB,GAAG,oBAAoB,CAAC,UAAD,CAAxC;AACA,MAAA,MAAM;AACT,KAVE;AAWH,IAAA,OAAO,EAAE,YAAA;AACL,UAAI,SAAJ,EAAe;AACf,MAAA,iBAAiB,CAAC,iBAAlB,CAAoC,WAApC;AACA,MAAA,SAAS,GAAG,IAAZ;AACH;AAfE,GAAP;AAiBH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { idFactory } from '../../mol-util/id-factory';\r\nvar getNextVertexArrayId = idFactory();\r\nfunction getVertexArray(extensions) {\r\n    var vertexArrayObject = extensions.vertexArrayObject;\r\n    if (!vertexArrayObject) {\r\n        throw new Error('VertexArrayObject not supported');\r\n    }\r\n    var vertexArray = vertexArrayObject.createVertexArray();\r\n    if (!vertexArray) {\r\n        throw new Error('Could not create WebGL vertex array');\r\n    }\r\n    return vertexArray;\r\n}\r\nfunction getVertexArrayObject(extensions) {\r\n    var vertexArrayObject = extensions.vertexArrayObject;\r\n    if (vertexArrayObject === null) {\r\n        throw new Error('VertexArrayObject not supported');\r\n    }\r\n    return vertexArrayObject;\r\n}\r\nexport function createVertexArray(extensions, program, attributeBuffers, elementsBuffer) {\r\n    var id = getNextVertexArrayId();\r\n    var vertexArray = getVertexArray(extensions);\r\n    var vertexArrayObject = getVertexArrayObject(extensions);\r\n    function update() {\r\n        vertexArrayObject.bindVertexArray(vertexArray);\r\n        if (elementsBuffer)\r\n            elementsBuffer.bind();\r\n        program.bindAttributes(attributeBuffers);\r\n        vertexArrayObject.bindVertexArray(null);\r\n    }\r\n    update();\r\n    var destroyed = false;\r\n    return {\r\n        id: id,\r\n        bind: function () {\r\n            vertexArrayObject.bindVertexArray(vertexArray);\r\n        },\r\n        update: update,\r\n        reset: function () {\r\n            vertexArray = getVertexArray(extensions);\r\n            vertexArrayObject = getVertexArrayObject(extensions);\r\n            update();\r\n        },\r\n        destroy: function () {\r\n            if (destroyed)\r\n                return;\r\n            vertexArrayObject.deleteVertexArray(vertexArray);\r\n            destroyed = true;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=vertex-array.js.map"]},"metadata":{},"sourceType":"module"}