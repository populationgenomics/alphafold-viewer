{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __awaiter, __generator } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Plugin } from './plugin';\nimport { PluginUIContext } from './context';\nimport { DefaultPluginUISpec } from './spec';\nexport function createPlugin(target, spec) {\n  var ctx = new PluginUIContext(spec || DefaultPluginUISpec());\n  ctx.init();\n  ReactDOM.render(React.createElement(Plugin, {\n    plugin: ctx\n  }), target);\n  return ctx;\n}\n/** Returns the instance of the plugin after all behaviors have been initialized */\n\nexport function createPluginAsync(target, spec) {\n  return __awaiter(this, void 0, void 0, function () {\n    var ctx, init;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ctx = new PluginUIContext(spec || DefaultPluginUISpec());\n          init = ctx.init();\n          ReactDOM.render(React.createElement(Plugin, {\n            plugin: ctx\n          }), target);\n          return [4\n          /*yield*/\n          , init];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , ctx];\n      }\n    });\n  });\n}","map":{"version":3,"sources":["../../src/mol-plugin-ui/index.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;;AAEH,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAK,QAAZ,MAA0B,WAA1B;AACA,SAAS,MAAT,QAAuB,UAAvB;AACA,SAAS,eAAT,QAAgC,WAAhC;AACA,SAAS,mBAAT,QAAkD,QAAlD;AAEA,OAAM,SAAU,YAAV,CAAuB,MAAvB,EAA4C,IAA5C,EAA+D;AACjE,MAAM,GAAG,GAAG,IAAI,eAAJ,CAAoB,IAAI,IAAI,mBAAmB,EAA/C,CAAZ;AACA,EAAA,GAAG,CAAC,IAAJ;AACA,EAAA,QAAQ,CAAC,MAAT,CAAgB,KAAK,CAAC,aAAN,CAAoB,MAApB,EAA4B;AAAE,IAAA,MAAM,EAAE;AAAV,GAA5B,CAAhB,EAA8D,MAA9D;AACA,SAAO,GAAP;AACH;AAED;;AACA,OAAM,SAAgB,iBAAhB,CAAkC,MAAlC,EAAuD,IAAvD,EAA0E;;;;;;AACtE,UAAA,GAAG,GAAG,IAAI,eAAJ,CAAoB,IAAI,IAAI,mBAAmB,EAA/C,CAAN;AACA,UAAA,IAAI,GAAG,GAAG,CAAC,IAAJ,EAAP;AACN,UAAA,QAAQ,CAAC,MAAT,CAAgB,KAAK,CAAC,aAAN,CAAoB,MAApB,EAA4B;AAAE,YAAA,MAAM,EAAE;AAAV,WAA5B,CAAhB,EAA8D,MAA9D;AACA,iBAAA,CAAA;AAAA;AAAA,YAAM,IAAN,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACA,iBAAA,CAAA;AAAA;AAAA,YAAO,GAAP,CAAA;;;;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Plugin } from './plugin';\r\nimport { PluginUIContext } from './context';\r\nimport { DefaultPluginUISpec } from './spec';\r\nexport function createPlugin(target, spec) {\r\n    var ctx = new PluginUIContext(spec || DefaultPluginUISpec());\r\n    ctx.init();\r\n    ReactDOM.render(React.createElement(Plugin, { plugin: ctx }), target);\r\n    return ctx;\r\n}\r\n/** Returns the instance of the plugin after all behaviors have been initialized */\r\nexport function createPluginAsync(target, spec) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var ctx, init;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ctx = new PluginUIContext(spec || DefaultPluginUISpec());\r\n                    init = ctx.init();\r\n                    ReactDOM.render(React.createElement(Plugin, { plugin: ctx }), target);\r\n                    return [4 /*yield*/, init];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [2 /*return*/, ctx];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}