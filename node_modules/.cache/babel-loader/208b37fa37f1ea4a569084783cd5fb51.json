{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\n/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Paul Luna <paulluna0215@gmail.com>\r\n */\n\nimport { PointComponent } from './point-component';\nimport * as React from 'react';\nimport { Vec2 } from '../../../mol-math/linear-algebra';\n\nvar LineGraphComponent =\n/** @class */\nfunction (_super) {\n  __extends(LineGraphComponent, _super);\n\n  function LineGraphComponent(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.handleKeyDown = function (event) {// TODO: set canSelectMultiple = true\n    };\n\n    _this.handleKeyUp = function (event) {// TODO: SET canSelectMultiple = fasle\n    };\n\n    _this.handleClick = function (id) {\n      return function (event) {// TODO: add point to selected array\n      };\n    };\n\n    _this.handleMouseDown = function (id) {\n      return function (event) {\n        if (id === 0 || id === _this.state.points.length - 1) {\n          return;\n        }\n\n        if (_this.state.canSelectMultiple) {\n          return;\n        }\n\n        var copyPoint = _this.normalizePoint(Vec2.create(_this.state.points[id][0], _this.state.points[id][1]));\n\n        _this.ghostPoints.push(document.createElementNS(_this.namespace, 'circle'));\n\n        _this.ghostPoints[0].setAttribute('r', '10');\n\n        _this.ghostPoints[0].setAttribute('fill', 'orange');\n\n        _this.ghostPoints[0].setAttribute('cx', \"\" + copyPoint[0]);\n\n        _this.ghostPoints[0].setAttribute('cy', \"\" + copyPoint[1]);\n\n        _this.ghostPoints[0].setAttribute('style', 'display: none');\n\n        _this.gElement.appendChild(_this.ghostPoints[0]);\n\n        _this.updatedX = copyPoint[0];\n        _this.updatedY = copyPoint[1];\n        _this.selected = [id];\n      };\n    };\n\n    _this.deletePoint = function (i) {\n      return function (event) {\n        if (i === 0 || i === _this.state.points.length - 1) {\n          return;\n        }\n\n        var points = _this.state.points.filter(function (_, j) {\n          return j !== i;\n        });\n\n        points.sort(function (a, b) {\n          if (a[0] === b[0]) {\n            if (a[0] === 0) {\n              return a[1] - b[1];\n            }\n\n            if (a[1] === 1) {\n              return b[1] - a[1];\n            }\n\n            return a[1] - b[1];\n          }\n\n          return a[0] - b[0];\n        });\n\n        _this.setState({\n          points: points\n        });\n\n        _this.change(points);\n\n        event.stopPropagation();\n      };\n    };\n\n    _this.myRef = React.createRef();\n    _this.state = {\n      points: [Vec2.create(0, 0), Vec2.create(1, 0)],\n      copyPoint: undefined,\n      canSelectMultiple: false\n    };\n    _this.height = 400;\n    _this.width = 600;\n    _this.padding = 70;\n    _this.selected = undefined;\n    _this.ghostPoints = [];\n    _this.namespace = 'http://www.w3.org/2000/svg';\n\n    for (var _i = 0, _a = _this.props.data; _i < _a.length; _i++) {\n      var point = _a[_i];\n\n      _this.state.points.push(point);\n    }\n\n    _this.state.points.sort(function (a, b) {\n      if (a[0] === b[0]) {\n        if (a[0] === 0) {\n          return a[1] - b[1];\n        }\n\n        if (a[1] === 1) {\n          return b[1] - a[1];\n        }\n\n        return a[1] - b[1];\n      }\n\n      return a[0] - b[0];\n    });\n\n    _this.handleDrag = _this.handleDrag.bind(_this);\n    _this.handleMultipleDrag = _this.handleMultipleDrag.bind(_this);\n    _this.handleDoubleClick = _this.handleDoubleClick.bind(_this);\n    _this.refCallBack = _this.refCallBack.bind(_this);\n    _this.handlePointUpdate = _this.handlePointUpdate.bind(_this);\n    _this.change = _this.change.bind(_this);\n    _this.handleKeyUp = _this.handleKeyUp.bind(_this);\n    _this.handleLeave = _this.handleLeave.bind(_this);\n    _this.handleEnter = _this.handleEnter.bind(_this);\n    return _this;\n  }\n\n  LineGraphComponent.prototype.render = function () {\n    var points = this.renderPoints();\n    var lines = this.renderLines();\n    return [_jsx(\"div\", {\n      children: _jsxs(\"svg\", __assign({\n        className: \"msp-canvas\",\n        ref: this.refCallBack,\n        viewBox: \"0 0 \" + (this.width + this.padding) + \" \" + (this.height + this.padding),\n        onMouseMove: this.handleDrag,\n        onMouseUp: this.handlePointUpdate,\n        onMouseLeave: this.handleLeave,\n        onMouseEnter: this.handleEnter,\n        tabIndex: 0,\n        onKeyDown: this.handleKeyDown,\n        onKeyUp: this.handleKeyUp,\n        onDoubleClick: this.handleDoubleClick\n      }, {\n        children: [_jsxs(\"g\", __assign({\n          stroke: \"black\",\n          fill: \"black\"\n        }, {\n          children: [lines, points]\n        }), void 0), _jsx(\"g\", {\n          className: \"ghost-points\",\n          stroke: \"black\",\n          fill: \"black\"\n        }, void 0)]\n      }), void 0)\n    }, \"LineGraph\"), _jsx(\"div\", {\n      id: \"modal-root\"\n    }, \"modal\")];\n  };\n\n  LineGraphComponent.prototype.componentDidMount = function () {\n    this.gElement = document.getElementsByClassName('ghost-points')[0];\n  };\n\n  LineGraphComponent.prototype.change = function (points) {\n    var copyPoints = points.slice();\n    copyPoints.shift();\n    copyPoints.pop();\n    this.props.onChange(copyPoints);\n  };\n\n  LineGraphComponent.prototype.handleDrag = function (event) {\n    if (this.selected === undefined) {\n      return;\n    }\n\n    var pt = this.myRef.createSVGPoint();\n    var updatedCopyPoint;\n    var padding = this.padding / 2;\n    pt.x = event.clientX;\n    pt.y = event.clientY;\n    var svgP = pt.matrixTransform(this.myRef.getScreenCTM().inverse());\n    updatedCopyPoint = Vec2.create(svgP.x, svgP.y);\n\n    if ((svgP.x < padding || svgP.x > this.width + padding) && (svgP.y > this.height + padding || svgP.y < padding)) {\n      updatedCopyPoint = Vec2.create(this.updatedX, this.updatedY);\n    } else if (svgP.x < padding) {\n      updatedCopyPoint = Vec2.create(padding, svgP.y);\n    } else if (svgP.x > this.width + padding) {\n      updatedCopyPoint = Vec2.create(this.width + padding, svgP.y);\n    } else if (svgP.y > this.height + padding) {\n      updatedCopyPoint = Vec2.create(svgP.x, this.height + padding);\n    } else if (svgP.y < padding) {\n      updatedCopyPoint = Vec2.create(svgP.x, padding);\n    } else {\n      updatedCopyPoint = Vec2.create(svgP.x, svgP.y);\n    }\n\n    this.updatedX = updatedCopyPoint[0];\n    this.updatedY = updatedCopyPoint[1];\n    var unNormalizePoint = this.unNormalizePoint(updatedCopyPoint);\n    this.ghostPoints[0].setAttribute('style', 'display: visible');\n    this.ghostPoints[0].setAttribute('cx', \"\" + updatedCopyPoint[0]);\n    this.ghostPoints[0].setAttribute('cy', \"\" + updatedCopyPoint[1]);\n    this.props.onDrag(unNormalizePoint);\n  };\n\n  LineGraphComponent.prototype.handleMultipleDrag = function () {// TODO\n  };\n\n  LineGraphComponent.prototype.handlePointUpdate = function (event) {\n    var selected = this.selected;\n\n    if (this.state.canSelectMultiple) {\n      return;\n    }\n\n    if (selected === undefined || selected[0] === 0 || selected[0] === this.state.points.length - 1) {\n      this.setState({\n        copyPoint: undefined\n      });\n      return;\n    }\n\n    this.selected = undefined;\n    var updatedPoint = this.unNormalizePoint(Vec2.create(this.updatedX, this.updatedY));\n    var points = this.state.points.filter(function (_, i) {\n      return i !== selected[0];\n    });\n    points.push(updatedPoint);\n    points.sort(function (a, b) {\n      if (a[0] === b[0]) {\n        if (a[0] === 0) {\n          return a[1] - b[1];\n        }\n\n        if (a[1] === 1) {\n          return b[1] - a[1];\n        }\n\n        return a[1] - b[1];\n      }\n\n      return a[0] - b[0];\n    });\n    this.setState({\n      points: points\n    });\n    this.change(points);\n    this.gElement.innerHTML = '';\n    this.ghostPoints = [];\n    document.removeEventListener('mousemove', this.handleDrag, true);\n    document.removeEventListener('mouseup', this.handlePointUpdate, true);\n  };\n\n  LineGraphComponent.prototype.handleDoubleClick = function (event) {\n    var pt = this.myRef.createSVGPoint();\n    pt.x = event.clientX;\n    pt.y = event.clientY;\n    var svgP = pt.matrixTransform(this.myRef.getScreenCTM().inverse());\n    var points = this.state.points;\n    var padding = this.padding / 2;\n\n    if (svgP.x < padding || svgP.x > this.width + padding || svgP.y > this.height + padding || svgP.y < this.padding / 2) {\n      return;\n    }\n\n    var newPoint = this.unNormalizePoint(Vec2.create(svgP.x, svgP.y));\n    points.push(newPoint);\n    points.sort(function (a, b) {\n      if (a[0] === b[0]) {\n        if (a[0] === 0) {\n          return a[1] - b[1];\n        }\n\n        if (a[1] === 1) {\n          return b[1] - a[1];\n        }\n\n        return a[1] - b[1];\n      }\n\n      return a[0] - b[0];\n    });\n    this.setState({\n      points: points\n    });\n    this.change(points);\n  };\n\n  LineGraphComponent.prototype.handleLeave = function () {\n    if (this.selected === undefined) {\n      return;\n    }\n\n    document.addEventListener('mousemove', this.handleDrag, true);\n    document.addEventListener('mouseup', this.handlePointUpdate, true);\n  };\n\n  LineGraphComponent.prototype.handleEnter = function () {\n    document.removeEventListener('mousemove', this.handleDrag, true);\n    document.removeEventListener('mouseup', this.handlePointUpdate, true);\n  };\n\n  LineGraphComponent.prototype.normalizePoint = function (point) {\n    var min = this.padding / 2;\n    var maxX = this.width + min;\n    var maxY = this.height + min;\n    var normalizedX = point[0] * (maxX - min) + min;\n    var normalizedY = point[1] * (maxY - min) + min;\n    var reverseY = this.height + this.padding - normalizedY;\n    var newPoint = Vec2.create(normalizedX, reverseY);\n    return newPoint;\n  };\n\n  LineGraphComponent.prototype.unNormalizePoint = function (point) {\n    var min = this.padding / 2;\n    var maxX = this.width + min;\n    var maxY = this.height + min;\n    var unNormalizedX = (point[0] - min) / (maxX - min); // we have to take into account that we reversed y when we first normalized it.\n\n    var unNormalizedY = (this.height + this.padding - point[1] - min) / (maxY - min);\n    return Vec2.create(unNormalizedX, unNormalizedY);\n  };\n\n  LineGraphComponent.prototype.refCallBack = function (element) {\n    if (element) {\n      this.myRef = element;\n    }\n  };\n\n  LineGraphComponent.prototype.renderPoints = function () {\n    var points = [];\n    var point;\n\n    for (var i = 0; i < this.state.points.length; i++) {\n      if (i !== 0 && i !== this.state.points.length - 1) {\n        point = this.normalizePoint(this.state.points[i]);\n        points.push(_jsx(PointComponent, {\n          id: i,\n          x: point[0],\n          y: point[1],\n          nX: this.state.points[i][0],\n          nY: this.state.points[i][1],\n          selected: false,\n          delete: this.deletePoint,\n          onmouseover: this.props.onHover,\n          onmousedown: this.handleMouseDown(i),\n          onclick: this.handleClick(i)\n        }, i));\n      }\n    }\n\n    return points;\n  };\n\n  LineGraphComponent.prototype.renderLines = function () {\n    var points = [];\n    var lines = [];\n    var min;\n    var maxX;\n    var maxY;\n    var normalizedX;\n    var normalizedY;\n    var reverseY;\n\n    for (var _i = 0, _a = this.state.points; _i < _a.length; _i++) {\n      var point = _a[_i];\n      min = this.padding / 2;\n      maxX = this.width + min;\n      maxY = this.height + min;\n      normalizedX = point[0] * (maxX - min) + min;\n      normalizedY = point[1] * (maxY - min) + min;\n      reverseY = this.height + this.padding - normalizedY;\n      points.push(Vec2.create(normalizedX, reverseY));\n    }\n\n    var data = points;\n    var size = data.length;\n\n    for (var i = 0; i < size - 1; i++) {\n      var x1 = data[i][0];\n      var y1 = data[i][1];\n      var x2 = data[i + 1][0];\n      var y2 = data[i + 1][1];\n      lines.push(_jsx(\"line\", {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2,\n        stroke: \"#cec9ba\",\n        strokeWidth: \"5\"\n      }, \"lineOf\" + i));\n    }\n\n    return lines;\n  };\n\n  return LineGraphComponent;\n}(React.Component);\n\nexport { LineGraphComponent };","map":{"version":3,"sources":["../../../../src/mol-plugin-ui/controls/line-graph/line-graph-component.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\r\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\r\n/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Paul Luna <paulluna0215@gmail.com>\r\n */\r\nimport { PointComponent } from './point-component';\r\nimport * as React from 'react';\r\nimport { Vec2 } from '../../../mol-math/linear-algebra';\r\nvar LineGraphComponent = /** @class */ (function (_super) {\r\n    __extends(LineGraphComponent, _super);\r\n    function LineGraphComponent(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.handleKeyDown = function (event) {\r\n            // TODO: set canSelectMultiple = true\r\n        };\r\n        _this.handleKeyUp = function (event) {\r\n            // TODO: SET canSelectMultiple = fasle\r\n        };\r\n        _this.handleClick = function (id) { return function (event) {\r\n            // TODO: add point to selected array\r\n        }; };\r\n        _this.handleMouseDown = function (id) { return function (event) {\r\n            if (id === 0 || id === _this.state.points.length - 1) {\r\n                return;\r\n            }\r\n            if (_this.state.canSelectMultiple) {\r\n                return;\r\n            }\r\n            var copyPoint = _this.normalizePoint(Vec2.create(_this.state.points[id][0], _this.state.points[id][1]));\r\n            _this.ghostPoints.push(document.createElementNS(_this.namespace, 'circle'));\r\n            _this.ghostPoints[0].setAttribute('r', '10');\r\n            _this.ghostPoints[0].setAttribute('fill', 'orange');\r\n            _this.ghostPoints[0].setAttribute('cx', \"\" + copyPoint[0]);\r\n            _this.ghostPoints[0].setAttribute('cy', \"\" + copyPoint[1]);\r\n            _this.ghostPoints[0].setAttribute('style', 'display: none');\r\n            _this.gElement.appendChild(_this.ghostPoints[0]);\r\n            _this.updatedX = copyPoint[0];\r\n            _this.updatedY = copyPoint[1];\r\n            _this.selected = [id];\r\n        }; };\r\n        _this.deletePoint = function (i) { return function (event) {\r\n            if (i === 0 || i === _this.state.points.length - 1) {\r\n                return;\r\n            }\r\n            var points = _this.state.points.filter(function (_, j) { return j !== i; });\r\n            points.sort(function (a, b) {\r\n                if (a[0] === b[0]) {\r\n                    if (a[0] === 0) {\r\n                        return a[1] - b[1];\r\n                    }\r\n                    if (a[1] === 1) {\r\n                        return b[1] - a[1];\r\n                    }\r\n                    return a[1] - b[1];\r\n                }\r\n                return a[0] - b[0];\r\n            });\r\n            _this.setState({ points: points });\r\n            _this.change(points);\r\n            event.stopPropagation();\r\n        }; };\r\n        _this.myRef = React.createRef();\r\n        _this.state = {\r\n            points: [\r\n                Vec2.create(0, 0),\r\n                Vec2.create(1, 0)\r\n            ],\r\n            copyPoint: undefined,\r\n            canSelectMultiple: false,\r\n        };\r\n        _this.height = 400;\r\n        _this.width = 600;\r\n        _this.padding = 70;\r\n        _this.selected = undefined;\r\n        _this.ghostPoints = [];\r\n        _this.namespace = 'http://www.w3.org/2000/svg';\r\n        for (var _i = 0, _a = _this.props.data; _i < _a.length; _i++) {\r\n            var point = _a[_i];\r\n            _this.state.points.push(point);\r\n        }\r\n        _this.state.points.sort(function (a, b) {\r\n            if (a[0] === b[0]) {\r\n                if (a[0] === 0) {\r\n                    return a[1] - b[1];\r\n                }\r\n                if (a[1] === 1) {\r\n                    return b[1] - a[1];\r\n                }\r\n                return a[1] - b[1];\r\n            }\r\n            return a[0] - b[0];\r\n        });\r\n        _this.handleDrag = _this.handleDrag.bind(_this);\r\n        _this.handleMultipleDrag = _this.handleMultipleDrag.bind(_this);\r\n        _this.handleDoubleClick = _this.handleDoubleClick.bind(_this);\r\n        _this.refCallBack = _this.refCallBack.bind(_this);\r\n        _this.handlePointUpdate = _this.handlePointUpdate.bind(_this);\r\n        _this.change = _this.change.bind(_this);\r\n        _this.handleKeyUp = _this.handleKeyUp.bind(_this);\r\n        _this.handleLeave = _this.handleLeave.bind(_this);\r\n        _this.handleEnter = _this.handleEnter.bind(_this);\r\n        return _this;\r\n    }\r\n    LineGraphComponent.prototype.render = function () {\r\n        var points = this.renderPoints();\r\n        var lines = this.renderLines();\r\n        return ([\r\n            _jsx(\"div\", { children: _jsxs(\"svg\", __assign({ className: \"msp-canvas\", ref: this.refCallBack, viewBox: \"0 0 \" + (this.width + this.padding) + \" \" + (this.height + this.padding), onMouseMove: this.handleDrag, onMouseUp: this.handlePointUpdate, onMouseLeave: this.handleLeave, onMouseEnter: this.handleEnter, tabIndex: 0, onKeyDown: this.handleKeyDown, onKeyUp: this.handleKeyUp, onDoubleClick: this.handleDoubleClick }, { children: [_jsxs(\"g\", __assign({ stroke: \"black\", fill: \"black\" }, { children: [lines, points] }), void 0), _jsx(\"g\", { className: \"ghost-points\", stroke: \"black\", fill: \"black\" }, void 0)] }), void 0) }, \"LineGraph\"),\r\n            _jsx(\"div\", { id: \"modal-root\" }, \"modal\")\r\n        ]);\r\n    };\r\n    LineGraphComponent.prototype.componentDidMount = function () {\r\n        this.gElement = document.getElementsByClassName('ghost-points')[0];\r\n    };\r\n    LineGraphComponent.prototype.change = function (points) {\r\n        var copyPoints = points.slice();\r\n        copyPoints.shift();\r\n        copyPoints.pop();\r\n        this.props.onChange(copyPoints);\r\n    };\r\n    LineGraphComponent.prototype.handleDrag = function (event) {\r\n        if (this.selected === undefined) {\r\n            return;\r\n        }\r\n        var pt = this.myRef.createSVGPoint();\r\n        var updatedCopyPoint;\r\n        var padding = this.padding / 2;\r\n        pt.x = event.clientX;\r\n        pt.y = event.clientY;\r\n        var svgP = pt.matrixTransform(this.myRef.getScreenCTM().inverse());\r\n        updatedCopyPoint = Vec2.create(svgP.x, svgP.y);\r\n        if ((svgP.x < (padding) || svgP.x > (this.width + (padding))) && (svgP.y > (this.height + (padding)) || svgP.y < (padding))) {\r\n            updatedCopyPoint = Vec2.create(this.updatedX, this.updatedY);\r\n        }\r\n        else if (svgP.x < padding) {\r\n            updatedCopyPoint = Vec2.create(padding, svgP.y);\r\n        }\r\n        else if (svgP.x > (this.width + (padding))) {\r\n            updatedCopyPoint = Vec2.create(this.width + padding, svgP.y);\r\n        }\r\n        else if (svgP.y > (this.height + (padding))) {\r\n            updatedCopyPoint = Vec2.create(svgP.x, this.height + padding);\r\n        }\r\n        else if (svgP.y < (padding)) {\r\n            updatedCopyPoint = Vec2.create(svgP.x, padding);\r\n        }\r\n        else {\r\n            updatedCopyPoint = Vec2.create(svgP.x, svgP.y);\r\n        }\r\n        this.updatedX = updatedCopyPoint[0];\r\n        this.updatedY = updatedCopyPoint[1];\r\n        var unNormalizePoint = this.unNormalizePoint(updatedCopyPoint);\r\n        this.ghostPoints[0].setAttribute('style', 'display: visible');\r\n        this.ghostPoints[0].setAttribute('cx', \"\" + updatedCopyPoint[0]);\r\n        this.ghostPoints[0].setAttribute('cy', \"\" + updatedCopyPoint[1]);\r\n        this.props.onDrag(unNormalizePoint);\r\n    };\r\n    LineGraphComponent.prototype.handleMultipleDrag = function () {\r\n        // TODO\r\n    };\r\n    LineGraphComponent.prototype.handlePointUpdate = function (event) {\r\n        var selected = this.selected;\r\n        if (this.state.canSelectMultiple) {\r\n            return;\r\n        }\r\n        if (selected === undefined || selected[0] === 0 || selected[0] === this.state.points.length - 1) {\r\n            this.setState({\r\n                copyPoint: undefined,\r\n            });\r\n            return;\r\n        }\r\n        this.selected = undefined;\r\n        var updatedPoint = this.unNormalizePoint(Vec2.create(this.updatedX, this.updatedY));\r\n        var points = this.state.points.filter(function (_, i) { return i !== selected[0]; });\r\n        points.push(updatedPoint);\r\n        points.sort(function (a, b) {\r\n            if (a[0] === b[0]) {\r\n                if (a[0] === 0) {\r\n                    return a[1] - b[1];\r\n                }\r\n                if (a[1] === 1) {\r\n                    return b[1] - a[1];\r\n                }\r\n                return a[1] - b[1];\r\n            }\r\n            return a[0] - b[0];\r\n        });\r\n        this.setState({\r\n            points: points,\r\n        });\r\n        this.change(points);\r\n        this.gElement.innerHTML = '';\r\n        this.ghostPoints = [];\r\n        document.removeEventListener('mousemove', this.handleDrag, true);\r\n        document.removeEventListener('mouseup', this.handlePointUpdate, true);\r\n    };\r\n    LineGraphComponent.prototype.handleDoubleClick = function (event) {\r\n        var pt = this.myRef.createSVGPoint();\r\n        pt.x = event.clientX;\r\n        pt.y = event.clientY;\r\n        var svgP = pt.matrixTransform(this.myRef.getScreenCTM().inverse());\r\n        var points = this.state.points;\r\n        var padding = this.padding / 2;\r\n        if (svgP.x < (padding) ||\r\n            svgP.x > (this.width + (padding)) ||\r\n            svgP.y > (this.height + (padding)) ||\r\n            svgP.y < (this.padding / 2)) {\r\n            return;\r\n        }\r\n        var newPoint = this.unNormalizePoint(Vec2.create(svgP.x, svgP.y));\r\n        points.push(newPoint);\r\n        points.sort(function (a, b) {\r\n            if (a[0] === b[0]) {\r\n                if (a[0] === 0) {\r\n                    return a[1] - b[1];\r\n                }\r\n                if (a[1] === 1) {\r\n                    return b[1] - a[1];\r\n                }\r\n                return a[1] - b[1];\r\n            }\r\n            return a[0] - b[0];\r\n        });\r\n        this.setState({ points: points });\r\n        this.change(points);\r\n    };\r\n    LineGraphComponent.prototype.handleLeave = function () {\r\n        if (this.selected === undefined) {\r\n            return;\r\n        }\r\n        document.addEventListener('mousemove', this.handleDrag, true);\r\n        document.addEventListener('mouseup', this.handlePointUpdate, true);\r\n    };\r\n    LineGraphComponent.prototype.handleEnter = function () {\r\n        document.removeEventListener('mousemove', this.handleDrag, true);\r\n        document.removeEventListener('mouseup', this.handlePointUpdate, true);\r\n    };\r\n    LineGraphComponent.prototype.normalizePoint = function (point) {\r\n        var min = this.padding / 2;\r\n        var maxX = this.width + min;\r\n        var maxY = this.height + min;\r\n        var normalizedX = (point[0] * (maxX - min)) + min;\r\n        var normalizedY = (point[1] * (maxY - min)) + min;\r\n        var reverseY = (this.height + this.padding) - normalizedY;\r\n        var newPoint = Vec2.create(normalizedX, reverseY);\r\n        return newPoint;\r\n    };\r\n    LineGraphComponent.prototype.unNormalizePoint = function (point) {\r\n        var min = this.padding / 2;\r\n        var maxX = this.width + min;\r\n        var maxY = this.height + min;\r\n        var unNormalizedX = (point[0] - min) / (maxX - min);\r\n        // we have to take into account that we reversed y when we first normalized it.\r\n        var unNormalizedY = ((this.height + this.padding) - point[1] - min) / (maxY - min);\r\n        return Vec2.create(unNormalizedX, unNormalizedY);\r\n    };\r\n    LineGraphComponent.prototype.refCallBack = function (element) {\r\n        if (element) {\r\n            this.myRef = element;\r\n        }\r\n    };\r\n    LineGraphComponent.prototype.renderPoints = function () {\r\n        var points = [];\r\n        var point;\r\n        for (var i = 0; i < this.state.points.length; i++) {\r\n            if (i !== 0 && i !== this.state.points.length - 1) {\r\n                point = this.normalizePoint(this.state.points[i]);\r\n                points.push(_jsx(PointComponent, { id: i, x: point[0], y: point[1], nX: this.state.points[i][0], nY: this.state.points[i][1], selected: false, delete: this.deletePoint, onmouseover: this.props.onHover, onmousedown: this.handleMouseDown(i), onclick: this.handleClick(i) }, i));\r\n            }\r\n        }\r\n        return points;\r\n    };\r\n    LineGraphComponent.prototype.renderLines = function () {\r\n        var points = [];\r\n        var lines = [];\r\n        var min;\r\n        var maxX;\r\n        var maxY;\r\n        var normalizedX;\r\n        var normalizedY;\r\n        var reverseY;\r\n        for (var _i = 0, _a = this.state.points; _i < _a.length; _i++) {\r\n            var point = _a[_i];\r\n            min = this.padding / 2;\r\n            maxX = this.width + min;\r\n            maxY = this.height + min;\r\n            normalizedX = (point[0] * (maxX - min)) + min;\r\n            normalizedY = (point[1] * (maxY - min)) + min;\r\n            reverseY = this.height + this.padding - normalizedY;\r\n            points.push(Vec2.create(normalizedX, reverseY));\r\n        }\r\n        var data = points;\r\n        var size = data.length;\r\n        for (var i = 0; i < size - 1; i++) {\r\n            var x1 = data[i][0];\r\n            var y1 = data[i][1];\r\n            var x2 = data[i + 1][0];\r\n            var y2 = data[i + 1][1];\r\n            lines.push(_jsx(\"line\", { x1: x1, x2: x2, y1: y1, y2: y2, stroke: \"#cec9ba\", strokeWidth: \"5\" }, \"lineOf\" + i));\r\n        }\r\n        return lines;\r\n    };\r\n    return LineGraphComponent;\r\n}(React.Component));\r\nexport { LineGraphComponent };\r\n//# sourceMappingURL=line-graph-component.js.map"]},"metadata":{},"sourceType":"module"}