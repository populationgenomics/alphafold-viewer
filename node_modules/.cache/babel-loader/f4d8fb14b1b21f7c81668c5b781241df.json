{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { Visual } from '../visual';\nimport { Structure, StructureElement } from '../../mol-model/structure';\nimport { Geometry } from '../../mol-geo/geometry/geometry';\nimport { Theme } from '../../mol-theme/theme';\nimport { createIdentityTransform } from '../../mol-geo/geometry/transform-data';\nimport { createRenderObject } from '../../mol-gl/render-object';\nimport { isEveryLoci, EmptyLoci } from '../../mol-model/loci';\nimport { Interval } from '../../mol-data/int';\nimport { VisualUpdateState } from '../util';\nimport { ColorTheme } from '../../mol-theme/color';\nimport { ValueCell, deepEqual } from '../../mol-util';\nimport { createSizes } from '../../mol-geo/geometry/size-data';\nimport { createColors } from '../../mol-geo/geometry/color-data';\nimport { MarkerAction } from '../../mol-util/marker-action';\nimport { Mesh } from '../../mol-geo/geometry/mesh/mesh';\nimport { Cylinders } from '../../mol-geo/geometry/cylinders/cylinders';\nimport { Lines } from '../../mol-geo/geometry/lines/lines';\nimport { Text } from '../../mol-geo/geometry/text/text';\nimport { SizeTheme } from '../../mol-theme/size';\nimport { DirectVolume } from '../../mol-geo/geometry/direct-volume/direct-volume';\nimport { createMarkers } from '../../mol-geo/geometry/marker-data';\nimport { StructureParams, StructureMeshParams, StructureTextParams, StructureDirectVolumeParams, StructureLinesParams, StructureCylindersParams, StructureTextureMeshParams } from './params';\nimport { TextureMesh } from '../../mol-geo/geometry/texture-mesh/texture-mesh';\nimport { isPromiseLike } from '../../mol-util/type-helpers';\n\nfunction createComplexRenderObject(structure, geometry, locationIt, theme, props, materialId) {\n  var _a = Geometry.getUtils(geometry),\n      createValues = _a.createValues,\n      createRenderableState = _a.createRenderableState;\n\n  var transform = createIdentityTransform();\n  var values = createValues(geometry, transform, locationIt, theme, props);\n  var state = createRenderableState(props);\n  return createRenderObject(geometry.kind, values, state, materialId);\n}\n\nexport function ComplexVisual(builder, materialId) {\n  var defaultProps = builder.defaultProps,\n      createGeometry = builder.createGeometry,\n      createLocationIterator = builder.createLocationIterator,\n      getLoci = builder.getLoci,\n      eachLocation = builder.eachLocation,\n      setUpdateState = builder.setUpdateState,\n      mustRecreate = builder.mustRecreate,\n      processValues = builder.processValues,\n      dispose = builder.dispose;\n  var _a = builder.geometryUtils,\n      updateValues = _a.updateValues,\n      updateBoundingSphere = _a.updateBoundingSphere,\n      updateRenderableState = _a.updateRenderableState,\n      createPositionIterator = _a.createPositionIterator;\n  var updateState = VisualUpdateState.create();\n  var previousMark = {\n    loci: EmptyLoci,\n    action: MarkerAction.None,\n    status: -1\n  };\n  var renderObject;\n  var newProps;\n  var newTheme;\n  var newStructure;\n  var currentProps = Object.assign({}, defaultProps);\n  var currentTheme = Theme.createEmpty();\n  var currentStructure;\n  var geometry;\n  var locationIt;\n  var positionIt;\n\n  function prepareUpdate(theme, props, structure) {\n    if (!structure && !currentStructure) {\n      throw new Error('missing structure');\n    }\n\n    newProps = Object.assign({}, currentProps, props);\n    newTheme = theme;\n    newStructure = structure;\n    VisualUpdateState.reset(updateState);\n\n    if (!renderObject || !currentStructure) {\n      updateState.createNew = true;\n      updateState.createGeometry = true;\n      return;\n    }\n\n    setUpdateState(updateState, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure);\n\n    if (!Structure.areEquivalent(newStructure, currentStructure)) {\n      updateState.createGeometry = true;\n    }\n\n    if (!Structure.areHierarchiesEqual(newStructure, currentStructure)) {\n      updateState.updateTransform = true;\n      updateState.createGeometry = true;\n    }\n\n    if (!ColorTheme.areEqual(theme.color, currentTheme.color)) {\n      updateState.updateColor = true;\n    }\n\n    if (!deepEqual(newProps.unitKinds, currentProps.unitKinds)) {\n      updateState.createGeometry = true;\n    }\n\n    if (currentStructure.child !== newStructure.child) {\n      // console.log('new child');\n      updateState.createGeometry = true;\n    }\n\n    if (updateState.updateSize && !('uSize' in renderObject.values)) {\n      updateState.createGeometry = true;\n    }\n\n    if (updateState.createGeometry) {\n      updateState.updateColor = true;\n      updateState.updateSize = true;\n    }\n  }\n\n  function update(newGeometry) {\n    if (updateState.createNew) {\n      locationIt = createLocationIterator(newStructure);\n\n      if (newGeometry) {\n        renderObject = createComplexRenderObject(newStructure, newGeometry, locationIt, newTheme, newProps, materialId);\n        positionIt = createPositionIterator(newGeometry, renderObject.values);\n      } else {\n        throw new Error('expected geometry to be given');\n      }\n    } else {\n      if (!renderObject) {\n        throw new Error('expected renderObject to be available');\n      }\n\n      if (updateState.updateTransform) {\n        // console.log('update transform')\n        locationIt = createLocationIterator(newStructure);\n        var instanceCount = locationIt.instanceCount,\n            groupCount = locationIt.groupCount;\n        createMarkers(instanceCount * groupCount, renderObject.values);\n      }\n\n      if (updateState.createGeometry) {\n        if (newGeometry) {\n          ValueCell.updateIfChanged(renderObject.values.drawCount, Geometry.getDrawCount(newGeometry));\n          ValueCell.updateIfChanged(renderObject.values.uVertexCount, Geometry.getVertexCount(newGeometry));\n        } else {\n          throw new Error('expected geometry to be given');\n        }\n      }\n\n      if (updateState.updateTransform || updateState.createGeometry) {\n        updateBoundingSphere(renderObject.values, newGeometry || geometry);\n        positionIt = createPositionIterator(geometry, renderObject.values);\n      }\n\n      if (updateState.updateSize) {\n        // not all geometries have size data, so check here\n        if ('uSize' in renderObject.values) {\n          createSizes(locationIt, newTheme.size, renderObject.values);\n        }\n      }\n\n      if (updateState.updateColor) {\n        createColors(locationIt, positionIt, newTheme.color, renderObject.values);\n      }\n\n      updateValues(renderObject.values, newProps);\n      updateRenderableState(renderObject.state, newProps);\n    }\n\n    currentProps = newProps;\n    currentTheme = newTheme;\n    currentStructure = newStructure;\n    if (newGeometry) geometry = newGeometry;\n  }\n\n  function lociIsSuperset(loci) {\n    if (isEveryLoci(loci)) return true;\n    if (Structure.isLoci(loci) && Structure.areRootsEquivalent(loci.structure, currentStructure)) return true;\n\n    if (StructureElement.Loci.is(loci) && Structure.areRootsEquivalent(loci.structure, currentStructure)) {\n      if (StructureElement.Loci.isWholeStructure(loci)) return true;\n    }\n\n    return false;\n  }\n\n  function lociApply(loci, apply, isMarking) {\n    if (lociIsSuperset(loci)) {\n      return apply(Interval.ofBounds(0, locationIt.groupCount * locationIt.instanceCount));\n    } else {\n      return eachLocation(loci, currentStructure, apply, isMarking);\n    }\n  }\n\n  function finalize(ctx) {\n    if (renderObject) {\n      processValues === null || processValues === void 0 ? void 0 : processValues(renderObject.values, geometry, currentProps, currentTheme, ctx.webgl);\n    }\n  }\n\n  return {\n    get groupCount() {\n      return locationIt ? locationIt.count : 0;\n    },\n\n    get renderObject() {\n      return locationIt && locationIt.count ? renderObject : undefined;\n    },\n\n    createOrUpdate: function (ctx, theme, props, structure) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      prepareUpdate(theme, props, structure || currentStructure);\n\n      if (updateState.createGeometry) {\n        var newGeometry = createGeometry(ctx, newStructure, newTheme, newProps, geometry);\n\n        if (isPromiseLike(newGeometry)) {\n          return newGeometry.then(function (g) {\n            update(g);\n            finalize(ctx);\n          });\n        }\n\n        update(newGeometry);\n      } else {\n        update();\n      }\n\n      finalize(ctx);\n    },\n    getLoci: function (pickingId) {\n      return renderObject ? getLoci(pickingId, currentStructure, renderObject.id) : EmptyLoci;\n    },\n    mark: function (loci, action) {\n      return Visual.mark(renderObject, loci, action, lociApply, previousMark);\n    },\n    setVisibility: function (visible) {\n      Visual.setVisibility(renderObject, visible);\n    },\n    setAlphaFactor: function (alphaFactor) {\n      Visual.setAlphaFactor(renderObject, alphaFactor);\n    },\n    setPickable: function (pickable) {\n      Visual.setPickable(renderObject, pickable);\n    },\n    setColorOnly: function (colorOnly) {\n      Visual.setColorOnly(renderObject, colorOnly);\n    },\n    setTransform: function (matrix, instanceMatrices) {\n      Visual.setTransform(renderObject, matrix, instanceMatrices);\n    },\n    setOverpaint: function (overpaint) {\n      Visual.setOverpaint(renderObject, overpaint, lociApply, true);\n    },\n    setTransparency: function (transparency) {\n      Visual.setTransparency(renderObject, transparency, lociApply, true);\n    },\n    setClipping: function (clipping) {\n      Visual.setClipping(renderObject, clipping, lociApply, true);\n    },\n    destroy: function () {\n      dispose === null || dispose === void 0 ? void 0 : dispose(geometry);\n\n      if (renderObject) {\n        renderObject.state.disposed = true;\n        renderObject = undefined;\n      }\n    },\n    mustRecreate: mustRecreate\n  };\n} // mesh\n\nexport var ComplexMeshParams = __assign(__assign({}, StructureMeshParams), StructureParams);\nexport function ComplexMeshVisual(builder, materialId) {\n  return ComplexVisual(__assign(__assign({}, builder), {\n    setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\n      builder.setUpdateState(state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure);\n      if (!SizeTheme.areEqual(newTheme.size, currentTheme.size)) state.createGeometry = true;\n    },\n    geometryUtils: Mesh.Utils\n  }), materialId);\n} // cylinders\n\nexport var ComplexCylindersParams = __assign(__assign({}, StructureCylindersParams), StructureParams);\nexport function ComplexCylindersVisual(builder, materialId) {\n  return ComplexVisual(__assign(__assign({}, builder), {\n    setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\n      builder.setUpdateState(state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure);\n      if (!SizeTheme.areEqual(newTheme.size, currentTheme.size)) state.updateSize = true;\n    },\n    geometryUtils: Cylinders.Utils\n  }), materialId);\n} // lines\n\nexport var ComplexLinesParams = __assign(__assign({}, StructureLinesParams), StructureParams);\nexport function ComplexLinesVisual(builder, materialId) {\n  return ComplexVisual(__assign(__assign({}, builder), {\n    setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\n      builder.setUpdateState(state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure);\n      if (!SizeTheme.areEqual(newTheme.size, currentTheme.size)) state.updateSize = true;\n    },\n    geometryUtils: Lines.Utils\n  }), materialId);\n} // text\n\nexport var ComplexTextParams = __assign(__assign({}, StructureTextParams), StructureParams);\nexport function ComplexTextVisual(builder, materialId) {\n  return ComplexVisual(__assign(__assign({}, builder), {\n    setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\n      builder.setUpdateState(state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure);\n      if (!SizeTheme.areEqual(newTheme.size, currentTheme.size)) state.updateSize = true;\n      if (newProps.background !== currentProps.background) state.createGeometry = true;\n      if (newProps.backgroundMargin !== currentProps.backgroundMargin) state.createGeometry = true;\n      if (newProps.tether !== currentProps.tether) state.createGeometry = true;\n      if (newProps.tetherLength !== currentProps.tetherLength) state.createGeometry = true;\n      if (newProps.tetherBaseWidth !== currentProps.tetherBaseWidth) state.createGeometry = true;\n      if (newProps.attachment !== currentProps.attachment) state.createGeometry = true;\n      if (newProps.fontFamily !== currentProps.fontFamily) state.createGeometry = true;\n      if (newProps.fontQuality !== currentProps.fontQuality) state.createGeometry = true;\n      if (newProps.fontStyle !== currentProps.fontStyle) state.createGeometry = true;\n      if (newProps.fontVariant !== currentProps.fontVariant) state.createGeometry = true;\n      if (newProps.fontWeight !== currentProps.fontWeight) state.createGeometry = true;\n    },\n    geometryUtils: Text.Utils\n  }), materialId);\n} // direct-volume\n\nexport var ComplexDirectVolumeParams = __assign(__assign({}, StructureDirectVolumeParams), StructureParams);\nexport function ComplexDirectVolumeVisual(builder, materialId) {\n  return ComplexVisual(__assign(__assign({}, builder), {\n    setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\n      builder.setUpdateState(state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure);\n      if (!SizeTheme.areEqual(newTheme.size, currentTheme.size)) state.createGeometry = true;\n    },\n    geometryUtils: DirectVolume.Utils\n  }), materialId);\n} // texture-mesh\n\nexport var ComplexTextureMeshParams = __assign(__assign({}, StructureTextureMeshParams), StructureParams);\nexport function ComplexTextureMeshVisual(builder, materialId) {\n  return ComplexVisual(__assign(__assign({}, builder), {\n    setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\n      builder.setUpdateState(state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure);\n      if (!SizeTheme.areEqual(newTheme.size, currentTheme.size)) state.createGeometry = true;\n    },\n    geometryUtils: TextureMesh.Utils\n  }), materialId);\n}","map":{"version":3,"sources":["../../../src/mol-repr/structure/complex-visual.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { Visual } from '../visual';\r\nimport { Structure, StructureElement } from '../../mol-model/structure';\r\nimport { Geometry } from '../../mol-geo/geometry/geometry';\r\nimport { Theme } from '../../mol-theme/theme';\r\nimport { createIdentityTransform } from '../../mol-geo/geometry/transform-data';\r\nimport { createRenderObject } from '../../mol-gl/render-object';\r\nimport { isEveryLoci, EmptyLoci } from '../../mol-model/loci';\r\nimport { Interval } from '../../mol-data/int';\r\nimport { VisualUpdateState } from '../util';\r\nimport { ColorTheme } from '../../mol-theme/color';\r\nimport { ValueCell, deepEqual } from '../../mol-util';\r\nimport { createSizes } from '../../mol-geo/geometry/size-data';\r\nimport { createColors } from '../../mol-geo/geometry/color-data';\r\nimport { MarkerAction } from '../../mol-util/marker-action';\r\nimport { Mesh } from '../../mol-geo/geometry/mesh/mesh';\r\nimport { Cylinders } from '../../mol-geo/geometry/cylinders/cylinders';\r\nimport { Lines } from '../../mol-geo/geometry/lines/lines';\r\nimport { Text } from '../../mol-geo/geometry/text/text';\r\nimport { SizeTheme } from '../../mol-theme/size';\r\nimport { DirectVolume } from '../../mol-geo/geometry/direct-volume/direct-volume';\r\nimport { createMarkers } from '../../mol-geo/geometry/marker-data';\r\nimport { StructureParams, StructureMeshParams, StructureTextParams, StructureDirectVolumeParams, StructureLinesParams, StructureCylindersParams, StructureTextureMeshParams } from './params';\r\nimport { TextureMesh } from '../../mol-geo/geometry/texture-mesh/texture-mesh';\r\nimport { isPromiseLike } from '../../mol-util/type-helpers';\r\nfunction createComplexRenderObject(structure, geometry, locationIt, theme, props, materialId) {\r\n    var _a = Geometry.getUtils(geometry), createValues = _a.createValues, createRenderableState = _a.createRenderableState;\r\n    var transform = createIdentityTransform();\r\n    var values = createValues(geometry, transform, locationIt, theme, props);\r\n    var state = createRenderableState(props);\r\n    return createRenderObject(geometry.kind, values, state, materialId);\r\n}\r\nexport function ComplexVisual(builder, materialId) {\r\n    var defaultProps = builder.defaultProps, createGeometry = builder.createGeometry, createLocationIterator = builder.createLocationIterator, getLoci = builder.getLoci, eachLocation = builder.eachLocation, setUpdateState = builder.setUpdateState, mustRecreate = builder.mustRecreate, processValues = builder.processValues, dispose = builder.dispose;\r\n    var _a = builder.geometryUtils, updateValues = _a.updateValues, updateBoundingSphere = _a.updateBoundingSphere, updateRenderableState = _a.updateRenderableState, createPositionIterator = _a.createPositionIterator;\r\n    var updateState = VisualUpdateState.create();\r\n    var previousMark = { loci: EmptyLoci, action: MarkerAction.None, status: -1 };\r\n    var renderObject;\r\n    var newProps;\r\n    var newTheme;\r\n    var newStructure;\r\n    var currentProps = Object.assign({}, defaultProps);\r\n    var currentTheme = Theme.createEmpty();\r\n    var currentStructure;\r\n    var geometry;\r\n    var locationIt;\r\n    var positionIt;\r\n    function prepareUpdate(theme, props, structure) {\r\n        if (!structure && !currentStructure) {\r\n            throw new Error('missing structure');\r\n        }\r\n        newProps = Object.assign({}, currentProps, props);\r\n        newTheme = theme;\r\n        newStructure = structure;\r\n        VisualUpdateState.reset(updateState);\r\n        if (!renderObject || !currentStructure) {\r\n            updateState.createNew = true;\r\n            updateState.createGeometry = true;\r\n            return;\r\n        }\r\n        setUpdateState(updateState, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure);\r\n        if (!Structure.areEquivalent(newStructure, currentStructure)) {\r\n            updateState.createGeometry = true;\r\n        }\r\n        if (!Structure.areHierarchiesEqual(newStructure, currentStructure)) {\r\n            updateState.updateTransform = true;\r\n            updateState.createGeometry = true;\r\n        }\r\n        if (!ColorTheme.areEqual(theme.color, currentTheme.color)) {\r\n            updateState.updateColor = true;\r\n        }\r\n        if (!deepEqual(newProps.unitKinds, currentProps.unitKinds)) {\r\n            updateState.createGeometry = true;\r\n        }\r\n        if (currentStructure.child !== newStructure.child) {\r\n            // console.log('new child');\r\n            updateState.createGeometry = true;\r\n        }\r\n        if (updateState.updateSize && !('uSize' in renderObject.values)) {\r\n            updateState.createGeometry = true;\r\n        }\r\n        if (updateState.createGeometry) {\r\n            updateState.updateColor = true;\r\n            updateState.updateSize = true;\r\n        }\r\n    }\r\n    function update(newGeometry) {\r\n        if (updateState.createNew) {\r\n            locationIt = createLocationIterator(newStructure);\r\n            if (newGeometry) {\r\n                renderObject = createComplexRenderObject(newStructure, newGeometry, locationIt, newTheme, newProps, materialId);\r\n                positionIt = createPositionIterator(newGeometry, renderObject.values);\r\n            }\r\n            else {\r\n                throw new Error('expected geometry to be given');\r\n            }\r\n        }\r\n        else {\r\n            if (!renderObject) {\r\n                throw new Error('expected renderObject to be available');\r\n            }\r\n            if (updateState.updateTransform) {\r\n                // console.log('update transform')\r\n                locationIt = createLocationIterator(newStructure);\r\n                var instanceCount = locationIt.instanceCount, groupCount = locationIt.groupCount;\r\n                createMarkers(instanceCount * groupCount, renderObject.values);\r\n            }\r\n            if (updateState.createGeometry) {\r\n                if (newGeometry) {\r\n                    ValueCell.updateIfChanged(renderObject.values.drawCount, Geometry.getDrawCount(newGeometry));\r\n                    ValueCell.updateIfChanged(renderObject.values.uVertexCount, Geometry.getVertexCount(newGeometry));\r\n                }\r\n                else {\r\n                    throw new Error('expected geometry to be given');\r\n                }\r\n            }\r\n            if (updateState.updateTransform || updateState.createGeometry) {\r\n                updateBoundingSphere(renderObject.values, newGeometry || geometry);\r\n                positionIt = createPositionIterator(geometry, renderObject.values);\r\n            }\r\n            if (updateState.updateSize) {\r\n                // not all geometries have size data, so check here\r\n                if ('uSize' in renderObject.values) {\r\n                    createSizes(locationIt, newTheme.size, renderObject.values);\r\n                }\r\n            }\r\n            if (updateState.updateColor) {\r\n                createColors(locationIt, positionIt, newTheme.color, renderObject.values);\r\n            }\r\n            updateValues(renderObject.values, newProps);\r\n            updateRenderableState(renderObject.state, newProps);\r\n        }\r\n        currentProps = newProps;\r\n        currentTheme = newTheme;\r\n        currentStructure = newStructure;\r\n        if (newGeometry)\r\n            geometry = newGeometry;\r\n    }\r\n    function lociIsSuperset(loci) {\r\n        if (isEveryLoci(loci))\r\n            return true;\r\n        if (Structure.isLoci(loci) && Structure.areRootsEquivalent(loci.structure, currentStructure))\r\n            return true;\r\n        if (StructureElement.Loci.is(loci) && Structure.areRootsEquivalent(loci.structure, currentStructure)) {\r\n            if (StructureElement.Loci.isWholeStructure(loci))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    function lociApply(loci, apply, isMarking) {\r\n        if (lociIsSuperset(loci)) {\r\n            return apply(Interval.ofBounds(0, locationIt.groupCount * locationIt.instanceCount));\r\n        }\r\n        else {\r\n            return eachLocation(loci, currentStructure, apply, isMarking);\r\n        }\r\n    }\r\n    function finalize(ctx) {\r\n        if (renderObject) {\r\n            processValues === null || processValues === void 0 ? void 0 : processValues(renderObject.values, geometry, currentProps, currentTheme, ctx.webgl);\r\n        }\r\n    }\r\n    return {\r\n        get groupCount() { return locationIt ? locationIt.count : 0; },\r\n        get renderObject() { return locationIt && locationIt.count ? renderObject : undefined; },\r\n        createOrUpdate: function (ctx, theme, props, structure) {\r\n            if (props === void 0) { props = {}; }\r\n            prepareUpdate(theme, props, structure || currentStructure);\r\n            if (updateState.createGeometry) {\r\n                var newGeometry = createGeometry(ctx, newStructure, newTheme, newProps, geometry);\r\n                if (isPromiseLike(newGeometry)) {\r\n                    return newGeometry.then(function (g) {\r\n                        update(g);\r\n                        finalize(ctx);\r\n                    });\r\n                }\r\n                update(newGeometry);\r\n            }\r\n            else {\r\n                update();\r\n            }\r\n            finalize(ctx);\r\n        },\r\n        getLoci: function (pickingId) {\r\n            return renderObject ? getLoci(pickingId, currentStructure, renderObject.id) : EmptyLoci;\r\n        },\r\n        mark: function (loci, action) {\r\n            return Visual.mark(renderObject, loci, action, lociApply, previousMark);\r\n        },\r\n        setVisibility: function (visible) {\r\n            Visual.setVisibility(renderObject, visible);\r\n        },\r\n        setAlphaFactor: function (alphaFactor) {\r\n            Visual.setAlphaFactor(renderObject, alphaFactor);\r\n        },\r\n        setPickable: function (pickable) {\r\n            Visual.setPickable(renderObject, pickable);\r\n        },\r\n        setColorOnly: function (colorOnly) {\r\n            Visual.setColorOnly(renderObject, colorOnly);\r\n        },\r\n        setTransform: function (matrix, instanceMatrices) {\r\n            Visual.setTransform(renderObject, matrix, instanceMatrices);\r\n        },\r\n        setOverpaint: function (overpaint) {\r\n            Visual.setOverpaint(renderObject, overpaint, lociApply, true);\r\n        },\r\n        setTransparency: function (transparency) {\r\n            Visual.setTransparency(renderObject, transparency, lociApply, true);\r\n        },\r\n        setClipping: function (clipping) {\r\n            Visual.setClipping(renderObject, clipping, lociApply, true);\r\n        },\r\n        destroy: function () {\r\n            dispose === null || dispose === void 0 ? void 0 : dispose(geometry);\r\n            if (renderObject) {\r\n                renderObject.state.disposed = true;\r\n                renderObject = undefined;\r\n            }\r\n        },\r\n        mustRecreate: mustRecreate\r\n    };\r\n}\r\n// mesh\r\nexport var ComplexMeshParams = __assign(__assign({}, StructureMeshParams), StructureParams);\r\nexport function ComplexMeshVisual(builder, materialId) {\r\n    return ComplexVisual(__assign(__assign({}, builder), { setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\r\n            builder.setUpdateState(state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure);\r\n            if (!SizeTheme.areEqual(newTheme.size, currentTheme.size))\r\n                state.createGeometry = true;\r\n        }, geometryUtils: Mesh.Utils }), materialId);\r\n}\r\n// cylinders\r\nexport var ComplexCylindersParams = __assign(__assign({}, StructureCylindersParams), StructureParams);\r\nexport function ComplexCylindersVisual(builder, materialId) {\r\n    return ComplexVisual(__assign(__assign({}, builder), { setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\r\n            builder.setUpdateState(state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure);\r\n            if (!SizeTheme.areEqual(newTheme.size, currentTheme.size))\r\n                state.updateSize = true;\r\n        }, geometryUtils: Cylinders.Utils }), materialId);\r\n}\r\n// lines\r\nexport var ComplexLinesParams = __assign(__assign({}, StructureLinesParams), StructureParams);\r\nexport function ComplexLinesVisual(builder, materialId) {\r\n    return ComplexVisual(__assign(__assign({}, builder), { setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\r\n            builder.setUpdateState(state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure);\r\n            if (!SizeTheme.areEqual(newTheme.size, currentTheme.size))\r\n                state.updateSize = true;\r\n        }, geometryUtils: Lines.Utils }), materialId);\r\n}\r\n// text\r\nexport var ComplexTextParams = __assign(__assign({}, StructureTextParams), StructureParams);\r\nexport function ComplexTextVisual(builder, materialId) {\r\n    return ComplexVisual(__assign(__assign({}, builder), { setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\r\n            builder.setUpdateState(state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure);\r\n            if (!SizeTheme.areEqual(newTheme.size, currentTheme.size))\r\n                state.updateSize = true;\r\n            if (newProps.background !== currentProps.background)\r\n                state.createGeometry = true;\r\n            if (newProps.backgroundMargin !== currentProps.backgroundMargin)\r\n                state.createGeometry = true;\r\n            if (newProps.tether !== currentProps.tether)\r\n                state.createGeometry = true;\r\n            if (newProps.tetherLength !== currentProps.tetherLength)\r\n                state.createGeometry = true;\r\n            if (newProps.tetherBaseWidth !== currentProps.tetherBaseWidth)\r\n                state.createGeometry = true;\r\n            if (newProps.attachment !== currentProps.attachment)\r\n                state.createGeometry = true;\r\n            if (newProps.fontFamily !== currentProps.fontFamily)\r\n                state.createGeometry = true;\r\n            if (newProps.fontQuality !== currentProps.fontQuality)\r\n                state.createGeometry = true;\r\n            if (newProps.fontStyle !== currentProps.fontStyle)\r\n                state.createGeometry = true;\r\n            if (newProps.fontVariant !== currentProps.fontVariant)\r\n                state.createGeometry = true;\r\n            if (newProps.fontWeight !== currentProps.fontWeight)\r\n                state.createGeometry = true;\r\n        }, geometryUtils: Text.Utils }), materialId);\r\n}\r\n// direct-volume\r\nexport var ComplexDirectVolumeParams = __assign(__assign({}, StructureDirectVolumeParams), StructureParams);\r\nexport function ComplexDirectVolumeVisual(builder, materialId) {\r\n    return ComplexVisual(__assign(__assign({}, builder), { setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\r\n            builder.setUpdateState(state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure);\r\n            if (!SizeTheme.areEqual(newTheme.size, currentTheme.size))\r\n                state.createGeometry = true;\r\n        }, geometryUtils: DirectVolume.Utils }), materialId);\r\n}\r\n// texture-mesh\r\nexport var ComplexTextureMeshParams = __assign(__assign({}, StructureTextureMeshParams), StructureParams);\r\nexport function ComplexTextureMeshVisual(builder, materialId) {\r\n    return ComplexVisual(__assign(__assign({}, builder), { setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\r\n            builder.setUpdateState(state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure);\r\n            if (!SizeTheme.areEqual(newTheme.size, currentTheme.size))\r\n                state.createGeometry = true;\r\n        }, geometryUtils: TextureMesh.Utils }), materialId);\r\n}\r\n//# sourceMappingURL=complex-visual.js.map"]},"metadata":{},"sourceType":"module"}