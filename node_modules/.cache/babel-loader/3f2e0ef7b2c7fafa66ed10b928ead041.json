{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { GridLookup3D, Result } from '../../../../mol-math/geometry';\nimport { Vec3 } from '../../../../mol-math/linear-algebra';\nimport { OrderedSet } from '../../../../mol-data/int';\nimport { StructureElement } from '../element';\nexport var StructureResult;\n\n(function (StructureResult) {\n  function add(result, unit, index, distSq) {\n    result.indices[result.count] = index;\n    result.units[result.count] = unit;\n    result.squaredDistances[result.count] = distSq;\n    result.count++;\n  }\n\n  StructureResult.add = add;\n\n  function create() {\n    return {\n      count: 0,\n      indices: [],\n      units: [],\n      squaredDistances: []\n    };\n  }\n\n  StructureResult.create = create;\n\n  function copy(out, result) {\n    for (var i = 0; i < result.count; ++i) {\n      out.indices[i] = result.indices[i];\n      out.units[i] = result.units[i];\n      out.squaredDistances[i] = result.squaredDistances[i];\n    }\n\n    out.count = result.count;\n    return out;\n  }\n\n  StructureResult.copy = copy;\n})(StructureResult || (StructureResult = {}));\n\nexport function StructureLookup3DResultContext() {\n  return {\n    result: StructureResult.create(),\n    closeUnitsResult: Result.create(),\n    unitGroupResult: Result.create()\n  };\n}\n\nvar StructureLookup3D =\n/** @class */\nfunction () {\n  function StructureLookup3D(structure) {\n    this.structure = structure;\n    this.pivot = Vec3();\n    this.findContext = StructureLookup3DResultContext();\n    var units = structure.units,\n        boundary = structure.boundary;\n    var unitCount = units.length;\n    var xs = new Float32Array(unitCount);\n    var ys = new Float32Array(unitCount);\n    var zs = new Float32Array(unitCount);\n    var radius = new Float32Array(unitCount);\n    var center = Vec3();\n\n    for (var i = 0; i < unitCount; i++) {\n      var unit = units[i];\n      var s = unit.boundary.sphere;\n      Vec3.transformMat4(center, s.center, unit.conformation.operator.matrix);\n      xs[i] = center[0];\n      ys[i] = center[1];\n      zs[i] = center[2];\n      radius[i] = s.radius;\n    }\n\n    var position = {\n      x: xs,\n      y: ys,\n      z: zs,\n      radius: radius,\n      indices: OrderedSet.ofBounds(0, unitCount)\n    };\n    this.unitLookup = GridLookup3D(position, boundary);\n  }\n\n  StructureLookup3D.prototype.findUnitIndices = function (x, y, z, radius) {\n    return this.unitLookup.find(x, y, z, radius);\n  };\n\n  StructureLookup3D.prototype.find = function (x, y, z, radius, ctx) {\n    return this._find(x, y, z, radius, ctx !== null && ctx !== void 0 ? ctx : this.findContext);\n  };\n\n  StructureLookup3D.prototype._find = function (x, y, z, radius, ctx) {\n    Result.reset(ctx.result);\n    var units = this.structure.units;\n    var closeUnits = this.unitLookup.find(x, y, z, radius, ctx.closeUnitsResult);\n    if (closeUnits.count === 0) return ctx.result;\n\n    for (var t = 0, _t = closeUnits.count; t < _t; t++) {\n      var unit = units[closeUnits.indices[t]];\n      Vec3.set(this.pivot, x, y, z);\n\n      if (!unit.conformation.operator.isIdentity) {\n        Vec3.transformMat4(this.pivot, this.pivot, unit.conformation.operator.inverse);\n      }\n\n      var unitLookup = unit.lookup3d;\n      var groupResult = unitLookup.find(this.pivot[0], this.pivot[1], this.pivot[2], radius, ctx.unitGroupResult);\n\n      for (var j = 0, _j = groupResult.count; j < _j; j++) {\n        StructureResult.add(ctx.result, unit, groupResult.indices[j], groupResult.squaredDistances[j]);\n      }\n    }\n\n    return ctx.result;\n  };\n\n  StructureLookup3D.prototype.findIntoBuilder = function (x, y, z, radius, builder) {\n    var units = this.structure.units;\n    var closeUnits = this.unitLookup.find(x, y, z, radius);\n    if (closeUnits.count === 0) return;\n\n    for (var t = 0, _t = closeUnits.count; t < _t; t++) {\n      var unit = units[closeUnits.indices[t]];\n      Vec3.set(this.pivot, x, y, z);\n\n      if (!unit.conformation.operator.isIdentity) {\n        Vec3.transformMat4(this.pivot, this.pivot, unit.conformation.operator.inverse);\n      }\n\n      var unitLookup = unit.lookup3d;\n      var groupResult = unitLookup.find(this.pivot[0], this.pivot[1], this.pivot[2], radius);\n      if (groupResult.count === 0) continue;\n      var elements = unit.elements;\n      builder.beginUnit(unit.id);\n\n      for (var j = 0, _j = groupResult.count; j < _j; j++) {\n        builder.addElement(elements[groupResult.indices[j]]);\n      }\n\n      builder.commitUnit();\n    }\n  };\n\n  StructureLookup3D.prototype.findIntoBuilderIf = function (x, y, z, radius, builder, test) {\n    var units = this.structure.units;\n    var closeUnits = this.unitLookup.find(x, y, z, radius);\n    if (closeUnits.count === 0) return;\n    var loc = StructureElement.Location.create(this.structure);\n\n    for (var t = 0, _t = closeUnits.count; t < _t; t++) {\n      var unit = units[closeUnits.indices[t]];\n      Vec3.set(this.pivot, x, y, z);\n\n      if (!unit.conformation.operator.isIdentity) {\n        Vec3.transformMat4(this.pivot, this.pivot, unit.conformation.operator.inverse);\n      }\n\n      var unitLookup = unit.lookup3d;\n      var groupResult = unitLookup.find(this.pivot[0], this.pivot[1], this.pivot[2], radius);\n      if (groupResult.count === 0) continue;\n      var elements = unit.elements;\n      loc.unit = unit;\n      builder.beginUnit(unit.id);\n\n      for (var j = 0, _j = groupResult.count; j < _j; j++) {\n        loc.element = elements[groupResult.indices[j]];\n\n        if (test(loc)) {\n          builder.addElement(loc.element);\n        }\n      }\n\n      builder.commitUnit();\n    }\n  };\n\n  StructureLookup3D.prototype.findIntoBuilderWithRadius = function (x, y, z, pivotR, maxRadius, radius, eRadius, builder) {\n    var units = this.structure.units;\n    var closeUnits = this.unitLookup.find(x, y, z, radius);\n    if (closeUnits.count === 0) return;\n    var se = StructureElement.Location.create(this.structure);\n    var queryRadius = pivotR + maxRadius + radius;\n\n    for (var t = 0, _t = closeUnits.count; t < _t; t++) {\n      var unit = units[closeUnits.indices[t]];\n      Vec3.set(this.pivot, x, y, z);\n\n      if (!unit.conformation.operator.isIdentity) {\n        Vec3.transformMat4(this.pivot, this.pivot, unit.conformation.operator.inverse);\n      }\n\n      var unitLookup = unit.lookup3d;\n      var groupResult = unitLookup.find(this.pivot[0], this.pivot[1], this.pivot[2], queryRadius);\n      if (groupResult.count === 0) continue;\n      var elements = unit.elements;\n      se.unit = unit;\n      builder.beginUnit(unit.id);\n\n      for (var j = 0, _j = groupResult.count; j < _j; j++) {\n        se.element = elements[groupResult.indices[j]];\n        var rr = eRadius(se);\n        if (Math.sqrt(groupResult.squaredDistances[j]) - pivotR - rr > radius) continue;\n        builder.addElement(elements[groupResult.indices[j]]);\n      }\n\n      builder.commitUnit();\n    }\n  };\n\n  StructureLookup3D.prototype.check = function (x, y, z, radius) {\n    var units = this.structure.units;\n    var closeUnits = this.unitLookup.find(x, y, z, radius);\n    if (closeUnits.count === 0) return false;\n\n    for (var t = 0, _t = closeUnits.count; t < _t; t++) {\n      var unit = units[closeUnits.indices[t]];\n      Vec3.set(this.pivot, x, y, z);\n\n      if (!unit.conformation.operator.isIdentity) {\n        Vec3.transformMat4(this.pivot, this.pivot, unit.conformation.operator.inverse);\n      }\n\n      var groupLookup = unit.lookup3d;\n      if (groupLookup.check(this.pivot[0], this.pivot[1], this.pivot[2], radius)) return true;\n    }\n\n    return false;\n  };\n\n  Object.defineProperty(StructureLookup3D.prototype, \"boundary\", {\n    get: function () {\n      return this.structure.boundary;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return StructureLookup3D;\n}();\n\nexport { StructureLookup3D };","map":{"version":3,"sources":["../../../../../src/mol-model/structure/structure/util/lookup3d.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { GridLookup3D, Result } from '../../../../mol-math/geometry';\r\nimport { Vec3 } from '../../../../mol-math/linear-algebra';\r\nimport { OrderedSet } from '../../../../mol-data/int';\r\nimport { StructureElement } from '../element';\r\nexport var StructureResult;\r\n(function (StructureResult) {\r\n    function add(result, unit, index, distSq) {\r\n        result.indices[result.count] = index;\r\n        result.units[result.count] = unit;\r\n        result.squaredDistances[result.count] = distSq;\r\n        result.count++;\r\n    }\r\n    StructureResult.add = add;\r\n    function create() {\r\n        return { count: 0, indices: [], units: [], squaredDistances: [] };\r\n    }\r\n    StructureResult.create = create;\r\n    function copy(out, result) {\r\n        for (var i = 0; i < result.count; ++i) {\r\n            out.indices[i] = result.indices[i];\r\n            out.units[i] = result.units[i];\r\n            out.squaredDistances[i] = result.squaredDistances[i];\r\n        }\r\n        out.count = result.count;\r\n        return out;\r\n    }\r\n    StructureResult.copy = copy;\r\n})(StructureResult || (StructureResult = {}));\r\nexport function StructureLookup3DResultContext() {\r\n    return { result: StructureResult.create(), closeUnitsResult: Result.create(), unitGroupResult: Result.create() };\r\n}\r\nvar StructureLookup3D = /** @class */ (function () {\r\n    function StructureLookup3D(structure) {\r\n        this.structure = structure;\r\n        this.pivot = Vec3();\r\n        this.findContext = StructureLookup3DResultContext();\r\n        var units = structure.units, boundary = structure.boundary;\r\n        var unitCount = units.length;\r\n        var xs = new Float32Array(unitCount);\r\n        var ys = new Float32Array(unitCount);\r\n        var zs = new Float32Array(unitCount);\r\n        var radius = new Float32Array(unitCount);\r\n        var center = Vec3();\r\n        for (var i = 0; i < unitCount; i++) {\r\n            var unit = units[i];\r\n            var s = unit.boundary.sphere;\r\n            Vec3.transformMat4(center, s.center, unit.conformation.operator.matrix);\r\n            xs[i] = center[0];\r\n            ys[i] = center[1];\r\n            zs[i] = center[2];\r\n            radius[i] = s.radius;\r\n        }\r\n        var position = { x: xs, y: ys, z: zs, radius: radius, indices: OrderedSet.ofBounds(0, unitCount) };\r\n        this.unitLookup = GridLookup3D(position, boundary);\r\n    }\r\n    StructureLookup3D.prototype.findUnitIndices = function (x, y, z, radius) {\r\n        return this.unitLookup.find(x, y, z, radius);\r\n    };\r\n    StructureLookup3D.prototype.find = function (x, y, z, radius, ctx) {\r\n        return this._find(x, y, z, radius, ctx !== null && ctx !== void 0 ? ctx : this.findContext);\r\n    };\r\n    StructureLookup3D.prototype._find = function (x, y, z, radius, ctx) {\r\n        Result.reset(ctx.result);\r\n        var units = this.structure.units;\r\n        var closeUnits = this.unitLookup.find(x, y, z, radius, ctx.closeUnitsResult);\r\n        if (closeUnits.count === 0)\r\n            return ctx.result;\r\n        for (var t = 0, _t = closeUnits.count; t < _t; t++) {\r\n            var unit = units[closeUnits.indices[t]];\r\n            Vec3.set(this.pivot, x, y, z);\r\n            if (!unit.conformation.operator.isIdentity) {\r\n                Vec3.transformMat4(this.pivot, this.pivot, unit.conformation.operator.inverse);\r\n            }\r\n            var unitLookup = unit.lookup3d;\r\n            var groupResult = unitLookup.find(this.pivot[0], this.pivot[1], this.pivot[2], radius, ctx.unitGroupResult);\r\n            for (var j = 0, _j = groupResult.count; j < _j; j++) {\r\n                StructureResult.add(ctx.result, unit, groupResult.indices[j], groupResult.squaredDistances[j]);\r\n            }\r\n        }\r\n        return ctx.result;\r\n    };\r\n    StructureLookup3D.prototype.findIntoBuilder = function (x, y, z, radius, builder) {\r\n        var units = this.structure.units;\r\n        var closeUnits = this.unitLookup.find(x, y, z, radius);\r\n        if (closeUnits.count === 0)\r\n            return;\r\n        for (var t = 0, _t = closeUnits.count; t < _t; t++) {\r\n            var unit = units[closeUnits.indices[t]];\r\n            Vec3.set(this.pivot, x, y, z);\r\n            if (!unit.conformation.operator.isIdentity) {\r\n                Vec3.transformMat4(this.pivot, this.pivot, unit.conformation.operator.inverse);\r\n            }\r\n            var unitLookup = unit.lookup3d;\r\n            var groupResult = unitLookup.find(this.pivot[0], this.pivot[1], this.pivot[2], radius);\r\n            if (groupResult.count === 0)\r\n                continue;\r\n            var elements = unit.elements;\r\n            builder.beginUnit(unit.id);\r\n            for (var j = 0, _j = groupResult.count; j < _j; j++) {\r\n                builder.addElement(elements[groupResult.indices[j]]);\r\n            }\r\n            builder.commitUnit();\r\n        }\r\n    };\r\n    StructureLookup3D.prototype.findIntoBuilderIf = function (x, y, z, radius, builder, test) {\r\n        var units = this.structure.units;\r\n        var closeUnits = this.unitLookup.find(x, y, z, radius);\r\n        if (closeUnits.count === 0)\r\n            return;\r\n        var loc = StructureElement.Location.create(this.structure);\r\n        for (var t = 0, _t = closeUnits.count; t < _t; t++) {\r\n            var unit = units[closeUnits.indices[t]];\r\n            Vec3.set(this.pivot, x, y, z);\r\n            if (!unit.conformation.operator.isIdentity) {\r\n                Vec3.transformMat4(this.pivot, this.pivot, unit.conformation.operator.inverse);\r\n            }\r\n            var unitLookup = unit.lookup3d;\r\n            var groupResult = unitLookup.find(this.pivot[0], this.pivot[1], this.pivot[2], radius);\r\n            if (groupResult.count === 0)\r\n                continue;\r\n            var elements = unit.elements;\r\n            loc.unit = unit;\r\n            builder.beginUnit(unit.id);\r\n            for (var j = 0, _j = groupResult.count; j < _j; j++) {\r\n                loc.element = elements[groupResult.indices[j]];\r\n                if (test(loc)) {\r\n                    builder.addElement(loc.element);\r\n                }\r\n            }\r\n            builder.commitUnit();\r\n        }\r\n    };\r\n    StructureLookup3D.prototype.findIntoBuilderWithRadius = function (x, y, z, pivotR, maxRadius, radius, eRadius, builder) {\r\n        var units = this.structure.units;\r\n        var closeUnits = this.unitLookup.find(x, y, z, radius);\r\n        if (closeUnits.count === 0)\r\n            return;\r\n        var se = StructureElement.Location.create(this.structure);\r\n        var queryRadius = pivotR + maxRadius + radius;\r\n        for (var t = 0, _t = closeUnits.count; t < _t; t++) {\r\n            var unit = units[closeUnits.indices[t]];\r\n            Vec3.set(this.pivot, x, y, z);\r\n            if (!unit.conformation.operator.isIdentity) {\r\n                Vec3.transformMat4(this.pivot, this.pivot, unit.conformation.operator.inverse);\r\n            }\r\n            var unitLookup = unit.lookup3d;\r\n            var groupResult = unitLookup.find(this.pivot[0], this.pivot[1], this.pivot[2], queryRadius);\r\n            if (groupResult.count === 0)\r\n                continue;\r\n            var elements = unit.elements;\r\n            se.unit = unit;\r\n            builder.beginUnit(unit.id);\r\n            for (var j = 0, _j = groupResult.count; j < _j; j++) {\r\n                se.element = elements[groupResult.indices[j]];\r\n                var rr = eRadius(se);\r\n                if (Math.sqrt(groupResult.squaredDistances[j]) - pivotR - rr > radius)\r\n                    continue;\r\n                builder.addElement(elements[groupResult.indices[j]]);\r\n            }\r\n            builder.commitUnit();\r\n        }\r\n    };\r\n    StructureLookup3D.prototype.check = function (x, y, z, radius) {\r\n        var units = this.structure.units;\r\n        var closeUnits = this.unitLookup.find(x, y, z, radius);\r\n        if (closeUnits.count === 0)\r\n            return false;\r\n        for (var t = 0, _t = closeUnits.count; t < _t; t++) {\r\n            var unit = units[closeUnits.indices[t]];\r\n            Vec3.set(this.pivot, x, y, z);\r\n            if (!unit.conformation.operator.isIdentity) {\r\n                Vec3.transformMat4(this.pivot, this.pivot, unit.conformation.operator.inverse);\r\n            }\r\n            var groupLookup = unit.lookup3d;\r\n            if (groupLookup.check(this.pivot[0], this.pivot[1], this.pivot[2], radius))\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(StructureLookup3D.prototype, \"boundary\", {\r\n        get: function () {\r\n            return this.structure.boundary;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return StructureLookup3D;\r\n}());\r\nexport { StructureLookup3D };\r\n//# sourceMappingURL=lookup3d.js.map"]},"metadata":{},"sourceType":"module"}