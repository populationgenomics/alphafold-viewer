{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Interval } from '../mol-data/int';\nimport { BitFlags } from './bit-flags';\nimport { assertUnreachable } from './type-helpers';\nexport var MarkerAction;\n\n(function (MarkerAction) {\n  MarkerAction[MarkerAction[\"None\"] = 0] = \"None\";\n  MarkerAction[MarkerAction[\"Highlight\"] = 1] = \"Highlight\";\n  MarkerAction[MarkerAction[\"RemoveHighlight\"] = 2] = \"RemoveHighlight\";\n  MarkerAction[MarkerAction[\"Select\"] = 4] = \"Select\";\n  MarkerAction[MarkerAction[\"Deselect\"] = 8] = \"Deselect\";\n  MarkerAction[MarkerAction[\"Toggle\"] = 16] = \"Toggle\";\n  MarkerAction[MarkerAction[\"Clear\"] = 32] = \"Clear\";\n})(MarkerAction || (MarkerAction = {}));\n\nexport var MarkerActions;\n\n(function (MarkerActions) {\n  MarkerActions.is = BitFlags.has;\n  MarkerActions.All = MarkerAction.Highlight | MarkerAction.RemoveHighlight | MarkerAction.Select | MarkerAction.Deselect | MarkerAction.Toggle | MarkerAction.Clear;\n  MarkerActions.Highlighting = MarkerAction.Highlight | MarkerAction.RemoveHighlight | MarkerAction.Clear;\n  MarkerActions.Selecting = MarkerAction.Select | MarkerAction.Deselect | MarkerAction.Toggle | MarkerAction.Clear;\n\n  function isReverse(a, b) {\n    return a === MarkerAction.Highlight && b === MarkerAction.RemoveHighlight || a === MarkerAction.RemoveHighlight && b === MarkerAction.Highlight || a === MarkerAction.Select && b === MarkerAction.Deselect || a === MarkerAction.Deselect && b === MarkerAction.Select || a === MarkerAction.Toggle && b === MarkerAction.Toggle;\n  }\n\n  MarkerActions.isReverse = isReverse;\n})(MarkerActions || (MarkerActions = {}));\n\nexport function setMarkerValue(array, status, count) {\n  array.fill(status, 0, count);\n}\nexport function applyMarkerActionAtPosition(array, i, action) {\n  switch (action) {\n    case MarkerAction.Highlight:\n      array[i] |= 1;\n      break;\n\n    case MarkerAction.RemoveHighlight:\n      array[i] &= ~1;\n      break;\n\n    case MarkerAction.Select:\n      array[i] |= 2;\n      break;\n\n    case MarkerAction.Deselect:\n      array[i] &= ~2;\n      break;\n\n    case MarkerAction.Toggle:\n      array[i] ^= 2;\n      break;\n\n    case MarkerAction.Clear:\n      array[i] = 0;\n      break;\n  }\n}\nexport function applyMarkerAction(array, set, action) {\n  if (action === MarkerAction.None) return false;\n\n  if (Interval.is(set)) {\n    var start = Interval.start(set);\n    var end = Interval.end(set);\n    var viewStart = start + 3 >> 2;\n    var viewEnd = viewStart + (end - 4 * viewStart >> 2);\n\n    if (viewEnd <= viewStart) {\n      // avoid edge cases with overlapping front/end intervals\n      for (var i = start; i < end; ++i) {\n        applyMarkerActionAtPosition(array, i, action);\n      }\n\n      return true;\n    }\n\n    var view = new Uint32Array(array.buffer, 0, array.buffer.byteLength >> 2);\n    var frontStart = start;\n    var frontEnd = Math.min(4 * viewStart, end);\n    var backStart = Math.max(start, 4 * viewEnd);\n    var backEnd = end;\n\n    switch (action) {\n      case MarkerAction.Highlight:\n        for (var i = viewStart; i < viewEnd; ++i) view[i] |= 0x01010101;\n\n        break;\n\n      case MarkerAction.RemoveHighlight:\n        for (var i = viewStart; i < viewEnd; ++i) view[i] &= ~0x01010101;\n\n        break;\n\n      case MarkerAction.Select:\n        for (var i = viewStart; i < viewEnd; ++i) view[i] |= 0x02020202;\n\n        break;\n\n      case MarkerAction.Deselect:\n        for (var i = viewStart; i < viewEnd; ++i) view[i] &= ~0x02020202;\n\n        break;\n\n      case MarkerAction.Toggle:\n        for (var i = viewStart; i < viewEnd; ++i) view[i] ^= 0x02020202;\n\n        break;\n\n      case MarkerAction.Clear:\n        for (var i = viewStart; i < viewEnd; ++i) view[i] = 0;\n\n        break;\n\n      default:\n        assertUnreachable(action);\n    }\n\n    for (var i = frontStart; i < frontEnd; ++i) {\n      applyMarkerActionAtPosition(array, i, action);\n    }\n\n    for (var i = backStart; i < backEnd; ++i) {\n      applyMarkerActionAtPosition(array, i, action);\n    }\n  } else {\n    switch (action) {\n      case MarkerAction.Highlight:\n        for (var i = 0, il = set.length; i < il; ++i) array[set[i]] |= 1;\n\n        break;\n\n      case MarkerAction.RemoveHighlight:\n        for (var i = 0, il = set.length; i < il; ++i) array[set[i]] &= ~1;\n\n        break;\n\n      case MarkerAction.Select:\n        for (var i = 0, il = set.length; i < il; ++i) array[set[i]] |= 2;\n\n        break;\n\n      case MarkerAction.Deselect:\n        for (var i = 0, il = set.length; i < il; ++i) array[set[i]] &= ~2;\n\n        break;\n\n      case MarkerAction.Toggle:\n        for (var i = 0, il = set.length; i < il; ++i) array[set[i]] ^= 2;\n\n        break;\n\n      case MarkerAction.Clear:\n        for (var i = 0, il = set.length; i < il; ++i) array[set[i]] = 0;\n\n        break;\n\n      default:\n        assertUnreachable(action);\n    }\n  }\n\n  return true;\n}\nexport function getMarkerInfo(action, currentStatus) {\n  var average = -1;\n  var status = -1;\n\n  switch (action) {\n    case MarkerAction.Highlight:\n      if (currentStatus === 0 || currentStatus === 1) {\n        average = 1;\n        status = 1;\n      } else if (currentStatus === 2 || currentStatus === 3) {\n        average = 1;\n        status = 3;\n      } else {\n        average = 1;\n      }\n\n      break;\n\n    case MarkerAction.RemoveHighlight:\n      if (currentStatus === 0 || currentStatus === 1) {\n        average = 0;\n        status = 0;\n      } else if (currentStatus === 2 || currentStatus === 3) {\n        average = 1;\n        status = 2;\n      }\n\n      break;\n\n    case MarkerAction.Select:\n      if (currentStatus === 1 || currentStatus === 3) {\n        average = 1;\n        status = 3;\n      } else if (currentStatus === 0 || currentStatus === 2) {\n        average = 1;\n        status = 2;\n      } else {\n        average = 1;\n      }\n\n      break;\n\n    case MarkerAction.Deselect:\n      if (currentStatus === 1 || currentStatus === 3) {\n        average = 1;\n        status = 1;\n      } else if (currentStatus === 0 || currentStatus === 2) {\n        average = 0;\n        status = 0;\n      }\n\n      break;\n\n    case MarkerAction.Toggle:\n      if (currentStatus === 1) {\n        average = 1;\n        status = 3;\n      } else if (currentStatus === 2) {\n        average = 0;\n        status = 0;\n      } else if (currentStatus === 3) {\n        average = 1;\n        status = 1;\n      } else if (currentStatus === 0) {\n        average = 1;\n        status = 2;\n      }\n\n      break;\n\n    case MarkerAction.Clear:\n      average = 0;\n      status = 0;\n      break;\n  }\n\n  return {\n    average: average,\n    status: status\n  };\n}\n/**\r\n * Assumes the action is applied to a partial set that is\r\n * neither the empty set nor the full set.\r\n */\n\nexport function getPartialMarkerAverage(action, currentStatus) {\n  switch (action) {\n    case MarkerAction.Highlight:\n      return 0.5;\n\n    case MarkerAction.RemoveHighlight:\n      if (currentStatus === 0) {\n        return 0;\n      } else if (currentStatus === 2 || currentStatus === 3) {\n        return 0.5;\n      } else {\n        // 1 | -1\n        return -1;\n      }\n\n    case MarkerAction.Select:\n      return 0.5;\n\n    case MarkerAction.Deselect:\n      if (currentStatus === 1 || currentStatus === 3) {\n        return 0.5;\n      } else if (currentStatus === 0) {\n        return 0;\n      } else {\n        // 2 | -1\n        return -1;\n      }\n\n    case MarkerAction.Toggle:\n      if (currentStatus === -1) {\n        return -1;\n      } else {\n        // 0 | 1 | 2 | 3\n        return 0.5;\n      }\n\n    case MarkerAction.Clear:\n      if (currentStatus === -1) {\n        return -1;\n      } else if (currentStatus === 0) {\n        return 0;\n      } else {\n        // 1 | 2 | 3\n        return 0.5;\n      }\n\n    case MarkerAction.None:\n      return -1;\n\n    default:\n      assertUnreachable(action);\n  }\n}","map":{"version":3,"sources":["../../src/mol-util/marker-action.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Interval } from '../mol-data/int';\r\nimport { BitFlags } from './bit-flags';\r\nimport { assertUnreachable } from './type-helpers';\r\nexport var MarkerAction;\r\n(function (MarkerAction) {\r\n    MarkerAction[MarkerAction[\"None\"] = 0] = \"None\";\r\n    MarkerAction[MarkerAction[\"Highlight\"] = 1] = \"Highlight\";\r\n    MarkerAction[MarkerAction[\"RemoveHighlight\"] = 2] = \"RemoveHighlight\";\r\n    MarkerAction[MarkerAction[\"Select\"] = 4] = \"Select\";\r\n    MarkerAction[MarkerAction[\"Deselect\"] = 8] = \"Deselect\";\r\n    MarkerAction[MarkerAction[\"Toggle\"] = 16] = \"Toggle\";\r\n    MarkerAction[MarkerAction[\"Clear\"] = 32] = \"Clear\";\r\n})(MarkerAction || (MarkerAction = {}));\r\nexport var MarkerActions;\r\n(function (MarkerActions) {\r\n    MarkerActions.is = BitFlags.has;\r\n    MarkerActions.All = (MarkerAction.Highlight | MarkerAction.RemoveHighlight |\r\n        MarkerAction.Select | MarkerAction.Deselect | MarkerAction.Toggle |\r\n        MarkerAction.Clear);\r\n    MarkerActions.Highlighting = (MarkerAction.Highlight | MarkerAction.RemoveHighlight |\r\n        MarkerAction.Clear);\r\n    MarkerActions.Selecting = (MarkerAction.Select | MarkerAction.Deselect | MarkerAction.Toggle |\r\n        MarkerAction.Clear);\r\n    function isReverse(a, b) {\r\n        return ((a === MarkerAction.Highlight && b === MarkerAction.RemoveHighlight) ||\r\n            (a === MarkerAction.RemoveHighlight && b === MarkerAction.Highlight) ||\r\n            (a === MarkerAction.Select && b === MarkerAction.Deselect) ||\r\n            (a === MarkerAction.Deselect && b === MarkerAction.Select) ||\r\n            (a === MarkerAction.Toggle && b === MarkerAction.Toggle));\r\n    }\r\n    MarkerActions.isReverse = isReverse;\r\n})(MarkerActions || (MarkerActions = {}));\r\nexport function setMarkerValue(array, status, count) {\r\n    array.fill(status, 0, count);\r\n}\r\nexport function applyMarkerActionAtPosition(array, i, action) {\r\n    switch (action) {\r\n        case MarkerAction.Highlight:\r\n            array[i] |= 1;\r\n            break;\r\n        case MarkerAction.RemoveHighlight:\r\n            array[i] &= ~1;\r\n            break;\r\n        case MarkerAction.Select:\r\n            array[i] |= 2;\r\n            break;\r\n        case MarkerAction.Deselect:\r\n            array[i] &= ~2;\r\n            break;\r\n        case MarkerAction.Toggle:\r\n            array[i] ^= 2;\r\n            break;\r\n        case MarkerAction.Clear:\r\n            array[i] = 0;\r\n            break;\r\n    }\r\n}\r\nexport function applyMarkerAction(array, set, action) {\r\n    if (action === MarkerAction.None)\r\n        return false;\r\n    if (Interval.is(set)) {\r\n        var start = Interval.start(set);\r\n        var end = Interval.end(set);\r\n        var viewStart = (start + 3) >> 2;\r\n        var viewEnd = viewStart + ((end - 4 * viewStart) >> 2);\r\n        if (viewEnd <= viewStart) {\r\n            // avoid edge cases with overlapping front/end intervals\r\n            for (var i = start; i < end; ++i) {\r\n                applyMarkerActionAtPosition(array, i, action);\r\n            }\r\n            return true;\r\n        }\r\n        var view = new Uint32Array(array.buffer, 0, array.buffer.byteLength >> 2);\r\n        var frontStart = start;\r\n        var frontEnd = Math.min(4 * viewStart, end);\r\n        var backStart = Math.max(start, 4 * viewEnd);\r\n        var backEnd = end;\r\n        switch (action) {\r\n            case MarkerAction.Highlight:\r\n                for (var i = viewStart; i < viewEnd; ++i)\r\n                    view[i] |= 0x01010101;\r\n                break;\r\n            case MarkerAction.RemoveHighlight:\r\n                for (var i = viewStart; i < viewEnd; ++i)\r\n                    view[i] &= ~0x01010101;\r\n                break;\r\n            case MarkerAction.Select:\r\n                for (var i = viewStart; i < viewEnd; ++i)\r\n                    view[i] |= 0x02020202;\r\n                break;\r\n            case MarkerAction.Deselect:\r\n                for (var i = viewStart; i < viewEnd; ++i)\r\n                    view[i] &= ~0x02020202;\r\n                break;\r\n            case MarkerAction.Toggle:\r\n                for (var i = viewStart; i < viewEnd; ++i)\r\n                    view[i] ^= 0x02020202;\r\n                break;\r\n            case MarkerAction.Clear:\r\n                for (var i = viewStart; i < viewEnd; ++i)\r\n                    view[i] = 0;\r\n                break;\r\n            default:\r\n                assertUnreachable(action);\r\n        }\r\n        for (var i = frontStart; i < frontEnd; ++i) {\r\n            applyMarkerActionAtPosition(array, i, action);\r\n        }\r\n        for (var i = backStart; i < backEnd; ++i) {\r\n            applyMarkerActionAtPosition(array, i, action);\r\n        }\r\n    }\r\n    else {\r\n        switch (action) {\r\n            case MarkerAction.Highlight:\r\n                for (var i = 0, il = set.length; i < il; ++i)\r\n                    array[set[i]] |= 1;\r\n                break;\r\n            case MarkerAction.RemoveHighlight:\r\n                for (var i = 0, il = set.length; i < il; ++i)\r\n                    array[set[i]] &= ~1;\r\n                break;\r\n            case MarkerAction.Select:\r\n                for (var i = 0, il = set.length; i < il; ++i)\r\n                    array[set[i]] |= 2;\r\n                break;\r\n            case MarkerAction.Deselect:\r\n                for (var i = 0, il = set.length; i < il; ++i)\r\n                    array[set[i]] &= ~2;\r\n                break;\r\n            case MarkerAction.Toggle:\r\n                for (var i = 0, il = set.length; i < il; ++i)\r\n                    array[set[i]] ^= 2;\r\n                break;\r\n            case MarkerAction.Clear:\r\n                for (var i = 0, il = set.length; i < il; ++i)\r\n                    array[set[i]] = 0;\r\n                break;\r\n            default:\r\n                assertUnreachable(action);\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function getMarkerInfo(action, currentStatus) {\r\n    var average = -1;\r\n    var status = -1;\r\n    switch (action) {\r\n        case MarkerAction.Highlight:\r\n            if (currentStatus === 0 || currentStatus === 1) {\r\n                average = 1;\r\n                status = 1;\r\n            }\r\n            else if (currentStatus === 2 || currentStatus === 3) {\r\n                average = 1;\r\n                status = 3;\r\n            }\r\n            else {\r\n                average = 1;\r\n            }\r\n            break;\r\n        case MarkerAction.RemoveHighlight:\r\n            if (currentStatus === 0 || currentStatus === 1) {\r\n                average = 0;\r\n                status = 0;\r\n            }\r\n            else if (currentStatus === 2 || currentStatus === 3) {\r\n                average = 1;\r\n                status = 2;\r\n            }\r\n            break;\r\n        case MarkerAction.Select:\r\n            if (currentStatus === 1 || currentStatus === 3) {\r\n                average = 1;\r\n                status = 3;\r\n            }\r\n            else if (currentStatus === 0 || currentStatus === 2) {\r\n                average = 1;\r\n                status = 2;\r\n            }\r\n            else {\r\n                average = 1;\r\n            }\r\n            break;\r\n        case MarkerAction.Deselect:\r\n            if (currentStatus === 1 || currentStatus === 3) {\r\n                average = 1;\r\n                status = 1;\r\n            }\r\n            else if (currentStatus === 0 || currentStatus === 2) {\r\n                average = 0;\r\n                status = 0;\r\n            }\r\n            break;\r\n        case MarkerAction.Toggle:\r\n            if (currentStatus === 1) {\r\n                average = 1;\r\n                status = 3;\r\n            }\r\n            else if (currentStatus === 2) {\r\n                average = 0;\r\n                status = 0;\r\n            }\r\n            else if (currentStatus === 3) {\r\n                average = 1;\r\n                status = 1;\r\n            }\r\n            else if (currentStatus === 0) {\r\n                average = 1;\r\n                status = 2;\r\n            }\r\n            break;\r\n        case MarkerAction.Clear:\r\n            average = 0;\r\n            status = 0;\r\n            break;\r\n    }\r\n    return { average: average, status: status };\r\n}\r\n/**\r\n * Assumes the action is applied to a partial set that is\r\n * neither the empty set nor the full set.\r\n */\r\nexport function getPartialMarkerAverage(action, currentStatus) {\r\n    switch (action) {\r\n        case MarkerAction.Highlight:\r\n            return 0.5;\r\n        case MarkerAction.RemoveHighlight:\r\n            if (currentStatus === 0) {\r\n                return 0;\r\n            }\r\n            else if (currentStatus === 2 || currentStatus === 3) {\r\n                return 0.5;\r\n            }\r\n            else { // 1 | -1\r\n                return -1;\r\n            }\r\n        case MarkerAction.Select:\r\n            return 0.5;\r\n        case MarkerAction.Deselect:\r\n            if (currentStatus === 1 || currentStatus === 3) {\r\n                return 0.5;\r\n            }\r\n            else if (currentStatus === 0) {\r\n                return 0;\r\n            }\r\n            else { // 2 | -1\r\n                return -1;\r\n            }\r\n        case MarkerAction.Toggle:\r\n            if (currentStatus === -1) {\r\n                return -1;\r\n            }\r\n            else { // 0 | 1 | 2 | 3\r\n                return 0.5;\r\n            }\r\n        case MarkerAction.Clear:\r\n            if (currentStatus === -1) {\r\n                return -1;\r\n            }\r\n            else if (currentStatus === 0) {\r\n                return 0;\r\n            }\r\n            else { // 1 | 2 | 3\r\n                return 0.5;\r\n            }\r\n        case MarkerAction.None:\r\n            return -1;\r\n        default:\r\n            assertUnreachable(action);\r\n    }\r\n}\r\n//# sourceMappingURL=marker-action.js.map"]},"metadata":{},"sourceType":"module"}