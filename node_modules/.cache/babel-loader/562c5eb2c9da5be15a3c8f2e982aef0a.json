{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign, __spreadArray } from \"tslib\";\nimport { Color } from './color';\nimport { getColorListFromName } from './lists';\nimport { defaults } from '../../mol-util';\nimport { ScaleLegend } from '../legend';\nimport { SortedArray } from '../../mol-data/int';\nimport { clamp } from '../../mol-math/interpolate';\nexport var DefaultColorScaleProps = {\n  domain: [0, 1],\n  reverse: false,\n  listOrName: 'red-yellow-blue',\n  minLabel: '',\n  maxLabel: ''\n};\nexport var ColorScale;\n\n(function (ColorScale) {\n  function create(props) {\n    var _a = __assign(__assign({}, DefaultColorScaleProps), props),\n        domain = _a.domain,\n        reverse = _a.reverse,\n        listOrName = _a.listOrName;\n\n    var list = typeof listOrName === 'string' ? getColorListFromName(listOrName).list : listOrName;\n    var colors = reverse ? list.slice().reverse() : list;\n    var count1 = colors.length - 1;\n    var diff = 0,\n        min = 0,\n        max = 0;\n\n    function setDomain(_min, _max) {\n      min = _min;\n      max = _max;\n      diff = max - min || 1;\n    }\n\n    setDomain(domain[0], domain[1]);\n    var minLabel = defaults(props.minLabel, min.toString());\n    var maxLabel = defaults(props.maxLabel, max.toString());\n    var color;\n    var hasOffsets = colors.every(function (c) {\n      return Array.isArray(c);\n    });\n\n    if (hasOffsets) {\n      var sorted = __spreadArray([], colors, true);\n\n      sorted.sort(function (a, b) {\n        return a[1] - b[1];\n      });\n      var src_1 = sorted.map(function (c) {\n        return c[0];\n      });\n      var off_1 = SortedArray.ofSortedArray(sorted.map(function (c) {\n        return c[1];\n      }));\n      var max_1 = src_1.length - 1;\n\n      color = function (v) {\n        var t = clamp((v - min) / diff, 0, 1);\n        var i = SortedArray.findPredecessorIndex(off_1, t);\n\n        if (i === 0) {\n          return src_1[min];\n        } else if (i > max_1) {\n          return src_1[max_1];\n        }\n\n        var o1 = off_1[i - 1],\n            o2 = off_1[i];\n        var t1 = clamp((t - o1) / (o2 - o1), 0, 1); // TODO: cache the deltas?\n\n        return Color.interpolate(src_1[i - 1], src_1[i], t1);\n      };\n    } else {\n      color = function (value) {\n        var t = Math.min(colors.length - 1, Math.max(0, (value - min) / diff * count1));\n        var tf = Math.floor(t);\n        var c1 = colors[tf];\n        var c2 = colors[Math.ceil(t)];\n        return Color.interpolate(c1, c2, t - tf);\n      };\n    }\n\n    return {\n      color: color,\n      colorToArray: function (value, array, offset) {\n        Color.toArray(color(value), array, offset);\n      },\n      normalizedColorToArray: function (value, array, offset) {\n        Color.toArrayNormalized(color(value), array, offset);\n      },\n      setDomain: setDomain,\n\n      get legend() {\n        return ScaleLegend(minLabel, maxLabel, colors);\n      }\n\n    };\n  }\n\n  ColorScale.create = create;\n})(ColorScale || (ColorScale = {}));","map":{"version":3,"sources":["../../../src/mol-util/color/scale.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign, __spreadArray } from \"tslib\";\r\nimport { Color } from './color';\r\nimport { getColorListFromName } from './lists';\r\nimport { defaults } from '../../mol-util';\r\nimport { ScaleLegend } from '../legend';\r\nimport { SortedArray } from '../../mol-data/int';\r\nimport { clamp } from '../../mol-math/interpolate';\r\nexport var DefaultColorScaleProps = {\r\n    domain: [0, 1],\r\n    reverse: false,\r\n    listOrName: 'red-yellow-blue',\r\n    minLabel: '',\r\n    maxLabel: '',\r\n};\r\nexport var ColorScale;\r\n(function (ColorScale) {\r\n    function create(props) {\r\n        var _a = __assign(__assign({}, DefaultColorScaleProps), props), domain = _a.domain, reverse = _a.reverse, listOrName = _a.listOrName;\r\n        var list = typeof listOrName === 'string' ? getColorListFromName(listOrName).list : listOrName;\r\n        var colors = reverse ? list.slice().reverse() : list;\r\n        var count1 = colors.length - 1;\r\n        var diff = 0, min = 0, max = 0;\r\n        function setDomain(_min, _max) {\r\n            min = _min;\r\n            max = _max;\r\n            diff = (max - min) || 1;\r\n        }\r\n        setDomain(domain[0], domain[1]);\r\n        var minLabel = defaults(props.minLabel, min.toString());\r\n        var maxLabel = defaults(props.maxLabel, max.toString());\r\n        var color;\r\n        var hasOffsets = colors.every(function (c) { return Array.isArray(c); });\r\n        if (hasOffsets) {\r\n            var sorted = __spreadArray([], colors, true);\r\n            sorted.sort(function (a, b) { return a[1] - b[1]; });\r\n            var src_1 = sorted.map(function (c) { return c[0]; });\r\n            var off_1 = SortedArray.ofSortedArray(sorted.map(function (c) { return c[1]; }));\r\n            var max_1 = src_1.length - 1;\r\n            color = function (v) {\r\n                var t = clamp((v - min) / diff, 0, 1);\r\n                var i = SortedArray.findPredecessorIndex(off_1, t);\r\n                if (i === 0) {\r\n                    return src_1[min];\r\n                }\r\n                else if (i > max_1) {\r\n                    return src_1[max_1];\r\n                }\r\n                var o1 = off_1[i - 1], o2 = off_1[i];\r\n                var t1 = clamp((t - o1) / (o2 - o1), 0, 1); // TODO: cache the deltas?\r\n                return Color.interpolate(src_1[i - 1], src_1[i], t1);\r\n            };\r\n        }\r\n        else {\r\n            color = function (value) {\r\n                var t = Math.min(colors.length - 1, Math.max(0, ((value - min) / diff) * count1));\r\n                var tf = Math.floor(t);\r\n                var c1 = colors[tf];\r\n                var c2 = colors[Math.ceil(t)];\r\n                return Color.interpolate(c1, c2, t - tf);\r\n            };\r\n        }\r\n        return {\r\n            color: color,\r\n            colorToArray: function (value, array, offset) {\r\n                Color.toArray(color(value), array, offset);\r\n            },\r\n            normalizedColorToArray: function (value, array, offset) {\r\n                Color.toArrayNormalized(color(value), array, offset);\r\n            },\r\n            setDomain: setDomain,\r\n            get legend() { return ScaleLegend(minLabel, maxLabel, colors); }\r\n        };\r\n    }\r\n    ColorScale.create = create;\r\n})(ColorScale || (ColorScale = {}));\r\n//# sourceMappingURL=scale.js.map"]},"metadata":{},"sourceType":"module"}