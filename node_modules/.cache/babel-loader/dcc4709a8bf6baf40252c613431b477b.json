{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign, __awaiter, __extends, __generator } from \"tslib\";\nimport { InteractionsRepresentationProvider } from '../../../../mol-model-props/computed/representations/interactions';\nimport { InteractionTypeColorThemeProvider } from '../../../../mol-model-props/computed/themes/interaction-type';\nimport { StructureElement } from '../../../../mol-model/structure';\nimport { createStructureRepresentationParams } from '../../../../mol-plugin-state/helpers/structure-representation-params';\nimport { StateTransforms } from '../../../../mol-plugin-state/transforms';\nimport { PluginBehavior } from '../../../behavior';\nimport { MolScriptBuilder as MS } from '../../../../mol-script/language/builder';\nimport { StateSelection, StateTransform } from '../../../../mol-state';\nimport { SizeTheme } from '../../../../mol-theme/size';\nimport { ParamDefinition as PD } from '../../../../mol-util/param-definition';\nimport { PluginCommands } from '../../../commands';\n\nvar StructureFocusRepresentationParams = function (plugin) {\n  var reprParams = StateTransforms.Representation.StructureRepresentation3D.definition.params(void 0, plugin);\n  return {\n    expandRadius: PD.Numeric(5, {\n      min: 1,\n      max: 10,\n      step: 1\n    }),\n    targetParams: PD.Group(reprParams, {\n      label: 'Target',\n      customDefault: createStructureRepresentationParams(plugin, void 0, {\n        type: 'ball-and-stick',\n        size: 'physical',\n        typeParams: {\n          sizeFactor: 0.26,\n          alpha: 0.51\n        }\n      })\n    }),\n    surroundingsParams: PD.Group(reprParams, {\n      label: 'Surroundings',\n      customDefault: createStructureRepresentationParams(plugin, void 0, {\n        type: 'ball-and-stick',\n        size: 'physical',\n        typeParams: {\n          sizeFactor: 0.16\n        }\n      })\n    }),\n    nciParams: PD.Group(reprParams, {\n      label: 'Non-covalent Int.',\n      customDefault: createStructureRepresentationParams(plugin, void 0, {\n        type: InteractionsRepresentationProvider,\n        color: InteractionTypeColorThemeProvider,\n        size: SizeTheme.BuiltIn.uniform\n      })\n    }),\n    components: PD.MultiSelect(FocusComponents, PD.arrayToOptions(FocusComponents)),\n    excludeTargetFromSurroundings: PD.Boolean(false, {\n      label: 'Exclude Target',\n      description: 'Exclude the focus \"target\" from the surroudings component.'\n    }),\n    ignoreHydrogens: PD.Boolean(false)\n  };\n};\n\nvar FocusComponents = ['target', 'surroundings', 'interactions'];\nexport var StructureFocusRepresentationTags;\n\n(function (StructureFocusRepresentationTags) {\n  StructureFocusRepresentationTags[\"TargetSel\"] = \"structure-focus-target-sel\";\n  StructureFocusRepresentationTags[\"TargetRepr\"] = \"structure-focus-target-repr\";\n  StructureFocusRepresentationTags[\"SurrSel\"] = \"structure-focus-surr-sel\";\n  StructureFocusRepresentationTags[\"SurrRepr\"] = \"structure-focus-surr-repr\";\n  StructureFocusRepresentationTags[\"SurrNciRepr\"] = \"structure-focus-surr-nci-repr\";\n})(StructureFocusRepresentationTags || (StructureFocusRepresentationTags = {}));\n\nvar TagSet = new Set([StructureFocusRepresentationTags.TargetSel, StructureFocusRepresentationTags.TargetRepr, StructureFocusRepresentationTags.SurrSel, StructureFocusRepresentationTags.SurrRepr, StructureFocusRepresentationTags.SurrNciRepr]);\n\nvar StructureFocusRepresentationBehavior =\n/** @class */\nfunction (_super) {\n  __extends(StructureFocusRepresentationBehavior, _super);\n\n  function StructureFocusRepresentationBehavior() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.currentSource = void 0;\n    return _this;\n  }\n\n  Object.defineProperty(StructureFocusRepresentationBehavior.prototype, \"surrLabel\", {\n    get: function () {\n      return \"[Focus] Surroundings (\" + this.params.expandRadius + \" \\u00C5)\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StructureFocusRepresentationBehavior.prototype.getReprParams = function (reprParams) {\n    return __assign(__assign({}, this.params.targetParams), {\n      type: {\n        name: reprParams.type.name,\n        params: __assign(__assign({}, reprParams.type.params), {\n          ignoreHydrogens: this.params.ignoreHydrogens\n        })\n      }\n    });\n  };\n\n  StructureFocusRepresentationBehavior.prototype.ensureShape = function (cell) {\n    var _a;\n\n    var state = this.plugin.state.data,\n        tree = state.tree;\n    var builder = state.build();\n    var refs = StateSelection.findUniqueTagsInSubtree(tree, cell.transform.ref, TagSet); // Selections\n\n    if (!refs[StructureFocusRepresentationTags.TargetSel]) {\n      refs[StructureFocusRepresentationTags.TargetSel] = builder.to(cell).apply(StateTransforms.Model.StructureSelectionFromBundle, {\n        bundle: StructureElement.Bundle.Empty,\n        label: '[Focus] Target'\n      }, {\n        tags: StructureFocusRepresentationTags.TargetSel\n      }).ref;\n    }\n\n    if (!refs[StructureFocusRepresentationTags.SurrSel]) {\n      refs[StructureFocusRepresentationTags.SurrSel] = builder.to(cell).apply(StateTransforms.Model.StructureSelectionFromExpression, {\n        expression: MS.struct.generator.empty(),\n        label: this.surrLabel\n      }, {\n        tags: StructureFocusRepresentationTags.SurrSel\n      }).ref;\n    }\n\n    var components = this.params.components; // Representations\n\n    if (components.indexOf('target') >= 0 && !refs[StructureFocusRepresentationTags.TargetRepr]) {\n      refs[StructureFocusRepresentationTags.TargetRepr] = builder.to(refs[StructureFocusRepresentationTags.TargetSel]).apply(StateTransforms.Representation.StructureRepresentation3D, this.getReprParams(this.params.targetParams), {\n        tags: StructureFocusRepresentationTags.TargetRepr\n      }).ref;\n    }\n\n    if (components.indexOf('surroundings') >= 0 && !refs[StructureFocusRepresentationTags.SurrRepr]) {\n      refs[StructureFocusRepresentationTags.SurrRepr] = builder.to(refs[StructureFocusRepresentationTags.SurrSel]).apply(StateTransforms.Representation.StructureRepresentation3D, this.getReprParams(this.params.surroundingsParams), {\n        tags: StructureFocusRepresentationTags.SurrRepr\n      }).ref;\n    }\n\n    if (components.indexOf('interactions') >= 0 && !refs[StructureFocusRepresentationTags.SurrNciRepr] && cell.obj && InteractionsRepresentationProvider.isApplicable((_a = cell.obj) === null || _a === void 0 ? void 0 : _a.data)) {\n      refs[StructureFocusRepresentationTags.SurrNciRepr] = builder.to(refs[StructureFocusRepresentationTags.SurrSel]).apply(StateTransforms.Representation.StructureRepresentation3D, this.params.nciParams, {\n        tags: StructureFocusRepresentationTags.SurrNciRepr\n      }).ref;\n    }\n\n    return {\n      state: state,\n      builder: builder,\n      refs: refs\n    };\n  };\n\n  StructureFocusRepresentationBehavior.prototype.clear = function (root) {\n    var state = this.plugin.state.data;\n    this.currentSource = void 0;\n    var foci = state.select(StateSelection.Generators.byRef(root).subtree().withTag(StructureFocusRepresentationTags.TargetSel));\n    var surrs = state.select(StateSelection.Generators.byRef(root).subtree().withTag(StructureFocusRepresentationTags.SurrSel));\n    if (foci.length === 0 && surrs.length === 0) return;\n    var update = state.build();\n    var bundle = StructureElement.Bundle.Empty;\n\n    for (var _i = 0, foci_1 = foci; _i < foci_1.length; _i++) {\n      var f = foci_1[_i];\n      update.to(f).update(StateTransforms.Model.StructureSelectionFromBundle, function (old) {\n        return __assign(__assign({}, old), {\n          bundle: bundle\n        });\n      });\n    }\n\n    var expression = MS.struct.generator.empty();\n\n    for (var _a = 0, surrs_1 = surrs; _a < surrs_1.length; _a++) {\n      var s = surrs_1[_a];\n      update.to(s).update(StateTransforms.Model.StructureSelectionFromExpression, function (old) {\n        return __assign(__assign({}, old), {\n          expression: expression\n        });\n      });\n    }\n\n    return PluginCommands.State.Update(this.plugin, {\n      state: state,\n      tree: update,\n      options: {\n        doNotLogTiming: true,\n        doNotUpdateCurrent: true\n      }\n    });\n  };\n\n  StructureFocusRepresentationBehavior.prototype.focus = function (sourceLoci) {\n    return __awaiter(this, void 0, void 0, function () {\n      var parent, loci, residueLoci, residueBundle, target, surroundings, _a, state, builder, refs;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            parent = this.plugin.helpers.substructureParent.get(sourceLoci.structure);\n            if (!parent || !parent.obj) return [2\n            /*return*/\n            ];\n            this.currentSource = sourceLoci;\n            loci = StructureElement.Loci.remap(sourceLoci, parent.obj.data);\n            residueLoci = StructureElement.Loci.extendToWholeResidues(loci);\n            residueBundle = StructureElement.Bundle.fromLoci(residueLoci);\n            target = StructureElement.Bundle.toExpression(residueBundle);\n            surroundings = MS.struct.modifier.includeSurroundings({\n              0: target,\n              radius: this.params.expandRadius,\n              'as-whole-residues': true\n            });\n\n            if (this.params.excludeTargetFromSurroundings) {\n              surroundings = MS.struct.modifier.exceptBy({\n                0: surroundings,\n                by: target\n              });\n            }\n\n            _a = this.ensureShape(parent), state = _a.state, builder = _a.builder, refs = _a.refs;\n            builder.to(refs[StructureFocusRepresentationTags.TargetSel]).update(StateTransforms.Model.StructureSelectionFromBundle, function (old) {\n              return __assign(__assign({}, old), {\n                bundle: residueBundle\n              });\n            });\n            builder.to(refs[StructureFocusRepresentationTags.SurrSel]).update(StateTransforms.Model.StructureSelectionFromExpression, function (old) {\n              return __assign(__assign({}, old), {\n                expression: surroundings,\n                label: _this.surrLabel\n              });\n            });\n            return [4\n            /*yield*/\n            , PluginCommands.State.Update(this.plugin, {\n              state: state,\n              tree: builder,\n              options: {\n                doNotLogTiming: true,\n                doNotUpdateCurrent: true\n              }\n            })];\n\n          case 1:\n            _b.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  StructureFocusRepresentationBehavior.prototype.register = function (ref) {\n    var _this = this;\n\n    this.subscribeObservable(this.plugin.managers.structure.focus.behaviors.current, function (entry) {\n      if (entry) _this.focus(entry.loci);else _this.clear(StateTransform.RootRef);\n    });\n  };\n\n  StructureFocusRepresentationBehavior.prototype.update = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var old, state, builder, all, components, hasComponent, _i, _a, repr, _b, _c, repr, _d, _e, repr;\n\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            old = this.params;\n            this.params = params;\n\n            if (old.excludeTargetFromSurroundings !== params.excludeTargetFromSurroundings) {\n              if (this.currentSource) {\n                this.focus(this.currentSource);\n              }\n\n              return [2\n              /*return*/\n              , true];\n            }\n\n            state = this.plugin.state.data;\n            builder = state.build();\n            all = StateSelection.Generators.root.subtree();\n            components = this.params.components;\n            hasComponent = components.indexOf('target') >= 0;\n\n            for (_i = 0, _a = state.select(all.withTag(StructureFocusRepresentationTags.TargetRepr)); _i < _a.length; _i++) {\n              repr = _a[_i];\n              if (!hasComponent) builder.delete(repr.transform.ref);else builder.to(repr).update(this.getReprParams(this.params.targetParams));\n            }\n\n            hasComponent = components.indexOf('surroundings') >= 0;\n\n            for (_b = 0, _c = state.select(all.withTag(StructureFocusRepresentationTags.SurrRepr)); _b < _c.length; _b++) {\n              repr = _c[_b];\n              if (!hasComponent) builder.delete(repr.transform.ref);else builder.to(repr).update(this.getReprParams(this.params.surroundingsParams));\n            }\n\n            hasComponent = components.indexOf('interactions') >= 0;\n\n            for (_d = 0, _e = state.select(all.withTag(StructureFocusRepresentationTags.SurrNciRepr)); _d < _e.length; _d++) {\n              repr = _e[_d];\n              if (!hasComponent) builder.delete(repr.transform.ref);else builder.to(repr).update(this.params.nciParams);\n            }\n\n            return [4\n            /*yield*/\n            , PluginCommands.State.Update(this.plugin, {\n              state: state,\n              tree: builder,\n              options: {\n                doNotLogTiming: true,\n                doNotUpdateCurrent: true\n              }\n            })];\n\n          case 1:\n            _f.sent();\n\n            if (params.expandRadius !== old.expandRadius) {\n              if (this.currentSource) {\n                this.focus(this.currentSource);\n              }\n\n              return [2\n              /*return*/\n              , true];\n            }\n\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n\n  return StructureFocusRepresentationBehavior;\n}(PluginBehavior.WithSubscribers);\n\nexport var StructureFocusRepresentation = PluginBehavior.create({\n  name: 'create-structure-focus-representation',\n  display: {\n    name: 'Structure Focus Representation'\n  },\n  category: 'interaction',\n  ctor: StructureFocusRepresentationBehavior,\n  params: function (_, plugin) {\n    return StructureFocusRepresentationParams(plugin);\n  }\n});","map":{"version":3,"sources":["../../../../../src/mol-plugin/behavior/dynamic/selection/structure-focus-representation.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;;AAEH,SAAS,kCAAT,QAAmD,mEAAnD;AACA,SAAS,iCAAT,QAAkD,8DAAlD;AACA,SAAS,gBAAT,QAAiC,iCAAjC;AACA,SAAS,mCAAT,QAAoD,sEAApD;AAEA,SAAS,eAAT,QAAgC,yCAAhC;AACA,SAAS,cAAT,QAA+B,mBAA/B;AACA,SAAS,gBAAgB,IAAI,EAA7B,QAAuC,yCAAvC;AACA,SAA0B,cAA1B,EAA0C,cAA1C,QAAgE,uBAAhE;AACA,SAAS,SAAT,QAA0B,4BAA1B;AACA,SAAS,eAAe,IAAI,EAA5B,QAAsC,uCAAtC;AACA,SAAS,cAAT,QAA+B,mBAA/B;;AAGA,IAAM,kCAAkC,GAAG,UAAC,MAAD,EAAsB;AAC7D,MAAM,UAAU,GAAG,eAAe,CAAC,cAAhB,CAA+B,yBAA/B,CAAyD,UAAzD,CAAoE,MAApE,CAA4E,KAAK,CAAjF,EAAoF,MAApF,CAAnB;AACA,SAAO;AACH,IAAA,YAAY,EAAE,EAAE,CAAC,OAAH,CAAW,CAAX,EAAc;AAAE,MAAA,GAAG,EAAE,CAAP;AAAU,MAAA,GAAG,EAAE,EAAf;AAAmB,MAAA,IAAI,EAAE;AAAzB,KAAd,CADX;AAEH,IAAA,YAAY,EAAE,EAAE,CAAC,KAAH,CAAS,UAAT,EAAqB;AAC/B,MAAA,KAAK,EAAE,QADwB;AAE/B,MAAA,aAAa,EAAE,mCAAmC,CAAC,MAAD,EAAS,KAAK,CAAd,EAAiB;AAAE,QAAA,IAAI,EAAE,gBAAR;AAA0B,QAAA,IAAI,EAAE,UAAhC;AAA4C,QAAA,UAAU,EAAE;AAAE,UAAA,UAAU,EAAE,IAAd;AAAoB,UAAA,KAAK,EAAE;AAA3B;AAAxD,OAAjB;AAFnB,KAArB,CAFX;AAMH,IAAA,kBAAkB,EAAE,EAAE,CAAC,KAAH,CAAS,UAAT,EAAqB;AACrC,MAAA,KAAK,EAAE,cAD8B;AAErC,MAAA,aAAa,EAAE,mCAAmC,CAAC,MAAD,EAAS,KAAK,CAAd,EAAiB;AAAE,QAAA,IAAI,EAAE,gBAAR;AAA0B,QAAA,IAAI,EAAE,UAAhC;AAA4C,QAAA,UAAU,EAAE;AAAE,UAAA,UAAU,EAAE;AAAd;AAAxD,OAAjB;AAFb,KAArB,CANjB;AAUH,IAAA,SAAS,EAAE,EAAE,CAAC,KAAH,CAAS,UAAT,EAAqB;AAC5B,MAAA,KAAK,EAAE,mBADqB;AAE5B,MAAA,aAAa,EAAE,mCAAmC,CAAC,MAAD,EAAS,KAAK,CAAd,EAAiB;AAC/D,QAAA,IAAI,EAAE,kCADyD;AAE/D,QAAA,KAAK,EAAE,iCAFwD;AAG/D,QAAA,IAAI,EAAE,SAAS,CAAC,OAAV,CAAkB;AAHuC,OAAjB;AAFtB,KAArB,CAVR;AAkBH,IAAA,UAAU,EAAE,EAAE,CAAC,WAAH,CAAe,eAAf,EAAgC,EAAE,CAAC,cAAH,CAAkB,eAAlB,CAAhC,CAlBT;AAmBH,IAAA,6BAA6B,EAAE,EAAE,CAAC,OAAH,CAAW,KAAX,EAAkB;AAAE,MAAA,KAAK,EAAE,gBAAT;AAA2B,MAAA,WAAW,EAAE;AAAxC,KAAlB,CAnB5B;AAoBH,IAAA,eAAe,EAAE,EAAE,CAAC,OAAH,CAAW,KAAX;AApBd,GAAP;AAsBH,CAxBD;;AA0BA,IAAM,eAAe,GAAG,CAAC,QAAD,EAAoB,cAApB,EAA6C,cAA7C,CAAxB;AAIA,OAAA,IAAY,gCAAZ;;AAAA,CAAA,UAAY,gCAAZ,EAA4C;AACxC,EAAA,gCAAA,CAAA,WAAA,CAAA,GAAA,4BAAA;AACA,EAAA,gCAAA,CAAA,YAAA,CAAA,GAAA,6BAAA;AACA,EAAA,gCAAA,CAAA,SAAA,CAAA,GAAA,0BAAA;AACA,EAAA,gCAAA,CAAA,UAAA,CAAA,GAAA,2BAAA;AACA,EAAA,gCAAA,CAAA,aAAA,CAAA,GAAA,+BAAA;AACH,CAND,EAAY,gCAAgC,KAAhC,gCAAgC,GAAA,EAAA,CAA5C;;AAQA,IAAM,MAAM,GAA0C,IAAI,GAAJ,CAAQ,CAAC,gCAAgC,CAAC,SAAlC,EAA6C,gCAAgC,CAAC,UAA9E,EAA0F,gCAAgC,CAAC,OAA3H,EAAoI,gCAAgC,CAAC,QAArK,EAA+K,gCAAgC,CAAC,WAAhN,CAAR,CAAtD;;AAEA,IAAA,oCAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmD,EAAA,SAAA,CAAA,oCAAA,EAAA,MAAA,CAAA;;AAAnD,WAAA,oCAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AA+EY,IAAA,KAAA,CAAA,aAAA,GAAmD,KAAK,CAAxD;;AAwFX;;AAtKG,EAAA,MAAA,CAAA,cAAA,CAAY,oCAAA,CAAA,SAAZ,EAAY,WAAZ,EAAqB;SAArB,YAAA;AAA0B,aAAO,2BAAyB,KAAK,MAAL,CAAY,YAArC,GAAiD,UAAxD;AAAgE,KAArE;qBAAA;;AAAA,GAArB;;AAEQ,EAAA,oCAAA,CAAA,SAAA,CAAA,aAAA,GAAR,UAAsB,UAAtB,EAAsD;AAClD,WAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACO,KAAK,MAAL,CAAY,YADnB,CAAA,EAC+B;AAC3B,MAAA,IAAI,EAAE;AACF,QAAA,IAAI,EAAE,UAAU,CAAC,IAAX,CAAgB,IADpB;AAEF,QAAA,MAAM,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAO,UAAU,CAAC,IAAX,CAAgB,MAAvB,CAAA,EAA6B;AAAE,UAAA,eAAe,EAAE,KAAK,MAAL,CAAY;AAA/B,SAA7B;AAFJ;AADqB,KAD/B,CAAA;AAOH,GARO;;AAUA,EAAA,oCAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,IAApB,EAA+E;;;AAC3E,QAAM,KAAK,GAAG,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAhC;AAAA,QAAsC,IAAI,GAAG,KAAK,CAAC,IAAnD;AACA,QAAM,OAAO,GAAG,KAAK,CAAC,KAAN,EAAhB;AACA,QAAM,IAAI,GAAG,cAAc,CAAC,uBAAf,CAAuC,IAAvC,EAA6C,IAAI,CAAC,SAAL,CAAe,GAA5D,EAAiE,MAAjE,CAAb,CAH2E,CAK3E;;AACA,QAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,SAAlC,CAAT,EAAuD;AACnD,MAAA,IAAI,CAAC,gCAAgC,CAAC,SAAlC,CAAJ,GAAmD,OAAO,CACrD,EAD8C,CAC3C,IAD2C,EAE9C,KAF8C,CAExC,eAAe,CAAC,KAAhB,CAAsB,4BAFkB,EAG3C;AAAE,QAAA,MAAM,EAAE,gBAAgB,CAAC,MAAjB,CAAwB,KAAlC;AAAyC,QAAA,KAAK,EAAE;AAAhD,OAH2C,EAGyB;AAAE,QAAA,IAAI,EAAE,gCAAgC,CAAC;AAAzC,OAHzB,EAG+E,GAHlI;AAIH;;AAED,QAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,OAAlC,CAAT,EAAqD;AACjD,MAAA,IAAI,CAAC,gCAAgC,CAAC,OAAlC,CAAJ,GAAiD,OAAO,CACnD,EAD4C,CACzC,IADyC,EAE5C,KAF4C,CAEtC,eAAe,CAAC,KAAhB,CAAsB,gCAFgB,EAGzC;AAAE,QAAA,UAAU,EAAE,EAAE,CAAC,MAAH,CAAU,SAAV,CAAoB,KAApB,EAAd;AAA2C,QAAA,KAAK,EAAE,KAAK;AAAvD,OAHyC,EAG2B;AAAE,QAAA,IAAI,EAAE,gCAAgC,CAAC;AAAzC,OAH3B,EAG+E,GAHhI;AAIH;;AAED,QAAM,UAAU,GAAG,KAAK,MAAL,CAAY,UAA/B,CApB2E,CAsB3E;;AACA,QAAI,UAAU,CAAC,OAAX,CAAmB,QAAnB,KAAgC,CAAhC,IAAqC,CAAC,IAAI,CAAC,gCAAgC,CAAC,UAAlC,CAA9C,EAA6F;AACzF,MAAA,IAAI,CAAC,gCAAgC,CAAC,UAAlC,CAAJ,GAAoD,OAAO,CACtD,EAD+C,CAC5C,IAAI,CAAC,gCAAgC,CAAC,SAAlC,CADwC,EAE/C,KAF+C,CAEzC,eAAe,CAAC,cAAhB,CAA+B,yBAFU,EAEiB,KAAK,aAAL,CAAmB,KAAK,MAAL,CAAY,YAA/B,CAFjB,EAE+D;AAAE,QAAA,IAAI,EAAE,gCAAgC,CAAC;AAAzC,OAF/D,EAEsH,GAF1K;AAGH;;AAED,QAAI,UAAU,CAAC,OAAX,CAAmB,cAAnB,KAAsC,CAAtC,IAA2C,CAAC,IAAI,CAAC,gCAAgC,CAAC,QAAlC,CAApD,EAAiG;AAC7F,MAAA,IAAI,CAAC,gCAAgC,CAAC,QAAlC,CAAJ,GAAkD,OAAO,CACpD,EAD6C,CAC1C,IAAI,CAAC,gCAAgC,CAAC,OAAlC,CADsC,EAE7C,KAF6C,CAEvC,eAAe,CAAC,cAAhB,CAA+B,yBAFQ,EAEmB,KAAK,aAAL,CAAmB,KAAK,MAAL,CAAY,kBAA/B,CAFnB,EAEuE;AAAE,QAAA,IAAI,EAAE,gCAAgC,CAAC;AAAzC,OAFvE,EAE4H,GAF9K;AAGH;;AAED,QAAI,UAAU,CAAC,OAAX,CAAmB,cAAnB,KAAsC,CAAtC,IAA2C,CAAC,IAAI,CAAC,gCAAgC,CAAC,WAAlC,CAAhD,IAAkG,IAAI,CAAC,GAAvG,IAA8G,kCAAkC,CAAC,YAAnC,CAAgD,CAAA,EAAA,GAAA,IAAI,CAAC,GAAL,MAAQ,IAAR,IAAQ,EAAA,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAQ,EAAA,CAAE,IAA1D,CAAlH,EAAmL;AAC/K,MAAA,IAAI,CAAC,gCAAgC,CAAC,WAAlC,CAAJ,GAAqD,OAAO,CACvD,EADgD,CAC7C,IAAI,CAAC,gCAAgC,CAAC,OAAlC,CADyC,EAEhD,KAFgD,CAE1C,eAAe,CAAC,cAAhB,CAA+B,yBAFW,EAEgB,KAAK,MAAL,CAAY,SAF5B,EAEuC;AAAE,QAAA,IAAI,EAAE,gCAAgC,CAAC;AAAzC,OAFvC,EAE+F,GAFpJ;AAGH;;AAED,WAAO;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,OAAO,EAAA,OAAhB;AAAkB,MAAA,IAAI,EAAA;AAAtB,KAAP;AACH,GA1CO;;AA4CA,EAAA,oCAAA,CAAA,SAAA,CAAA,KAAA,GAAR,UAAc,IAAd,EAAsC;AAClC,QAAM,KAAK,GAAG,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAhC;AACA,SAAK,aAAL,GAAqB,KAAK,CAA1B;AAEA,QAAM,IAAI,GAAG,KAAK,CAAC,MAAN,CAAa,cAAc,CAAC,UAAf,CAA0B,KAA1B,CAAgC,IAAhC,EAAsC,OAAtC,GAAgD,OAAhD,CAAwD,gCAAgC,CAAC,SAAzF,CAAb,CAAb;AACA,QAAM,KAAK,GAAG,KAAK,CAAC,MAAN,CAAa,cAAc,CAAC,UAAf,CAA0B,KAA1B,CAAgC,IAAhC,EAAsC,OAAtC,GAAgD,OAAhD,CAAwD,gCAAgC,CAAC,OAAzF,CAAb,CAAd;AACA,QAAI,IAAI,CAAC,MAAL,KAAgB,CAAhB,IAAqB,KAAK,CAAC,MAAN,KAAiB,CAA1C,EAA6C;AAE7C,QAAM,MAAM,GAAG,KAAK,CAAC,KAAN,EAAf;AACA,QAAM,MAAM,GAAG,gBAAgB,CAAC,MAAjB,CAAwB,KAAvC;;AACA,SAAgB,IAAA,EAAA,GAAA,CAAA,EAAA,MAAA,GAAA,IAAhB,EAAgB,EAAA,GAAA,MAAA,CAAA,MAAhB,EAAgB,EAAA,EAAhB,EAAsB;AAAjB,UAAM,CAAC,GAAA,MAAA,CAAA,EAAA,CAAP;AACD,MAAA,MAAM,CAAC,EAAP,CAAU,CAAV,EAAa,MAAb,CAAoB,eAAe,CAAC,KAAhB,CAAsB,4BAA1C,EAAwE,UAAA,GAAA,EAAG;AAAI,eAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAM,GAAN,CAAA,EAAS;AAAE,UAAA,MAAM,EAAjB;AAAS,SAAT,CAAA;AAAoB,OAAnG;AACH;;AAED,QAAM,UAAU,GAAG,EAAE,CAAC,MAAH,CAAU,SAAV,CAAoB,KAApB,EAAnB;;AACA,SAAgB,IAAA,EAAA,GAAA,CAAA,EAAA,OAAA,GAAA,KAAhB,EAAgB,EAAA,GAAA,OAAA,CAAA,MAAhB,EAAgB,EAAA,EAAhB,EAAuB;AAAlB,UAAM,CAAC,GAAA,OAAA,CAAA,EAAA,CAAP;AACD,MAAA,MAAM,CAAC,EAAP,CAAU,CAAV,EAAa,MAAb,CAAoB,eAAe,CAAC,KAAhB,CAAsB,gCAA1C,EAA4E,UAAA,GAAA,EAAG;AAAI,eAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAM,GAAN,CAAA,EAAS;AAAE,UAAA,UAAU,EAArB;AAAS,SAAT,CAAA;AAAwB,OAA3G;AACH;;AAED,WAAO,cAAc,CAAC,KAAf,CAAqB,MAArB,CAA4B,KAAK,MAAjC,EAAyC;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,IAAI,EAAE,MAAf;AAAuB,MAAA,OAAO,EAAE;AAAE,QAAA,cAAc,EAAE,IAAlB;AAAwB,QAAA,kBAAkB,EAAE;AAA5C;AAAhC,KAAzC,CAAP;AACH,GApBO;;AAuBM,EAAA,oCAAA,CAAA,SAAA,CAAA,KAAA,GAAd,UAAoB,UAApB,EAAqD;;;;;;;;;AAC3C,YAAA,MAAM,GAAG,KAAK,MAAL,CAAY,OAAZ,CAAoB,kBAApB,CAAuC,GAAvC,CAA2C,UAAU,CAAC,SAAtD,CAAT;AACN,gBAAI,CAAC,MAAD,IAAW,CAAC,MAAM,CAAC,GAAvB,EAA4B,OAAA,CAAA;AAAA;AAAA,aAAA;AAE5B,iBAAK,aAAL,GAAqB,UAArB;AACM,YAAA,IAAI,GAAG,gBAAgB,CAAC,IAAjB,CAAsB,KAAtB,CAA4B,UAA5B,EAAwC,MAAM,CAAC,GAAP,CAAY,IAApD,CAAP;AAEA,YAAA,WAAW,GAAG,gBAAgB,CAAC,IAAjB,CAAsB,qBAAtB,CAA4C,IAA5C,CAAd;AACA,YAAA,aAAa,GAAG,gBAAgB,CAAC,MAAjB,CAAwB,QAAxB,CAAiC,WAAjC,CAAhB;AAEA,YAAA,MAAM,GAAG,gBAAgB,CAAC,MAAjB,CAAwB,YAAxB,CAAqC,aAArC,CAAT;AACF,YAAA,YAAY,GAAG,EAAE,CAAC,MAAH,CAAU,QAAV,CAAmB,mBAAnB,CAAuC;AACtD,iBAAG,MADmD;AAEtD,cAAA,MAAM,EAAE,KAAK,MAAL,CAAY,YAFkC;AAGtD,mCAAqB;AAHiC,aAAvC,CAAf;;AAMJ,gBAAI,KAAK,MAAL,CAAY,6BAAhB,EAA+C;AAC3C,cAAA,YAAY,GAAG,EAAE,CAAC,MAAH,CAAU,QAAV,CAAmB,QAAnB,CAA4B;AACvC,mBAAG,YADoC;AAEvC,gBAAA,EAAE,EAAE;AAFmC,eAA5B,CAAf;AAIH;;AAEK,YAAA,EAAA,GAA2B,KAAK,WAAL,CAAiB,MAAjB,CAA3B,EAAE,KAAK,GAAA,EAAA,CAAA,KAAP,EAAS,OAAO,GAAA,EAAA,CAAA,OAAhB,EAAkB,IAAI,GAAA,EAAA,CAAA,IAAtB;AAEN,YAAA,OAAO,CAAC,EAAR,CAAW,IAAI,CAAC,gCAAgC,CAAC,SAAlC,CAAf,EAA8D,MAA9D,CAAqE,eAAe,CAAC,KAAhB,CAAsB,4BAA3F,EAAyH,UAAA,GAAA,EAAG;AAAI,qBAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAM,GAAN,CAAA,EAAS;AAAE,gBAAA,MAAM,EAAjB;AAAS,eAAT,CAAA;AAAmC,aAAnK;AACA,YAAA,OAAO,CAAC,EAAR,CAAW,IAAI,CAAC,gCAAgC,CAAC,OAAlC,CAAf,EAA4D,MAA5D,CAAmE,eAAe,CAAC,KAAhB,CAAsB,gCAAzF,EAA2H,UAAA,GAAA,EAAG;AAAI,qBAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAM,GAAN,CAAA,EAAS;AAAE,gBAAA,UAAU,EAAE,YAAd;AAA4B,gBAAA,KAAK,EAAE,KAAI,CAAhD;AAAS,eAAT,CAAA;AAA6D,aAA/L;AAEA,mBAAA,CAAA;AAAA;AAAA,cAAM,cAAc,CAAC,KAAf,CAAqB,MAArB,CAA4B,KAAK,MAAjC,EAAyC;AAAE,cAAA,KAAK,EAAA,KAAP;AAAS,cAAA,IAAI,EAAE,OAAf;AAAwB,cAAA,OAAO,EAAE;AAAE,gBAAA,cAAc,EAAE,IAAlB;AAAwB,gBAAA,kBAAkB,EAAE;AAA5C;AAAjC,aAAzC,CAAN,CAAA;;;AAAA,YAAA,EAAA,CAAA,IAAA;;;;;;;;AACH,GA9Ba;;AAgCd,EAAA,oCAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,GAAT,EAAoB;AAApB,QAAA,KAAA,GAAA,IAAA;;AACI,SAAK,mBAAL,CAAyB,KAAK,MAAL,CAAY,QAAZ,CAAqB,SAArB,CAA+B,KAA/B,CAAqC,SAArC,CAA+C,OAAxE,EAAiF,UAAC,KAAD,EAAM;AACnF,UAAI,KAAJ,EAAW,KAAI,CAAC,KAAL,CAAW,KAAK,CAAC,IAAjB,EAAX,KACK,KAAI,CAAC,KAAL,CAAW,cAAc,CAAC,OAA1B;AACR,KAHD;AAIH,GALD;;AAOM,EAAA,oCAAA,CAAA,SAAA,CAAA,MAAA,GAAN,UAAa,MAAb,EAAsD;;;;;;;AAC5C,YAAA,GAAG,GAAG,KAAK,MAAX;AACN,iBAAK,MAAL,GAAc,MAAd;;AAEA,gBAAI,GAAG,CAAC,6BAAJ,KAAsC,MAAM,CAAC,6BAAjD,EAAgF;AAC5E,kBAAI,KAAK,aAAT,EAAwB;AACpB,qBAAK,KAAL,CAAW,KAAK,aAAhB;AACH;;AACD,qBAAA,CAAA;AAAA;AAAA,gBAAO,IAAP,CAAA;AACH;;AAEK,YAAA,KAAK,GAAG,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAA1B;AACA,YAAA,OAAO,GAAG,KAAK,CAAC,KAAN,EAAV;AAEA,YAAA,GAAG,GAAG,cAAc,CAAC,UAAf,CAA0B,IAA1B,CAA+B,OAA/B,EAAN;AAEA,YAAA,UAAU,GAAG,KAAK,MAAL,CAAY,UAAzB;AAGF,YAAA,YAAY,GAAG,UAAU,CAAC,OAAX,CAAmB,QAAnB,KAAgC,CAA/C;;AACJ,iBAAA,EAAA,GAAA,CAAA,EAAmB,EAAA,GAAA,KAAK,CAAC,MAAN,CAAa,GAAG,CAAC,OAAJ,CAAY,gCAAgC,CAAC,UAA7C,CAAb,CAAnB,EAAmB,EAAA,GAAA,EAAA,CAAA,MAAnB,EAAmB,EAAA,EAAnB,EAA2F;AAAhF,cAAA,IAAI,GAAA,EAAA,CAAA,EAAA,CAAJ;AACP,kBAAI,CAAC,YAAL,EAAmB,OAAO,CAAC,MAAR,CAAe,IAAI,CAAC,SAAL,CAAe,GAA9B,EAAnB,KACK,OAAO,CAAC,EAAR,CAAW,IAAX,EAAiB,MAAjB,CAAwB,KAAK,aAAL,CAAmB,KAAK,MAAL,CAAY,YAA/B,CAAxB;AACR;;AAED,YAAA,YAAY,GAAG,UAAU,CAAC,OAAX,CAAmB,cAAnB,KAAsC,CAArD;;AACA,iBAAA,EAAA,GAAA,CAAA,EAAmB,EAAA,GAAA,KAAK,CAAC,MAAN,CAAa,GAAG,CAAC,OAAJ,CAAY,gCAAgC,CAAC,QAA7C,CAAb,CAAnB,EAAmB,EAAA,GAAA,EAAA,CAAA,MAAnB,EAAmB,EAAA,EAAnB,EAAyF;AAA9E,cAAA,IAAI,GAAA,EAAA,CAAA,EAAA,CAAJ;AACP,kBAAI,CAAC,YAAL,EAAmB,OAAO,CAAC,MAAR,CAAe,IAAI,CAAC,SAAL,CAAe,GAA9B,EAAnB,KACK,OAAO,CAAC,EAAR,CAAW,IAAX,EAAiB,MAAjB,CAAwB,KAAK,aAAL,CAAmB,KAAK,MAAL,CAAY,kBAA/B,CAAxB;AACR;;AAED,YAAA,YAAY,GAAG,UAAU,CAAC,OAAX,CAAmB,cAAnB,KAAsC,CAArD;;AACA,iBAAA,EAAA,GAAA,CAAA,EAAmB,EAAA,GAAA,KAAK,CAAC,MAAN,CAAa,GAAG,CAAC,OAAJ,CAAY,gCAAgC,CAAC,WAA7C,CAAb,CAAnB,EAAmB,EAAA,GAAA,EAAA,CAAA,MAAnB,EAAmB,EAAA,EAAnB,EAA4F;AAAjF,cAAA,IAAI,GAAA,EAAA,CAAA,EAAA,CAAJ;AACP,kBAAI,CAAC,YAAL,EAAmB,OAAO,CAAC,MAAR,CAAe,IAAI,CAAC,SAAL,CAAe,GAA9B,EAAnB,KACK,OAAO,CAAC,EAAR,CAAW,IAAX,EAAiB,MAAjB,CAAwB,KAAK,MAAL,CAAY,SAApC;AACR;;AAED,mBAAA,CAAA;AAAA;AAAA,cAAM,cAAc,CAAC,KAAf,CAAqB,MAArB,CAA4B,KAAK,MAAjC,EAAyC;AAAE,cAAA,KAAK,EAAA,KAAP;AAAS,cAAA,IAAI,EAAE,OAAf;AAAwB,cAAA,OAAO,EAAE;AAAE,gBAAA,cAAc,EAAE,IAAlB;AAAwB,gBAAA,kBAAkB,EAAE;AAA5C;AAAjC,aAAzC,CAAN,CAAA;;;AAAA,YAAA,EAAA,CAAA,IAAA;;AAEA,gBAAI,MAAM,CAAC,YAAP,KAAwB,GAAG,CAAC,YAAhC,EAA8C;AAC1C,kBAAI,KAAK,aAAT,EAAwB;AACpB,qBAAK,KAAL,CAAW,KAAK,aAAhB;AACH;;AACD,qBAAA,CAAA;AAAA;AAAA,gBAAO,IAAP,CAAA;AACH;;AAED,mBAAA,CAAA;AAAA;AAAA,cAAO,IAAP,CAAA;;;;AACH,GA/CK;;AAgDV,SAAA,oCAAA;AAAC,CAvKD,CAAmD,cAAc,CAAC,eAAlE,CAAA;;AAyKA,OAAO,IAAM,4BAA4B,GAAG,cAAc,CAAC,MAAf,CAAsB;AAC9D,EAAA,IAAI,EAAE,uCADwD;AAE9D,EAAA,OAAO,EAAE;AAAE,IAAA,IAAI,EAAE;AAAR,GAFqD;AAG9D,EAAA,QAAQ,EAAE,aAHoD;AAI9D,EAAA,IAAI,EAAE,oCAJwD;AAK9D,EAAA,MAAM,EAAE,UAAC,CAAD,EAAI,MAAJ,EAAU;AAAK,WAAA,kCAAkC,CAAlC,MAAkC,CAAlC;AAA0C;AALH,CAAtB,CAArC","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign, __awaiter, __extends, __generator } from \"tslib\";\r\nimport { InteractionsRepresentationProvider } from '../../../../mol-model-props/computed/representations/interactions';\r\nimport { InteractionTypeColorThemeProvider } from '../../../../mol-model-props/computed/themes/interaction-type';\r\nimport { StructureElement } from '../../../../mol-model/structure';\r\nimport { createStructureRepresentationParams } from '../../../../mol-plugin-state/helpers/structure-representation-params';\r\nimport { StateTransforms } from '../../../../mol-plugin-state/transforms';\r\nimport { PluginBehavior } from '../../../behavior';\r\nimport { MolScriptBuilder as MS } from '../../../../mol-script/language/builder';\r\nimport { StateSelection, StateTransform } from '../../../../mol-state';\r\nimport { SizeTheme } from '../../../../mol-theme/size';\r\nimport { ParamDefinition as PD } from '../../../../mol-util/param-definition';\r\nimport { PluginCommands } from '../../../commands';\r\nvar StructureFocusRepresentationParams = function (plugin) {\r\n    var reprParams = StateTransforms.Representation.StructureRepresentation3D.definition.params(void 0, plugin);\r\n    return {\r\n        expandRadius: PD.Numeric(5, { min: 1, max: 10, step: 1 }),\r\n        targetParams: PD.Group(reprParams, {\r\n            label: 'Target',\r\n            customDefault: createStructureRepresentationParams(plugin, void 0, { type: 'ball-and-stick', size: 'physical', typeParams: { sizeFactor: 0.26, alpha: 0.51 } })\r\n        }),\r\n        surroundingsParams: PD.Group(reprParams, {\r\n            label: 'Surroundings',\r\n            customDefault: createStructureRepresentationParams(plugin, void 0, { type: 'ball-and-stick', size: 'physical', typeParams: { sizeFactor: 0.16 } })\r\n        }),\r\n        nciParams: PD.Group(reprParams, {\r\n            label: 'Non-covalent Int.',\r\n            customDefault: createStructureRepresentationParams(plugin, void 0, {\r\n                type: InteractionsRepresentationProvider,\r\n                color: InteractionTypeColorThemeProvider,\r\n                size: SizeTheme.BuiltIn.uniform\r\n            })\r\n        }),\r\n        components: PD.MultiSelect(FocusComponents, PD.arrayToOptions(FocusComponents)),\r\n        excludeTargetFromSurroundings: PD.Boolean(false, { label: 'Exclude Target', description: 'Exclude the focus \"target\" from the surroudings component.' }),\r\n        ignoreHydrogens: PD.Boolean(false)\r\n    };\r\n};\r\nvar FocusComponents = ['target', 'surroundings', 'interactions'];\r\nexport var StructureFocusRepresentationTags;\r\n(function (StructureFocusRepresentationTags) {\r\n    StructureFocusRepresentationTags[\"TargetSel\"] = \"structure-focus-target-sel\";\r\n    StructureFocusRepresentationTags[\"TargetRepr\"] = \"structure-focus-target-repr\";\r\n    StructureFocusRepresentationTags[\"SurrSel\"] = \"structure-focus-surr-sel\";\r\n    StructureFocusRepresentationTags[\"SurrRepr\"] = \"structure-focus-surr-repr\";\r\n    StructureFocusRepresentationTags[\"SurrNciRepr\"] = \"structure-focus-surr-nci-repr\";\r\n})(StructureFocusRepresentationTags || (StructureFocusRepresentationTags = {}));\r\nvar TagSet = new Set([StructureFocusRepresentationTags.TargetSel, StructureFocusRepresentationTags.TargetRepr, StructureFocusRepresentationTags.SurrSel, StructureFocusRepresentationTags.SurrRepr, StructureFocusRepresentationTags.SurrNciRepr]);\r\nvar StructureFocusRepresentationBehavior = /** @class */ (function (_super) {\r\n    __extends(StructureFocusRepresentationBehavior, _super);\r\n    function StructureFocusRepresentationBehavior() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.currentSource = void 0;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(StructureFocusRepresentationBehavior.prototype, \"surrLabel\", {\r\n        get: function () { return \"[Focus] Surroundings (\" + this.params.expandRadius + \" \\u00C5)\"; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StructureFocusRepresentationBehavior.prototype.getReprParams = function (reprParams) {\r\n        return __assign(__assign({}, this.params.targetParams), { type: {\r\n                name: reprParams.type.name,\r\n                params: __assign(__assign({}, reprParams.type.params), { ignoreHydrogens: this.params.ignoreHydrogens })\r\n            } });\r\n    };\r\n    StructureFocusRepresentationBehavior.prototype.ensureShape = function (cell) {\r\n        var _a;\r\n        var state = this.plugin.state.data, tree = state.tree;\r\n        var builder = state.build();\r\n        var refs = StateSelection.findUniqueTagsInSubtree(tree, cell.transform.ref, TagSet);\r\n        // Selections\r\n        if (!refs[StructureFocusRepresentationTags.TargetSel]) {\r\n            refs[StructureFocusRepresentationTags.TargetSel] = builder\r\n                .to(cell)\r\n                .apply(StateTransforms.Model.StructureSelectionFromBundle, { bundle: StructureElement.Bundle.Empty, label: '[Focus] Target' }, { tags: StructureFocusRepresentationTags.TargetSel }).ref;\r\n        }\r\n        if (!refs[StructureFocusRepresentationTags.SurrSel]) {\r\n            refs[StructureFocusRepresentationTags.SurrSel] = builder\r\n                .to(cell)\r\n                .apply(StateTransforms.Model.StructureSelectionFromExpression, { expression: MS.struct.generator.empty(), label: this.surrLabel }, { tags: StructureFocusRepresentationTags.SurrSel }).ref;\r\n        }\r\n        var components = this.params.components;\r\n        // Representations\r\n        if (components.indexOf('target') >= 0 && !refs[StructureFocusRepresentationTags.TargetRepr]) {\r\n            refs[StructureFocusRepresentationTags.TargetRepr] = builder\r\n                .to(refs[StructureFocusRepresentationTags.TargetSel])\r\n                .apply(StateTransforms.Representation.StructureRepresentation3D, this.getReprParams(this.params.targetParams), { tags: StructureFocusRepresentationTags.TargetRepr }).ref;\r\n        }\r\n        if (components.indexOf('surroundings') >= 0 && !refs[StructureFocusRepresentationTags.SurrRepr]) {\r\n            refs[StructureFocusRepresentationTags.SurrRepr] = builder\r\n                .to(refs[StructureFocusRepresentationTags.SurrSel])\r\n                .apply(StateTransforms.Representation.StructureRepresentation3D, this.getReprParams(this.params.surroundingsParams), { tags: StructureFocusRepresentationTags.SurrRepr }).ref;\r\n        }\r\n        if (components.indexOf('interactions') >= 0 && !refs[StructureFocusRepresentationTags.SurrNciRepr] && cell.obj && InteractionsRepresentationProvider.isApplicable((_a = cell.obj) === null || _a === void 0 ? void 0 : _a.data)) {\r\n            refs[StructureFocusRepresentationTags.SurrNciRepr] = builder\r\n                .to(refs[StructureFocusRepresentationTags.SurrSel])\r\n                .apply(StateTransforms.Representation.StructureRepresentation3D, this.params.nciParams, { tags: StructureFocusRepresentationTags.SurrNciRepr }).ref;\r\n        }\r\n        return { state: state, builder: builder, refs: refs };\r\n    };\r\n    StructureFocusRepresentationBehavior.prototype.clear = function (root) {\r\n        var state = this.plugin.state.data;\r\n        this.currentSource = void 0;\r\n        var foci = state.select(StateSelection.Generators.byRef(root).subtree().withTag(StructureFocusRepresentationTags.TargetSel));\r\n        var surrs = state.select(StateSelection.Generators.byRef(root).subtree().withTag(StructureFocusRepresentationTags.SurrSel));\r\n        if (foci.length === 0 && surrs.length === 0)\r\n            return;\r\n        var update = state.build();\r\n        var bundle = StructureElement.Bundle.Empty;\r\n        for (var _i = 0, foci_1 = foci; _i < foci_1.length; _i++) {\r\n            var f = foci_1[_i];\r\n            update.to(f).update(StateTransforms.Model.StructureSelectionFromBundle, function (old) { return (__assign(__assign({}, old), { bundle: bundle })); });\r\n        }\r\n        var expression = MS.struct.generator.empty();\r\n        for (var _a = 0, surrs_1 = surrs; _a < surrs_1.length; _a++) {\r\n            var s = surrs_1[_a];\r\n            update.to(s).update(StateTransforms.Model.StructureSelectionFromExpression, function (old) { return (__assign(__assign({}, old), { expression: expression })); });\r\n        }\r\n        return PluginCommands.State.Update(this.plugin, { state: state, tree: update, options: { doNotLogTiming: true, doNotUpdateCurrent: true } });\r\n    };\r\n    StructureFocusRepresentationBehavior.prototype.focus = function (sourceLoci) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parent, loci, residueLoci, residueBundle, target, surroundings, _a, state, builder, refs;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        parent = this.plugin.helpers.substructureParent.get(sourceLoci.structure);\r\n                        if (!parent || !parent.obj)\r\n                            return [2 /*return*/];\r\n                        this.currentSource = sourceLoci;\r\n                        loci = StructureElement.Loci.remap(sourceLoci, parent.obj.data);\r\n                        residueLoci = StructureElement.Loci.extendToWholeResidues(loci);\r\n                        residueBundle = StructureElement.Bundle.fromLoci(residueLoci);\r\n                        target = StructureElement.Bundle.toExpression(residueBundle);\r\n                        surroundings = MS.struct.modifier.includeSurroundings({\r\n                            0: target,\r\n                            radius: this.params.expandRadius,\r\n                            'as-whole-residues': true\r\n                        });\r\n                        if (this.params.excludeTargetFromSurroundings) {\r\n                            surroundings = MS.struct.modifier.exceptBy({\r\n                                0: surroundings,\r\n                                by: target\r\n                            });\r\n                        }\r\n                        _a = this.ensureShape(parent), state = _a.state, builder = _a.builder, refs = _a.refs;\r\n                        builder.to(refs[StructureFocusRepresentationTags.TargetSel]).update(StateTransforms.Model.StructureSelectionFromBundle, function (old) { return (__assign(__assign({}, old), { bundle: residueBundle })); });\r\n                        builder.to(refs[StructureFocusRepresentationTags.SurrSel]).update(StateTransforms.Model.StructureSelectionFromExpression, function (old) { return (__assign(__assign({}, old), { expression: surroundings, label: _this.surrLabel })); });\r\n                        return [4 /*yield*/, PluginCommands.State.Update(this.plugin, { state: state, tree: builder, options: { doNotLogTiming: true, doNotUpdateCurrent: true } })];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    StructureFocusRepresentationBehavior.prototype.register = function (ref) {\r\n        var _this = this;\r\n        this.subscribeObservable(this.plugin.managers.structure.focus.behaviors.current, function (entry) {\r\n            if (entry)\r\n                _this.focus(entry.loci);\r\n            else\r\n                _this.clear(StateTransform.RootRef);\r\n        });\r\n    };\r\n    StructureFocusRepresentationBehavior.prototype.update = function (params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var old, state, builder, all, components, hasComponent, _i, _a, repr, _b, _c, repr, _d, _e, repr;\r\n            return __generator(this, function (_f) {\r\n                switch (_f.label) {\r\n                    case 0:\r\n                        old = this.params;\r\n                        this.params = params;\r\n                        if (old.excludeTargetFromSurroundings !== params.excludeTargetFromSurroundings) {\r\n                            if (this.currentSource) {\r\n                                this.focus(this.currentSource);\r\n                            }\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        state = this.plugin.state.data;\r\n                        builder = state.build();\r\n                        all = StateSelection.Generators.root.subtree();\r\n                        components = this.params.components;\r\n                        hasComponent = components.indexOf('target') >= 0;\r\n                        for (_i = 0, _a = state.select(all.withTag(StructureFocusRepresentationTags.TargetRepr)); _i < _a.length; _i++) {\r\n                            repr = _a[_i];\r\n                            if (!hasComponent)\r\n                                builder.delete(repr.transform.ref);\r\n                            else\r\n                                builder.to(repr).update(this.getReprParams(this.params.targetParams));\r\n                        }\r\n                        hasComponent = components.indexOf('surroundings') >= 0;\r\n                        for (_b = 0, _c = state.select(all.withTag(StructureFocusRepresentationTags.SurrRepr)); _b < _c.length; _b++) {\r\n                            repr = _c[_b];\r\n                            if (!hasComponent)\r\n                                builder.delete(repr.transform.ref);\r\n                            else\r\n                                builder.to(repr).update(this.getReprParams(this.params.surroundingsParams));\r\n                        }\r\n                        hasComponent = components.indexOf('interactions') >= 0;\r\n                        for (_d = 0, _e = state.select(all.withTag(StructureFocusRepresentationTags.SurrNciRepr)); _d < _e.length; _d++) {\r\n                            repr = _e[_d];\r\n                            if (!hasComponent)\r\n                                builder.delete(repr.transform.ref);\r\n                            else\r\n                                builder.to(repr).update(this.params.nciParams);\r\n                        }\r\n                        return [4 /*yield*/, PluginCommands.State.Update(this.plugin, { state: state, tree: builder, options: { doNotLogTiming: true, doNotUpdateCurrent: true } })];\r\n                    case 1:\r\n                        _f.sent();\r\n                        if (params.expandRadius !== old.expandRadius) {\r\n                            if (this.currentSource) {\r\n                                this.focus(this.currentSource);\r\n                            }\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return StructureFocusRepresentationBehavior;\r\n}(PluginBehavior.WithSubscribers));\r\nexport var StructureFocusRepresentation = PluginBehavior.create({\r\n    name: 'create-structure-focus-representation',\r\n    display: { name: 'Structure Focus Representation' },\r\n    category: 'interaction',\r\n    ctor: StructureFocusRepresentationBehavior,\r\n    params: function (_, plugin) { return StructureFocusRepresentationParams(plugin); }\r\n});\r\n//# sourceMappingURL=structure-focus-representation.js.map"]},"metadata":{},"sourceType":"module"}