{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { MinimizeRmsd } from '../../../../mol-math/linear-algebra/3d/minimize-rmsd';\nimport { StructureElement } from '../element';\nimport { OrderedSet } from '../../../../mol-data/int';\nimport { AlignSequences } from '../../../sequence/alignment/sequence';\nimport { StructureProperties } from '../properties';\nexport function superpose(xs) {\n  var ret = [];\n  if (xs.length <= 0) return ret;\n  var n = getMinSize(xs);\n  var input = {\n    a: getPositionTable(xs[0], n),\n    b: getPositionTable(xs[1], n)\n  };\n  ret[0] = MinimizeRmsd.compute(input);\n\n  for (var i = 2; i < xs.length; i++) {\n    input.b = getPositionTable(xs[i], n);\n    input.centerB = void 0;\n    ret.push(MinimizeRmsd.compute(input));\n  }\n\n  return ret;\n}\nvar reProtein = /(polypeptide|cyclic-pseudo-peptide)/i;\nexport function alignAndSuperpose(xs) {\n  var ret = [];\n  if (xs.length <= 0) return ret;\n  var l = StructureElement.Loci.getFirstLocation(xs[0]);\n  var subtype = StructureProperties.entity.subtype(l);\n  var substMatrix = subtype.match(reProtein) ? 'blosum62' : 'default';\n\n  for (var i = 1; i < xs.length; i++) {\n    var _a = AlignSequences.compute({\n      a: xs[0].elements[0],\n      b: xs[i].elements[0]\n    }, {\n      substMatrix: substMatrix\n    }),\n        a = _a.a,\n        b = _a.b,\n        score = _a.score;\n\n    var lociA = StructureElement.Loci(xs[0].structure, [a]);\n    var lociB = StructureElement.Loci(xs[i].structure, [b]);\n    var n = OrderedSet.size(a.indices);\n    ret.push(__assign(__assign({}, MinimizeRmsd.compute({\n      a: getPositionTable(lociA, n),\n      b: getPositionTable(lociB, n)\n    })), {\n      alignmentScore: score\n    }));\n  }\n\n  return ret;\n}\n\nfunction getPositionTable(xs, n) {\n  var ret = MinimizeRmsd.Positions.empty(n);\n  var o = 0;\n\n  for (var _a = 0, _b = xs.elements; _a < _b.length; _a++) {\n    var u = _b[_a];\n    var unit = u.unit,\n        indices = u.indices;\n    var elements = unit.elements;\n    var _c = unit.conformation,\n        x = _c.x,\n        y = _c.y,\n        z = _c.z;\n\n    for (var i = 0, _i = OrderedSet.size(indices); i < _i; i++) {\n      var e = elements[OrderedSet.getAt(indices, i)];\n      ret.x[o] = x(e);\n      ret.y[o] = y(e);\n      ret.z[o] = z(e);\n      o++;\n      if (o >= n) break;\n    }\n\n    if (o >= n) break;\n  }\n\n  return ret;\n}\n\nfunction getMinSize(xs) {\n  if (xs.length === 0) return 0;\n  var s = StructureElement.Loci.size(xs[0]);\n\n  for (var i = 1; i < xs.length; i++) {\n    var t = StructureElement.Loci.size(xs[i]);\n    if (t < s) s = t;\n  }\n\n  return s;\n}","map":{"version":3,"sources":["../../../../../src/mol-model/structure/structure/util/superposition.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { MinimizeRmsd } from '../../../../mol-math/linear-algebra/3d/minimize-rmsd';\r\nimport { StructureElement } from '../element';\r\nimport { OrderedSet } from '../../../../mol-data/int';\r\nimport { AlignSequences } from '../../../sequence/alignment/sequence';\r\nimport { StructureProperties } from '../properties';\r\nexport function superpose(xs) {\r\n    var ret = [];\r\n    if (xs.length <= 0)\r\n        return ret;\r\n    var n = getMinSize(xs);\r\n    var input = {\r\n        a: getPositionTable(xs[0], n),\r\n        b: getPositionTable(xs[1], n)\r\n    };\r\n    ret[0] = MinimizeRmsd.compute(input);\r\n    for (var i = 2; i < xs.length; i++) {\r\n        input.b = getPositionTable(xs[i], n);\r\n        input.centerB = void 0;\r\n        ret.push(MinimizeRmsd.compute(input));\r\n    }\r\n    return ret;\r\n}\r\nvar reProtein = /(polypeptide|cyclic-pseudo-peptide)/i;\r\nexport function alignAndSuperpose(xs) {\r\n    var ret = [];\r\n    if (xs.length <= 0)\r\n        return ret;\r\n    var l = StructureElement.Loci.getFirstLocation(xs[0]);\r\n    var subtype = StructureProperties.entity.subtype(l);\r\n    var substMatrix = subtype.match(reProtein) ? 'blosum62' : 'default';\r\n    for (var i = 1; i < xs.length; i++) {\r\n        var _a = AlignSequences.compute({\r\n            a: xs[0].elements[0],\r\n            b: xs[i].elements[0],\r\n        }, { substMatrix: substMatrix }), a = _a.a, b = _a.b, score = _a.score;\r\n        var lociA = StructureElement.Loci(xs[0].structure, [a]);\r\n        var lociB = StructureElement.Loci(xs[i].structure, [b]);\r\n        var n = OrderedSet.size(a.indices);\r\n        ret.push(__assign(__assign({}, MinimizeRmsd.compute({\r\n            a: getPositionTable(lociA, n),\r\n            b: getPositionTable(lociB, n)\r\n        })), { alignmentScore: score }));\r\n    }\r\n    return ret;\r\n}\r\nfunction getPositionTable(xs, n) {\r\n    var ret = MinimizeRmsd.Positions.empty(n);\r\n    var o = 0;\r\n    for (var _a = 0, _b = xs.elements; _a < _b.length; _a++) {\r\n        var u = _b[_a];\r\n        var unit = u.unit, indices = u.indices;\r\n        var elements = unit.elements;\r\n        var _c = unit.conformation, x = _c.x, y = _c.y, z = _c.z;\r\n        for (var i = 0, _i = OrderedSet.size(indices); i < _i; i++) {\r\n            var e = elements[OrderedSet.getAt(indices, i)];\r\n            ret.x[o] = x(e);\r\n            ret.y[o] = y(e);\r\n            ret.z[o] = z(e);\r\n            o++;\r\n            if (o >= n)\r\n                break;\r\n        }\r\n        if (o >= n)\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\nfunction getMinSize(xs) {\r\n    if (xs.length === 0)\r\n        return 0;\r\n    var s = StructureElement.Loci.size(xs[0]);\r\n    for (var i = 1; i < xs.length; i++) {\r\n        var t = StructureElement.Loci.size(xs[i]);\r\n        if (t < s)\r\n            s = t;\r\n    }\r\n    return s;\r\n}\r\n//# sourceMappingURL=superposition.js.map"]},"metadata":{},"sourceType":"module"}