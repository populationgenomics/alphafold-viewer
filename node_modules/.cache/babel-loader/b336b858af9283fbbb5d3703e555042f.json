{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __extends } from \"tslib\";\nimport { Loci } from '../../../mol-model/loci';\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { PluginBehavior } from '../behavior';\nimport { ButtonsType, ModifiersKeys } from '../../../mol-util/input/input-observer';\nimport { Binding } from '../../../mol-util/binding';\nimport { PluginCommands } from '../../commands';\nimport { isCameraAxesLoci } from '../../../mol-canvas3d/helper/camera-helper';\nimport { Vec3 } from '../../../mol-math/linear-algebra';\nvar B = ButtonsType;\nvar M = ModifiersKeys;\nvar Trigger = Binding.Trigger;\nvar DefaultFocusLociBindings = {\n  clickCenterFocus: Binding([Trigger(1\n  /* Primary */\n  , M.create()), Trigger(2\n  /* Secondary */\n  , M.create()), Trigger(1\n  /* Primary */\n  , M.create({\n    control: true\n  }))], 'Camera center and focus', 'Click element using ${triggers}'),\n  clickCenterFocusSelectMode: Binding([Trigger(2\n  /* Secondary */\n  , M.create()), Trigger(1\n  /* Primary */\n  , M.create({\n    control: true\n  }))], 'Camera center and focus', 'Click element using ${triggers}')\n};\nvar FocusLociParams = {\n  minRadius: PD.Numeric(8, {\n    min: 1,\n    max: 50,\n    step: 1\n  }),\n  extraRadius: PD.Numeric(4, {\n    min: 1,\n    max: 50,\n    step: 1\n  }, {\n    description: 'Value added to the bounding-sphere radius of the Loci'\n  }),\n  durationMs: PD.Numeric(250, {\n    min: 0,\n    max: 1000,\n    step: 1\n  }, {\n    description: 'Camera transition duration'\n  }),\n  bindings: PD.Value(DefaultFocusLociBindings, {\n    isHidden: true\n  })\n};\nexport var FocusLoci = PluginBehavior.create({\n  name: 'camera-focus-loci',\n  category: 'interaction',\n  ctor:\n  /** @class */\n  function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    class_1.prototype.register = function () {\n      var _this = this;\n\n      this.subscribeObservable(this.ctx.behaviors.interaction.click, function (_a) {\n        var current = _a.current,\n            button = _a.button,\n            modifiers = _a.modifiers;\n        if (!_this.ctx.canvas3d) return;\n        var binding = _this.ctx.selectionMode ? _this.params.bindings.clickCenterFocusSelectMode : _this.params.bindings.clickCenterFocus;\n\n        if (Binding.match(binding, button, modifiers)) {\n          if (Loci.isEmpty(current.loci)) {\n            PluginCommands.Camera.Reset(_this.ctx, {});\n            return;\n          }\n\n          var loci = Loci.normalize(current.loci, _this.ctx.managers.interactivity.props.granularity);\n\n          _this.ctx.managers.camera.focusLoci(loci, _this.params);\n        }\n      });\n    };\n\n    return class_1;\n  }(PluginBehavior.Handler),\n  params: function () {\n    return FocusLociParams;\n  },\n  display: {\n    name: 'Camera Focus Loci on Canvas'\n  }\n});\nexport var CameraAxisHelper = PluginBehavior.create({\n  name: 'camera-axis-helper',\n  category: 'interaction',\n  ctor:\n  /** @class */\n  function (_super) {\n    __extends(class_2, _super);\n\n    function class_2() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    class_2.prototype.register = function () {\n      var _this = this;\n\n      var lastPlane = 0\n      /* None */\n      ;\n      var state = 0;\n      this.subscribeObservable(this.ctx.behaviors.interaction.click, function (_a) {\n        var current = _a.current;\n        if (!_this.ctx.canvas3d || !isCameraAxesLoci(current.loci)) return;\n        var axis = current.loci.elements[0].groupId;\n\n        if (axis === 0\n        /* None */\n        ) {\n          lastPlane = 0\n          /* None */\n          ;\n          state = 0;\n          return;\n        }\n\n        var camera = _this.ctx.canvas3d.camera;\n        var dir, up;\n\n        if (axis >= 1\n        /* X */\n        && axis <= 3\n        /* Z */\n        ) {\n          lastPlane = 0\n          /* None */\n          ;\n          state = 0;\n          var d = Vec3.sub(Vec3(), camera.target, camera.position);\n          var c = Vec3.cross(Vec3(), d, camera.up);\n          up = Vec3();\n          up[axis - 1] = 1;\n          dir = Vec3.cross(Vec3(), up, c);\n          if (Vec3.magnitude(dir) === 0) dir = d;\n        } else {\n          if (lastPlane === axis) {\n            state = (state + 1) % 2;\n          } else {\n            lastPlane = axis;\n            state = 0;\n          }\n\n          if (axis === 4\n          /* XY */\n          ) {\n            up = state ? Vec3.unitX : Vec3.unitY;\n            dir = Vec3.negUnitZ;\n          } else if (axis === 5\n          /* XZ */\n          ) {\n            up = state ? Vec3.unitX : Vec3.unitZ;\n            dir = Vec3.negUnitY;\n          } else {\n            up = state ? Vec3.unitY : Vec3.unitZ;\n            dir = Vec3.negUnitX;\n          }\n        }\n\n        _this.ctx.canvas3d.requestCameraReset({\n          snapshot: function (scene, camera) {\n            return camera.getInvariantFocus(scene.boundingSphereVisible.center, scene.boundingSphereVisible.radius, up, dir);\n          }\n        });\n      });\n    };\n\n    return class_2;\n  }(PluginBehavior.Handler),\n  params: function () {\n    return {};\n  },\n  display: {\n    name: 'Camera Axis Helper'\n  }\n});","map":{"version":3,"sources":["../../../../src/mol-plugin/behavior/dynamic/camera.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;;AAEH,SAAS,IAAT,QAAqB,yBAArB;AACA,SAAS,eAAe,IAAI,EAA5B,QAAsC,oCAAtC;AACA,SAAS,cAAT,QAA+B,aAA/B;AACA,SAAS,WAAT,EAAsB,aAAtB,QAA2C,wCAA3C;AACA,SAAS,OAAT,QAAwB,2BAAxB;AACA,SAAS,cAAT,QAA+B,gBAA/B;AACA,SAA2B,gBAA3B,QAAmD,4CAAnD;AACA,SAAS,IAAT,QAAqB,kCAArB;AAEA,IAAM,CAAC,GAAG,WAAV;AACA,IAAM,CAAC,GAAG,aAAV;AACA,IAAM,OAAO,GAAG,OAAO,CAAC,OAAxB;AAEA,IAAM,wBAAwB,GAAG;AAC7B,EAAA,gBAAgB,EAAE,OAAO,CAAC,CACtB,OAAO,CAAA;AAAA;AAAA,IAAiB,CAAC,CAAC,MAAF,EAAjB,CADe,EAEtB,OAAO,CAAA;AAAA;AAAA,IAAmB,CAAC,CAAC,MAAF,EAAnB,CAFe,EAGtB,OAAO,CAAA;AAAA;AAAA,IAAiB,CAAC,CAAC,MAAF,CAAS;AAAE,IAAA,OAAO,EAAE;AAAX,GAAT,CAAjB,CAHe,CAAD,EAItB,yBAJsB,EAIK,iCAJL,CADI;AAM7B,EAAA,0BAA0B,EAAE,OAAO,CAAC,CAChC,OAAO,CAAA;AAAA;AAAA,IAAmB,CAAC,CAAC,MAAF,EAAnB,CADyB,EAEhC,OAAO,CAAA;AAAA;AAAA,IAAiB,CAAC,CAAC,MAAF,CAAS;AAAE,IAAA,OAAO,EAAE;AAAX,GAAT,CAAjB,CAFyB,CAAD,EAGhC,yBAHgC,EAGL,iCAHK;AANN,CAAjC;AAWA,IAAM,eAAe,GAAG;AACpB,EAAA,SAAS,EAAE,EAAE,CAAC,OAAH,CAAW,CAAX,EAAc;AAAE,IAAA,GAAG,EAAE,CAAP;AAAU,IAAA,GAAG,EAAE,EAAf;AAAmB,IAAA,IAAI,EAAE;AAAzB,GAAd,CADS;AAEpB,EAAA,WAAW,EAAE,EAAE,CAAC,OAAH,CAAW,CAAX,EAAc;AAAE,IAAA,GAAG,EAAE,CAAP;AAAU,IAAA,GAAG,EAAE,EAAf;AAAmB,IAAA,IAAI,EAAE;AAAzB,GAAd,EAA4C;AAAE,IAAA,WAAW,EAAE;AAAf,GAA5C,CAFO;AAGpB,EAAA,UAAU,EAAE,EAAE,CAAC,OAAH,CAAW,GAAX,EAAgB;AAAE,IAAA,GAAG,EAAE,CAAP;AAAU,IAAA,GAAG,EAAE,IAAf;AAAqB,IAAA,IAAI,EAAE;AAA3B,GAAhB,EAAgD;AAAE,IAAA,WAAW,EAAE;AAAf,GAAhD,CAHQ;AAKpB,EAAA,QAAQ,EAAE,EAAE,CAAC,KAAH,CAAS,wBAAT,EAAmC;AAAE,IAAA,QAAQ,EAAE;AAAZ,GAAnC;AALU,CAAxB;AASA,OAAO,IAAM,SAAS,GAAG,cAAc,CAAC,MAAf,CAAsC;AAC3D,EAAA,IAAI,EAAE,mBADqD;AAE3D,EAAA,QAAQ,EAAE,aAFiD;AAG3D,EAAA,IAAI;AAAA;AAAA,YAAA,MAAA,EAAA;AAAgB,IAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAAd,aAAA,OAAA,GAAA;;AAoBL;;AAnBG,IAAA,OAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AAAA,UAAA,KAAA,GAAA,IAAA;;AACI,WAAK,mBAAL,CAAyB,KAAK,GAAL,CAAS,SAAT,CAAmB,WAAnB,CAA+B,KAAxD,EAA+D,UAAC,EAAD,EAA+B;YAA5B,OAAO,GAAA,EAAA,CAAA,O;YAAE,MAAM,GAAA,EAAA,CAAA,M;YAAE,SAAS,GAAA,EAAA,CAAA,S;AACxF,YAAI,CAAC,KAAI,CAAC,GAAL,CAAS,QAAd,EAAwB;AAExB,YAAM,OAAO,GAAG,KAAI,CAAC,GAAL,CAAS,aAAT,GACV,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,0BADX,GAEV,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,gBAF3B;;AAIA,YAAI,OAAO,CAAC,KAAR,CAAc,OAAd,EAAuB,MAAvB,EAA+B,SAA/B,CAAJ,EAA+C;AAC3C,cAAI,IAAI,CAAC,OAAL,CAAa,OAAO,CAAC,IAArB,CAAJ,EAAgC;AAC5B,YAAA,cAAc,CAAC,MAAf,CAAsB,KAAtB,CAA4B,KAAI,CAAC,GAAjC,EAAsC,EAAtC;AACA;AACH;;AAED,cAAM,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe,OAAO,CAAC,IAAvB,EAA6B,KAAI,CAAC,GAAL,CAAS,QAAT,CAAkB,aAAlB,CAAgC,KAAhC,CAAsC,WAAnE,CAAb;;AACA,UAAA,KAAI,CAAC,GAAL,CAAS,QAAT,CAAkB,MAAlB,CAAyB,SAAzB,CAAmC,IAAnC,EAAyC,KAAI,CAAC,MAA9C;AACH;AACJ,OAhBD;AAiBH,KAlBD;;AAmBJ,WAAA,OAAA;AAAC,GApBG,CAAgB,cAAc,CAAC,OAA/B,CAHuD;AAwB3D,EAAA,MAAM,EAAE,YAAA;AAAM,WAAA,eAAA;AAAe,GAxB8B;AAyB3D,EAAA,OAAO,EAAE;AAAE,IAAA,IAAI,EAAE;AAAR;AAzBkD,CAAtC,CAAlB;AA4BP,OAAO,IAAM,gBAAgB,GAAG,cAAc,CAAC,MAAf,CAA0B;AACtD,EAAA,IAAI,EAAE,oBADgD;AAEtD,EAAA,QAAQ,EAAE,aAF4C;AAGtD,EAAA,IAAI;AAAA;AAAA,YAAA,MAAA,EAAA;AAAgB,IAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAAd,aAAA,OAAA,GAAA;;AAuDL;;AAtDG,IAAA,OAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AAAA,UAAA,KAAA,GAAA,IAAA;;AAEI,UAAI,SAAS,GAAA;AAAA;AAAb;AACA,UAAI,KAAK,GAAG,CAAZ;AAEA,WAAK,mBAAL,CAAyB,KAAK,GAAL,CAAS,SAAT,CAAmB,WAAnB,CAA+B,KAAxD,EAA+D,UAAC,EAAD,EAAY;YAAT,OAAO,GAAA,EAAA,CAAA,O;AACrE,YAAI,CAAC,KAAI,CAAC,GAAL,CAAS,QAAV,IAAsB,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAT,CAA3C,EAA2D;AAE3D,YAAM,IAAI,GAAG,OAAO,CAAC,IAAR,CAAa,QAAb,CAAsB,CAAtB,EAAyB,OAAtC;;AACA,YAAI,IAAI,KAAA;AAAA;AAAR,UAAoC;AAChC,UAAA,SAAS,GAAA;AAAA;AAAT;AACA,UAAA,KAAK,GAAG,CAAR;AACA;AACH;;AAEO,YAAA,MAAM,GAAK,KAAI,CAAC,GAAL,CAAS,QAAT,CAAL,MAAN;AACR,YAAI,GAAJ,EAAe,EAAf;;AAEA,YAAI,IAAI,IAAA;AAAA;AAAJ,WAA8B,IAAI,IAAA;AAAA;AAAtC,UAA8D;AAC1D,UAAA,SAAS,GAAA;AAAA;AAAT;AACA,UAAA,KAAK,GAAG,CAAR;AAEA,cAAM,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,IAAI,EAAb,EAAiB,MAAM,CAAC,MAAxB,EAAgC,MAAM,CAAC,QAAvC,CAAV;AACA,cAAM,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,EAAf,EAAmB,CAAnB,EAAsB,MAAM,CAAC,EAA7B,CAAV;AAEA,UAAA,EAAE,GAAG,IAAI,EAAT;AACA,UAAA,EAAE,CAAC,IAAI,GAAG,CAAR,CAAF,GAAe,CAAf;AACA,UAAA,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,EAAf,EAAmB,EAAnB,EAAuB,CAAvB,CAAN;AACA,cAAI,IAAI,CAAC,SAAL,CAAe,GAAf,MAAwB,CAA5B,EAA+B,GAAG,GAAG,CAAN;AAClC,SAXD,MAWO;AACH,cAAI,SAAS,KAAK,IAAlB,EAAwB;AACpB,YAAA,KAAK,GAAG,CAAC,KAAK,GAAG,CAAT,IAAc,CAAtB;AACH,WAFD,MAEO;AACH,YAAA,SAAS,GAAG,IAAZ;AACA,YAAA,KAAK,GAAG,CAAR;AACH;;AAED,cAAI,IAAI,KAAA;AAAA;AAAR,YAAkC;AAC9B,YAAA,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,KAAR,GAAgB,IAAI,CAAC,KAA/B;AACA,YAAA,GAAG,GAAG,IAAI,CAAC,QAAX;AACH,WAHD,MAGO,IAAI,IAAI,KAAA;AAAA;AAAR,YAAkC;AACrC,YAAA,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,KAAR,GAAgB,IAAI,CAAC,KAA/B;AACA,YAAA,GAAG,GAAG,IAAI,CAAC,QAAX;AACH,WAHM,MAGA;AACH,YAAA,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,KAAR,GAAgB,IAAI,CAAC,KAA/B;AACA,YAAA,GAAG,GAAG,IAAI,CAAC,QAAX;AACH;AACJ;;AAED,QAAA,KAAI,CAAC,GAAL,CAAS,QAAT,CAAkB,kBAAlB,CAAqC;AACjC,UAAA,QAAQ,EAAE,UAAC,KAAD,EAAQ,MAAR,EAAc;AAAK,mBAAA,MAAM,CAAC,iBAAP,CAAyB,KAAK,CAAC,qBAAN,CAA4B,MAArD,EAA6D,KAAK,CAAC,qBAAN,CAA4B,MAAzF,EAAiG,EAAjG,EAAA,GAAA,CAAA;AAAyG;AADrG,SAArC;AAGH,OA/CD;AAgDH,KArDD;;AAsDJ,WAAA,OAAA;AAAC,GAvDG,CAAgB,cAAc,CAAC,OAA/B,CAHkD;AA2DtD,EAAA,MAAM,EAAE,YAAA;AAAM,WAAA,EAAA;AAAI,GA3DoC;AA4DtD,EAAA,OAAO,EAAE;AAAE,IAAA,IAAI,EAAE;AAAR;AA5D6C,CAA1B,CAAzB","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { Loci } from '../../../mol-model/loci';\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { PluginBehavior } from '../behavior';\r\nimport { ButtonsType, ModifiersKeys } from '../../../mol-util/input/input-observer';\r\nimport { Binding } from '../../../mol-util/binding';\r\nimport { PluginCommands } from '../../commands';\r\nimport { isCameraAxesLoci } from '../../../mol-canvas3d/helper/camera-helper';\r\nimport { Vec3 } from '../../../mol-math/linear-algebra';\r\nvar B = ButtonsType;\r\nvar M = ModifiersKeys;\r\nvar Trigger = Binding.Trigger;\r\nvar DefaultFocusLociBindings = {\r\n    clickCenterFocus: Binding([\r\n        Trigger(1 /* Primary */, M.create()),\r\n        Trigger(2 /* Secondary */, M.create()),\r\n        Trigger(1 /* Primary */, M.create({ control: true }))\r\n    ], 'Camera center and focus', 'Click element using ${triggers}'),\r\n    clickCenterFocusSelectMode: Binding([\r\n        Trigger(2 /* Secondary */, M.create()),\r\n        Trigger(1 /* Primary */, M.create({ control: true }))\r\n    ], 'Camera center and focus', 'Click element using ${triggers}'),\r\n};\r\nvar FocusLociParams = {\r\n    minRadius: PD.Numeric(8, { min: 1, max: 50, step: 1 }),\r\n    extraRadius: PD.Numeric(4, { min: 1, max: 50, step: 1 }, { description: 'Value added to the bounding-sphere radius of the Loci' }),\r\n    durationMs: PD.Numeric(250, { min: 0, max: 1000, step: 1 }, { description: 'Camera transition duration' }),\r\n    bindings: PD.Value(DefaultFocusLociBindings, { isHidden: true }),\r\n};\r\nexport var FocusLoci = PluginBehavior.create({\r\n    name: 'camera-focus-loci',\r\n    category: 'interaction',\r\n    ctor: /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        class_1.prototype.register = function () {\r\n            var _this = this;\r\n            this.subscribeObservable(this.ctx.behaviors.interaction.click, function (_a) {\r\n                var current = _a.current, button = _a.button, modifiers = _a.modifiers;\r\n                if (!_this.ctx.canvas3d)\r\n                    return;\r\n                var binding = _this.ctx.selectionMode\r\n                    ? _this.params.bindings.clickCenterFocusSelectMode\r\n                    : _this.params.bindings.clickCenterFocus;\r\n                if (Binding.match(binding, button, modifiers)) {\r\n                    if (Loci.isEmpty(current.loci)) {\r\n                        PluginCommands.Camera.Reset(_this.ctx, {});\r\n                        return;\r\n                    }\r\n                    var loci = Loci.normalize(current.loci, _this.ctx.managers.interactivity.props.granularity);\r\n                    _this.ctx.managers.camera.focusLoci(loci, _this.params);\r\n                }\r\n            });\r\n        };\r\n        return class_1;\r\n    }(PluginBehavior.Handler)),\r\n    params: function () { return FocusLociParams; },\r\n    display: { name: 'Camera Focus Loci on Canvas' }\r\n});\r\nexport var CameraAxisHelper = PluginBehavior.create({\r\n    name: 'camera-axis-helper',\r\n    category: 'interaction',\r\n    ctor: /** @class */ (function (_super) {\r\n        __extends(class_2, _super);\r\n        function class_2() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        class_2.prototype.register = function () {\r\n            var _this = this;\r\n            var lastPlane = 0 /* None */;\r\n            var state = 0;\r\n            this.subscribeObservable(this.ctx.behaviors.interaction.click, function (_a) {\r\n                var current = _a.current;\r\n                if (!_this.ctx.canvas3d || !isCameraAxesLoci(current.loci))\r\n                    return;\r\n                var axis = current.loci.elements[0].groupId;\r\n                if (axis === 0 /* None */) {\r\n                    lastPlane = 0 /* None */;\r\n                    state = 0;\r\n                    return;\r\n                }\r\n                var camera = _this.ctx.canvas3d.camera;\r\n                var dir, up;\r\n                if (axis >= 1 /* X */ && axis <= 3 /* Z */) {\r\n                    lastPlane = 0 /* None */;\r\n                    state = 0;\r\n                    var d = Vec3.sub(Vec3(), camera.target, camera.position);\r\n                    var c = Vec3.cross(Vec3(), d, camera.up);\r\n                    up = Vec3();\r\n                    up[axis - 1] = 1;\r\n                    dir = Vec3.cross(Vec3(), up, c);\r\n                    if (Vec3.magnitude(dir) === 0)\r\n                        dir = d;\r\n                }\r\n                else {\r\n                    if (lastPlane === axis) {\r\n                        state = (state + 1) % 2;\r\n                    }\r\n                    else {\r\n                        lastPlane = axis;\r\n                        state = 0;\r\n                    }\r\n                    if (axis === 4 /* XY */) {\r\n                        up = state ? Vec3.unitX : Vec3.unitY;\r\n                        dir = Vec3.negUnitZ;\r\n                    }\r\n                    else if (axis === 5 /* XZ */) {\r\n                        up = state ? Vec3.unitX : Vec3.unitZ;\r\n                        dir = Vec3.negUnitY;\r\n                    }\r\n                    else {\r\n                        up = state ? Vec3.unitY : Vec3.unitZ;\r\n                        dir = Vec3.negUnitX;\r\n                    }\r\n                }\r\n                _this.ctx.canvas3d.requestCameraReset({\r\n                    snapshot: function (scene, camera) { return camera.getInvariantFocus(scene.boundingSphereVisible.center, scene.boundingSphereVisible.radius, up, dir); }\r\n                });\r\n            });\r\n        };\r\n        return class_2;\r\n    }(PluginBehavior.Handler)),\r\n    params: function () { return ({}); },\r\n    display: { name: 'Camera Axis Helper' }\r\n});\r\n//# sourceMappingURL=camera.js.map"]},"metadata":{},"sourceType":"module"}