{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __extends } from \"tslib\";\nimport { MarkerAction } from '../../../mol-util/marker-action';\nimport { PluginStateObject as SO } from '../../../mol-plugin-state/objects';\nimport { lociLabel } from '../../../mol-theme/label';\nimport { PluginBehavior } from '../behavior';\nimport { StateTreeSpine } from '../../../mol-state/tree/spine';\nimport { StateSelection } from '../../../mol-state';\nimport { ButtonsType, ModifiersKeys } from '../../../mol-util/input/input-observer';\nimport { Binding } from '../../../mol-util/binding';\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { EmptyLoci, Loci } from '../../../mol-model/loci';\nimport { Bond, Structure, StructureElement, StructureProperties } from '../../../mol-model/structure';\nimport { arrayMax } from '../../../mol-util/array';\nvar B = ButtonsType;\nvar M = ModifiersKeys;\nvar Trigger = Binding.Trigger; //\n\nvar DefaultHighlightLociBindings = {\n  hoverHighlightOnly: Binding([Trigger(0\n  /* None */\n  )], 'Highlight', 'Hover element using ${triggers}'),\n  hoverHighlightOnlyExtend: Binding([Trigger(0\n  /* None */\n  , M.create({\n    shift: true\n  }))], 'Extend highlight', 'From selected to hovered element along polymer using ${triggers}')\n};\nvar HighlightLociParams = {\n  bindings: PD.Value(DefaultHighlightLociBindings, {\n    isHidden: true\n  }),\n  ignore: PD.Value([], {\n    isHidden: true\n  }),\n  preferAtoms: PD.Boolean(false, {\n    description: 'Always prefer atoms over bonds'\n  }),\n  mark: PD.Boolean(true)\n};\nexport var HighlightLoci = PluginBehavior.create({\n  name: 'representation-highlight-loci',\n  category: 'interaction',\n  ctor:\n  /** @class */\n  function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n\n      _this.lociMarkProvider = function (interactionLoci, action, noRender) {\n        if (!_this.ctx.canvas3d || !_this.params.mark) return;\n\n        _this.ctx.canvas3d.mark(interactionLoci, action, noRender);\n      };\n\n      return _this;\n    }\n\n    class_1.prototype.getLoci = function (loci) {\n      return this.params.preferAtoms && Bond.isLoci(loci) && loci.bonds.length === 2 ? Bond.toFirstStructureElementLoci(loci) : loci;\n    };\n\n    class_1.prototype.register = function () {\n      var _this = this;\n\n      this.subscribeObservable(this.ctx.behaviors.interaction.hover, function (_a) {\n        var _b;\n\n        var current = _a.current,\n            buttons = _a.buttons,\n            modifiers = _a.modifiers;\n        if (!_this.ctx.canvas3d || _this.ctx.isBusy) return;\n\n        var loci = _this.getLoci(current.loci);\n\n        if (((_b = _this.params.ignore) === null || _b === void 0 ? void 0 : _b.indexOf(loci.kind)) >= 0) {\n          _this.ctx.managers.interactivity.lociHighlights.highlightOnly({\n            repr: current.repr,\n            loci: EmptyLoci\n          });\n\n          return;\n        }\n\n        var matched = false;\n\n        if (Binding.match(_this.params.bindings.hoverHighlightOnly, buttons, modifiers)) {\n          // remove repr to highlight loci everywhere on hover\n          _this.ctx.managers.interactivity.lociHighlights.highlightOnly({\n            loci: loci\n          });\n\n          matched = true;\n        }\n\n        if (Binding.match(_this.params.bindings.hoverHighlightOnlyExtend, buttons, modifiers)) {\n          // remove repr to highlight loci everywhere on hover\n          _this.ctx.managers.interactivity.lociHighlights.highlightOnlyExtend({\n            loci: loci\n          });\n\n          matched = true;\n        }\n\n        if (!matched) {\n          _this.ctx.managers.interactivity.lociHighlights.highlightOnly({\n            repr: current.repr,\n            loci: EmptyLoci\n          });\n        }\n      });\n      this.ctx.managers.interactivity.lociHighlights.addProvider(this.lociMarkProvider);\n    };\n\n    class_1.prototype.unregister = function () {\n      this.ctx.managers.interactivity.lociHighlights.removeProvider(this.lociMarkProvider);\n    };\n\n    return class_1;\n  }(PluginBehavior.Handler),\n  params: function () {\n    return HighlightLociParams;\n  },\n  display: {\n    name: 'Highlight Loci on Canvas'\n  }\n}); //\n\nvar DefaultSelectLociBindings = {\n  clickSelect: Binding.Empty,\n  clickToggleExtend: Binding([Trigger(1\n  /* Primary */\n  , M.create({\n    shift: true\n  }))], 'Toggle extended selection', '${triggers} to extend selection along polymer'),\n  clickSelectOnly: Binding.Empty,\n  clickToggle: Binding([Trigger(1\n  /* Primary */\n  , M.create())], 'Toggle selection', '${triggers} on element'),\n  clickDeselect: Binding.Empty,\n  clickDeselectAllOnEmpty: Binding([Trigger(1\n  /* Primary */\n  , M.create())], 'Deselect all', 'Click on nothing using ${triggers}')\n};\nvar SelectLociParams = {\n  bindings: PD.Value(DefaultSelectLociBindings, {\n    isHidden: true\n  }),\n  ignore: PD.Value([], {\n    isHidden: true\n  }),\n  preferAtoms: PD.Boolean(false, {\n    description: 'Always prefer atoms over bonds'\n  }),\n  mark: PD.Boolean(true)\n};\nexport var SelectLoci = PluginBehavior.create({\n  name: 'representation-select-loci',\n  category: 'interaction',\n  ctor:\n  /** @class */\n  function (_super) {\n    __extends(class_2, _super);\n\n    function class_2(ctx, params) {\n      var _this = _super.call(this, ctx, params) || this;\n\n      _this.lociMarkProvider = function (reprLoci, action, noRender) {\n        if (!_this.ctx.canvas3d || !_this.params.mark) return;\n\n        _this.ctx.canvas3d.mark({\n          loci: reprLoci.loci\n        }, action, noRender);\n      };\n\n      _this.spine = new StateTreeSpine.Impl(ctx.state.data.cells);\n      return _this;\n    }\n\n    class_2.prototype.getLoci = function (loci) {\n      return this.params.preferAtoms && Bond.isLoci(loci) && loci.bonds.length === 2 ? Bond.toFirstStructureElementLoci(loci) : loci;\n    };\n\n    class_2.prototype.applySelectMark = function (ref, clear) {\n      var cell = this.ctx.state.data.cells.get(ref);\n\n      if (cell && SO.isRepresentation3D(cell.obj)) {\n        this.spine.current = cell;\n        var so = this.spine.getRootOfType(SO.Molecule.Structure);\n\n        if (so) {\n          if (clear) {\n            this.lociMarkProvider({\n              loci: Structure.Loci(so.data)\n            }, MarkerAction.Deselect);\n          }\n\n          var loci = this.ctx.managers.structure.selection.getLoci(so.data);\n          this.lociMarkProvider({\n            loci: loci\n          }, MarkerAction.Select);\n        }\n      }\n    };\n\n    class_2.prototype.register = function () {\n      var _this = this;\n\n      var lociIsEmpty = function (loci) {\n        return Loci.isEmpty(loci);\n      };\n\n      var lociIsNotEmpty = function (loci) {\n        return !Loci.isEmpty(loci);\n      };\n\n      var actions = [['clickSelect', function (current) {\n        return _this.ctx.managers.interactivity.lociSelects.select(current);\n      }, lociIsNotEmpty], ['clickToggle', function (current) {\n        return _this.ctx.managers.interactivity.lociSelects.toggle(current);\n      }, lociIsNotEmpty], ['clickToggleExtend', function (current) {\n        return _this.ctx.managers.interactivity.lociSelects.toggleExtend(current);\n      }, lociIsNotEmpty], ['clickSelectOnly', function (current) {\n        return _this.ctx.managers.interactivity.lociSelects.selectOnly(current);\n      }, lociIsNotEmpty], ['clickDeselect', function (current) {\n        return _this.ctx.managers.interactivity.lociSelects.deselect(current);\n      }, lociIsNotEmpty], ['clickDeselectAllOnEmpty', function () {\n        return _this.ctx.managers.interactivity.lociSelects.deselectAll();\n      }, lociIsEmpty]]; // sort the action so that the ones with more modifiers trigger sooner.\n\n      actions.sort(function (a, b) {\n        var x = _this.params.bindings[a[0]],\n            y = _this.params.bindings[b[0]];\n        var k = x.triggers.length === 0 ? 0 : arrayMax(x.triggers.map(function (t) {\n          return M.size(t.modifiers);\n        }));\n        var l = y.triggers.length === 0 ? 0 : arrayMax(y.triggers.map(function (t) {\n          return M.size(t.modifiers);\n        }));\n        return l - k;\n      });\n      this.subscribeObservable(this.ctx.behaviors.interaction.click, function (_a) {\n        var _b;\n\n        var current = _a.current,\n            button = _a.button,\n            modifiers = _a.modifiers;\n        if (!_this.ctx.canvas3d || _this.ctx.isBusy || !_this.ctx.selectionMode) return;\n\n        var loci = _this.getLoci(current.loci);\n\n        if (((_b = _this.params.ignore) === null || _b === void 0 ? void 0 : _b.indexOf(loci.kind)) >= 0) return; // only trigger the 1st action that matches\n\n        for (var _i = 0, actions_1 = actions; _i < actions_1.length; _i++) {\n          var _c = actions_1[_i],\n              binding = _c[0],\n              action = _c[1],\n              condition = _c[2];\n\n          if (Binding.match(_this.params.bindings[binding], button, modifiers) && (!condition || condition(loci))) {\n            action({\n              repr: current.repr,\n              loci: loci\n            });\n            break;\n          }\n        }\n      });\n      this.ctx.managers.interactivity.lociSelects.addProvider(this.lociMarkProvider);\n      this.subscribeObservable(this.ctx.state.events.object.created, function (_a) {\n        var ref = _a.ref;\n        return _this.applySelectMark(ref);\n      }); // re-apply select-mark to all representation of an updated structure\n\n      this.subscribeObservable(this.ctx.state.events.object.updated, function (_a) {\n        var ref = _a.ref,\n            obj = _a.obj,\n            oldObj = _a.oldObj,\n            oldData = _a.oldData,\n            action = _a.action;\n\n        var cell = _this.ctx.state.data.cells.get(ref);\n\n        if (cell && SO.Molecule.Structure.is(cell.obj)) {\n          var structure = obj.data;\n          var oldStructure = action === 'recreate' ? oldObj === null || oldObj === void 0 ? void 0 : oldObj.data : action === 'in-place' ? oldData : undefined;\n          if (oldStructure && Structure.areEquivalent(structure, oldStructure) && Structure.areHierarchiesEqual(structure, oldStructure)) return;\n\n          var reprs = _this.ctx.state.data.select(StateSelection.Generators.ofType(SO.Molecule.Structure.Representation3D, ref));\n\n          for (var _i = 0, reprs_1 = reprs; _i < reprs_1.length; _i++) {\n            var repr = reprs_1[_i];\n\n            _this.applySelectMark(repr.transform.ref, true);\n          }\n        }\n      });\n    };\n\n    class_2.prototype.unregister = function () {\n      this.ctx.managers.interactivity.lociSelects.removeProvider(this.lociMarkProvider);\n    };\n\n    return class_2;\n  }(PluginBehavior.Handler),\n  params: function () {\n    return SelectLociParams;\n  },\n  display: {\n    name: 'Select Loci on Canvas'\n  }\n}); //\n\nexport var DefaultLociLabelProvider = PluginBehavior.create({\n  name: 'default-loci-label-provider',\n  category: 'interaction',\n  ctor:\n  /** @class */\n  function () {\n    function class_3(ctx) {\n      this.ctx = ctx;\n      this.f = {\n        label: function (loci) {\n          var label = [];\n\n          if (StructureElement.Loci.is(loci) && loci.elements.length === 1) {\n            var u = loci.elements[0].unit;\n            var l = StructureElement.Location.create(loci.structure, u, u.elements[0]);\n            var name_1 = StructureProperties.entity.pdbx_description(l).join(', ');\n            label.push(name_1);\n          }\n\n          label.push(lociLabel(loci));\n          return label.filter(function (l) {\n            return !!l;\n          }).join('</br>');\n        },\n        group: function (label) {\n          return label.toString().replace(/Model [0-9]+/g, 'Models');\n        },\n        priority: 100\n      };\n    }\n\n    class_3.prototype.register = function () {\n      this.ctx.managers.lociLabels.addProvider(this.f);\n    };\n\n    class_3.prototype.unregister = function () {\n      this.ctx.managers.lociLabels.removeProvider(this.f);\n    };\n\n    return class_3;\n  }(),\n  display: {\n    name: 'Provide Default Loci Label'\n  }\n}); //\n\nvar DefaultFocusLociBindings = {\n  clickFocus: Binding([Trigger(1\n  /* Primary */\n  , M.create())], 'Representation Focus', 'Click element using ${triggers}'),\n  clickFocusAdd: Binding([Trigger(1\n  /* Primary */\n  , M.create({\n    shift: true\n  }))], 'Representation Focus Add', 'Click element using ${triggers}'),\n  clickFocusSelectMode: Binding([// default is empty\n  ], 'Representation Focus', 'Click element using ${triggers}'),\n  clickFocusAddSelectMode: Binding([// default is empty\n  ], 'Representation Focus Add', 'Click element using ${triggers}')\n};\nvar FocusLociParams = {\n  bindings: PD.Value(DefaultFocusLociBindings, {\n    isHidden: true\n  })\n};\nexport var FocusLoci = PluginBehavior.create({\n  name: 'representation-focus-loci',\n  category: 'interaction',\n  ctor:\n  /** @class */\n  function (_super) {\n    __extends(class_4, _super);\n\n    function class_4() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    class_4.prototype.register = function () {\n      var _this = this;\n\n      this.subscribeObservable(this.ctx.behaviors.interaction.click, function (_a) {\n        var _b;\n\n        var current = _a.current,\n            button = _a.button,\n            modifiers = _a.modifiers;\n        var _c = _this.params.bindings,\n            clickFocus = _c.clickFocus,\n            clickFocusAdd = _c.clickFocusAdd,\n            clickFocusSelectMode = _c.clickFocusSelectMode,\n            clickFocusAddSelectMode = _c.clickFocusAddSelectMode; // only apply structure focus for appropriate granularity\n\n        var granularity = _this.ctx.managers.interactivity.props.granularity;\n        if (granularity !== 'residue' && granularity !== 'element') return;\n        var binding = _this.ctx.selectionMode ? clickFocusSelectMode : clickFocus;\n        var matched = Binding.match(binding, button, modifiers);\n        var bindingAdd = _this.ctx.selectionMode ? clickFocusAddSelectMode : clickFocusAdd;\n        var matchedAdd = Binding.match(bindingAdd, button, modifiers);\n        if (!matched && !matchedAdd) return;\n        var loci = Loci.normalize(current.loci, 'residue');\n        var entry = _this.ctx.managers.structure.focus.current;\n\n        if (entry && Loci.areEqual(entry.loci, loci)) {\n          _this.ctx.managers.structure.focus.clear();\n        } else {\n          if (matched) {\n            _this.ctx.managers.structure.focus.setFromLoci(loci);\n          } else {\n            _this.ctx.managers.structure.focus.addFromLoci(loci); // focus-add is not handled in camera behavior, doing it here\n\n\n            var current_1 = (_b = _this.ctx.managers.structure.focus.current) === null || _b === void 0 ? void 0 : _b.loci;\n            if (current_1) _this.ctx.managers.camera.focusLoci(current_1);\n          }\n        }\n      });\n    };\n\n    return class_4;\n  }(PluginBehavior.Handler),\n  params: function () {\n    return FocusLociParams;\n  },\n  display: {\n    name: 'Representation Focus Loci on Canvas'\n  }\n});","map":{"version":3,"sources":["../../../../src/mol-plugin/behavior/dynamic/representation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { MarkerAction } from '../../../mol-util/marker-action';\r\nimport { PluginStateObject as SO } from '../../../mol-plugin-state/objects';\r\nimport { lociLabel } from '../../../mol-theme/label';\r\nimport { PluginBehavior } from '../behavior';\r\nimport { StateTreeSpine } from '../../../mol-state/tree/spine';\r\nimport { StateSelection } from '../../../mol-state';\r\nimport { ButtonsType, ModifiersKeys } from '../../../mol-util/input/input-observer';\r\nimport { Binding } from '../../../mol-util/binding';\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { EmptyLoci, Loci } from '../../../mol-model/loci';\r\nimport { Bond, Structure, StructureElement, StructureProperties } from '../../../mol-model/structure';\r\nimport { arrayMax } from '../../../mol-util/array';\r\nvar B = ButtonsType;\r\nvar M = ModifiersKeys;\r\nvar Trigger = Binding.Trigger;\r\n//\r\nvar DefaultHighlightLociBindings = {\r\n    hoverHighlightOnly: Binding([Trigger(0 /* None */)], 'Highlight', 'Hover element using ${triggers}'),\r\n    hoverHighlightOnlyExtend: Binding([Trigger(0 /* None */, M.create({ shift: true }))], 'Extend highlight', 'From selected to hovered element along polymer using ${triggers}'),\r\n};\r\nvar HighlightLociParams = {\r\n    bindings: PD.Value(DefaultHighlightLociBindings, { isHidden: true }),\r\n    ignore: PD.Value([], { isHidden: true }),\r\n    preferAtoms: PD.Boolean(false, { description: 'Always prefer atoms over bonds' }),\r\n    mark: PD.Boolean(true)\r\n};\r\nexport var HighlightLoci = PluginBehavior.create({\r\n    name: 'representation-highlight-loci',\r\n    category: 'interaction',\r\n    ctor: /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.lociMarkProvider = function (interactionLoci, action, noRender) {\r\n                if (!_this.ctx.canvas3d || !_this.params.mark)\r\n                    return;\r\n                _this.ctx.canvas3d.mark(interactionLoci, action, noRender);\r\n            };\r\n            return _this;\r\n        }\r\n        class_1.prototype.getLoci = function (loci) {\r\n            return this.params.preferAtoms && Bond.isLoci(loci) && loci.bonds.length === 2\r\n                ? Bond.toFirstStructureElementLoci(loci)\r\n                : loci;\r\n        };\r\n        class_1.prototype.register = function () {\r\n            var _this = this;\r\n            this.subscribeObservable(this.ctx.behaviors.interaction.hover, function (_a) {\r\n                var _b;\r\n                var current = _a.current, buttons = _a.buttons, modifiers = _a.modifiers;\r\n                if (!_this.ctx.canvas3d || _this.ctx.isBusy)\r\n                    return;\r\n                var loci = _this.getLoci(current.loci);\r\n                if (((_b = _this.params.ignore) === null || _b === void 0 ? void 0 : _b.indexOf(loci.kind)) >= 0) {\r\n                    _this.ctx.managers.interactivity.lociHighlights.highlightOnly({ repr: current.repr, loci: EmptyLoci });\r\n                    return;\r\n                }\r\n                var matched = false;\r\n                if (Binding.match(_this.params.bindings.hoverHighlightOnly, buttons, modifiers)) {\r\n                    // remove repr to highlight loci everywhere on hover\r\n                    _this.ctx.managers.interactivity.lociHighlights.highlightOnly({ loci: loci });\r\n                    matched = true;\r\n                }\r\n                if (Binding.match(_this.params.bindings.hoverHighlightOnlyExtend, buttons, modifiers)) {\r\n                    // remove repr to highlight loci everywhere on hover\r\n                    _this.ctx.managers.interactivity.lociHighlights.highlightOnlyExtend({ loci: loci });\r\n                    matched = true;\r\n                }\r\n                if (!matched) {\r\n                    _this.ctx.managers.interactivity.lociHighlights.highlightOnly({ repr: current.repr, loci: EmptyLoci });\r\n                }\r\n            });\r\n            this.ctx.managers.interactivity.lociHighlights.addProvider(this.lociMarkProvider);\r\n        };\r\n        class_1.prototype.unregister = function () {\r\n            this.ctx.managers.interactivity.lociHighlights.removeProvider(this.lociMarkProvider);\r\n        };\r\n        return class_1;\r\n    }(PluginBehavior.Handler)),\r\n    params: function () { return HighlightLociParams; },\r\n    display: { name: 'Highlight Loci on Canvas' }\r\n});\r\n//\r\nvar DefaultSelectLociBindings = {\r\n    clickSelect: Binding.Empty,\r\n    clickToggleExtend: Binding([Trigger(1 /* Primary */, M.create({ shift: true }))], 'Toggle extended selection', '${triggers} to extend selection along polymer'),\r\n    clickSelectOnly: Binding.Empty,\r\n    clickToggle: Binding([Trigger(1 /* Primary */, M.create())], 'Toggle selection', '${triggers} on element'),\r\n    clickDeselect: Binding.Empty,\r\n    clickDeselectAllOnEmpty: Binding([Trigger(1 /* Primary */, M.create())], 'Deselect all', 'Click on nothing using ${triggers}'),\r\n};\r\nvar SelectLociParams = {\r\n    bindings: PD.Value(DefaultSelectLociBindings, { isHidden: true }),\r\n    ignore: PD.Value([], { isHidden: true }),\r\n    preferAtoms: PD.Boolean(false, { description: 'Always prefer atoms over bonds' }),\r\n    mark: PD.Boolean(true)\r\n};\r\nexport var SelectLoci = PluginBehavior.create({\r\n    name: 'representation-select-loci',\r\n    category: 'interaction',\r\n    ctor: /** @class */ (function (_super) {\r\n        __extends(class_2, _super);\r\n        function class_2(ctx, params) {\r\n            var _this = _super.call(this, ctx, params) || this;\r\n            _this.lociMarkProvider = function (reprLoci, action, noRender) {\r\n                if (!_this.ctx.canvas3d || !_this.params.mark)\r\n                    return;\r\n                _this.ctx.canvas3d.mark({ loci: reprLoci.loci }, action, noRender);\r\n            };\r\n            _this.spine = new StateTreeSpine.Impl(ctx.state.data.cells);\r\n            return _this;\r\n        }\r\n        class_2.prototype.getLoci = function (loci) {\r\n            return this.params.preferAtoms && Bond.isLoci(loci) && loci.bonds.length === 2\r\n                ? Bond.toFirstStructureElementLoci(loci)\r\n                : loci;\r\n        };\r\n        class_2.prototype.applySelectMark = function (ref, clear) {\r\n            var cell = this.ctx.state.data.cells.get(ref);\r\n            if (cell && SO.isRepresentation3D(cell.obj)) {\r\n                this.spine.current = cell;\r\n                var so = this.spine.getRootOfType(SO.Molecule.Structure);\r\n                if (so) {\r\n                    if (clear) {\r\n                        this.lociMarkProvider({ loci: Structure.Loci(so.data) }, MarkerAction.Deselect);\r\n                    }\r\n                    var loci = this.ctx.managers.structure.selection.getLoci(so.data);\r\n                    this.lociMarkProvider({ loci: loci }, MarkerAction.Select);\r\n                }\r\n            }\r\n        };\r\n        class_2.prototype.register = function () {\r\n            var _this = this;\r\n            var lociIsEmpty = function (loci) { return Loci.isEmpty(loci); };\r\n            var lociIsNotEmpty = function (loci) { return !Loci.isEmpty(loci); };\r\n            var actions = [\r\n                ['clickSelect', function (current) { return _this.ctx.managers.interactivity.lociSelects.select(current); }, lociIsNotEmpty],\r\n                ['clickToggle', function (current) { return _this.ctx.managers.interactivity.lociSelects.toggle(current); }, lociIsNotEmpty],\r\n                ['clickToggleExtend', function (current) { return _this.ctx.managers.interactivity.lociSelects.toggleExtend(current); }, lociIsNotEmpty],\r\n                ['clickSelectOnly', function (current) { return _this.ctx.managers.interactivity.lociSelects.selectOnly(current); }, lociIsNotEmpty],\r\n                ['clickDeselect', function (current) { return _this.ctx.managers.interactivity.lociSelects.deselect(current); }, lociIsNotEmpty],\r\n                ['clickDeselectAllOnEmpty', function () { return _this.ctx.managers.interactivity.lociSelects.deselectAll(); }, lociIsEmpty],\r\n            ];\r\n            // sort the action so that the ones with more modifiers trigger sooner.\r\n            actions.sort(function (a, b) {\r\n                var x = _this.params.bindings[a[0]], y = _this.params.bindings[b[0]];\r\n                var k = x.triggers.length === 0 ? 0 : arrayMax(x.triggers.map(function (t) { return M.size(t.modifiers); }));\r\n                var l = y.triggers.length === 0 ? 0 : arrayMax(y.triggers.map(function (t) { return M.size(t.modifiers); }));\r\n                return l - k;\r\n            });\r\n            this.subscribeObservable(this.ctx.behaviors.interaction.click, function (_a) {\r\n                var _b;\r\n                var current = _a.current, button = _a.button, modifiers = _a.modifiers;\r\n                if (!_this.ctx.canvas3d || _this.ctx.isBusy || !_this.ctx.selectionMode)\r\n                    return;\r\n                var loci = _this.getLoci(current.loci);\r\n                if (((_b = _this.params.ignore) === null || _b === void 0 ? void 0 : _b.indexOf(loci.kind)) >= 0)\r\n                    return;\r\n                // only trigger the 1st action that matches\r\n                for (var _i = 0, actions_1 = actions; _i < actions_1.length; _i++) {\r\n                    var _c = actions_1[_i], binding = _c[0], action = _c[1], condition = _c[2];\r\n                    if (Binding.match(_this.params.bindings[binding], button, modifiers) && (!condition || condition(loci))) {\r\n                        action({ repr: current.repr, loci: loci });\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            this.ctx.managers.interactivity.lociSelects.addProvider(this.lociMarkProvider);\r\n            this.subscribeObservable(this.ctx.state.events.object.created, function (_a) {\r\n                var ref = _a.ref;\r\n                return _this.applySelectMark(ref);\r\n            });\r\n            // re-apply select-mark to all representation of an updated structure\r\n            this.subscribeObservable(this.ctx.state.events.object.updated, function (_a) {\r\n                var ref = _a.ref, obj = _a.obj, oldObj = _a.oldObj, oldData = _a.oldData, action = _a.action;\r\n                var cell = _this.ctx.state.data.cells.get(ref);\r\n                if (cell && SO.Molecule.Structure.is(cell.obj)) {\r\n                    var structure = obj.data;\r\n                    var oldStructure = action === 'recreate' ? oldObj === null || oldObj === void 0 ? void 0 : oldObj.data :\r\n                        action === 'in-place' ? oldData : undefined;\r\n                    if (oldStructure &&\r\n                        Structure.areEquivalent(structure, oldStructure) &&\r\n                        Structure.areHierarchiesEqual(structure, oldStructure))\r\n                        return;\r\n                    var reprs = _this.ctx.state.data.select(StateSelection.Generators.ofType(SO.Molecule.Structure.Representation3D, ref));\r\n                    for (var _i = 0, reprs_1 = reprs; _i < reprs_1.length; _i++) {\r\n                        var repr = reprs_1[_i];\r\n                        _this.applySelectMark(repr.transform.ref, true);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        class_2.prototype.unregister = function () {\r\n            this.ctx.managers.interactivity.lociSelects.removeProvider(this.lociMarkProvider);\r\n        };\r\n        return class_2;\r\n    }(PluginBehavior.Handler)),\r\n    params: function () { return SelectLociParams; },\r\n    display: { name: 'Select Loci on Canvas' }\r\n});\r\n//\r\nexport var DefaultLociLabelProvider = PluginBehavior.create({\r\n    name: 'default-loci-label-provider',\r\n    category: 'interaction',\r\n    ctor: /** @class */ (function () {\r\n        function class_3(ctx) {\r\n            this.ctx = ctx;\r\n            this.f = {\r\n                label: function (loci) {\r\n                    var label = [];\r\n                    if (StructureElement.Loci.is(loci) && loci.elements.length === 1) {\r\n                        var u = loci.elements[0].unit;\r\n                        var l = StructureElement.Location.create(loci.structure, u, u.elements[0]);\r\n                        var name_1 = StructureProperties.entity.pdbx_description(l).join(', ');\r\n                        label.push(name_1);\r\n                    }\r\n                    label.push(lociLabel(loci));\r\n                    return label.filter(function (l) { return !!l; }).join('</br>');\r\n                },\r\n                group: function (label) { return label.toString().replace(/Model [0-9]+/g, 'Models'); },\r\n                priority: 100\r\n            };\r\n        }\r\n        class_3.prototype.register = function () { this.ctx.managers.lociLabels.addProvider(this.f); };\r\n        class_3.prototype.unregister = function () { this.ctx.managers.lociLabels.removeProvider(this.f); };\r\n        return class_3;\r\n    }()),\r\n    display: { name: 'Provide Default Loci Label' }\r\n});\r\n//\r\nvar DefaultFocusLociBindings = {\r\n    clickFocus: Binding([\r\n        Trigger(1 /* Primary */, M.create()),\r\n    ], 'Representation Focus', 'Click element using ${triggers}'),\r\n    clickFocusAdd: Binding([\r\n        Trigger(1 /* Primary */, M.create({ shift: true })),\r\n    ], 'Representation Focus Add', 'Click element using ${triggers}'),\r\n    clickFocusSelectMode: Binding([\r\n    // default is empty\r\n    ], 'Representation Focus', 'Click element using ${triggers}'),\r\n    clickFocusAddSelectMode: Binding([\r\n    // default is empty\r\n    ], 'Representation Focus Add', 'Click element using ${triggers}'),\r\n};\r\nvar FocusLociParams = {\r\n    bindings: PD.Value(DefaultFocusLociBindings, { isHidden: true }),\r\n};\r\nexport var FocusLoci = PluginBehavior.create({\r\n    name: 'representation-focus-loci',\r\n    category: 'interaction',\r\n    ctor: /** @class */ (function (_super) {\r\n        __extends(class_4, _super);\r\n        function class_4() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        class_4.prototype.register = function () {\r\n            var _this = this;\r\n            this.subscribeObservable(this.ctx.behaviors.interaction.click, function (_a) {\r\n                var _b;\r\n                var current = _a.current, button = _a.button, modifiers = _a.modifiers;\r\n                var _c = _this.params.bindings, clickFocus = _c.clickFocus, clickFocusAdd = _c.clickFocusAdd, clickFocusSelectMode = _c.clickFocusSelectMode, clickFocusAddSelectMode = _c.clickFocusAddSelectMode;\r\n                // only apply structure focus for appropriate granularity\r\n                var granularity = _this.ctx.managers.interactivity.props.granularity;\r\n                if (granularity !== 'residue' && granularity !== 'element')\r\n                    return;\r\n                var binding = _this.ctx.selectionMode ? clickFocusSelectMode : clickFocus;\r\n                var matched = Binding.match(binding, button, modifiers);\r\n                var bindingAdd = _this.ctx.selectionMode ? clickFocusAddSelectMode : clickFocusAdd;\r\n                var matchedAdd = Binding.match(bindingAdd, button, modifiers);\r\n                if (!matched && !matchedAdd)\r\n                    return;\r\n                var loci = Loci.normalize(current.loci, 'residue');\r\n                var entry = _this.ctx.managers.structure.focus.current;\r\n                if (entry && Loci.areEqual(entry.loci, loci)) {\r\n                    _this.ctx.managers.structure.focus.clear();\r\n                }\r\n                else {\r\n                    if (matched) {\r\n                        _this.ctx.managers.structure.focus.setFromLoci(loci);\r\n                    }\r\n                    else {\r\n                        _this.ctx.managers.structure.focus.addFromLoci(loci);\r\n                        // focus-add is not handled in camera behavior, doing it here\r\n                        var current_1 = (_b = _this.ctx.managers.structure.focus.current) === null || _b === void 0 ? void 0 : _b.loci;\r\n                        if (current_1)\r\n                            _this.ctx.managers.camera.focusLoci(current_1);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        return class_4;\r\n    }(PluginBehavior.Handler)),\r\n    params: function () { return FocusLociParams; },\r\n    display: { name: 'Representation Focus Loci on Canvas' }\r\n});\r\n//# sourceMappingURL=representation.js.map"]},"metadata":{},"sourceType":"module"}