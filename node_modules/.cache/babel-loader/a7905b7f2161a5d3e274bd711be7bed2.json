{"ast":null,"code":"/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Grid } from './grid';\nimport { OrderedSet } from '../../mol-data/int';\nimport { Sphere3D } from '../../mol-math/geometry';\nimport { Vec3, Mat4 } from '../../mol-math/linear-algebra';\nimport { BoundaryHelper } from '../../mol-math/geometry/boundary-helper';\nimport { CubeFormat } from '../../mol-model-formats/volume/cube';\nimport { equalEps } from '../../mol-math/linear-algebra/3d/common';\nimport { CustomProperties } from '../custom-property';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { toPrecision } from '../../mol-util/number';\nexport var Volume;\n\n(function (Volume) {\n  function is(x) {\n    var _a, _b, _c, _d; // TODO: improve\n\n\n    return ((_d = (_c = (_b = (_a = x === null || x === void 0 ? void 0 : x.grid) === null || _a === void 0 ? void 0 : _a.cells) === null || _b === void 0 ? void 0 : _b.space) === null || _c === void 0 ? void 0 : _c.dimensions) === null || _d === void 0 ? void 0 : _d.length) && (x === null || x === void 0 ? void 0 : x.sourceData) && (x === null || x === void 0 ? void 0 : x.customProperties) && (x === null || x === void 0 ? void 0 : x._propertyData);\n  }\n\n  Volume.is = is;\n  var IsoValue;\n\n  (function (IsoValue) {\n    function areSame(a, b, stats) {\n      return equalEps(toAbsolute(a, stats).absoluteValue, toAbsolute(b, stats).absoluteValue, stats.sigma / 100);\n    }\n\n    IsoValue.areSame = areSame;\n\n    function absolute(value) {\n      return {\n        kind: 'absolute',\n        absoluteValue: value\n      };\n    }\n\n    IsoValue.absolute = absolute;\n\n    function relative(value) {\n      return {\n        kind: 'relative',\n        relativeValue: value\n      };\n    }\n\n    IsoValue.relative = relative;\n\n    function calcAbsolute(stats, relativeValue) {\n      return relativeValue * stats.sigma + stats.mean;\n    }\n\n    IsoValue.calcAbsolute = calcAbsolute;\n\n    function calcRelative(stats, absoluteValue) {\n      return stats.sigma === 0 ? 0 : (absoluteValue - stats.mean) / stats.sigma;\n    }\n\n    IsoValue.calcRelative = calcRelative;\n\n    function toAbsolute(value, stats) {\n      return value.kind === 'absolute' ? value : {\n        kind: 'absolute',\n        absoluteValue: IsoValue.calcAbsolute(stats, value.relativeValue)\n      };\n    }\n\n    IsoValue.toAbsolute = toAbsolute;\n\n    function toRelative(value, stats) {\n      return value.kind === 'relative' ? value : {\n        kind: 'relative',\n        relativeValue: IsoValue.calcRelative(stats, value.absoluteValue)\n      };\n    }\n\n    IsoValue.toRelative = toRelative;\n\n    function toString(value) {\n      return value.kind === 'relative' ? value.relativeValue.toFixed(2) + \" \\u03C3\" : \"\" + value.absoluteValue.toPrecision(4);\n    }\n\n    IsoValue.toString = toString;\n  })(IsoValue = Volume.IsoValue || (Volume.IsoValue = {}));\n\n  var defaultStats = {\n    min: -1,\n    max: 1,\n    mean: 0,\n    sigma: 0.1\n  };\n\n  function createIsoValueParam(defaultValue, stats) {\n    var sts = stats || defaultStats;\n    var min = sts.min,\n        max = sts.max,\n        mean = sts.mean,\n        sigma = sts.sigma; // using ceil/floor could lead to \"ouf of bounds\" when converting\n\n    var relMin = (min - mean) / sigma;\n    var relMax = (max - mean) / sigma;\n    var def = defaultValue;\n\n    if (defaultValue.kind === 'absolute') {\n      if (defaultValue.absoluteValue < min) def = Volume.IsoValue.absolute(min);else if (defaultValue.absoluteValue > max) def = Volume.IsoValue.absolute(max);\n    } else {\n      if (defaultValue.relativeValue < relMin) def = Volume.IsoValue.relative(relMin);else if (defaultValue.relativeValue > relMax) def = Volume.IsoValue.relative(relMax);\n    }\n\n    return PD.Conditioned(def, {\n      'absolute': PD.Converted(function (v) {\n        return Volume.IsoValue.toAbsolute(v, Grid.One.stats).absoluteValue;\n      }, function (v) {\n        return Volume.IsoValue.absolute(v);\n      }, PD.Numeric(mean, {\n        min: min,\n        max: max,\n        step: toPrecision(sigma / 100, 2)\n      })),\n      'relative': PD.Converted(function (v) {\n        return Volume.IsoValue.toRelative(v, Grid.One.stats).relativeValue;\n      }, function (v) {\n        return Volume.IsoValue.relative(v);\n      }, PD.Numeric(Math.min(1, relMax), {\n        min: relMin,\n        max: relMax,\n        step: toPrecision(Math.round((max - min) / sigma) / 100, 2)\n      }))\n    }, function (v) {\n      return v.kind === 'absolute' ? 'absolute' : 'relative';\n    }, function (v, c) {\n      return c === 'absolute' ? Volume.IsoValue.toAbsolute(v, sts) : Volume.IsoValue.toRelative(v, sts);\n    }, {\n      isEssential: true\n    });\n  }\n\n  Volume.createIsoValueParam = createIsoValueParam;\n  Volume.IsoValueParam = createIsoValueParam(Volume.IsoValue.relative(2));\n  Volume.One = {\n    label: '',\n    grid: Grid.One,\n    sourceData: {\n      kind: '',\n      name: '',\n      data: {}\n    },\n    customProperties: new CustomProperties(),\n    _propertyData: Object.create(null)\n  };\n\n  function areEquivalent(volA, volB) {\n    return Grid.areEquivalent(volA.grid, volB.grid);\n  }\n\n  Volume.areEquivalent = areEquivalent;\n\n  function isEmpty(vol) {\n    return Grid.isEmpty(vol.grid);\n  }\n\n  Volume.isEmpty = isEmpty;\n\n  function isOrbitals(volume) {\n    if (!CubeFormat.is(volume.sourceData)) return false;\n    return volume.sourceData.data.header.orbitals;\n  }\n\n  Volume.isOrbitals = isOrbitals;\n\n  function Loci(volume) {\n    return {\n      kind: 'volume-loci',\n      volume: volume\n    };\n  }\n\n  Volume.Loci = Loci;\n\n  function isLoci(x) {\n    return !!x && x.kind === 'volume-loci';\n  }\n\n  Volume.isLoci = isLoci;\n\n  function areLociEqual(a, b) {\n    return a.volume === b.volume;\n  }\n\n  Volume.areLociEqual = areLociEqual;\n\n  function isLociEmpty(loci) {\n    return Grid.isEmpty(loci.volume.grid);\n  }\n\n  Volume.isLociEmpty = isLociEmpty;\n\n  function getBoundingSphere(volume, boundingSphere) {\n    return Grid.getBoundingSphere(volume.grid, boundingSphere);\n  }\n\n  Volume.getBoundingSphere = getBoundingSphere;\n  var Isosurface;\n\n  (function (Isosurface) {\n    function Loci(volume, isoValue) {\n      return {\n        kind: 'isosurface-loci',\n        volume: volume,\n        isoValue: isoValue\n      };\n    }\n\n    Isosurface.Loci = Loci;\n\n    function isLoci(x) {\n      return !!x && x.kind === 'isosurface-loci';\n    }\n\n    Isosurface.isLoci = isLoci;\n\n    function areLociEqual(a, b) {\n      return a.volume === b.volume && Volume.IsoValue.areSame(a.isoValue, b.isoValue, a.volume.grid.stats);\n    }\n\n    Isosurface.areLociEqual = areLociEqual;\n\n    function isLociEmpty(loci) {\n      return loci.volume.grid.cells.data.length === 0;\n    }\n\n    Isosurface.isLociEmpty = isLociEmpty;\n\n    function getBoundingSphere(volume, isoValue, boundingSphere) {\n      // TODO get bounding sphere for subgrid with values >= isoValue\n      return Volume.getBoundingSphere(volume, boundingSphere);\n    }\n\n    Isosurface.getBoundingSphere = getBoundingSphere;\n  })(Isosurface = Volume.Isosurface || (Volume.Isosurface = {}));\n\n  var Cell;\n\n  (function (Cell) {\n    function Loci(volume, indices) {\n      return {\n        kind: 'cell-loci',\n        volume: volume,\n        indices: indices\n      };\n    }\n\n    Cell.Loci = Loci;\n\n    function isLoci(x) {\n      return !!x && x.kind === 'cell-loci';\n    }\n\n    Cell.isLoci = isLoci;\n\n    function areLociEqual(a, b) {\n      return a.volume === b.volume && OrderedSet.areEqual(a.indices, b.indices);\n    }\n\n    Cell.areLociEqual = areLociEqual;\n\n    function isLociEmpty(loci) {\n      return OrderedSet.size(loci.indices) === 0;\n    }\n\n    Cell.isLociEmpty = isLociEmpty;\n    var boundaryHelper = new BoundaryHelper('98');\n    var tmpBoundaryPos = Vec3();\n\n    function getBoundingSphere(volume, indices, boundingSphere) {\n      boundaryHelper.reset();\n      var transform = Grid.getGridToCartesianTransform(volume.grid);\n      var getCoords = volume.grid.cells.space.getCoords;\n\n      for (var i = 0, _i = OrderedSet.size(indices); i < _i; i++) {\n        var o = OrderedSet.getAt(indices, i);\n        getCoords(o, tmpBoundaryPos);\n        Vec3.transformMat4(tmpBoundaryPos, tmpBoundaryPos, transform);\n        boundaryHelper.includePosition(tmpBoundaryPos);\n      }\n\n      boundaryHelper.finishedIncludeStep();\n\n      for (var i = 0, _i = OrderedSet.size(indices); i < _i; i++) {\n        var o = OrderedSet.getAt(indices, i);\n        getCoords(o, tmpBoundaryPos);\n        Vec3.transformMat4(tmpBoundaryPos, tmpBoundaryPos, transform);\n        boundaryHelper.radiusPosition(tmpBoundaryPos);\n      }\n\n      var bs = boundaryHelper.getSphere(boundingSphere);\n      return Sphere3D.expand(bs, bs, Mat4.getMaxScaleOnAxis(transform) * 10);\n    }\n\n    Cell.getBoundingSphere = getBoundingSphere;\n  })(Cell = Volume.Cell || (Volume.Cell = {}));\n})(Volume || (Volume = {}));","map":{"version":3,"sources":["../../../src/mol-model/volume/volume.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Grid } from './grid';\r\nimport { OrderedSet } from '../../mol-data/int';\r\nimport { Sphere3D } from '../../mol-math/geometry';\r\nimport { Vec3, Mat4 } from '../../mol-math/linear-algebra';\r\nimport { BoundaryHelper } from '../../mol-math/geometry/boundary-helper';\r\nimport { CubeFormat } from '../../mol-model-formats/volume/cube';\r\nimport { equalEps } from '../../mol-math/linear-algebra/3d/common';\r\nimport { CustomProperties } from '../custom-property';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { toPrecision } from '../../mol-util/number';\r\nexport var Volume;\r\n(function (Volume) {\r\n    function is(x) {\r\n        var _a, _b, _c, _d;\r\n        // TODO: improve\r\n        return (((_d = (_c = (_b = (_a = x === null || x === void 0 ? void 0 : x.grid) === null || _a === void 0 ? void 0 : _a.cells) === null || _b === void 0 ? void 0 : _b.space) === null || _c === void 0 ? void 0 : _c.dimensions) === null || _d === void 0 ? void 0 : _d.length) &&\r\n            (x === null || x === void 0 ? void 0 : x.sourceData) &&\r\n            (x === null || x === void 0 ? void 0 : x.customProperties) &&\r\n            (x === null || x === void 0 ? void 0 : x._propertyData));\r\n    }\r\n    Volume.is = is;\r\n    var IsoValue;\r\n    (function (IsoValue) {\r\n        function areSame(a, b, stats) {\r\n            return equalEps(toAbsolute(a, stats).absoluteValue, toAbsolute(b, stats).absoluteValue, stats.sigma / 100);\r\n        }\r\n        IsoValue.areSame = areSame;\r\n        function absolute(value) { return { kind: 'absolute', absoluteValue: value }; }\r\n        IsoValue.absolute = absolute;\r\n        function relative(value) { return { kind: 'relative', relativeValue: value }; }\r\n        IsoValue.relative = relative;\r\n        function calcAbsolute(stats, relativeValue) {\r\n            return relativeValue * stats.sigma + stats.mean;\r\n        }\r\n        IsoValue.calcAbsolute = calcAbsolute;\r\n        function calcRelative(stats, absoluteValue) {\r\n            return stats.sigma === 0 ? 0 : ((absoluteValue - stats.mean) / stats.sigma);\r\n        }\r\n        IsoValue.calcRelative = calcRelative;\r\n        function toAbsolute(value, stats) {\r\n            return value.kind === 'absolute' ? value : { kind: 'absolute', absoluteValue: IsoValue.calcAbsolute(stats, value.relativeValue) };\r\n        }\r\n        IsoValue.toAbsolute = toAbsolute;\r\n        function toRelative(value, stats) {\r\n            return value.kind === 'relative' ? value : { kind: 'relative', relativeValue: IsoValue.calcRelative(stats, value.absoluteValue) };\r\n        }\r\n        IsoValue.toRelative = toRelative;\r\n        function toString(value) {\r\n            return value.kind === 'relative'\r\n                ? value.relativeValue.toFixed(2) + \" \\u03C3\"\r\n                : \"\" + value.absoluteValue.toPrecision(4);\r\n        }\r\n        IsoValue.toString = toString;\r\n    })(IsoValue = Volume.IsoValue || (Volume.IsoValue = {}));\r\n    var defaultStats = { min: -1, max: 1, mean: 0, sigma: 0.1 };\r\n    function createIsoValueParam(defaultValue, stats) {\r\n        var sts = stats || defaultStats;\r\n        var min = sts.min, max = sts.max, mean = sts.mean, sigma = sts.sigma;\r\n        // using ceil/floor could lead to \"ouf of bounds\" when converting\r\n        var relMin = (min - mean) / sigma;\r\n        var relMax = (max - mean) / sigma;\r\n        var def = defaultValue;\r\n        if (defaultValue.kind === 'absolute') {\r\n            if (defaultValue.absoluteValue < min)\r\n                def = Volume.IsoValue.absolute(min);\r\n            else if (defaultValue.absoluteValue > max)\r\n                def = Volume.IsoValue.absolute(max);\r\n        }\r\n        else {\r\n            if (defaultValue.relativeValue < relMin)\r\n                def = Volume.IsoValue.relative(relMin);\r\n            else if (defaultValue.relativeValue > relMax)\r\n                def = Volume.IsoValue.relative(relMax);\r\n        }\r\n        return PD.Conditioned(def, {\r\n            'absolute': PD.Converted(function (v) { return Volume.IsoValue.toAbsolute(v, Grid.One.stats).absoluteValue; }, function (v) { return Volume.IsoValue.absolute(v); }, PD.Numeric(mean, { min: min, max: max, step: toPrecision(sigma / 100, 2) })),\r\n            'relative': PD.Converted(function (v) { return Volume.IsoValue.toRelative(v, Grid.One.stats).relativeValue; }, function (v) { return Volume.IsoValue.relative(v); }, PD.Numeric(Math.min(1, relMax), { min: relMin, max: relMax, step: toPrecision(Math.round(((max - min) / sigma)) / 100, 2) }))\r\n        }, function (v) { return v.kind === 'absolute' ? 'absolute' : 'relative'; }, function (v, c) { return c === 'absolute' ? Volume.IsoValue.toAbsolute(v, sts) : Volume.IsoValue.toRelative(v, sts); }, { isEssential: true });\r\n    }\r\n    Volume.createIsoValueParam = createIsoValueParam;\r\n    Volume.IsoValueParam = createIsoValueParam(Volume.IsoValue.relative(2));\r\n    Volume.One = {\r\n        label: '',\r\n        grid: Grid.One,\r\n        sourceData: { kind: '', name: '', data: {} },\r\n        customProperties: new CustomProperties(),\r\n        _propertyData: Object.create(null),\r\n    };\r\n    function areEquivalent(volA, volB) {\r\n        return Grid.areEquivalent(volA.grid, volB.grid);\r\n    }\r\n    Volume.areEquivalent = areEquivalent;\r\n    function isEmpty(vol) {\r\n        return Grid.isEmpty(vol.grid);\r\n    }\r\n    Volume.isEmpty = isEmpty;\r\n    function isOrbitals(volume) {\r\n        if (!CubeFormat.is(volume.sourceData))\r\n            return false;\r\n        return volume.sourceData.data.header.orbitals;\r\n    }\r\n    Volume.isOrbitals = isOrbitals;\r\n    function Loci(volume) { return { kind: 'volume-loci', volume: volume }; }\r\n    Volume.Loci = Loci;\r\n    function isLoci(x) { return !!x && x.kind === 'volume-loci'; }\r\n    Volume.isLoci = isLoci;\r\n    function areLociEqual(a, b) { return a.volume === b.volume; }\r\n    Volume.areLociEqual = areLociEqual;\r\n    function isLociEmpty(loci) { return Grid.isEmpty(loci.volume.grid); }\r\n    Volume.isLociEmpty = isLociEmpty;\r\n    function getBoundingSphere(volume, boundingSphere) {\r\n        return Grid.getBoundingSphere(volume.grid, boundingSphere);\r\n    }\r\n    Volume.getBoundingSphere = getBoundingSphere;\r\n    var Isosurface;\r\n    (function (Isosurface) {\r\n        function Loci(volume, isoValue) { return { kind: 'isosurface-loci', volume: volume, isoValue: isoValue }; }\r\n        Isosurface.Loci = Loci;\r\n        function isLoci(x) { return !!x && x.kind === 'isosurface-loci'; }\r\n        Isosurface.isLoci = isLoci;\r\n        function areLociEqual(a, b) { return a.volume === b.volume && Volume.IsoValue.areSame(a.isoValue, b.isoValue, a.volume.grid.stats); }\r\n        Isosurface.areLociEqual = areLociEqual;\r\n        function isLociEmpty(loci) { return loci.volume.grid.cells.data.length === 0; }\r\n        Isosurface.isLociEmpty = isLociEmpty;\r\n        function getBoundingSphere(volume, isoValue, boundingSphere) {\r\n            // TODO get bounding sphere for subgrid with values >= isoValue\r\n            return Volume.getBoundingSphere(volume, boundingSphere);\r\n        }\r\n        Isosurface.getBoundingSphere = getBoundingSphere;\r\n    })(Isosurface = Volume.Isosurface || (Volume.Isosurface = {}));\r\n    var Cell;\r\n    (function (Cell) {\r\n        function Loci(volume, indices) { return { kind: 'cell-loci', volume: volume, indices: indices }; }\r\n        Cell.Loci = Loci;\r\n        function isLoci(x) { return !!x && x.kind === 'cell-loci'; }\r\n        Cell.isLoci = isLoci;\r\n        function areLociEqual(a, b) { return a.volume === b.volume && OrderedSet.areEqual(a.indices, b.indices); }\r\n        Cell.areLociEqual = areLociEqual;\r\n        function isLociEmpty(loci) { return OrderedSet.size(loci.indices) === 0; }\r\n        Cell.isLociEmpty = isLociEmpty;\r\n        var boundaryHelper = new BoundaryHelper('98');\r\n        var tmpBoundaryPos = Vec3();\r\n        function getBoundingSphere(volume, indices, boundingSphere) {\r\n            boundaryHelper.reset();\r\n            var transform = Grid.getGridToCartesianTransform(volume.grid);\r\n            var getCoords = volume.grid.cells.space.getCoords;\r\n            for (var i = 0, _i = OrderedSet.size(indices); i < _i; i++) {\r\n                var o = OrderedSet.getAt(indices, i);\r\n                getCoords(o, tmpBoundaryPos);\r\n                Vec3.transformMat4(tmpBoundaryPos, tmpBoundaryPos, transform);\r\n                boundaryHelper.includePosition(tmpBoundaryPos);\r\n            }\r\n            boundaryHelper.finishedIncludeStep();\r\n            for (var i = 0, _i = OrderedSet.size(indices); i < _i; i++) {\r\n                var o = OrderedSet.getAt(indices, i);\r\n                getCoords(o, tmpBoundaryPos);\r\n                Vec3.transformMat4(tmpBoundaryPos, tmpBoundaryPos, transform);\r\n                boundaryHelper.radiusPosition(tmpBoundaryPos);\r\n            }\r\n            var bs = boundaryHelper.getSphere(boundingSphere);\r\n            return Sphere3D.expand(bs, bs, Mat4.getMaxScaleOnAxis(transform) * 10);\r\n        }\r\n        Cell.getBoundingSphere = getBoundingSphere;\r\n    })(Cell = Volume.Cell || (Volume.Cell = {}));\r\n})(Volume || (Volume = {}));\r\n//# sourceMappingURL=volume.js.map"]},"metadata":{},"sourceType":"module"}