{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __assign } from \"tslib\";\nimport { DirectVolume } from '../../mol-geo/geometry/direct-volume/direct-volume';\nimport { Lines } from '../../mol-geo/geometry/lines/lines';\nimport { Mesh } from '../../mol-geo/geometry/mesh/mesh';\nimport { Points } from '../../mol-geo/geometry/points/points';\nimport { Spheres } from '../../mol-geo/geometry/spheres/spheres';\nimport { Cylinders } from '../../mol-geo/geometry/cylinders/cylinders';\nimport { Text } from '../../mol-geo/geometry/text/text';\nimport { TextureMesh } from '../../mol-geo/geometry/texture-mesh/texture-mesh';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { UnitKindOptions } from './visual/util/common';\nexport function getUnitKindsParam(defaultValue) {\n  return PD.MultiSelect(defaultValue, UnitKindOptions, {\n    description: 'For which kinds of units/chains to show the representation visuals.'\n  });\n}\nexport var StructureParams = {\n  unitKinds: getUnitKindsParam(['atomic', 'spheres']),\n  includeParent: PD.Boolean(false, {\n    isHidden: true\n  })\n};\nexport var StructureMeshParams = __assign({}, Mesh.Params);\nexport var StructureSpheresParams = __assign({}, Spheres.Params);\nexport var StructureCylindersParams = __assign({}, Cylinders.Params);\nexport var StructurePointsParams = __assign({}, Points.Params);\nexport var StructureLinesParams = __assign({}, Lines.Params);\nexport var StructureTextParams = __assign({}, Text.Params);\nexport var StructureDirectVolumeParams = __assign({}, DirectVolume.Params);\nexport var StructureTextureMeshParams = __assign({}, TextureMesh.Params);","map":{"version":3,"sources":["../../../src/mol-repr/structure/params.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;;AAEH,SAAS,YAAT,QAA6B,oDAA7B;AACA,SAAS,KAAT,QAAsB,oCAAtB;AACA,SAAS,IAAT,QAAqB,kCAArB;AACA,SAAS,MAAT,QAAuB,sCAAvB;AACA,SAAS,OAAT,QAAwB,wCAAxB;AACA,SAAS,SAAT,QAA0B,4CAA1B;AACA,SAAS,IAAT,QAAqB,kCAArB;AACA,SAAS,WAAT,QAA4B,kDAA5B;AACA,SAAS,eAAe,IAAI,EAA5B,QAAsC,iCAAtC;AACA,SAAmB,eAAnB,QAA0C,sBAA1C;AAEA,OAAM,SAAU,iBAAV,CAA4B,YAA5B,EAAoD;AACtD,SAAO,EAAE,CAAC,WAAH,CAAyB,YAAzB,EAAuC,eAAvC,EAAwD;AAAE,IAAA,WAAW,EAAE;AAAf,GAAxD,CAAP;AACH;AAED,OAAO,IAAM,eAAe,GAAG;AAC3B,EAAA,SAAS,EAAE,iBAAiB,CAAC,CAAC,QAAD,EAAW,SAAX,CAAD,CADD;AAE3B,EAAA,aAAa,EAAE,EAAE,CAAC,OAAH,CAAW,KAAX,EAAkB;AAAE,IAAA,QAAQ,EAAE;AAAZ,GAAlB;AAFY,CAAxB;AAMP,OAAO,IAAM,mBAAmB,GAAA,QAAA,CAAA,EAAA,EAAQ,IAAI,CAAC,MAAb,CAAzB;AAGP,OAAO,IAAM,sBAAsB,GAAA,QAAA,CAAA,EAAA,EAAQ,OAAO,CAAC,MAAhB,CAA5B;AAGP,OAAO,IAAM,wBAAwB,GAAA,QAAA,CAAA,EAAA,EAAQ,SAAS,CAAC,MAAlB,CAA9B;AAGP,OAAO,IAAM,qBAAqB,GAAA,QAAA,CAAA,EAAA,EAAQ,MAAM,CAAC,MAAf,CAA3B;AAGP,OAAO,IAAM,oBAAoB,GAAA,QAAA,CAAA,EAAA,EAAQ,KAAK,CAAC,MAAd,CAA1B;AAGP,OAAO,IAAM,mBAAmB,GAAA,QAAA,CAAA,EAAA,EAAQ,IAAI,CAAC,MAAb,CAAzB;AAGP,OAAO,IAAM,2BAA2B,GAAA,QAAA,CAAA,EAAA,EAAQ,YAAY,CAAC,MAArB,CAAjC;AAGP,OAAO,IAAM,0BAA0B,GAAA,QAAA,CAAA,EAAA,EAAQ,WAAW,CAAC,MAApB,CAAhC","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { DirectVolume } from '../../mol-geo/geometry/direct-volume/direct-volume';\r\nimport { Lines } from '../../mol-geo/geometry/lines/lines';\r\nimport { Mesh } from '../../mol-geo/geometry/mesh/mesh';\r\nimport { Points } from '../../mol-geo/geometry/points/points';\r\nimport { Spheres } from '../../mol-geo/geometry/spheres/spheres';\r\nimport { Cylinders } from '../../mol-geo/geometry/cylinders/cylinders';\r\nimport { Text } from '../../mol-geo/geometry/text/text';\r\nimport { TextureMesh } from '../../mol-geo/geometry/texture-mesh/texture-mesh';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { UnitKindOptions } from './visual/util/common';\r\nexport function getUnitKindsParam(defaultValue) {\r\n    return PD.MultiSelect(defaultValue, UnitKindOptions, { description: 'For which kinds of units/chains to show the representation visuals.' });\r\n}\r\nexport var StructureParams = {\r\n    unitKinds: getUnitKindsParam(['atomic', 'spheres']),\r\n    includeParent: PD.Boolean(false, { isHidden: true }),\r\n};\r\nexport var StructureMeshParams = __assign({}, Mesh.Params);\r\nexport var StructureSpheresParams = __assign({}, Spheres.Params);\r\nexport var StructureCylindersParams = __assign({}, Cylinders.Params);\r\nexport var StructurePointsParams = __assign({}, Points.Params);\r\nexport var StructureLinesParams = __assign({}, Lines.Params);\r\nexport var StructureTextParams = __assign({}, Text.Params);\r\nexport var StructureDirectVolumeParams = __assign({}, DirectVolume.Params);\r\nexport var StructureTextureMeshParams = __assign({}, TextureMesh.Params);\r\n//# sourceMappingURL=params.js.map"]},"metadata":{},"sourceType":"module"}