{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { GaussianSurfaceMeshParams, StructureGaussianSurfaceVisual, GaussianSurfaceVisual } from '../visual/gaussian-surface-mesh';\nimport { UnitsRepresentation } from '../units-representation';\nimport { GaussianWireframeVisual, GaussianWireframeParams } from '../visual/gaussian-surface-wireframe';\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { StructureRepresentationProvider, StructureRepresentationStateBuilder, ComplexRepresentation } from '../representation';\nimport { Representation } from '../../../mol-repr/representation';\nvar GaussianSurfaceVisuals = {\n  'gaussian-surface-mesh': function (ctx, getParams) {\n    return UnitsRepresentation('Gaussian surface mesh', ctx, getParams, GaussianSurfaceVisual);\n  },\n  'structure-gaussian-surface-mesh': function (ctx, getParams) {\n    return ComplexRepresentation('Structure-Gaussian surface mesh', ctx, getParams, StructureGaussianSurfaceVisual);\n  },\n  'gaussian-surface-wireframe': function (ctx, getParams) {\n    return UnitsRepresentation('Gaussian surface wireframe', ctx, getParams, GaussianWireframeVisual);\n  }\n};\nexport var GaussianSurfaceParams = __assign(__assign(__assign({}, GaussianSurfaceMeshParams), GaussianWireframeParams), {\n  visuals: PD.MultiSelect(['gaussian-surface-mesh'], PD.objectToOptions(GaussianSurfaceVisuals))\n});\nexport function getGaussianSurfaceParams(ctx, structure) {\n  return PD.clone(GaussianSurfaceParams);\n}\nexport function GaussianSurfaceRepresentation(ctx, getParams) {\n  return Representation.createMulti('Gaussian Surface', ctx, getParams, StructureRepresentationStateBuilder, GaussianSurfaceVisuals);\n}\nexport var GaussianSurfaceRepresentationProvider = StructureRepresentationProvider({\n  name: 'gaussian-surface',\n  label: 'Gaussian Surface',\n  description: 'Displays a gaussian molecular surface.',\n  factory: GaussianSurfaceRepresentation,\n  getParams: getGaussianSurfaceParams,\n  defaultValues: PD.getDefaultValues(GaussianSurfaceParams),\n  defaultColorTheme: {\n    name: 'chain-id'\n  },\n  defaultSizeTheme: {\n    name: 'uniform'\n  },\n  isApplicable: function (structure) {\n    return structure.elementCount > 0;\n  }\n});","map":{"version":3,"sources":["../../../../src/mol-repr/structure/representation/gaussian-surface.ts"],"names":[],"mappings":"AAAA;;;;AAIG;;AAEH,SAAS,yBAAT,EAAwE,8BAAxE,EAAwG,qBAAxG,QAAqI,iCAArI;AACA,SAAS,mBAAT,QAAoC,yBAApC;AACA,SAAS,uBAAT,EAAkC,uBAAlC,QAAiE,sCAAjE;AACA,SAAS,eAAe,IAAI,EAA5B,QAAsC,oCAAtC;AACA,SAAkC,+BAAlC,EAAmE,mCAAnE,EAAwG,qBAAxG,QAAqI,mBAArI;AACA,SAAS,cAAT,QAAkF,kCAAlF;AAIA,IAAM,sBAAsB,GAAG;AAC3B,2BAAyB,UAAC,GAAD,EAA6B,SAA7B,EAAwG;AAAK,WAAA,mBAAmB,CAAC,uBAAD,EAA0B,GAA1B,EAA+B,SAA/B,EAAnB,qBAAmB,CAAnB;AAAmF,GAD9L;AAE3B,qCAAmC,UAAC,GAAD,EAA6B,SAA7B,EAAiH;AAAK,WAAA,qBAAqB,CAAC,iCAAD,EAAoC,GAApC,EAAyC,SAAzC,EAArB,8BAAqB,CAArB;AAAwG,GAFtO;AAG3B,gCAA8B,UAAC,GAAD,EAA6B,SAA7B,EAAsG;AAAK,WAAA,mBAAmB,CAAC,4BAAD,EAA+B,GAA/B,EAAoC,SAApC,EAAnB,uBAAmB,CAAnB;AAA0F;AAHxM,CAA/B;AAMA,OAAO,IAAM,qBAAqB,GAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAC3B,yBAD2B,CAAA,EAE3B,uBAF2B,CAAA,EAEJ;AAC1B,EAAA,OAAO,EAAE,EAAE,CAAC,WAAH,CAAe,CAAC,uBAAD,CAAf,EAA0C,EAAE,CAAC,eAAH,CAAmB,sBAAnB,CAA1C;AADiB,CAFI,CAA3B;AAMP,OAAM,SAAU,wBAAV,CAAmC,GAAnC,EAA8D,SAA9D,EAAkF;AACpF,SAAO,EAAE,CAAC,KAAH,CAAS,qBAAT,CAAP;AACH;AAGD,OAAM,SAAU,6BAAV,CAAwC,GAAxC,EAAoE,SAApE,EAA2I;AAC7I,SAAO,cAAc,CAAC,WAAf,CAA2B,kBAA3B,EAA+C,GAA/C,EAAoD,SAApD,EAA+D,mCAA/D,EAAoG,sBAApG,CAAP;AACH;AAED,OAAO,IAAM,qCAAqC,GAAG,+BAA+B,CAAC;AACjF,EAAA,IAAI,EAAE,kBAD2E;AAEjF,EAAA,KAAK,EAAE,kBAF0E;AAGjF,EAAA,WAAW,EAAE,wCAHoE;AAIjF,EAAA,OAAO,EAAE,6BAJwE;AAKjF,EAAA,SAAS,EAAE,wBALsE;AAMjF,EAAA,aAAa,EAAE,EAAE,CAAC,gBAAH,CAAoB,qBAApB,CANkE;AAOjF,EAAA,iBAAiB,EAAE;AAAE,IAAA,IAAI,EAAE;AAAR,GAP8D;AAQjF,EAAA,gBAAgB,EAAE;AAAE,IAAA,IAAI,EAAE;AAAR,GAR+D;AASjF,EAAA,YAAY,EAAE,UAAC,SAAD,EAAqB;AAAK,WAAA,SAAS,CAAC,YAAV,GAAA,CAAA;AAA0B;AATe,CAAD,CAA7E","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { GaussianSurfaceMeshParams, StructureGaussianSurfaceVisual, GaussianSurfaceVisual } from '../visual/gaussian-surface-mesh';\r\nimport { UnitsRepresentation } from '../units-representation';\r\nimport { GaussianWireframeVisual, GaussianWireframeParams } from '../visual/gaussian-surface-wireframe';\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { StructureRepresentationProvider, StructureRepresentationStateBuilder, ComplexRepresentation } from '../representation';\r\nimport { Representation } from '../../../mol-repr/representation';\r\nvar GaussianSurfaceVisuals = {\r\n    'gaussian-surface-mesh': function (ctx, getParams) { return UnitsRepresentation('Gaussian surface mesh', ctx, getParams, GaussianSurfaceVisual); },\r\n    'structure-gaussian-surface-mesh': function (ctx, getParams) { return ComplexRepresentation('Structure-Gaussian surface mesh', ctx, getParams, StructureGaussianSurfaceVisual); },\r\n    'gaussian-surface-wireframe': function (ctx, getParams) { return UnitsRepresentation('Gaussian surface wireframe', ctx, getParams, GaussianWireframeVisual); },\r\n};\r\nexport var GaussianSurfaceParams = __assign(__assign(__assign({}, GaussianSurfaceMeshParams), GaussianWireframeParams), { visuals: PD.MultiSelect(['gaussian-surface-mesh'], PD.objectToOptions(GaussianSurfaceVisuals)) });\r\nexport function getGaussianSurfaceParams(ctx, structure) {\r\n    return PD.clone(GaussianSurfaceParams);\r\n}\r\nexport function GaussianSurfaceRepresentation(ctx, getParams) {\r\n    return Representation.createMulti('Gaussian Surface', ctx, getParams, StructureRepresentationStateBuilder, GaussianSurfaceVisuals);\r\n}\r\nexport var GaussianSurfaceRepresentationProvider = StructureRepresentationProvider({\r\n    name: 'gaussian-surface',\r\n    label: 'Gaussian Surface',\r\n    description: 'Displays a gaussian molecular surface.',\r\n    factory: GaussianSurfaceRepresentation,\r\n    getParams: getGaussianSurfaceParams,\r\n    defaultValues: PD.getDefaultValues(GaussianSurfaceParams),\r\n    defaultColorTheme: { name: 'chain-id' },\r\n    defaultSizeTheme: { name: 'uniform' },\r\n    isApplicable: function (structure) { return structure.elementCount > 0; }\r\n});\r\n//# sourceMappingURL=gaussian-surface.js.map"]},"metadata":{},"sourceType":"module"}