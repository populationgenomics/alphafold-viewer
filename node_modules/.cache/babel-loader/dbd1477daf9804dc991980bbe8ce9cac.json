{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nexport { PixelData };\nvar PixelData;\n\n(function (PixelData) {\n  function create(array, width, height) {\n    return {\n      array: array,\n      width: width,\n      height: height\n    };\n  }\n\n  PixelData.create = create;\n  /** horizontally flips the pixel data in-place */\n\n  function flipY(pixelData) {\n    var array = pixelData.array,\n        width = pixelData.width,\n        height = pixelData.height;\n    var width4 = width * 4;\n\n    for (var i = 0, maxI = height / 2; i < maxI; ++i) {\n      for (var j = 0, maxJ = width4; j < maxJ; ++j) {\n        var index1 = i * width4 + j;\n        var index2 = (height - i - 1) * width4 + j;\n        var tmp = array[index1];\n        array[index1] = array[index2];\n        array[index2] = tmp;\n      }\n    }\n\n    return pixelData;\n  }\n\n  PixelData.flipY = flipY;\n  /** to undo pre-multiplied alpha */\n\n  function divideByAlpha(pixelData) {\n    var array = pixelData.array;\n    var factor = array instanceof Uint8Array ? 255 : 1;\n\n    for (var i = 0, il = array.length; i < il; i += 4) {\n      var a = array[i + 3] / factor;\n      array[i] /= a;\n      array[i + 1] /= a;\n      array[i + 2] /= a;\n    }\n\n    return pixelData;\n  }\n\n  PixelData.divideByAlpha = divideByAlpha;\n})(PixelData || (PixelData = {}));","map":{"version":3,"sources":["../../src/mol-util/image.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,SAAS,SAAT;AAQA,IAAU,SAAV;;AAAA,CAAA,UAAU,SAAV,EAAmB;AACf,WAAgB,MAAhB,CAAuB,KAAvB,EAAyD,KAAzD,EAAwE,MAAxE,EAAsF;AAClF,WAAO;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,KAAK,EAAA,KAAd;AAAgB,MAAA,MAAM,EAAA;AAAtB,KAAP;AACH;;AAFe,EAAA,SAAA,CAAA,MAAA,GAAM,MAAN;AAIhB;;AACA,WAAgB,KAAhB,CAAsB,SAAtB,EAA0C;AAC9B,QAAA,KAAK,GAAoB,SAAS,CAA7B,KAAL;AAAA,QAAO,KAAK,GAAa,SAAS,CAAtB,KAAZ;AAAA,QAAc,MAAM,GAAK,SAAS,CAAd,MAApB;AACR,QAAM,MAAM,GAAG,KAAK,GAAG,CAAvB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,IAAI,GAAG,MAAM,GAAG,CAAhC,EAAmC,CAAC,GAAG,IAAvC,EAA6C,EAAE,CAA/C,EAAkD;AAC9C,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,IAAI,GAAG,MAAvB,EAA+B,CAAC,GAAG,IAAnC,EAAyC,EAAE,CAA3C,EAA8C;AAC1C,YAAM,MAAM,GAAG,CAAC,GAAG,MAAJ,GAAa,CAA5B;AACA,YAAM,MAAM,GAAG,CAAC,MAAM,GAAG,CAAT,GAAa,CAAd,IAAmB,MAAnB,GAA4B,CAA3C;AACA,YAAM,GAAG,GAAG,KAAK,CAAC,MAAD,CAAjB;AACA,QAAA,KAAK,CAAC,MAAD,CAAL,GAAgB,KAAK,CAAC,MAAD,CAArB;AACA,QAAA,KAAK,CAAC,MAAD,CAAL,GAAgB,GAAhB;AACH;AACJ;;AACD,WAAO,SAAP;AACH;;AAbe,EAAA,SAAA,CAAA,KAAA,GAAK,KAAL;AAehB;;AACA,WAAgB,aAAhB,CAA8B,SAA9B,EAAkD;AACtC,QAAA,KAAK,GAAK,SAAS,CAAd,KAAL;AACR,QAAM,MAAM,GAAI,KAAK,YAAY,UAAlB,GAAgC,GAAhC,GAAsC,CAArD;;AACA,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,KAAK,CAAC,MAA3B,EAAmC,CAAC,GAAG,EAAvC,EAA2C,CAAC,IAAI,CAAhD,EAAmD;AAC/C,UAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAL,CAAL,GAAe,MAAzB;AACA,MAAA,KAAK,CAAC,CAAD,CAAL,IAAY,CAAZ;AACA,MAAA,KAAK,CAAC,CAAC,GAAG,CAAL,CAAL,IAAgB,CAAhB;AACA,MAAA,KAAK,CAAC,CAAC,GAAG,CAAL,CAAL,IAAgB,CAAhB;AACH;;AACD,WAAO,SAAP;AACH;;AAVe,EAAA,SAAA,CAAA,aAAA,GAAa,aAAb;AAWnB,CAjCD,EAAU,SAAS,KAAT,SAAS,GAAA,EAAA,CAAnB","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nexport { PixelData };\r\nvar PixelData;\r\n(function (PixelData) {\r\n    function create(array, width, height) {\r\n        return { array: array, width: width, height: height };\r\n    }\r\n    PixelData.create = create;\r\n    /** horizontally flips the pixel data in-place */\r\n    function flipY(pixelData) {\r\n        var array = pixelData.array, width = pixelData.width, height = pixelData.height;\r\n        var width4 = width * 4;\r\n        for (var i = 0, maxI = height / 2; i < maxI; ++i) {\r\n            for (var j = 0, maxJ = width4; j < maxJ; ++j) {\r\n                var index1 = i * width4 + j;\r\n                var index2 = (height - i - 1) * width4 + j;\r\n                var tmp = array[index1];\r\n                array[index1] = array[index2];\r\n                array[index2] = tmp;\r\n            }\r\n        }\r\n        return pixelData;\r\n    }\r\n    PixelData.flipY = flipY;\r\n    /** to undo pre-multiplied alpha */\r\n    function divideByAlpha(pixelData) {\r\n        var array = pixelData.array;\r\n        var factor = (array instanceof Uint8Array) ? 255 : 1;\r\n        for (var i = 0, il = array.length; i < il; i += 4) {\r\n            var a = array[i + 3] / factor;\r\n            array[i] /= a;\r\n            array[i + 1] /= a;\r\n            array[i + 2] /= a;\r\n        }\r\n        return pixelData;\r\n    }\r\n    PixelData.divideByAlpha = divideByAlpha;\r\n})(PixelData || (PixelData = {}));\r\n//# sourceMappingURL=image.js.map"]},"metadata":{},"sourceType":"module"}