{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Loci } from '../mol-model/loci';\nimport { Color } from '../mol-util/color';\nimport { StructureElement } from '../mol-model/structure';\nimport { Script } from '../mol-script/script';\nexport { Overpaint };\n\nfunction Overpaint(layers) {\n  return {\n    layers: layers\n  };\n}\n\n(function (Overpaint) {\n  Overpaint.Empty = {\n    layers: []\n  };\n\n  function areEqual(oA, oB) {\n    if (oA.layers.length === 0 && oB.layers.length === 0) return true;\n    if (oA.layers.length !== oB.layers.length) return false;\n\n    for (var i = 0, il = oA.layers.length; i < il; ++i) {\n      if (oA.layers[i].clear !== oB.layers[i].clear) return false;\n      if (oA.layers[i].color !== oB.layers[i].color) return false;\n      if (!Loci.areEqual(oA.layers[i].loci, oB.layers[i].loci)) return false;\n    }\n\n    return true;\n  }\n\n  Overpaint.areEqual = areEqual;\n\n  function isEmpty(overpaint) {\n    return overpaint.layers.length === 0;\n  }\n\n  Overpaint.isEmpty = isEmpty;\n\n  function remap(overpaint, structure) {\n    var layers = [];\n\n    for (var _i = 0, _a = overpaint.layers; _i < _a.length; _i++) {\n      var layer = _a[_i];\n      var loci = layer.loci,\n          color = layer.color,\n          clear = layer.clear;\n      loci = StructureElement.Loci.remap(loci, structure);\n\n      if (!StructureElement.Loci.isEmpty(loci)) {\n        layers.push({\n          loci: loci,\n          color: color,\n          clear: clear\n        });\n      }\n    }\n\n    return {\n      layers: layers\n    };\n  }\n\n  Overpaint.remap = remap;\n\n  function merge(overpaint) {\n    if (isEmpty(overpaint)) return overpaint;\n    var structure = overpaint.layers[0].loci.structure;\n    var map = new Map();\n    var shadowed = StructureElement.Loci.none(structure);\n\n    for (var i = 0, il = overpaint.layers.length; i < il; ++i) {\n      var _a = overpaint.layers[il - i - 1],\n          loci = _a.loci,\n          color = _a.color,\n          clear = _a.clear; // process from end\n\n      loci = StructureElement.Loci.subtract(loci, shadowed);\n      shadowed = StructureElement.Loci.union(loci, shadowed);\n\n      if (!StructureElement.Loci.isEmpty(loci)) {\n        var colorOrClear = clear ? -1 : color;\n\n        if (map.has(colorOrClear)) {\n          loci = StructureElement.Loci.union(loci, map.get(colorOrClear));\n        }\n\n        map.set(colorOrClear, loci);\n      }\n    }\n\n    var layers = [];\n    map.forEach(function (loci, colorOrClear) {\n      var clear = colorOrClear === -1;\n      var color = colorOrClear === -1 ? Color(0) : colorOrClear;\n      layers.push({\n        loci: loci,\n        color: color,\n        clear: clear\n      });\n    });\n    return {\n      layers: layers\n    };\n  }\n\n  Overpaint.merge = merge;\n\n  function filter(overpaint, filter) {\n    if (isEmpty(overpaint)) return overpaint;\n    var structure = overpaint.layers[0].loci.structure;\n    var layers = [];\n\n    for (var _i = 0, _a = overpaint.layers; _i < _a.length; _i++) {\n      var layer = _a[_i];\n      var loci = layer.loci,\n          color = layer.color,\n          clear = layer.clear; // filter by first map to the `filter` structure and\n      // then map back to the original structure of the overpaint loci\n\n      var filtered = StructureElement.Loci.remap(loci, filter);\n      loci = StructureElement.Loci.remap(filtered, structure);\n\n      if (!StructureElement.Loci.isEmpty(loci)) {\n        layers.push({\n          loci: loci,\n          color: color,\n          clear: clear\n        });\n      }\n    }\n\n    return {\n      layers: layers\n    };\n  }\n\n  Overpaint.filter = filter;\n\n  function ofScript(scriptLayers, structure) {\n    var layers = [];\n\n    for (var i = 0, il = scriptLayers.length; i < il; ++i) {\n      var _a = scriptLayers[i],\n          script = _a.script,\n          color = _a.color,\n          clear = _a.clear;\n      var loci = Script.toLoci(script, structure);\n\n      if (!StructureElement.Loci.isEmpty(loci)) {\n        layers.push({\n          loci: loci,\n          color: color,\n          clear: clear\n        });\n      }\n    }\n\n    return {\n      layers: layers\n    };\n  }\n\n  Overpaint.ofScript = ofScript;\n\n  function ofBundle(bundleLayers, structure) {\n    var layers = [];\n\n    for (var i = 0, il = bundleLayers.length; i < il; ++i) {\n      var _a = bundleLayers[i],\n          bundle = _a.bundle,\n          color = _a.color,\n          clear = _a.clear;\n      var loci = StructureElement.Bundle.toLoci(bundle, structure.root);\n      layers.push({\n        loci: loci,\n        color: color,\n        clear: clear\n      });\n    }\n\n    return {\n      layers: layers\n    };\n  }\n\n  Overpaint.ofBundle = ofBundle;\n\n  function toBundle(overpaint) {\n    var layers = [];\n\n    for (var i = 0, il = overpaint.layers.length; i < il; ++i) {\n      var _a = overpaint.layers[i],\n          loci = _a.loci,\n          color = _a.color,\n          clear = _a.clear;\n      var bundle = StructureElement.Bundle.fromLoci(loci);\n      layers.push({\n        bundle: bundle,\n        color: color,\n        clear: clear\n      });\n    }\n\n    return {\n      layers: layers\n    };\n  }\n\n  Overpaint.toBundle = toBundle;\n})(Overpaint || (Overpaint = {}));","map":{"version":3,"sources":["../../src/mol-theme/overpaint.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Loci } from '../mol-model/loci';\r\nimport { Color } from '../mol-util/color';\r\nimport { StructureElement } from '../mol-model/structure';\r\nimport { Script } from '../mol-script/script';\r\nexport { Overpaint };\r\nfunction Overpaint(layers) {\r\n    return { layers: layers };\r\n}\r\n(function (Overpaint) {\r\n    Overpaint.Empty = { layers: [] };\r\n    function areEqual(oA, oB) {\r\n        if (oA.layers.length === 0 && oB.layers.length === 0)\r\n            return true;\r\n        if (oA.layers.length !== oB.layers.length)\r\n            return false;\r\n        for (var i = 0, il = oA.layers.length; i < il; ++i) {\r\n            if (oA.layers[i].clear !== oB.layers[i].clear)\r\n                return false;\r\n            if (oA.layers[i].color !== oB.layers[i].color)\r\n                return false;\r\n            if (!Loci.areEqual(oA.layers[i].loci, oB.layers[i].loci))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    Overpaint.areEqual = areEqual;\r\n    function isEmpty(overpaint) {\r\n        return overpaint.layers.length === 0;\r\n    }\r\n    Overpaint.isEmpty = isEmpty;\r\n    function remap(overpaint, structure) {\r\n        var layers = [];\r\n        for (var _i = 0, _a = overpaint.layers; _i < _a.length; _i++) {\r\n            var layer = _a[_i];\r\n            var loci = layer.loci, color = layer.color, clear = layer.clear;\r\n            loci = StructureElement.Loci.remap(loci, structure);\r\n            if (!StructureElement.Loci.isEmpty(loci)) {\r\n                layers.push({ loci: loci, color: color, clear: clear });\r\n            }\r\n        }\r\n        return { layers: layers };\r\n    }\r\n    Overpaint.remap = remap;\r\n    function merge(overpaint) {\r\n        if (isEmpty(overpaint))\r\n            return overpaint;\r\n        var structure = overpaint.layers[0].loci.structure;\r\n        var map = new Map();\r\n        var shadowed = StructureElement.Loci.none(structure);\r\n        for (var i = 0, il = overpaint.layers.length; i < il; ++i) {\r\n            var _a = overpaint.layers[il - i - 1], loci = _a.loci, color = _a.color, clear = _a.clear; // process from end\r\n            loci = StructureElement.Loci.subtract(loci, shadowed);\r\n            shadowed = StructureElement.Loci.union(loci, shadowed);\r\n            if (!StructureElement.Loci.isEmpty(loci)) {\r\n                var colorOrClear = clear ? -1 : color;\r\n                if (map.has(colorOrClear)) {\r\n                    loci = StructureElement.Loci.union(loci, map.get(colorOrClear));\r\n                }\r\n                map.set(colorOrClear, loci);\r\n            }\r\n        }\r\n        var layers = [];\r\n        map.forEach(function (loci, colorOrClear) {\r\n            var clear = colorOrClear === -1;\r\n            var color = colorOrClear === -1 ? Color(0) : colorOrClear;\r\n            layers.push({ loci: loci, color: color, clear: clear });\r\n        });\r\n        return { layers: layers };\r\n    }\r\n    Overpaint.merge = merge;\r\n    function filter(overpaint, filter) {\r\n        if (isEmpty(overpaint))\r\n            return overpaint;\r\n        var structure = overpaint.layers[0].loci.structure;\r\n        var layers = [];\r\n        for (var _i = 0, _a = overpaint.layers; _i < _a.length; _i++) {\r\n            var layer = _a[_i];\r\n            var loci = layer.loci, color = layer.color, clear = layer.clear;\r\n            // filter by first map to the `filter` structure and\r\n            // then map back to the original structure of the overpaint loci\r\n            var filtered = StructureElement.Loci.remap(loci, filter);\r\n            loci = StructureElement.Loci.remap(filtered, structure);\r\n            if (!StructureElement.Loci.isEmpty(loci)) {\r\n                layers.push({ loci: loci, color: color, clear: clear });\r\n            }\r\n        }\r\n        return { layers: layers };\r\n    }\r\n    Overpaint.filter = filter;\r\n    function ofScript(scriptLayers, structure) {\r\n        var layers = [];\r\n        for (var i = 0, il = scriptLayers.length; i < il; ++i) {\r\n            var _a = scriptLayers[i], script = _a.script, color = _a.color, clear = _a.clear;\r\n            var loci = Script.toLoci(script, structure);\r\n            if (!StructureElement.Loci.isEmpty(loci)) {\r\n                layers.push({ loci: loci, color: color, clear: clear });\r\n            }\r\n        }\r\n        return { layers: layers };\r\n    }\r\n    Overpaint.ofScript = ofScript;\r\n    function ofBundle(bundleLayers, structure) {\r\n        var layers = [];\r\n        for (var i = 0, il = bundleLayers.length; i < il; ++i) {\r\n            var _a = bundleLayers[i], bundle = _a.bundle, color = _a.color, clear = _a.clear;\r\n            var loci = StructureElement.Bundle.toLoci(bundle, structure.root);\r\n            layers.push({ loci: loci, color: color, clear: clear });\r\n        }\r\n        return { layers: layers };\r\n    }\r\n    Overpaint.ofBundle = ofBundle;\r\n    function toBundle(overpaint) {\r\n        var layers = [];\r\n        for (var i = 0, il = overpaint.layers.length; i < il; ++i) {\r\n            var _a = overpaint.layers[i], loci = _a.loci, color = _a.color, clear = _a.clear;\r\n            var bundle = StructureElement.Bundle.fromLoci(loci);\r\n            layers.push({ bundle: bundle, color: color, clear: clear });\r\n        }\r\n        return { layers: layers };\r\n    }\r\n    Overpaint.toBundle = toBundle;\r\n})(Overpaint || (Overpaint = {}));\r\n//# sourceMappingURL=overpaint.js.map"]},"metadata":{},"sourceType":"module"}