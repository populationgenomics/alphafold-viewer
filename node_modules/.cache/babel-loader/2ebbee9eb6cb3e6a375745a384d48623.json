{"ast":null,"code":"/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { Vec3 } from '../../mol-math/linear-algebra';\nimport { PrimitiveBuilder } from './primitive';\nexport var DefaultStarProps = {\n  pointCount: 5,\n  outerRadius: 1,\n  innerRadius: 0.5,\n  thickness: 0.3\n};\nvar op = Vec3.zero(),\n    on = Vec3.zero();\nvar a = Vec3.zero(),\n    b = Vec3.zero(),\n    c = Vec3.zero();\nexport function Star(props) {\n  var _a = __assign(__assign({}, DefaultStarProps), props),\n      outerRadius = _a.outerRadius,\n      innerRadius = _a.innerRadius,\n      thickness = _a.thickness,\n      pointCount = _a.pointCount;\n\n  var triangleCount = pointCount * 2 * 2;\n  var builder = PrimitiveBuilder(triangleCount);\n  var innerPoints = new Float32Array(pointCount * 2);\n  var outerPoints = new Float32Array(pointCount * 2);\n\n  for (var i = 0; i < pointCount; ++i) {\n    var io = i * 2,\n        ii = i * 2 + 1;\n    var co = (io + 1) / pointCount * Math.PI,\n        ci = (ii + 1) / pointCount * Math.PI;\n    outerPoints[io] = Math.cos(co) * outerRadius;\n    outerPoints[ii] = Math.sin(co) * outerRadius;\n    innerPoints[io] = Math.cos(ci) * innerRadius;\n    innerPoints[ii] = Math.sin(ci) * innerRadius;\n  }\n\n  Vec3.set(op, 0, 0, thickness / 2);\n  Vec3.set(on, 0, 0, -thickness / 2);\n\n  for (var i = 0; i < pointCount; ++i) {\n    var ni = (i + 1) % pointCount;\n    Vec3.set(a, outerPoints[i * 2], outerPoints[i * 2 + 1], 0);\n    Vec3.set(b, innerPoints[i * 2], innerPoints[i * 2 + 1], 0);\n    Vec3.set(c, outerPoints[ni * 2], outerPoints[ni * 2 + 1], 0);\n    builder.add(op, a, b);\n    builder.add(b, a, on);\n    builder.add(op, b, c);\n    builder.add(c, b, on);\n  }\n\n  return builder.getPrimitive();\n}","map":{"version":3,"sources":["../../../src/mol-geo/primitive/star.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { Vec3 } from '../../mol-math/linear-algebra';\r\nimport { PrimitiveBuilder } from './primitive';\r\nexport var DefaultStarProps = {\r\n    pointCount: 5,\r\n    outerRadius: 1,\r\n    innerRadius: 0.5,\r\n    thickness: 0.3\r\n};\r\nvar op = Vec3.zero(), on = Vec3.zero();\r\nvar a = Vec3.zero(), b = Vec3.zero(), c = Vec3.zero();\r\nexport function Star(props) {\r\n    var _a = __assign(__assign({}, DefaultStarProps), props), outerRadius = _a.outerRadius, innerRadius = _a.innerRadius, thickness = _a.thickness, pointCount = _a.pointCount;\r\n    var triangleCount = pointCount * 2 * 2;\r\n    var builder = PrimitiveBuilder(triangleCount);\r\n    var innerPoints = new Float32Array(pointCount * 2);\r\n    var outerPoints = new Float32Array(pointCount * 2);\r\n    for (var i = 0; i < pointCount; ++i) {\r\n        var io = i * 2, ii = i * 2 + 1;\r\n        var co = (io + 1) / pointCount * Math.PI, ci = (ii + 1) / pointCount * Math.PI;\r\n        outerPoints[io] = Math.cos(co) * outerRadius;\r\n        outerPoints[ii] = Math.sin(co) * outerRadius;\r\n        innerPoints[io] = Math.cos(ci) * innerRadius;\r\n        innerPoints[ii] = Math.sin(ci) * innerRadius;\r\n    }\r\n    Vec3.set(op, 0, 0, thickness / 2);\r\n    Vec3.set(on, 0, 0, -thickness / 2);\r\n    for (var i = 0; i < pointCount; ++i) {\r\n        var ni = (i + 1) % pointCount;\r\n        Vec3.set(a, outerPoints[i * 2], outerPoints[i * 2 + 1], 0);\r\n        Vec3.set(b, innerPoints[i * 2], innerPoints[i * 2 + 1], 0);\r\n        Vec3.set(c, outerPoints[ni * 2], outerPoints[ni * 2 + 1], 0);\r\n        builder.add(op, a, b);\r\n        builder.add(b, a, on);\r\n        builder.add(op, b, c);\r\n        builder.add(c, b, on);\r\n    }\r\n    return builder.getPrimitive();\r\n}\r\n//# sourceMappingURL=star.js.map"]},"metadata":{},"sourceType":"module"}