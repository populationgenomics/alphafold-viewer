{"ast":null,"code":"/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Áron Samuel Kovács <aron.kovacs@mail.muni.cz>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { QuadSchema, QuadValues } from '../../mol-gl/compute/util';\nimport { createComputeRenderable } from '../../mol-gl/renderable';\nimport { TextureSpec, UniformSpec } from '../../mol-gl/renderable/schema';\nimport { ShaderCode } from '../../mol-gl/shader-code';\nimport { createComputeRenderItem } from '../../mol-gl/webgl/render-item';\nimport { ValueCell } from '../../mol-util';\nimport { quad_vert } from '../../mol-gl/shader/quad.vert';\nimport { evaluateWboit_frag } from '../../mol-gl/shader/evaluate-wboit.frag';\nimport { Vec2 } from '../../mol-math/linear-algebra';\nimport { isDebugMode } from '../../mol-util/debug';\n\nvar EvaluateWboitSchema = __assign(__assign({}, QuadSchema), {\n  tWboitA: TextureSpec('texture', 'rgba', 'float', 'nearest'),\n  tWboitB: TextureSpec('texture', 'rgba', 'float', 'nearest'),\n  uTexSize: UniformSpec('v2')\n});\n\nvar EvaluateWboitShaderCode = ShaderCode('evaluate-wboit', quad_vert, evaluateWboit_frag);\n\nfunction getEvaluateWboitRenderable(ctx, wboitATexture, wboitBTexture) {\n  var values = __assign(__assign({}, QuadValues), {\n    tWboitA: ValueCell.create(wboitATexture),\n    tWboitB: ValueCell.create(wboitBTexture),\n    uTexSize: ValueCell.create(Vec2.create(wboitATexture.getWidth(), wboitATexture.getHeight()))\n  });\n\n  var schema = __assign({}, EvaluateWboitSchema);\n\n  var renderItem = createComputeRenderItem(ctx, 'triangles', EvaluateWboitShaderCode, schema, values);\n  return createComputeRenderable(renderItem, values);\n} //\n\n\nvar WboitPass =\n/** @class */\nfunction () {\n  function WboitPass(webgl, width, height) {\n    this.webgl = webgl;\n    this._supported = false;\n    if (!WboitPass.isSupported(webgl)) return;\n    var resources = webgl.resources;\n    this.textureA = resources.texture('image-float32', 'rgba', 'float', 'nearest');\n    this.textureA.define(width, height);\n    this.textureB = resources.texture('image-float32', 'rgba', 'float', 'nearest');\n    this.textureB.define(width, height);\n    this.renderable = getEvaluateWboitRenderable(webgl, this.textureA, this.textureB);\n    this.framebuffer = resources.framebuffer();\n    this._supported = true;\n\n    this._init();\n  }\n\n  Object.defineProperty(WboitPass.prototype, \"supported\", {\n    get: function () {\n      return this._supported;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  WboitPass.prototype.bind = function () {\n    var _a = this.webgl,\n        state = _a.state,\n        gl = _a.gl;\n    this.framebuffer.bind();\n    state.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    state.disable(gl.DEPTH_TEST);\n    state.blendFuncSeparate(gl.ONE, gl.ONE, gl.ZERO, gl.ONE_MINUS_SRC_ALPHA);\n    state.enable(gl.BLEND);\n  };\n\n  WboitPass.prototype.render = function () {\n    var _a = this.webgl,\n        state = _a.state,\n        gl = _a.gl;\n    state.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    state.enable(gl.BLEND);\n    this.renderable.update();\n    this.renderable.render();\n  };\n\n  WboitPass.prototype.setSize = function (width, height) {\n    var _a = this.renderable.values.uTexSize.ref.value,\n        w = _a[0],\n        h = _a[1];\n\n    if (width !== w || height !== h) {\n      this.textureA.define(width, height);\n      this.textureB.define(width, height);\n      ValueCell.update(this.renderable.values.uTexSize, Vec2.set(this.renderable.values.uTexSize.ref.value, width, height));\n    }\n  };\n\n  WboitPass.prototype.reset = function () {\n    if (this._supported) this._init();\n  };\n\n  WboitPass.prototype._init = function () {\n    var drawBuffers = this.webgl.extensions.drawBuffers;\n    this.framebuffer.bind();\n    drawBuffers.drawBuffers([drawBuffers.COLOR_ATTACHMENT0, drawBuffers.COLOR_ATTACHMENT1]);\n    this.textureA.attachFramebuffer(this.framebuffer, 'color0');\n    this.textureB.attachFramebuffer(this.framebuffer, 'color1');\n  };\n\n  WboitPass.isSupported = function (webgl) {\n    var _a = webgl.extensions,\n        drawBuffers = _a.drawBuffers,\n        textureFloat = _a.textureFloat,\n        colorBufferFloat = _a.colorBufferFloat,\n        depthTexture = _a.depthTexture;\n\n    if (!textureFloat || !colorBufferFloat || !depthTexture || !drawBuffers) {\n      if (isDebugMode) {\n        var missing = [];\n        if (!textureFloat) missing.push('textureFloat');\n        if (!colorBufferFloat) missing.push('colorBufferFloat');\n        if (!depthTexture) missing.push('depthTexture');\n        if (!drawBuffers) missing.push('drawBuffers');\n        console.log(\"Missing \\\"\" + missing.join('\", \"') + \"\\\" extensions required for \\\"wboit\\\"\");\n      }\n\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  return WboitPass;\n}();\n\nexport { WboitPass };","map":{"version":3,"sources":["../../../src/mol-canvas3d/passes/wboit.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Áron Samuel Kovács <aron.kovacs@mail.muni.cz>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { QuadSchema, QuadValues } from '../../mol-gl/compute/util';\r\nimport { createComputeRenderable } from '../../mol-gl/renderable';\r\nimport { TextureSpec, UniformSpec } from '../../mol-gl/renderable/schema';\r\nimport { ShaderCode } from '../../mol-gl/shader-code';\r\nimport { createComputeRenderItem } from '../../mol-gl/webgl/render-item';\r\nimport { ValueCell } from '../../mol-util';\r\nimport { quad_vert } from '../../mol-gl/shader/quad.vert';\r\nimport { evaluateWboit_frag } from '../../mol-gl/shader/evaluate-wboit.frag';\r\nimport { Vec2 } from '../../mol-math/linear-algebra';\r\nimport { isDebugMode } from '../../mol-util/debug';\r\nvar EvaluateWboitSchema = __assign(__assign({}, QuadSchema), { tWboitA: TextureSpec('texture', 'rgba', 'float', 'nearest'), tWboitB: TextureSpec('texture', 'rgba', 'float', 'nearest'), uTexSize: UniformSpec('v2') });\r\nvar EvaluateWboitShaderCode = ShaderCode('evaluate-wboit', quad_vert, evaluateWboit_frag);\r\nfunction getEvaluateWboitRenderable(ctx, wboitATexture, wboitBTexture) {\r\n    var values = __assign(__assign({}, QuadValues), { tWboitA: ValueCell.create(wboitATexture), tWboitB: ValueCell.create(wboitBTexture), uTexSize: ValueCell.create(Vec2.create(wboitATexture.getWidth(), wboitATexture.getHeight())) });\r\n    var schema = __assign({}, EvaluateWboitSchema);\r\n    var renderItem = createComputeRenderItem(ctx, 'triangles', EvaluateWboitShaderCode, schema, values);\r\n    return createComputeRenderable(renderItem, values);\r\n}\r\n//\r\nvar WboitPass = /** @class */ (function () {\r\n    function WboitPass(webgl, width, height) {\r\n        this.webgl = webgl;\r\n        this._supported = false;\r\n        if (!WboitPass.isSupported(webgl))\r\n            return;\r\n        var resources = webgl.resources;\r\n        this.textureA = resources.texture('image-float32', 'rgba', 'float', 'nearest');\r\n        this.textureA.define(width, height);\r\n        this.textureB = resources.texture('image-float32', 'rgba', 'float', 'nearest');\r\n        this.textureB.define(width, height);\r\n        this.renderable = getEvaluateWboitRenderable(webgl, this.textureA, this.textureB);\r\n        this.framebuffer = resources.framebuffer();\r\n        this._supported = true;\r\n        this._init();\r\n    }\r\n    Object.defineProperty(WboitPass.prototype, \"supported\", {\r\n        get: function () {\r\n            return this._supported;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    WboitPass.prototype.bind = function () {\r\n        var _a = this.webgl, state = _a.state, gl = _a.gl;\r\n        this.framebuffer.bind();\r\n        state.clearColor(0, 0, 0, 1);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        state.disable(gl.DEPTH_TEST);\r\n        state.blendFuncSeparate(gl.ONE, gl.ONE, gl.ZERO, gl.ONE_MINUS_SRC_ALPHA);\r\n        state.enable(gl.BLEND);\r\n    };\r\n    WboitPass.prototype.render = function () {\r\n        var _a = this.webgl, state = _a.state, gl = _a.gl;\r\n        state.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        state.enable(gl.BLEND);\r\n        this.renderable.update();\r\n        this.renderable.render();\r\n    };\r\n    WboitPass.prototype.setSize = function (width, height) {\r\n        var _a = this.renderable.values.uTexSize.ref.value, w = _a[0], h = _a[1];\r\n        if (width !== w || height !== h) {\r\n            this.textureA.define(width, height);\r\n            this.textureB.define(width, height);\r\n            ValueCell.update(this.renderable.values.uTexSize, Vec2.set(this.renderable.values.uTexSize.ref.value, width, height));\r\n        }\r\n    };\r\n    WboitPass.prototype.reset = function () {\r\n        if (this._supported)\r\n            this._init();\r\n    };\r\n    WboitPass.prototype._init = function () {\r\n        var drawBuffers = this.webgl.extensions.drawBuffers;\r\n        this.framebuffer.bind();\r\n        drawBuffers.drawBuffers([\r\n            drawBuffers.COLOR_ATTACHMENT0,\r\n            drawBuffers.COLOR_ATTACHMENT1,\r\n        ]);\r\n        this.textureA.attachFramebuffer(this.framebuffer, 'color0');\r\n        this.textureB.attachFramebuffer(this.framebuffer, 'color1');\r\n    };\r\n    WboitPass.isSupported = function (webgl) {\r\n        var _a = webgl.extensions, drawBuffers = _a.drawBuffers, textureFloat = _a.textureFloat, colorBufferFloat = _a.colorBufferFloat, depthTexture = _a.depthTexture;\r\n        if (!textureFloat || !colorBufferFloat || !depthTexture || !drawBuffers) {\r\n            if (isDebugMode) {\r\n                var missing = [];\r\n                if (!textureFloat)\r\n                    missing.push('textureFloat');\r\n                if (!colorBufferFloat)\r\n                    missing.push('colorBufferFloat');\r\n                if (!depthTexture)\r\n                    missing.push('depthTexture');\r\n                if (!drawBuffers)\r\n                    missing.push('drawBuffers');\r\n                console.log(\"Missing \\\"\" + missing.join('\", \"') + \"\\\" extensions required for \\\"wboit\\\"\");\r\n            }\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    return WboitPass;\r\n}());\r\nexport { WboitPass };\r\n//# sourceMappingURL=wboit.js.map"]},"metadata":{},"sourceType":"module"}