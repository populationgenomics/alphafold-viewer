{"ast":null,"code":"import { __assign, __extends, __spreadArray } from \"tslib\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\r\n * Copyright (c) 2018-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\n\nimport * as React from 'react';\nimport { TextInput } from './common';\nimport { noop } from '../../mol-util';\n\nvar Slider =\n/** @class */\nfunction (_super) {\n  __extends(Slider, _super);\n\n  function Slider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isChanging: false,\n      current: 0\n    };\n\n    _this.begin = function () {\n      _this.setState({\n        isChanging: true\n      });\n    };\n\n    _this.end = function (v) {\n      _this.setState({\n        isChanging: false\n      });\n\n      _this.props.onChange(v);\n    };\n\n    _this.updateCurrent = function (current) {\n      var _a, _b;\n\n      _this.setState({\n        current: current\n      });\n\n      (_b = (_a = _this.props).onChangeImmediate) === null || _b === void 0 ? void 0 : _b.call(_a, current);\n    };\n\n    _this.updateManually = function (v) {\n      _this.setState({\n        isChanging: true\n      });\n\n      var n = v;\n      if (_this.props.step === 1) n = Math.round(n);\n      if (n < _this.props.min) n = _this.props.min;\n      if (n > _this.props.max) n = _this.props.max;\n\n      _this.setState({\n        current: n,\n        isChanging: true\n      });\n    };\n\n    _this.onManualBlur = function () {\n      _this.setState({\n        isChanging: false\n      });\n\n      _this.props.onChange(_this.state.current);\n    };\n\n    return _this;\n  }\n\n  Slider.getDerivedStateFromProps = function (props, state) {\n    if (state.isChanging || props.value === state.current) return null;\n    return {\n      current: props.value\n    };\n  };\n\n  Slider.prototype.render = function () {\n    var step = this.props.step;\n    if (step === void 0) step = 1;\n    return _jsxs(\"div\", __assign({\n      className: 'msp-slider'\n    }, {\n      children: [_jsx(\"div\", {\n        children: _jsx(SliderBase, {\n          min: this.props.min,\n          max: this.props.max,\n          step: step,\n          value: this.state.current,\n          disabled: this.props.disabled,\n          onBeforeChange: this.begin,\n          onChange: this.updateCurrent,\n          onAfterChange: this.end\n        }, void 0)\n      }, void 0), _jsx(\"div\", {\n        children: _jsx(TextInput, {\n          numeric: true,\n          delayMs: 50,\n          value: this.state.current,\n          blurOnEnter: true,\n          onBlur: this.onManualBlur,\n          isDisabled: this.props.disabled,\n          onChange: this.updateManually\n        }, void 0)\n      }, void 0)]\n    }), void 0);\n  };\n\n  return Slider;\n}(React.Component);\n\nexport { Slider };\n\nvar Slider2 =\n/** @class */\nfunction (_super) {\n  __extends(Slider2, _super);\n\n  function Slider2() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      isChanging: false,\n      current: [0, 1]\n    };\n\n    _this.begin = function () {\n      _this.setState({\n        isChanging: true\n      });\n    };\n\n    _this.end = function (v) {\n      _this.setState({\n        isChanging: false\n      });\n\n      _this.props.onChange(v);\n    };\n\n    _this.updateCurrent = function (current) {\n      _this.setState({\n        current: current\n      });\n    };\n\n    _this.updateMax = function (v) {\n      var n = v;\n      if (_this.props.step === 1) n = Math.round(n);\n      if (n < _this.state.current[0]) n = _this.state.current[0];else if (n < _this.props.min) n = _this.props.min;\n      if (n > _this.props.max) n = _this.props.max;\n\n      _this.props.onChange([_this.state.current[0], n]);\n    };\n\n    _this.updateMin = function (v) {\n      var n = v;\n      if (_this.props.step === 1) n = Math.round(n);\n      if (n < _this.props.min) n = _this.props.min;\n      if (n > _this.state.current[1]) n = _this.state.current[1];else if (n > _this.props.max) n = _this.props.max;\n\n      _this.props.onChange([n, _this.state.current[1]]);\n    };\n\n    return _this;\n  }\n\n  Slider2.getDerivedStateFromProps = function (props, state) {\n    if (state.isChanging || props.value[0] === state.current[0] && props.value[1] === state.current[1]) return null;\n    return {\n      current: props.value\n    };\n  };\n\n  Slider2.prototype.render = function () {\n    var step = this.props.step;\n    if (step === void 0) step = 1;\n    return _jsxs(\"div\", __assign({\n      className: 'msp-slider2'\n    }, {\n      children: [_jsx(\"div\", {\n        children: _jsx(TextInput, {\n          numeric: true,\n          delayMs: 50,\n          value: this.state.current[0],\n          onEnter: this.props.onEnter,\n          blurOnEnter: true,\n          isDisabled: this.props.disabled,\n          onChange: this.updateMin\n        }, void 0)\n      }, void 0), _jsx(\"div\", {\n        children: _jsx(SliderBase, {\n          min: this.props.min,\n          max: this.props.max,\n          step: step,\n          value: this.state.current,\n          disabled: this.props.disabled,\n          onBeforeChange: this.begin,\n          onChange: this.updateCurrent,\n          onAfterChange: this.end,\n          range: true,\n          allowCross: true\n        }, void 0)\n      }, void 0), _jsx(\"div\", {\n        children: _jsx(TextInput, {\n          numeric: true,\n          delayMs: 50,\n          value: this.state.current[1],\n          onEnter: this.props.onEnter,\n          blurOnEnter: true,\n          isDisabled: this.props.disabled,\n          onChange: this.updateMax\n        }, void 0)\n      }, void 0)]\n    }), void 0);\n  };\n\n  return Slider2;\n}(React.Component);\n\nexport { Slider2 };\n/**\r\n * The following code was adapted from react-components/slider library.\r\n *\r\n * The MIT License (MIT)\r\n * Copyright (c) 2015-present Alipay.com, https://www.alipay.com/\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\n\nfunction classNames(_classes) {\n  var classes = [];\n  var hasOwn = {}.hasOwnProperty;\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n    if (!arg) continue;\n    var argType = typeof arg;\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg);\n    } else if (Array.isArray(arg)) {\n      classes.push(classNames.apply(null, arg));\n    } else if (argType === 'object') {\n      for (var key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key);\n        }\n      }\n    }\n  }\n\n  return classes.join(' ');\n}\n\nfunction isNotTouchEvent(e) {\n  return e.touches.length > 1 || e.type.toLowerCase() === 'touchend' && e.touches.length > 0;\n}\n\nfunction getTouchPosition(vertical, e) {\n  return vertical ? e.touches[0].clientY : e.touches[0].pageX;\n}\n\nfunction getMousePosition(vertical, e) {\n  return vertical ? e.clientY : e.pageX;\n}\n\nfunction getHandleCenterPosition(vertical, handle) {\n  var coords = handle.getBoundingClientRect();\n  return vertical ? coords.top + coords.height * 0.5 : coords.left + coords.width * 0.5;\n}\n\nfunction pauseEvent(e) {\n  e.stopPropagation();\n  e.preventDefault();\n}\n\nvar Handle =\n/** @class */\nfunction (_super) {\n  __extends(Handle, _super);\n\n  function Handle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Handle.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        tipFormatter = _a.tipFormatter,\n        vertical = _a.vertical,\n        offset = _a.offset,\n        value = _a.value,\n        index = _a.index;\n    var style = vertical ? {\n      bottom: offset + \"%\"\n    } : {\n      left: offset + \"%\"\n    };\n    return _jsx(\"div\", {\n      className: className,\n      style: style,\n      title: tipFormatter(value, index)\n    }, void 0);\n  };\n\n  return Handle;\n}(React.Component);\n\nexport { Handle };\n\nvar SliderBase =\n/** @class */\nfunction (_super) {\n  __extends(SliderBase, _super);\n\n  function SliderBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.sliderElement = React.createRef();\n    _this.handleElements = [];\n    _this.dragOffset = 0;\n    _this.startPosition = 0;\n    _this.startValue = 0;\n    _this._getPointsCache = void 0;\n\n    _this.onMouseDown = function (e) {\n      if (e.button !== 0) {\n        return;\n      }\n\n      var position = getMousePosition(_this.props.vertical, e);\n\n      if (!_this.isEventFromHandle(e)) {\n        _this.dragOffset = 0;\n      } else {\n        var handlePosition = getHandleCenterPosition(_this.props.vertical, e.target);\n        _this.dragOffset = position - handlePosition;\n        position = handlePosition;\n      }\n\n      _this.onStart(position);\n\n      _this.addDocumentEvents('mouse');\n\n      pauseEvent(e);\n    };\n\n    _this.onTouchMove = function (e) {\n      if (isNotTouchEvent(e)) {\n        _this.end('touch');\n\n        return;\n      }\n\n      var position = getTouchPosition(_this.props.vertical, e);\n\n      _this.onMove(e, position - _this.dragOffset);\n    };\n\n    _this.onTouchStart = function (e) {\n      if (isNotTouchEvent(e)) return;\n      var position = getTouchPosition(_this.props.vertical, e);\n\n      if (!_this.isEventFromHandle(e)) {\n        _this.dragOffset = 0;\n      } else {\n        var handlePosition = getHandleCenterPosition(_this.props.vertical, e.target);\n        _this.dragOffset = position - handlePosition;\n        position = handlePosition;\n      }\n\n      _this.onStart(position);\n\n      _this.addDocumentEvents('touch');\n\n      pauseEvent(e);\n    };\n\n    _this.eventHandlers = {\n      'touchmove': function (e) {\n        return _this.onTouchMove(e);\n      },\n      'touchend': function (e) {\n        return _this.end('touch');\n      },\n      'mousemove': function (e) {\n        return _this.onMouseMove(e);\n      },\n      'mouseup': function (e) {\n        return _this.end('mouse');\n      }\n    };\n\n    _this.calcOffset = function (value) {\n      var _a = _this.props,\n          min = _a.min,\n          max = _a.max;\n      var ratio = (value - min) / (max - min);\n      return ratio * 100;\n    };\n\n    var range = props.range,\n        min = props.min,\n        max = props.max;\n    var initialValue = range ? Array.apply(null, Array(+range + 1)).map(function () {\n      return min;\n    }) : min;\n    var defaultValue = 'defaultValue' in props ? props.defaultValue : initialValue;\n    var value = props.value !== undefined ? props.value : defaultValue;\n    var bounds = (range ? value : [min, value]).map(function (v) {\n      return _this.trimAlignValue(v);\n    });\n    var recent;\n\n    if (range && bounds[0] === bounds[bounds.length - 1] && bounds[0] === max) {\n      recent = 0;\n    } else {\n      recent = bounds.length - 1;\n    }\n\n    _this.state = {\n      handle: null,\n      recent: recent,\n      bounds: bounds\n    };\n    return _this;\n  }\n\n  SliderBase.prototype.componentDidUpdate = function (prevProps) {\n    var _this = this;\n\n    if (!('value' in this.props || 'min' in this.props || 'max' in this.props)) return;\n    var bounds = this.state.bounds;\n\n    if (prevProps.range) {\n      var value = this.props.value || bounds;\n      var nextBounds = value.map(function (v) {\n        return _this.trimAlignValue(v, _this.props);\n      });\n      if (nextBounds.every(function (v, i) {\n        return v === bounds[i];\n      })) return;\n      this.setState({\n        bounds: nextBounds\n      });\n\n      if (bounds.some(function (v) {\n        return _this.isValueOutOfBounds(v, _this.props);\n      })) {\n        this.props.onChange(nextBounds);\n      }\n    } else {\n      var value = this.props.value !== undefined ? this.props.value : bounds[1];\n      var nextValue = this.trimAlignValue(value, this.props);\n      if (nextValue === bounds[1] && bounds[0] === prevProps.min) return;\n      this.setState({\n        bounds: [prevProps.min, nextValue]\n      });\n\n      if (this.isValueOutOfBounds(bounds[1], this.props)) {\n        this.props.onChange(nextValue);\n      }\n    }\n  };\n\n  SliderBase.prototype.onChange = function (state) {\n    var props = this.props;\n    var isNotControlled = !('value' in props);\n\n    if (isNotControlled) {\n      this.setState(state);\n    } else if (state.handle !== undefined) {\n      this.setState({\n        handle: state.handle\n      });\n    }\n\n    var data = __assign(__assign({}, this.state), state);\n\n    var changedValue = props.range ? data.bounds : data.bounds[1];\n    props.onChange(changedValue);\n  };\n\n  SliderBase.prototype.onMouseMove = function (e) {\n    var position = getMousePosition(this.props.vertical, e);\n    this.onMove(e, position - this.dragOffset);\n  };\n\n  SliderBase.prototype.onMove = function (e, position) {\n    pauseEvent(e);\n    var props = this.props;\n    var state = this.state;\n    var diffPosition = position - this.startPosition;\n    diffPosition = this.props.vertical ? -diffPosition : diffPosition;\n    var diffValue = diffPosition / this.getSliderLength() * (props.max - props.min);\n    var value = this.trimAlignValue(this.startValue + diffValue);\n    var oldValue = state.bounds[state.handle];\n    if (value === oldValue) return;\n\n    var nextBounds = __spreadArray([], state.bounds, true);\n\n    nextBounds[state.handle] = value;\n    var nextHandle = state.handle;\n\n    if (!!props.pushable) {\n      var originalValue = state.bounds[nextHandle];\n      this.pushSurroundingHandles(nextBounds, nextHandle, originalValue);\n    } else if (props.allowCross) {\n      nextBounds.sort(function (a, b) {\n        return a - b;\n      });\n      nextHandle = nextBounds.indexOf(value);\n    }\n\n    this.onChange({\n      handle: nextHandle,\n      bounds: nextBounds\n    });\n  };\n\n  SliderBase.prototype.onStart = function (position) {\n    var props = this.props;\n    props.onBeforeChange(this.getValue());\n    var value = this.calcValueByPos(position);\n    this.startValue = value;\n    this.startPosition = position;\n    var state = this.state;\n    var bounds = state.bounds;\n    var valueNeedChanging = 1;\n\n    if (this.props.range) {\n      var closestBound = 0;\n\n      for (var i = 1; i < bounds.length - 1; ++i) {\n        if (value > bounds[i]) {\n          closestBound = i;\n        }\n      }\n\n      if (Math.abs(bounds[closestBound + 1] - value) < Math.abs(bounds[closestBound] - value)) {\n        closestBound = closestBound + 1;\n      }\n\n      valueNeedChanging = closestBound;\n      var isAtTheSamePoint = bounds[closestBound + 1] === bounds[closestBound];\n\n      if (isAtTheSamePoint) {\n        valueNeedChanging = state.recent;\n      }\n\n      if (isAtTheSamePoint && value !== bounds[closestBound + 1]) {\n        valueNeedChanging = value < bounds[closestBound + 1] ? closestBound : closestBound + 1;\n      }\n    }\n\n    this.setState({\n      handle: valueNeedChanging,\n      recent: valueNeedChanging\n    });\n    var oldValue = state.bounds[valueNeedChanging];\n    if (value === oldValue) return;\n\n    var nextBounds = __spreadArray([], state.bounds, true);\n\n    nextBounds[valueNeedChanging] = value;\n    this.onChange({\n      bounds: nextBounds\n    });\n  };\n  /**\r\n   * Returns an array of possible slider points, taking into account both\r\n   * `marks` and `step`. The result is cached.\r\n   */\n\n\n  SliderBase.prototype.getPoints = function () {\n    var _a = this.props,\n        marks = _a.marks,\n        step = _a.step,\n        min = _a.min,\n        max = _a.max;\n    var cache = this._getPointsCache;\n\n    if (!cache || cache.marks !== marks || cache.step !== step) {\n      var pointsObject = __assign({}, marks);\n\n      if (step !== null) {\n        for (var point = min; point <= max; point += step) {\n          pointsObject[point] = point;\n        }\n      }\n\n      var points = Object.keys(pointsObject).map(parseFloat);\n      points.sort(function (a, b) {\n        return a - b;\n      });\n      this._getPointsCache = {\n        marks: marks,\n        step: step,\n        points: points\n      };\n    }\n\n    return this._getPointsCache.points;\n  };\n\n  SliderBase.prototype.getPrecision = function (step) {\n    var stepString = step.toString();\n    var precision = 0;\n\n    if (stepString.indexOf('.') >= 0) {\n      precision = stepString.length - stepString.indexOf('.') - 1;\n    }\n\n    return precision;\n  };\n\n  SliderBase.prototype.getSliderLength = function () {\n    var slider = this.sliderElement.current;\n\n    if (!slider) {\n      return 0;\n    }\n\n    return this.props.vertical ? slider.clientHeight : slider.clientWidth;\n  };\n\n  SliderBase.prototype.getSliderStart = function () {\n    var slider = this.sliderElement.current;\n    var rect = slider.getBoundingClientRect();\n    return this.props.vertical ? rect.top : rect.left;\n  };\n\n  SliderBase.prototype.getValue = function () {\n    var bounds = this.state.bounds;\n    return this.props.range ? bounds : bounds[1];\n  };\n\n  SliderBase.prototype.addDocumentEvents = function (type) {\n    if (type === 'touch') {\n      document.addEventListener('touchmove', this.eventHandlers.touchmove);\n      document.addEventListener('touchend', this.eventHandlers.touchend);\n    } else if (type === 'mouse') {\n      document.addEventListener('mousemove', this.eventHandlers.mousemove);\n      document.addEventListener('mouseup', this.eventHandlers.mouseup);\n    }\n  };\n\n  SliderBase.prototype.calcValue = function (offset) {\n    var _a = this.props,\n        vertical = _a.vertical,\n        min = _a.min,\n        max = _a.max;\n    var ratio = Math.abs(offset / this.getSliderLength());\n    var value = vertical ? (1 - ratio) * (max - min) + min : ratio * (max - min) + min;\n    return value;\n  };\n\n  SliderBase.prototype.calcValueByPos = function (position) {\n    var pixelOffset = position - this.getSliderStart();\n    var nextValue = this.trimAlignValue(this.calcValue(pixelOffset));\n    return nextValue;\n  };\n\n  SliderBase.prototype.end = function (type) {\n    this.removeEvents(type);\n    this.props.onAfterChange(this.getValue());\n    this.setState({\n      handle: null\n    });\n  };\n\n  SliderBase.prototype.isEventFromHandle = function (e) {\n    for (var _i = 0, _a = this.handleElements; _i < _a.length; _i++) {\n      var h = _a[_i];\n      if (h.current === e.target) return true;\n    }\n\n    return false;\n  };\n\n  SliderBase.prototype.isValueOutOfBounds = function (value, props) {\n    return value < props.min || value > props.max;\n  };\n\n  SliderBase.prototype.pushHandle = function (bounds, handle, direction, amount) {\n    var originalValue = bounds[handle];\n    var currentValue = bounds[handle];\n\n    while (direction * (currentValue - originalValue) < amount) {\n      if (!this.pushHandleOnePoint(bounds, handle, direction)) {\n        // can't push handle enough to create the needed `amount` gap, so we\n        // revert its position to the original value\n        bounds[handle] = originalValue;\n        return false;\n      }\n\n      currentValue = bounds[handle];\n    } // the handle was pushed enough to create the needed `amount` gap\n\n\n    return true;\n  };\n\n  SliderBase.prototype.pushHandleOnePoint = function (bounds, handle, direction) {\n    var points = this.getPoints();\n    var pointIndex = points.indexOf(bounds[handle]);\n    var nextPointIndex = pointIndex + direction;\n\n    if (nextPointIndex >= points.length || nextPointIndex < 0) {\n      // reached the minimum or maximum available point, can't push anymore\n      return false;\n    }\n\n    var nextHandle = handle + direction;\n    var nextValue = points[nextPointIndex];\n    var threshold = this.props.pushable;\n    var diffToNext = direction * (bounds[nextHandle] - nextValue);\n\n    if (!this.pushHandle(bounds, nextHandle, direction, +threshold - diffToNext)) {\n      // couldn't push next handle, so we won't push this one either\n      return false;\n    } // push the handle\n\n\n    bounds[handle] = nextValue;\n    return true;\n  };\n\n  SliderBase.prototype.pushSurroundingHandles = function (bounds, handle, originalValue) {\n    var threshold = this.props.pushable;\n    var value = bounds[handle];\n    var direction = 0;\n\n    if (bounds[handle + 1] - value < threshold) {\n      direction = +1;\n    } else if (value - bounds[handle - 1] < threshold) {\n      direction = -1;\n    }\n\n    if (direction === 0) {\n      return;\n    }\n\n    var nextHandle = handle + direction;\n    var diffToNext = direction * (bounds[nextHandle] - value);\n\n    if (!this.pushHandle(bounds, nextHandle, direction, +threshold - diffToNext)) {\n      // revert to original value if pushing is impossible\n      bounds[handle] = originalValue;\n    }\n  };\n\n  SliderBase.prototype.removeEvents = function (type) {\n    if (type === 'touch') {\n      document.removeEventListener('touchmove', this.eventHandlers.touchmove);\n      document.removeEventListener('touchend', this.eventHandlers.touchend);\n    } else if (type === 'mouse') {\n      document.removeEventListener('mousemove', this.eventHandlers.mousemove);\n      document.removeEventListener('mouseup', this.eventHandlers.mouseup);\n    }\n  };\n\n  SliderBase.prototype.trimAlignValue = function (v, props) {\n    var _a = this.state || {},\n        handle = _a.handle,\n        bounds = _a.bounds;\n\n    var _b = __assign(__assign({}, this.props), props || {}),\n        marks = _b.marks,\n        step = _b.step,\n        min = _b.min,\n        max = _b.max,\n        allowCross = _b.allowCross;\n\n    var val = v;\n\n    if (val <= min) {\n      val = min;\n    }\n\n    if (val >= max) {\n      val = max;\n    }\n    /* eslint-disable eqeqeq */\n\n\n    if (!allowCross && handle != null && handle > 0 && val <= bounds[handle - 1]) {\n      val = bounds[handle - 1];\n    }\n\n    if (!allowCross && handle != null && handle < bounds.length - 1 && val >= bounds[handle + 1]) {\n      val = bounds[handle + 1];\n    }\n    /* eslint-enable eqeqeq */\n\n\n    var points = Object.keys(marks).map(parseFloat);\n\n    if (step !== null) {\n      var closestStep = Math.round((val - min) / step) * step + min;\n      points.push(closestStep);\n    }\n\n    var diffs = points.map(function (point) {\n      return Math.abs(val - point);\n    });\n    var closestPoint = points[diffs.indexOf(Math.min.apply(Math, diffs))];\n    return step !== null ? parseFloat(closestPoint.toFixed(this.getPrecision(step))) : closestPoint;\n  };\n\n  SliderBase.prototype.render = function () {\n    var _a;\n\n    var _this = this;\n\n    var _b = this.state,\n        handle = _b.handle,\n        bounds = _b.bounds;\n    var _c = this.props,\n        className = _c.className,\n        prefixCls = _c.prefixCls,\n        disabled = _c.disabled,\n        vertical = _c.vertical,\n        range = _c.range,\n        step = _c.step,\n        marks = _c.marks,\n        tipFormatter = _c.tipFormatter;\n    var customHandle = this.props.handle;\n    var offsets = bounds.map(this.calcOffset);\n    var handleClassName = prefixCls + \"-handle\";\n    var handlesClassNames = bounds.map(function (v, i) {\n      var _a;\n\n      return classNames((_a = {}, _a[handleClassName] = true, _a[handleClassName + \"-\" + (i + 1)] = true, _a[handleClassName + \"-lower\"] = i === 0, _a[handleClassName + \"-upper\"] = i === bounds.length - 1, _a));\n    });\n    var isNoTip = step === null || tipFormatter === null;\n    var commonHandleProps = {\n      prefixCls: prefixCls,\n      noTip: isNoTip,\n      tipFormatter: tipFormatter,\n      vertical: vertical\n    };\n\n    if (this.handleElements.length !== bounds.length) {\n      this.handleElements = []; // = [];\n\n      for (var i = 0; i < bounds.length; i++) this.handleElements.push(React.createRef());\n    }\n\n    var handles = bounds.map(function (v, i) {\n      return React.cloneElement(customHandle, __assign(__assign({}, commonHandleProps), {\n        className: handlesClassNames[i],\n        value: v,\n        offset: offsets[i],\n        dragging: handle === i,\n        index: i,\n        key: i,\n        ref: _this.handleElements[i]\n      }));\n    });\n\n    if (!range) {\n      handles.shift();\n    }\n\n    var sliderClassName = classNames((_a = {}, _a[prefixCls] = true, _a[prefixCls + \"-with-marks\"] = Object.keys(marks).length, _a[prefixCls + \"-disabled\"] = disabled, _a[prefixCls + \"-vertical\"] = this.props.vertical, _a[className] = !!className, _a));\n    return _jsxs(\"div\", __assign({\n      ref: this.sliderElement,\n      className: sliderClassName,\n      onTouchStart: disabled ? noop : this.onTouchStart,\n      onMouseDown: disabled ? noop : this.onMouseDown\n    }, {\n      children: [_jsx(\"div\", {\n        className: prefixCls + \"-rail\"\n      }, void 0), handles]\n    }), void 0);\n  };\n\n  SliderBase.defaultProps = {\n    prefixCls: 'msp-slider-base',\n    className: '',\n    min: 0,\n    max: 100,\n    step: 1,\n    marks: {},\n    handle: _jsx(Handle, {\n      className: '',\n      vertical: false,\n      offset: 0,\n      tipFormatter: function (v) {\n        return v;\n      },\n      value: 0,\n      index: 0\n    }, void 0),\n    onBeforeChange: noop,\n    onChange: noop,\n    onAfterChange: noop,\n    tipFormatter: function (value, index) {\n      return value;\n    },\n    disabled: false,\n    range: false,\n    vertical: false,\n    allowCross: true,\n    pushable: false\n  };\n  return SliderBase;\n}(React.Component);\n\nexport { SliderBase };","map":{"version":3,"sources":["../../../src/mol-plugin-ui/controls/slider.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends, __spreadArray } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\n/**\r\n * Copyright (c) 2018-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport * as React from 'react';\r\nimport { TextInput } from './common';\r\nimport { noop } from '../../mol-util';\r\nvar Slider = /** @class */ (function (_super) {\r\n    __extends(Slider, _super);\r\n    function Slider() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = { isChanging: false, current: 0 };\r\n        _this.begin = function () {\r\n            _this.setState({ isChanging: true });\r\n        };\r\n        _this.end = function (v) {\r\n            _this.setState({ isChanging: false });\r\n            _this.props.onChange(v);\r\n        };\r\n        _this.updateCurrent = function (current) {\r\n            var _a, _b;\r\n            _this.setState({ current: current });\r\n            (_b = (_a = _this.props).onChangeImmediate) === null || _b === void 0 ? void 0 : _b.call(_a, current);\r\n        };\r\n        _this.updateManually = function (v) {\r\n            _this.setState({ isChanging: true });\r\n            var n = v;\r\n            if (_this.props.step === 1)\r\n                n = Math.round(n);\r\n            if (n < _this.props.min)\r\n                n = _this.props.min;\r\n            if (n > _this.props.max)\r\n                n = _this.props.max;\r\n            _this.setState({ current: n, isChanging: true });\r\n        };\r\n        _this.onManualBlur = function () {\r\n            _this.setState({ isChanging: false });\r\n            _this.props.onChange(_this.state.current);\r\n        };\r\n        return _this;\r\n    }\r\n    Slider.getDerivedStateFromProps = function (props, state) {\r\n        if (state.isChanging || props.value === state.current)\r\n            return null;\r\n        return { current: props.value };\r\n    };\r\n    Slider.prototype.render = function () {\r\n        var step = this.props.step;\r\n        if (step === void 0)\r\n            step = 1;\r\n        return _jsxs(\"div\", __assign({ className: 'msp-slider' }, { children: [_jsx(\"div\", { children: _jsx(SliderBase, { min: this.props.min, max: this.props.max, step: step, value: this.state.current, disabled: this.props.disabled, onBeforeChange: this.begin, onChange: this.updateCurrent, onAfterChange: this.end }, void 0) }, void 0), _jsx(\"div\", { children: _jsx(TextInput, { numeric: true, delayMs: 50, value: this.state.current, blurOnEnter: true, onBlur: this.onManualBlur, isDisabled: this.props.disabled, onChange: this.updateManually }, void 0) }, void 0)] }), void 0);\r\n    };\r\n    return Slider;\r\n}(React.Component));\r\nexport { Slider };\r\nvar Slider2 = /** @class */ (function (_super) {\r\n    __extends(Slider2, _super);\r\n    function Slider2() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = { isChanging: false, current: [0, 1] };\r\n        _this.begin = function () {\r\n            _this.setState({ isChanging: true });\r\n        };\r\n        _this.end = function (v) {\r\n            _this.setState({ isChanging: false });\r\n            _this.props.onChange(v);\r\n        };\r\n        _this.updateCurrent = function (current) {\r\n            _this.setState({ current: current });\r\n        };\r\n        _this.updateMax = function (v) {\r\n            var n = v;\r\n            if (_this.props.step === 1)\r\n                n = Math.round(n);\r\n            if (n < _this.state.current[0])\r\n                n = _this.state.current[0];\r\n            else if (n < _this.props.min)\r\n                n = _this.props.min;\r\n            if (n > _this.props.max)\r\n                n = _this.props.max;\r\n            _this.props.onChange([_this.state.current[0], n]);\r\n        };\r\n        _this.updateMin = function (v) {\r\n            var n = v;\r\n            if (_this.props.step === 1)\r\n                n = Math.round(n);\r\n            if (n < _this.props.min)\r\n                n = _this.props.min;\r\n            if (n > _this.state.current[1])\r\n                n = _this.state.current[1];\r\n            else if (n > _this.props.max)\r\n                n = _this.props.max;\r\n            _this.props.onChange([n, _this.state.current[1]]);\r\n        };\r\n        return _this;\r\n    }\r\n    Slider2.getDerivedStateFromProps = function (props, state) {\r\n        if (state.isChanging || (props.value[0] === state.current[0] && props.value[1] === state.current[1]))\r\n            return null;\r\n        return { current: props.value };\r\n    };\r\n    Slider2.prototype.render = function () {\r\n        var step = this.props.step;\r\n        if (step === void 0)\r\n            step = 1;\r\n        return _jsxs(\"div\", __assign({ className: 'msp-slider2' }, { children: [_jsx(\"div\", { children: _jsx(TextInput, { numeric: true, delayMs: 50, value: this.state.current[0], onEnter: this.props.onEnter, blurOnEnter: true, isDisabled: this.props.disabled, onChange: this.updateMin }, void 0) }, void 0), _jsx(\"div\", { children: _jsx(SliderBase, { min: this.props.min, max: this.props.max, step: step, value: this.state.current, disabled: this.props.disabled, onBeforeChange: this.begin, onChange: this.updateCurrent, onAfterChange: this.end, range: true, allowCross: true }, void 0) }, void 0), _jsx(\"div\", { children: _jsx(TextInput, { numeric: true, delayMs: 50, value: this.state.current[1], onEnter: this.props.onEnter, blurOnEnter: true, isDisabled: this.props.disabled, onChange: this.updateMax }, void 0) }, void 0)] }), void 0);\r\n    };\r\n    return Slider2;\r\n}(React.Component));\r\nexport { Slider2 };\r\n/**\r\n * The following code was adapted from react-components/slider library.\r\n *\r\n * The MIT License (MIT)\r\n * Copyright (c) 2015-present Alipay.com, https://www.alipay.com/\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction classNames(_classes) {\r\n    var classes = [];\r\n    var hasOwn = {}.hasOwnProperty;\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        var arg = arguments[i];\r\n        if (!arg)\r\n            continue;\r\n        var argType = typeof arg;\r\n        if (argType === 'string' || argType === 'number') {\r\n            classes.push(arg);\r\n        }\r\n        else if (Array.isArray(arg)) {\r\n            classes.push(classNames.apply(null, arg));\r\n        }\r\n        else if (argType === 'object') {\r\n            for (var key in arg) {\r\n                if (hasOwn.call(arg, key) && arg[key]) {\r\n                    classes.push(key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return classes.join(' ');\r\n}\r\nfunction isNotTouchEvent(e) {\r\n    return e.touches.length > 1 || (e.type.toLowerCase() === 'touchend' && e.touches.length > 0);\r\n}\r\nfunction getTouchPosition(vertical, e) {\r\n    return vertical ? e.touches[0].clientY : e.touches[0].pageX;\r\n}\r\nfunction getMousePosition(vertical, e) {\r\n    return vertical ? e.clientY : e.pageX;\r\n}\r\nfunction getHandleCenterPosition(vertical, handle) {\r\n    var coords = handle.getBoundingClientRect();\r\n    return vertical ?\r\n        coords.top + (coords.height * 0.5) :\r\n        coords.left + (coords.width * 0.5);\r\n}\r\nfunction pauseEvent(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n}\r\nvar Handle = /** @class */ (function (_super) {\r\n    __extends(Handle, _super);\r\n    function Handle() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Handle.prototype.render = function () {\r\n        var _a = this.props, className = _a.className, tipFormatter = _a.tipFormatter, vertical = _a.vertical, offset = _a.offset, value = _a.value, index = _a.index;\r\n        var style = vertical ? { bottom: offset + \"%\" } : { left: offset + \"%\" };\r\n        return (_jsx(\"div\", { className: className, style: style, title: tipFormatter(value, index) }, void 0));\r\n    };\r\n    return Handle;\r\n}(React.Component));\r\nexport { Handle };\r\nvar SliderBase = /** @class */ (function (_super) {\r\n    __extends(SliderBase, _super);\r\n    function SliderBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.sliderElement = React.createRef();\r\n        _this.handleElements = [];\r\n        _this.dragOffset = 0;\r\n        _this.startPosition = 0;\r\n        _this.startValue = 0;\r\n        _this._getPointsCache = void 0;\r\n        _this.onMouseDown = function (e) {\r\n            if (e.button !== 0) {\r\n                return;\r\n            }\r\n            var position = getMousePosition(_this.props.vertical, e);\r\n            if (!_this.isEventFromHandle(e)) {\r\n                _this.dragOffset = 0;\r\n            }\r\n            else {\r\n                var handlePosition = getHandleCenterPosition(_this.props.vertical, e.target);\r\n                _this.dragOffset = position - handlePosition;\r\n                position = handlePosition;\r\n            }\r\n            _this.onStart(position);\r\n            _this.addDocumentEvents('mouse');\r\n            pauseEvent(e);\r\n        };\r\n        _this.onTouchMove = function (e) {\r\n            if (isNotTouchEvent(e)) {\r\n                _this.end('touch');\r\n                return;\r\n            }\r\n            var position = getTouchPosition(_this.props.vertical, e);\r\n            _this.onMove(e, position - _this.dragOffset);\r\n        };\r\n        _this.onTouchStart = function (e) {\r\n            if (isNotTouchEvent(e))\r\n                return;\r\n            var position = getTouchPosition(_this.props.vertical, e);\r\n            if (!_this.isEventFromHandle(e)) {\r\n                _this.dragOffset = 0;\r\n            }\r\n            else {\r\n                var handlePosition = getHandleCenterPosition(_this.props.vertical, e.target);\r\n                _this.dragOffset = position - handlePosition;\r\n                position = handlePosition;\r\n            }\r\n            _this.onStart(position);\r\n            _this.addDocumentEvents('touch');\r\n            pauseEvent(e);\r\n        };\r\n        _this.eventHandlers = {\r\n            'touchmove': function (e) { return _this.onTouchMove(e); },\r\n            'touchend': function (e) { return _this.end('touch'); },\r\n            'mousemove': function (e) { return _this.onMouseMove(e); },\r\n            'mouseup': function (e) { return _this.end('mouse'); },\r\n        };\r\n        _this.calcOffset = function (value) {\r\n            var _a = _this.props, min = _a.min, max = _a.max;\r\n            var ratio = (value - min) / (max - min);\r\n            return ratio * 100;\r\n        };\r\n        var range = props.range, min = props.min, max = props.max;\r\n        var initialValue = range ? Array.apply(null, Array(+range + 1)).map(function () { return min; }) : min;\r\n        var defaultValue = ('defaultValue' in props ? props.defaultValue : initialValue);\r\n        var value = (props.value !== undefined ? props.value : defaultValue);\r\n        var bounds = (range ? value : [min, value]).map(function (v) { return _this.trimAlignValue(v); });\r\n        var recent;\r\n        if (range && bounds[0] === bounds[bounds.length - 1] && bounds[0] === max) {\r\n            recent = 0;\r\n        }\r\n        else {\r\n            recent = bounds.length - 1;\r\n        }\r\n        _this.state = {\r\n            handle: null,\r\n            recent: recent,\r\n            bounds: bounds,\r\n        };\r\n        return _this;\r\n    }\r\n    SliderBase.prototype.componentDidUpdate = function (prevProps) {\r\n        var _this = this;\r\n        if (!('value' in this.props || 'min' in this.props || 'max' in this.props))\r\n            return;\r\n        var bounds = this.state.bounds;\r\n        if (prevProps.range) {\r\n            var value = this.props.value || bounds;\r\n            var nextBounds = value.map(function (v) { return _this.trimAlignValue(v, _this.props); });\r\n            if (nextBounds.every(function (v, i) { return v === bounds[i]; }))\r\n                return;\r\n            this.setState({ bounds: nextBounds });\r\n            if (bounds.some(function (v) { return _this.isValueOutOfBounds(v, _this.props); })) {\r\n                this.props.onChange(nextBounds);\r\n            }\r\n        }\r\n        else {\r\n            var value = this.props.value !== undefined ? this.props.value : bounds[1];\r\n            var nextValue = this.trimAlignValue(value, this.props);\r\n            if (nextValue === bounds[1] && bounds[0] === prevProps.min)\r\n                return;\r\n            this.setState({ bounds: [prevProps.min, nextValue] });\r\n            if (this.isValueOutOfBounds(bounds[1], this.props)) {\r\n                this.props.onChange(nextValue);\r\n            }\r\n        }\r\n    };\r\n    SliderBase.prototype.onChange = function (state) {\r\n        var props = this.props;\r\n        var isNotControlled = !('value' in props);\r\n        if (isNotControlled) {\r\n            this.setState(state);\r\n        }\r\n        else if (state.handle !== undefined) {\r\n            this.setState({ handle: state.handle });\r\n        }\r\n        var data = __assign(__assign({}, this.state), state);\r\n        var changedValue = props.range ? data.bounds : data.bounds[1];\r\n        props.onChange(changedValue);\r\n    };\r\n    SliderBase.prototype.onMouseMove = function (e) {\r\n        var position = getMousePosition(this.props.vertical, e);\r\n        this.onMove(e, position - this.dragOffset);\r\n    };\r\n    SliderBase.prototype.onMove = function (e, position) {\r\n        pauseEvent(e);\r\n        var props = this.props;\r\n        var state = this.state;\r\n        var diffPosition = position - this.startPosition;\r\n        diffPosition = this.props.vertical ? -diffPosition : diffPosition;\r\n        var diffValue = diffPosition / this.getSliderLength() * (props.max - props.min);\r\n        var value = this.trimAlignValue(this.startValue + diffValue);\r\n        var oldValue = state.bounds[state.handle];\r\n        if (value === oldValue)\r\n            return;\r\n        var nextBounds = __spreadArray([], state.bounds, true);\r\n        nextBounds[state.handle] = value;\r\n        var nextHandle = state.handle;\r\n        if (!!props.pushable) {\r\n            var originalValue = state.bounds[nextHandle];\r\n            this.pushSurroundingHandles(nextBounds, nextHandle, originalValue);\r\n        }\r\n        else if (props.allowCross) {\r\n            nextBounds.sort(function (a, b) { return a - b; });\r\n            nextHandle = nextBounds.indexOf(value);\r\n        }\r\n        this.onChange({\r\n            handle: nextHandle,\r\n            bounds: nextBounds,\r\n        });\r\n    };\r\n    SliderBase.prototype.onStart = function (position) {\r\n        var props = this.props;\r\n        props.onBeforeChange(this.getValue());\r\n        var value = this.calcValueByPos(position);\r\n        this.startValue = value;\r\n        this.startPosition = position;\r\n        var state = this.state;\r\n        var bounds = state.bounds;\r\n        var valueNeedChanging = 1;\r\n        if (this.props.range) {\r\n            var closestBound = 0;\r\n            for (var i = 1; i < bounds.length - 1; ++i) {\r\n                if (value > bounds[i]) {\r\n                    closestBound = i;\r\n                }\r\n            }\r\n            if (Math.abs(bounds[closestBound + 1] - value) < Math.abs(bounds[closestBound] - value)) {\r\n                closestBound = closestBound + 1;\r\n            }\r\n            valueNeedChanging = closestBound;\r\n            var isAtTheSamePoint = (bounds[closestBound + 1] === bounds[closestBound]);\r\n            if (isAtTheSamePoint) {\r\n                valueNeedChanging = state.recent;\r\n            }\r\n            if (isAtTheSamePoint && (value !== bounds[closestBound + 1])) {\r\n                valueNeedChanging = value < bounds[closestBound + 1] ? closestBound : closestBound + 1;\r\n            }\r\n        }\r\n        this.setState({\r\n            handle: valueNeedChanging,\r\n            recent: valueNeedChanging,\r\n        });\r\n        var oldValue = state.bounds[valueNeedChanging];\r\n        if (value === oldValue)\r\n            return;\r\n        var nextBounds = __spreadArray([], state.bounds, true);\r\n        nextBounds[valueNeedChanging] = value;\r\n        this.onChange({ bounds: nextBounds });\r\n    };\r\n    /**\r\n     * Returns an array of possible slider points, taking into account both\r\n     * `marks` and `step`. The result is cached.\r\n     */\r\n    SliderBase.prototype.getPoints = function () {\r\n        var _a = this.props, marks = _a.marks, step = _a.step, min = _a.min, max = _a.max;\r\n        var cache = this._getPointsCache;\r\n        if (!cache || cache.marks !== marks || cache.step !== step) {\r\n            var pointsObject = __assign({}, marks);\r\n            if (step !== null) {\r\n                for (var point = min; point <= max; point += step) {\r\n                    pointsObject[point] = point;\r\n                }\r\n            }\r\n            var points = Object.keys(pointsObject).map(parseFloat);\r\n            points.sort(function (a, b) { return a - b; });\r\n            this._getPointsCache = { marks: marks, step: step, points: points };\r\n        }\r\n        return this._getPointsCache.points;\r\n    };\r\n    SliderBase.prototype.getPrecision = function (step) {\r\n        var stepString = step.toString();\r\n        var precision = 0;\r\n        if (stepString.indexOf('.') >= 0) {\r\n            precision = stepString.length - stepString.indexOf('.') - 1;\r\n        }\r\n        return precision;\r\n    };\r\n    SliderBase.prototype.getSliderLength = function () {\r\n        var slider = this.sliderElement.current;\r\n        if (!slider) {\r\n            return 0;\r\n        }\r\n        return this.props.vertical ? slider.clientHeight : slider.clientWidth;\r\n    };\r\n    SliderBase.prototype.getSliderStart = function () {\r\n        var slider = this.sliderElement.current;\r\n        var rect = slider.getBoundingClientRect();\r\n        return this.props.vertical ? rect.top : rect.left;\r\n    };\r\n    SliderBase.prototype.getValue = function () {\r\n        var bounds = this.state.bounds;\r\n        return (this.props.range ? bounds : bounds[1]);\r\n    };\r\n    SliderBase.prototype.addDocumentEvents = function (type) {\r\n        if (type === 'touch') {\r\n            document.addEventListener('touchmove', this.eventHandlers.touchmove);\r\n            document.addEventListener('touchend', this.eventHandlers.touchend);\r\n        }\r\n        else if (type === 'mouse') {\r\n            document.addEventListener('mousemove', this.eventHandlers.mousemove);\r\n            document.addEventListener('mouseup', this.eventHandlers.mouseup);\r\n        }\r\n    };\r\n    SliderBase.prototype.calcValue = function (offset) {\r\n        var _a = this.props, vertical = _a.vertical, min = _a.min, max = _a.max;\r\n        var ratio = Math.abs(offset / this.getSliderLength());\r\n        var value = vertical ? (1 - ratio) * (max - min) + min : ratio * (max - min) + min;\r\n        return value;\r\n    };\r\n    SliderBase.prototype.calcValueByPos = function (position) {\r\n        var pixelOffset = position - this.getSliderStart();\r\n        var nextValue = this.trimAlignValue(this.calcValue(pixelOffset));\r\n        return nextValue;\r\n    };\r\n    SliderBase.prototype.end = function (type) {\r\n        this.removeEvents(type);\r\n        this.props.onAfterChange(this.getValue());\r\n        this.setState({ handle: null });\r\n    };\r\n    SliderBase.prototype.isEventFromHandle = function (e) {\r\n        for (var _i = 0, _a = this.handleElements; _i < _a.length; _i++) {\r\n            var h = _a[_i];\r\n            if (h.current === e.target)\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    SliderBase.prototype.isValueOutOfBounds = function (value, props) {\r\n        return value < props.min || value > props.max;\r\n    };\r\n    SliderBase.prototype.pushHandle = function (bounds, handle, direction, amount) {\r\n        var originalValue = bounds[handle];\r\n        var currentValue = bounds[handle];\r\n        while (direction * (currentValue - originalValue) < amount) {\r\n            if (!this.pushHandleOnePoint(bounds, handle, direction)) {\r\n                // can't push handle enough to create the needed `amount` gap, so we\r\n                // revert its position to the original value\r\n                bounds[handle] = originalValue;\r\n                return false;\r\n            }\r\n            currentValue = bounds[handle];\r\n        }\r\n        // the handle was pushed enough to create the needed `amount` gap\r\n        return true;\r\n    };\r\n    SliderBase.prototype.pushHandleOnePoint = function (bounds, handle, direction) {\r\n        var points = this.getPoints();\r\n        var pointIndex = points.indexOf(bounds[handle]);\r\n        var nextPointIndex = pointIndex + direction;\r\n        if (nextPointIndex >= points.length || nextPointIndex < 0) {\r\n            // reached the minimum or maximum available point, can't push anymore\r\n            return false;\r\n        }\r\n        var nextHandle = handle + direction;\r\n        var nextValue = points[nextPointIndex];\r\n        var threshold = this.props.pushable;\r\n        var diffToNext = direction * (bounds[nextHandle] - nextValue);\r\n        if (!this.pushHandle(bounds, nextHandle, direction, +threshold - diffToNext)) {\r\n            // couldn't push next handle, so we won't push this one either\r\n            return false;\r\n        }\r\n        // push the handle\r\n        bounds[handle] = nextValue;\r\n        return true;\r\n    };\r\n    SliderBase.prototype.pushSurroundingHandles = function (bounds, handle, originalValue) {\r\n        var threshold = this.props.pushable;\r\n        var value = bounds[handle];\r\n        var direction = 0;\r\n        if (bounds[handle + 1] - value < threshold) {\r\n            direction = +1;\r\n        }\r\n        else if (value - bounds[handle - 1] < threshold) {\r\n            direction = -1;\r\n        }\r\n        if (direction === 0) {\r\n            return;\r\n        }\r\n        var nextHandle = handle + direction;\r\n        var diffToNext = direction * (bounds[nextHandle] - value);\r\n        if (!this.pushHandle(bounds, nextHandle, direction, +threshold - diffToNext)) {\r\n            // revert to original value if pushing is impossible\r\n            bounds[handle] = originalValue;\r\n        }\r\n    };\r\n    SliderBase.prototype.removeEvents = function (type) {\r\n        if (type === 'touch') {\r\n            document.removeEventListener('touchmove', this.eventHandlers.touchmove);\r\n            document.removeEventListener('touchend', this.eventHandlers.touchend);\r\n        }\r\n        else if (type === 'mouse') {\r\n            document.removeEventListener('mousemove', this.eventHandlers.mousemove);\r\n            document.removeEventListener('mouseup', this.eventHandlers.mouseup);\r\n        }\r\n    };\r\n    SliderBase.prototype.trimAlignValue = function (v, props) {\r\n        var _a = (this.state || {}), handle = _a.handle, bounds = _a.bounds;\r\n        var _b = __assign(__assign({}, this.props), (props || {})), marks = _b.marks, step = _b.step, min = _b.min, max = _b.max, allowCross = _b.allowCross;\r\n        var val = v;\r\n        if (val <= min) {\r\n            val = min;\r\n        }\r\n        if (val >= max) {\r\n            val = max;\r\n        }\r\n        /* eslint-disable eqeqeq */\r\n        if (!allowCross && handle != null && handle > 0 && val <= bounds[handle - 1]) {\r\n            val = bounds[handle - 1];\r\n        }\r\n        if (!allowCross && handle != null && handle < bounds.length - 1 && val >= bounds[handle + 1]) {\r\n            val = bounds[handle + 1];\r\n        }\r\n        /* eslint-enable eqeqeq */\r\n        var points = Object.keys(marks).map(parseFloat);\r\n        if (step !== null) {\r\n            var closestStep = (Math.round((val - min) / step) * step) + min;\r\n            points.push(closestStep);\r\n        }\r\n        var diffs = points.map(function (point) { return Math.abs(val - point); });\r\n        var closestPoint = points[diffs.indexOf(Math.min.apply(Math, diffs))];\r\n        return step !== null ? parseFloat(closestPoint.toFixed(this.getPrecision(step))) : closestPoint;\r\n    };\r\n    SliderBase.prototype.render = function () {\r\n        var _a;\r\n        var _this = this;\r\n        var _b = this.state, handle = _b.handle, bounds = _b.bounds;\r\n        var _c = this.props, className = _c.className, prefixCls = _c.prefixCls, disabled = _c.disabled, vertical = _c.vertical, range = _c.range, step = _c.step, marks = _c.marks, tipFormatter = _c.tipFormatter;\r\n        var customHandle = this.props.handle;\r\n        var offsets = bounds.map(this.calcOffset);\r\n        var handleClassName = prefixCls + \"-handle\";\r\n        var handlesClassNames = bounds.map(function (v, i) {\r\n            var _a;\r\n            return classNames((_a = {},\r\n                _a[handleClassName] = true,\r\n                _a[handleClassName + \"-\" + (i + 1)] = true,\r\n                _a[handleClassName + \"-lower\"] = i === 0,\r\n                _a[handleClassName + \"-upper\"] = i === bounds.length - 1,\r\n                _a));\r\n        });\r\n        var isNoTip = (step === null) || (tipFormatter === null);\r\n        var commonHandleProps = {\r\n            prefixCls: prefixCls,\r\n            noTip: isNoTip,\r\n            tipFormatter: tipFormatter,\r\n            vertical: vertical,\r\n        };\r\n        if (this.handleElements.length !== bounds.length) {\r\n            this.handleElements = []; // = [];\r\n            for (var i = 0; i < bounds.length; i++)\r\n                this.handleElements.push(React.createRef());\r\n        }\r\n        var handles = bounds.map(function (v, i) { return React.cloneElement(customHandle, __assign(__assign({}, commonHandleProps), { className: handlesClassNames[i], value: v, offset: offsets[i], dragging: handle === i, index: i, key: i, ref: _this.handleElements[i] })); });\r\n        if (!range) {\r\n            handles.shift();\r\n        }\r\n        var sliderClassName = classNames((_a = {},\r\n            _a[prefixCls] = true,\r\n            _a[prefixCls + \"-with-marks\"] = Object.keys(marks).length,\r\n            _a[prefixCls + \"-disabled\"] = disabled,\r\n            _a[prefixCls + \"-vertical\"] = this.props.vertical,\r\n            _a[className] = !!className,\r\n            _a));\r\n        return (_jsxs(\"div\", __assign({ ref: this.sliderElement, className: sliderClassName, onTouchStart: disabled ? noop : this.onTouchStart, onMouseDown: disabled ? noop : this.onMouseDown }, { children: [_jsx(\"div\", { className: prefixCls + \"-rail\" }, void 0), handles] }), void 0));\r\n    };\r\n    SliderBase.defaultProps = {\r\n        prefixCls: 'msp-slider-base',\r\n        className: '',\r\n        min: 0,\r\n        max: 100,\r\n        step: 1,\r\n        marks: {},\r\n        handle: _jsx(Handle, { className: '', vertical: false, offset: 0, tipFormatter: function (v) { return v; }, value: 0, index: 0 }, void 0),\r\n        onBeforeChange: noop,\r\n        onChange: noop,\r\n        onAfterChange: noop,\r\n        tipFormatter: function (value, index) { return value; },\r\n        disabled: false,\r\n        range: false,\r\n        vertical: false,\r\n        allowCross: true,\r\n        pushable: false,\r\n    };\r\n    return SliderBase;\r\n}(React.Component));\r\nexport { SliderBase };\r\n//# sourceMappingURL=slider.js.map"]},"metadata":{},"sourceType":"module"}