{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Vec3 } from '../../linear-algebra';\nexport { Cell };\n\nfunction Cell() {\n  return Cell.empty();\n}\n\n(function (Cell) {\n  function create(size, anglesInRadians) {\n    return {\n      size: size,\n      anglesInRadians: anglesInRadians\n    };\n  }\n\n  Cell.create = create;\n\n  function empty() {\n    return create(Vec3(), Vec3());\n  }\n\n  Cell.empty = empty;\n\n  function fromBasis(x, y, z) {\n    var a = Vec3.magnitude(x);\n    var b = Vec3.magnitude(y);\n    var c = Vec3.magnitude(z);\n    var alpha = Math.acos(Vec3.dot(y, z) / (b * c));\n    var beta = Math.acos(Vec3.dot(x, z) / (a * c));\n    var gamma = Math.acos(Vec3.dot(x, y) / (a * b));\n\n    if (a <= 0 || b <= 0 || c <= 0 || alpha >= Math.PI || beta >= Math.PI || gamma >= Math.PI) {\n      return empty();\n    } else {\n      return create(Vec3.create(a, b, c), Vec3.create(alpha, beta, gamma));\n    }\n  }\n\n  Cell.fromBasis = fromBasis;\n})(Cell || (Cell = {}));","map":{"version":3,"sources":["../../../../src/mol-math/geometry/spacegroup/cell.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,SAAS,IAAT,QAAqB,sBAArB;AAEA,SAAS,IAAT;;AAOA,SAAS,IAAT,GAAa;AACT,SAAO,IAAI,CAAC,KAAL,EAAP;AACH;;AAED,CAAA,UAAU,IAAV,EAAc;AACV,WAAgB,MAAhB,CAAuB,IAAvB,EAAmC,eAAnC,EAAwD;AACpD,WAAO;AAAE,MAAA,IAAI,EAAA,IAAN;AAAQ,MAAA,eAAe,EAAA;AAAvB,KAAP;AACH;;AAFe,EAAA,IAAA,CAAA,MAAA,GAAM,MAAN;;AAIhB,WAAgB,KAAhB,GAAqB;AACjB,WAAO,MAAM,CAAC,IAAI,EAAL,EAAS,IAAI,EAAb,CAAb;AACH;;AAFe,EAAA,IAAA,CAAA,KAAA,GAAK,KAAL;;AAIhB,WAAgB,SAAhB,CAA0B,CAA1B,EAAmC,CAAnC,EAA4C,CAA5C,EAAmD;AAC/C,QAAM,CAAC,GAAG,IAAI,CAAC,SAAL,CAAe,CAAf,CAAV;AACA,QAAM,CAAC,GAAG,IAAI,CAAC,SAAL,CAAe,CAAf,CAAV;AACA,QAAM,CAAC,GAAG,IAAI,CAAC,SAAL,CAAe,CAAf,CAAV;AAEA,QAAM,KAAK,GAAG,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,KAAkB,CAAC,GAAG,CAAtB,CAAV,CAAd;AACA,QAAM,IAAI,GAAG,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,KAAkB,CAAC,GAAG,CAAtB,CAAV,CAAb;AACA,QAAM,KAAK,GAAG,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,KAAkB,CAAC,GAAG,CAAtB,CAAV,CAAd;;AAEA,QAAI,CAAC,IAAI,CAAL,IAAU,CAAC,IAAI,CAAf,IAAoB,CAAC,IAAI,CAAzB,IAA8B,KAAK,IAAI,IAAI,CAAC,EAA5C,IAAkD,IAAI,IAAI,IAAI,CAAC,EAA/D,IAAqE,KAAK,IAAI,IAAI,CAAC,EAAvF,EAA2F;AACvF,aAAO,KAAK,EAAZ;AACH,KAFD,MAEO;AACH,aAAO,MAAM,CAAC,IAAI,CAAC,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAD,EAAuB,IAAI,CAAC,MAAL,CAAY,KAAZ,EAAmB,IAAnB,EAAyB,KAAzB,CAAvB,CAAb;AACH;AACJ;;AAde,EAAA,IAAA,CAAA,SAAA,GAAS,SAAT;AAenB,CAxBD,EAAU,IAAI,KAAJ,IAAI,GAAA,EAAA,CAAd","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Vec3 } from '../../linear-algebra';\r\nexport { Cell };\r\nfunction Cell() {\r\n    return Cell.empty();\r\n}\r\n(function (Cell) {\r\n    function create(size, anglesInRadians) {\r\n        return { size: size, anglesInRadians: anglesInRadians };\r\n    }\r\n    Cell.create = create;\r\n    function empty() {\r\n        return create(Vec3(), Vec3());\r\n    }\r\n    Cell.empty = empty;\r\n    function fromBasis(x, y, z) {\r\n        var a = Vec3.magnitude(x);\r\n        var b = Vec3.magnitude(y);\r\n        var c = Vec3.magnitude(z);\r\n        var alpha = Math.acos(Vec3.dot(y, z) / (b * c));\r\n        var beta = Math.acos(Vec3.dot(x, z) / (a * c));\r\n        var gamma = Math.acos(Vec3.dot(x, y) / (a * b));\r\n        if (a <= 0 || b <= 0 || c <= 0 || alpha >= Math.PI || beta >= Math.PI || gamma >= Math.PI) {\r\n            return empty();\r\n        }\r\n        else {\r\n            return create(Vec3.create(a, b, c), Vec3.create(alpha, beta, gamma));\r\n        }\r\n    }\r\n    Cell.fromBasis = fromBasis;\r\n})(Cell || (Cell = {}));\r\n//# sourceMappingURL=cell.js.map"]},"metadata":{},"sourceType":"module"}