{"ast":null,"code":"/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { StructureSelection } from '../selection';\nimport { none } from './generators';\nimport { HashSet } from '../../../../mol-data/generic';\nimport { Structure } from '../../structure';\nexport function merge(queries) {\n  if (queries.length === 0) {\n    return none;\n  } else if (queries.length === 1) {\n    return queries[0];\n  }\n\n  return function (ctx) {\n    var ret = StructureSelection.UniqueBuilder(ctx.inputStructure);\n\n    var _loop_1 = function (i) {\n      StructureSelection.forEach(queries[i](ctx), function (s, j) {\n        ret.add(s);\n        if (i % 100) ctx.throwIfTimedOut();\n      });\n    };\n\n    for (var i = 0; i < queries.length; i++) {\n      _loop_1(i);\n    }\n\n    return ret.getSelection();\n  };\n}\nexport function intersect(queries) {\n  if (queries.length === 0) {\n    return none;\n  } else if (queries.length === 1) {\n    return queries[0];\n  }\n\n  return function (ctx) {\n    var selections = [];\n\n    for (var i = 0; i < queries.length; i++) selections.push(queries[i](ctx));\n\n    var pivotIndex = 0,\n        pivotLength = StructureSelection.structureCount(selections[0]);\n\n    for (var i = 1; i < selections.length; i++) {\n      var len = StructureSelection.structureCount(selections[i]);\n\n      if (len < pivotLength) {\n        pivotIndex = i;\n        pivotLength = len;\n      }\n    }\n\n    ctx.throwIfTimedOut();\n    var pivotSet = HashSet(function (s) {\n      return s.hashCode;\n    }, Structure.areUnitIdsAndIndicesEqual);\n    StructureSelection.forEach(selections[pivotIndex], function (s) {\n      return pivotSet.add(s);\n    });\n    var ret = StructureSelection.UniqueBuilder(ctx.inputStructure);\n\n    for (var pI = 0; pI < selections.length; pI++) {\n      if (pI === pivotIndex) continue;\n      StructureSelection.forEach(selections[pI], function (s) {\n        if (pivotSet.has(s)) ret.add(s);\n      });\n      ctx.throwIfTimedOut();\n    }\n\n    return ret.getSelection();\n  };\n} // TODO: distanceCluster","map":{"version":3,"sources":["../../../../../src/mol-model/structure/query/queries/combinators.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAGH,SAAS,kBAAT,QAAmC,cAAnC;AACA,SAAS,IAAT,QAAqB,cAArB;AACA,SAAS,OAAT,QAAwB,8BAAxB;AACA,SAAS,SAAT,QAA0B,iBAA1B;AAEA,OAAM,SAAU,KAAV,CAAgB,OAAhB,EAAkD;AACpD,MAAI,OAAO,CAAC,MAAR,KAAmB,CAAvB,EAA0B;AACtB,WAAO,IAAP;AACH,GAFD,MAEO,IAAI,OAAO,CAAC,MAAR,KAAmB,CAAvB,EAA0B;AAC7B,WAAO,OAAO,CAAC,CAAD,CAAd;AACH;;AACD,SAAO,UAAA,GAAA,EAAG;AACN,QAAM,GAAG,GAAG,kBAAkB,CAAC,aAAnB,CAAiC,GAAG,CAAC,cAArC,CAAZ;;4BACS,C,EAAC;AACN,MAAA,kBAAkB,CAAC,OAAnB,CAA2B,OAAO,CAAC,CAAD,CAAP,CAAW,GAAX,CAA3B,EAA4C,UAAC,CAAD,EAAI,CAAJ,EAAK;AAC7C,QAAA,GAAG,CAAC,GAAJ,CAAQ,CAAR;AACA,YAAI,CAAC,GAAG,GAAR,EAAa,GAAG,CAAC,eAAJ;AAChB,OAHD;;;AADJ,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAuC;cAA9B,C;AAKR;;AACD,WAAO,GAAG,CAAC,YAAJ,EAAP;AACH,GATD;AAUH;AAED,OAAM,SAAU,SAAV,CAAoB,OAApB,EAAsD;AACxD,MAAI,OAAO,CAAC,MAAR,KAAmB,CAAvB,EAA0B;AACtB,WAAO,IAAP;AACH,GAFD,MAEO,IAAI,OAAO,CAAC,MAAR,KAAmB,CAAvB,EAA0B;AAC7B,WAAO,OAAO,CAAC,CAAD,CAAd;AACH;;AACD,SAAO,UAAA,GAAA,EAAG;AACN,QAAM,UAAU,GAAyB,EAAzC;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC,UAAU,CAAC,IAAX,CAAgB,OAAO,CAAC,CAAD,CAAP,CAAW,GAAX,CAAhB;;AACzC,QAAI,UAAU,GAAG,CAAjB;AAAA,QAAoB,WAAW,GAAG,kBAAkB,CAAC,cAAnB,CAAkC,UAAU,CAAC,CAAD,CAA5C,CAAlC;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAAU,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AACxC,UAAM,GAAG,GAAG,kBAAkB,CAAC,cAAnB,CAAkC,UAAU,CAAC,CAAD,CAA5C,CAAZ;;AACA,UAAI,GAAG,GAAG,WAAV,EAAuB;AACnB,QAAA,UAAU,GAAG,CAAb;AACA,QAAA,WAAW,GAAG,GAAd;AACH;AACJ;;AAED,IAAA,GAAG,CAAC,eAAJ;AACA,QAAM,QAAQ,GAAG,OAAO,CAAY,UAAA,CAAA,EAAC;AAAI,aAAA,CAAC,CAAD,QAAA;AAAU,KAA3B,EAA6B,SAAS,CAAC,yBAAvC,CAAxB;AACA,IAAA,kBAAkB,CAAC,OAAnB,CAA2B,UAAU,CAAC,UAAD,CAArC,EAAmD,UAAA,CAAA,EAAC;AAAI,aAAA,QAAQ,CAAC,GAAT,CAAA,CAAA,CAAA;AAAe,KAAvE;AAEA,QAAM,GAAG,GAAG,kBAAkB,CAAC,aAAnB,CAAiC,GAAG,CAAC,cAArC,CAAZ;;AAEA,SAAK,IAAI,EAAE,GAAG,CAAd,EAAiB,EAAE,GAAG,UAAU,CAAC,MAAjC,EAAyC,EAAE,EAA3C,EAA+C;AAC3C,UAAI,EAAE,KAAK,UAAX,EAAuB;AACvB,MAAA,kBAAkB,CAAC,OAAnB,CAA2B,UAAU,CAAC,EAAD,CAArC,EAA2C,UAAA,CAAA,EAAC;AACxC,YAAI,QAAQ,CAAC,GAAT,CAAa,CAAb,CAAJ,EAAqB,GAAG,CAAC,GAAJ,CAAQ,CAAR;AACxB,OAFD;AAGA,MAAA,GAAG,CAAC,eAAJ;AACH;;AAED,WAAO,GAAG,CAAC,YAAJ,EAAP;AACH,GA3BD;AA4BH,C,CAED","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { StructureSelection } from '../selection';\r\nimport { none } from './generators';\r\nimport { HashSet } from '../../../../mol-data/generic';\r\nimport { Structure } from '../../structure';\r\nexport function merge(queries) {\r\n    if (queries.length === 0) {\r\n        return none;\r\n    }\r\n    else if (queries.length === 1) {\r\n        return queries[0];\r\n    }\r\n    return function (ctx) {\r\n        var ret = StructureSelection.UniqueBuilder(ctx.inputStructure);\r\n        var _loop_1 = function (i) {\r\n            StructureSelection.forEach(queries[i](ctx), function (s, j) {\r\n                ret.add(s);\r\n                if (i % 100)\r\n                    ctx.throwIfTimedOut();\r\n            });\r\n        };\r\n        for (var i = 0; i < queries.length; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return ret.getSelection();\r\n    };\r\n}\r\nexport function intersect(queries) {\r\n    if (queries.length === 0) {\r\n        return none;\r\n    }\r\n    else if (queries.length === 1) {\r\n        return queries[0];\r\n    }\r\n    return function (ctx) {\r\n        var selections = [];\r\n        for (var i = 0; i < queries.length; i++)\r\n            selections.push(queries[i](ctx));\r\n        var pivotIndex = 0, pivotLength = StructureSelection.structureCount(selections[0]);\r\n        for (var i = 1; i < selections.length; i++) {\r\n            var len = StructureSelection.structureCount(selections[i]);\r\n            if (len < pivotLength) {\r\n                pivotIndex = i;\r\n                pivotLength = len;\r\n            }\r\n        }\r\n        ctx.throwIfTimedOut();\r\n        var pivotSet = HashSet(function (s) { return s.hashCode; }, Structure.areUnitIdsAndIndicesEqual);\r\n        StructureSelection.forEach(selections[pivotIndex], function (s) { return pivotSet.add(s); });\r\n        var ret = StructureSelection.UniqueBuilder(ctx.inputStructure);\r\n        for (var pI = 0; pI < selections.length; pI++) {\r\n            if (pI === pivotIndex)\r\n                continue;\r\n            StructureSelection.forEach(selections[pI], function (s) {\r\n                if (pivotSet.has(s))\r\n                    ret.add(s);\r\n            });\r\n            ctx.throwIfTimedOut();\r\n        }\r\n        return ret.getSelection();\r\n    };\r\n}\r\n// TODO: distanceCluster\r\n//# sourceMappingURL=combinators.js.map"]},"metadata":{},"sourceType":"module"}