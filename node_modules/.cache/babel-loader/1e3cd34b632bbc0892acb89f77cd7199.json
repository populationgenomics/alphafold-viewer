{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { ValueCell } from '../../mol-util';\nimport { deepClone } from '../../mol-util/object';\nexport function getUniformType(gl, kind) {\n  switch (kind) {\n    case 'b':\n    case 'b[]':\n      return gl.BOOL;\n\n    case 'f':\n    case 'f[]':\n      return gl.FLOAT;\n\n    case 'i':\n    case 'i[]':\n      return gl.INT;\n\n    case 'v2':\n    case 'v2[]':\n      return gl.FLOAT_VEC2;\n\n    case 'v3':\n    case 'v3[]':\n      return gl.FLOAT_VEC3;\n\n    case 'v4':\n    case 'v4[]':\n      return gl.FLOAT_VEC4;\n\n    case 'm3':\n    case 'm3[]':\n      return gl.FLOAT_MAT3;\n\n    case 'm4':\n    case 'm4[]':\n      return gl.FLOAT_MAT4;\n\n    default:\n      console.error(\"unknown uniform kind '\" + kind + \"'\");\n  }\n}\n\nfunction uniform1f(gl, location, value) {\n  gl.uniform1f(location, value);\n}\n\nfunction uniform1fv(gl, location, value) {\n  gl.uniform1fv(location, value);\n}\n\nfunction uniform1i(gl, location, value) {\n  gl.uniform1i(location, value);\n}\n\nfunction uniform1iv(gl, location, value) {\n  gl.uniform1iv(location, value);\n}\n\nfunction uniform2fv(gl, location, value) {\n  gl.uniform2fv(location, value);\n}\n\nfunction uniform3fv(gl, location, value) {\n  gl.uniform3fv(location, value);\n}\n\nfunction uniform4fv(gl, location, value) {\n  gl.uniform4fv(location, value);\n}\n\nfunction uniformMatrix3fv(gl, location, value) {\n  gl.uniformMatrix3fv(location, false, value);\n}\n\nfunction uniformMatrix4fv(gl, location, value) {\n  gl.uniformMatrix4fv(location, false, value);\n}\n\nfunction getUniformSetter(kind) {\n  switch (kind) {\n    case 'f':\n      return uniform1f;\n\n    case 'f[]':\n      return uniform1fv;\n\n    case 'i':\n    case 't':\n    case 'b':\n      return uniform1i;\n\n    case 'i[]':\n    case 't[]':\n    case 'b[]':\n      return uniform1iv;\n\n    case 'v2':\n    case 'v2[]':\n      return uniform2fv;\n\n    case 'v3':\n    case 'v3[]':\n      return uniform3fv;\n\n    case 'v4':\n    case 'v4[]':\n      return uniform4fv;\n\n    case 'm3':\n    case 'm3[]':\n      return uniformMatrix3fv;\n\n    case 'm4':\n    case 'm4[]':\n      return uniformMatrix4fv;\n  }\n}\n\nexport function getUniformSetters(schema) {\n  var setters = {};\n  Object.keys(schema).forEach(function (k) {\n    var spec = schema[k];\n\n    if (spec.type === 'uniform') {\n      setters[k] = getUniformSetter(spec.kind);\n    } else if (spec.type === 'texture') {\n      setters[k] = getUniformSetter('t');\n    }\n  });\n  return setters;\n}\nexport function getUniformGlslType(kind) {\n  switch (kind) {\n    case 'f':\n      return 'float';\n\n    case 'i':\n      return 'int';\n\n    case 't':\n      return 'sampler2D';\n\n    case 'b':\n      return 'bool';\n\n    case 'v2':\n      return 'vec2';\n\n    case 'v3':\n      return 'vec3';\n\n    case 'v4':\n      return 'vec4';\n\n    case 'm3':\n      return 'mat3';\n\n    case 'm4':\n      return 'mat4';\n  }\n\n  throw new Error(kind + \" has no primitive GLSL type.\");\n}\nexport function isUniformValueScalar(kind) {\n  switch (kind) {\n    case 'f':\n    case 'i':\n    case 'b':\n      return true;\n\n    default:\n      return false;\n  }\n}\nexport function cloneUniformValues(uniformValues) {\n  var clonedValues = {};\n  Object.keys(uniformValues).forEach(function (k) {\n    clonedValues[k] = ValueCell.create(deepClone(uniformValues[k].ref.value));\n  });\n  return clonedValues;\n}","map":{"version":3,"sources":["../../../src/mol-gl/webgl/uniform.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { ValueCell } from '../../mol-util';\r\nimport { deepClone } from '../../mol-util/object';\r\nexport function getUniformType(gl, kind) {\r\n    switch (kind) {\r\n        case 'b':\r\n        case 'b[]': return gl.BOOL;\r\n        case 'f':\r\n        case 'f[]': return gl.FLOAT;\r\n        case 'i':\r\n        case 'i[]': return gl.INT;\r\n        case 'v2':\r\n        case 'v2[]': return gl.FLOAT_VEC2;\r\n        case 'v3':\r\n        case 'v3[]': return gl.FLOAT_VEC3;\r\n        case 'v4':\r\n        case 'v4[]': return gl.FLOAT_VEC4;\r\n        case 'm3':\r\n        case 'm3[]': return gl.FLOAT_MAT3;\r\n        case 'm4':\r\n        case 'm4[]': return gl.FLOAT_MAT4;\r\n        default: console.error(\"unknown uniform kind '\" + kind + \"'\");\r\n    }\r\n}\r\nfunction uniform1f(gl, location, value) { gl.uniform1f(location, value); }\r\nfunction uniform1fv(gl, location, value) { gl.uniform1fv(location, value); }\r\nfunction uniform1i(gl, location, value) { gl.uniform1i(location, value); }\r\nfunction uniform1iv(gl, location, value) { gl.uniform1iv(location, value); }\r\nfunction uniform2fv(gl, location, value) { gl.uniform2fv(location, value); }\r\nfunction uniform3fv(gl, location, value) { gl.uniform3fv(location, value); }\r\nfunction uniform4fv(gl, location, value) { gl.uniform4fv(location, value); }\r\nfunction uniformMatrix3fv(gl, location, value) { gl.uniformMatrix3fv(location, false, value); }\r\nfunction uniformMatrix4fv(gl, location, value) { gl.uniformMatrix4fv(location, false, value); }\r\nfunction getUniformSetter(kind) {\r\n    switch (kind) {\r\n        case 'f': return uniform1f;\r\n        case 'f[]': return uniform1fv;\r\n        case 'i':\r\n        case 't':\r\n        case 'b': return uniform1i;\r\n        case 'i[]':\r\n        case 't[]':\r\n        case 'b[]': return uniform1iv;\r\n        case 'v2':\r\n        case 'v2[]': return uniform2fv;\r\n        case 'v3':\r\n        case 'v3[]': return uniform3fv;\r\n        case 'v4':\r\n        case 'v4[]': return uniform4fv;\r\n        case 'm3':\r\n        case 'm3[]': return uniformMatrix3fv;\r\n        case 'm4':\r\n        case 'm4[]': return uniformMatrix4fv;\r\n    }\r\n}\r\nexport function getUniformSetters(schema) {\r\n    var setters = {};\r\n    Object.keys(schema).forEach(function (k) {\r\n        var spec = schema[k];\r\n        if (spec.type === 'uniform') {\r\n            setters[k] = getUniformSetter(spec.kind);\r\n        }\r\n        else if (spec.type === 'texture') {\r\n            setters[k] = getUniformSetter('t');\r\n        }\r\n    });\r\n    return setters;\r\n}\r\nexport function getUniformGlslType(kind) {\r\n    switch (kind) {\r\n        case 'f': return 'float';\r\n        case 'i': return 'int';\r\n        case 't': return 'sampler2D';\r\n        case 'b': return 'bool';\r\n        case 'v2': return 'vec2';\r\n        case 'v3': return 'vec3';\r\n        case 'v4': return 'vec4';\r\n        case 'm3': return 'mat3';\r\n        case 'm4': return 'mat4';\r\n    }\r\n    throw new Error(kind + \" has no primitive GLSL type.\");\r\n}\r\nexport function isUniformValueScalar(kind) {\r\n    switch (kind) {\r\n        case 'f':\r\n        case 'i':\r\n        case 'b':\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nexport function cloneUniformValues(uniformValues) {\r\n    var clonedValues = {};\r\n    Object.keys(uniformValues).forEach(function (k) {\r\n        clonedValues[k] = ValueCell.create(deepClone(uniformValues[k].ref.value));\r\n    });\r\n    return clonedValues;\r\n}\r\n//# sourceMappingURL=uniform.js.map"]},"metadata":{},"sourceType":"module"}