{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { ValueCell } from '../../mol-util/value-cell';\nimport { Vec2 } from '../../mol-math/linear-algebra';\nimport { createTextureImage } from '../../mol-gl/renderable/util';\nimport { Color } from '../../mol-util/color';\nexport function applyOverpaintColor(array, start, end, color) {\n  for (var i = start; i < end; ++i) {\n    Color.toArray(color, array, i * 4);\n    array[i * 4 + 3] = 255;\n  }\n\n  return true;\n}\nexport function clearOverpaint(array, start, end) {\n  array.fill(0, start * 4, end * 4);\n  return true;\n}\nexport function createOverpaint(count, overpaintData) {\n  var overpaint = createTextureImage(Math.max(1, count), 4, Uint8Array, overpaintData && overpaintData.tOverpaint.ref.value.array);\n\n  if (overpaintData) {\n    ValueCell.update(overpaintData.tOverpaint, overpaint);\n    ValueCell.update(overpaintData.uOverpaintTexDim, Vec2.create(overpaint.width, overpaint.height));\n    ValueCell.updateIfChanged(overpaintData.dOverpaint, count > 0);\n    return overpaintData;\n  } else {\n    return {\n      tOverpaint: ValueCell.create(overpaint),\n      uOverpaintTexDim: ValueCell.create(Vec2.create(overpaint.width, overpaint.height)),\n      dOverpaint: ValueCell.create(count > 0)\n    };\n  }\n}\nvar emptyOverpaintTexture = {\n  array: new Uint8Array(4),\n  width: 1,\n  height: 1\n};\nexport function createEmptyOverpaint(overpaintData) {\n  if (overpaintData) {\n    ValueCell.update(overpaintData.tOverpaint, emptyOverpaintTexture);\n    ValueCell.update(overpaintData.uOverpaintTexDim, Vec2.create(1, 1));\n    return overpaintData;\n  } else {\n    return {\n      tOverpaint: ValueCell.create(emptyOverpaintTexture),\n      uOverpaintTexDim: ValueCell.create(Vec2.create(1, 1)),\n      dOverpaint: ValueCell.create(false)\n    };\n  }\n}","map":{"version":3,"sources":["../../../src/mol-geo/geometry/overpaint-data.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,SAAS,SAAT,QAA0B,2BAA1B;AACA,SAAS,IAAT,QAAqB,+BAArB;AACA,SAAuB,kBAAvB,QAAiD,8BAAjD;AACA,SAAS,KAAT,QAAsB,sBAAtB;AAQA,OAAM,SAAU,mBAAV,CAA8B,KAA9B,EAAiD,KAAjD,EAAgE,GAAhE,EAA6E,KAA7E,EAAyF;AAC3F,OAAK,IAAI,CAAC,GAAG,KAAb,EAAoB,CAAC,GAAG,GAAxB,EAA6B,EAAE,CAA/B,EAAkC;AAC9B,IAAA,KAAK,CAAC,OAAN,CAAc,KAAd,EAAqB,KAArB,EAA4B,CAAC,GAAG,CAAhC;AACA,IAAA,KAAK,CAAC,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAL,GAAmB,GAAnB;AACH;;AACD,SAAO,IAAP;AACH;AAED,OAAM,SAAU,cAAV,CAAyB,KAAzB,EAA4C,KAA5C,EAA2D,GAA3D,EAAsE;AACxE,EAAA,KAAK,CAAC,IAAN,CAAW,CAAX,EAAc,KAAK,GAAG,CAAtB,EAAyB,GAAG,GAAG,CAA/B;AACA,SAAO,IAAP;AACH;AAED,OAAM,SAAU,eAAV,CAA0B,KAA1B,EAAyC,aAAzC,EAAsE;AACxE,MAAM,SAAS,GAAG,kBAAkB,CAAC,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,KAAZ,CAAD,EAAqB,CAArB,EAAwB,UAAxB,EAAoC,aAAa,IAAI,aAAa,CAAC,UAAd,CAAyB,GAAzB,CAA6B,KAA7B,CAAmC,KAAxF,CAApC;;AACA,MAAI,aAAJ,EAAmB;AACf,IAAA,SAAS,CAAC,MAAV,CAAiB,aAAa,CAAC,UAA/B,EAA2C,SAA3C;AACA,IAAA,SAAS,CAAC,MAAV,CAAiB,aAAa,CAAC,gBAA/B,EAAiD,IAAI,CAAC,MAAL,CAAY,SAAS,CAAC,KAAtB,EAA6B,SAAS,CAAC,MAAvC,CAAjD;AACA,IAAA,SAAS,CAAC,eAAV,CAA0B,aAAa,CAAC,UAAxC,EAAoD,KAAK,GAAG,CAA5D;AACA,WAAO,aAAP;AACH,GALD,MAKO;AACH,WAAO;AACH,MAAA,UAAU,EAAE,SAAS,CAAC,MAAV,CAAiB,SAAjB,CADT;AAEH,MAAA,gBAAgB,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,MAAL,CAAY,SAAS,CAAC,KAAtB,EAA6B,SAAS,CAAC,MAAvC,CAAjB,CAFf;AAGH,MAAA,UAAU,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAK,GAAG,CAAzB;AAHT,KAAP;AAKH;AACJ;AAED,IAAM,qBAAqB,GAAG;AAAE,EAAA,KAAK,EAAE,IAAI,UAAJ,CAAe,CAAf,CAAT;AAA4B,EAAA,KAAK,EAAE,CAAnC;AAAsC,EAAA,MAAM,EAAE;AAA9C,CAA9B;AACA,OAAM,SAAU,oBAAV,CAA+B,aAA/B,EAA4D;AAC9D,MAAI,aAAJ,EAAmB;AACf,IAAA,SAAS,CAAC,MAAV,CAAiB,aAAa,CAAC,UAA/B,EAA2C,qBAA3C;AACA,IAAA,SAAS,CAAC,MAAV,CAAiB,aAAa,CAAC,gBAA/B,EAAiD,IAAI,CAAC,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAjD;AACA,WAAO,aAAP;AACH,GAJD,MAIO;AACH,WAAO;AACH,MAAA,UAAU,EAAE,SAAS,CAAC,MAAV,CAAiB,qBAAjB,CADT;AAEH,MAAA,gBAAgB,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAjB,CAFf;AAGH,MAAA,UAAU,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAjB;AAHT,KAAP;AAKH;AACJ","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { ValueCell } from '../../mol-util/value-cell';\r\nimport { Vec2 } from '../../mol-math/linear-algebra';\r\nimport { createTextureImage } from '../../mol-gl/renderable/util';\r\nimport { Color } from '../../mol-util/color';\r\nexport function applyOverpaintColor(array, start, end, color) {\r\n    for (var i = start; i < end; ++i) {\r\n        Color.toArray(color, array, i * 4);\r\n        array[i * 4 + 3] = 255;\r\n    }\r\n    return true;\r\n}\r\nexport function clearOverpaint(array, start, end) {\r\n    array.fill(0, start * 4, end * 4);\r\n    return true;\r\n}\r\nexport function createOverpaint(count, overpaintData) {\r\n    var overpaint = createTextureImage(Math.max(1, count), 4, Uint8Array, overpaintData && overpaintData.tOverpaint.ref.value.array);\r\n    if (overpaintData) {\r\n        ValueCell.update(overpaintData.tOverpaint, overpaint);\r\n        ValueCell.update(overpaintData.uOverpaintTexDim, Vec2.create(overpaint.width, overpaint.height));\r\n        ValueCell.updateIfChanged(overpaintData.dOverpaint, count > 0);\r\n        return overpaintData;\r\n    }\r\n    else {\r\n        return {\r\n            tOverpaint: ValueCell.create(overpaint),\r\n            uOverpaintTexDim: ValueCell.create(Vec2.create(overpaint.width, overpaint.height)),\r\n            dOverpaint: ValueCell.create(count > 0),\r\n        };\r\n    }\r\n}\r\nvar emptyOverpaintTexture = { array: new Uint8Array(4), width: 1, height: 1 };\r\nexport function createEmptyOverpaint(overpaintData) {\r\n    if (overpaintData) {\r\n        ValueCell.update(overpaintData.tOverpaint, emptyOverpaintTexture);\r\n        ValueCell.update(overpaintData.uOverpaintTexDim, Vec2.create(1, 1));\r\n        return overpaintData;\r\n    }\r\n    else {\r\n        return {\r\n            tOverpaint: ValueCell.create(emptyOverpaintTexture),\r\n            uOverpaintTexDim: ValueCell.create(Vec2.create(1, 1)),\r\n            dOverpaint: ValueCell.create(false),\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=overpaint-data.js.map"]},"metadata":{},"sourceType":"module"}