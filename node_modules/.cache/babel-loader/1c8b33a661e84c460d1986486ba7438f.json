{"ast":null,"code":"/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __awaiter, __generator } from \"tslib\";\nimport { Download, ReadFile, DownloadBlob, RawData } from '../transforms/data';\nimport { getFileInfo } from '../../mol-util/file-info';\n\nvar DataBuilder =\n/** @class */\nfunction () {\n  function DataBuilder(plugin) {\n    this.plugin = plugin;\n  }\n\n  Object.defineProperty(DataBuilder.prototype, \"dataState\", {\n    get: function () {\n      return this.plugin.state.data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  DataBuilder.prototype.rawData = function (params, options) {\n    var data = this.dataState.build().toRoot().apply(RawData, params, options);\n    return data.commit({\n      revertOnError: true\n    });\n  };\n\n  DataBuilder.prototype.download = function (params, options) {\n    var data = this.dataState.build().toRoot().apply(Download, params, options);\n    return data.commit({\n      revertOnError: true\n    });\n  };\n\n  DataBuilder.prototype.downloadBlob = function (params, options) {\n    var data = this.dataState.build().toRoot().apply(DownloadBlob, params, options);\n    return data.commit({\n      revertOnError: true\n    });\n  };\n\n  DataBuilder.prototype.readFile = function (params, options) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var data, fileInfo;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.dataState.build().toRoot().apply(ReadFile, params, options).commit({\n              revertOnError: true\n            })];\n\n          case 1:\n            data = _b.sent();\n            fileInfo = getFileInfo(((_a = params.file) === null || _a === void 0 ? void 0 : _a.file) || '');\n            return [2\n            /*return*/\n            , {\n              data: data,\n              fileInfo: fileInfo\n            }];\n        }\n      });\n    });\n  };\n\n  return DataBuilder;\n}();\n\nexport { DataBuilder };","map":{"version":3,"sources":["../../../src/mol-plugin-state/builder/data.ts"],"names":[],"mappings":"AAAA;;;;AAIG;;AAIH,SAAS,QAAT,EAAmB,QAAnB,EAA6B,YAA7B,EAA2C,OAA3C,QAA0D,oBAA1D;AACA,SAAS,WAAT,QAA4B,0BAA5B;;AAEA,IAAA,WAAA;AAAA;AAAA,YAAA;AA0BI,WAAA,WAAA,CAAmB,MAAnB,EAAwC;AAArB,SAAA,MAAA,GAAA,MAAA;AAClB;;AA1BD,EAAA,MAAA,CAAA,cAAA,CAAY,WAAA,CAAA,SAAZ,EAAY,WAAZ,EAAqB;SAArB,YAAA;AACI,aAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAzB;AACH,KAFoB;qBAAA;;AAAA,GAArB;;AAIA,EAAA,WAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,MAAR,EAAkD,OAAlD,EAA2F;AACvF,QAAM,IAAI,GAAG,KAAK,SAAL,CAAe,KAAf,GAAuB,MAAvB,GAAgC,KAAhC,CAAsC,OAAtC,EAA+C,MAA/C,EAAuD,OAAvD,CAAb;AACA,WAAO,IAAI,CAAC,MAAL,CAAY;AAAE,MAAA,aAAa,EAAE;AAAjB,KAAZ,CAAP;AACH,GAHD;;AAKA,EAAA,WAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,MAAT,EAAoD,OAApD,EAA6F;AACzF,QAAM,IAAI,GAAG,KAAK,SAAL,CAAe,KAAf,GAAuB,MAAvB,GAAgC,KAAhC,CAAsC,QAAtC,EAAgD,MAAhD,EAAwD,OAAxD,CAAb;AACA,WAAO,IAAI,CAAC,MAAL,CAAY;AAAE,MAAA,aAAa,EAAE;AAAjB,KAAZ,CAAP;AACH,GAHD;;AAKA,EAAA,WAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,MAAb,EAA4D,OAA5D,EAAqG;AACjG,QAAM,IAAI,GAAG,KAAK,SAAL,CAAe,KAAf,GAAuB,MAAvB,GAAgC,KAAhC,CAAsC,YAAtC,EAAoD,MAApD,EAA4D,OAA5D,CAAb;AACA,WAAO,IAAI,CAAC,MAAL,CAAY;AAAE,MAAA,aAAa,EAAE;AAAjB,KAAZ,CAAP;AACH,GAHD;;AAKM,EAAA,WAAA,CAAA,SAAA,CAAA,QAAA,GAAN,UAAe,MAAf,EAA0D,OAA1D,EAAmG;;;;;;;;AAClF,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,SAAL,CAAe,KAAf,GAAuB,MAAvB,GAAgC,KAAhC,CAAsC,QAAtC,EAAgD,MAAhD,EAAwD,OAAxD,EAAiE,MAAjE,CAAwE;AAAE,cAAA,aAAa,EAAE;AAAjB,aAAxE,CAAN,CAAA;;;AAAP,YAAA,IAAI,GAAG,EAAA,CAAA,IAAA,EAAP;AACA,YAAA,QAAQ,GAAG,WAAW,CAAC,CAAA,CAAA,EAAA,GAAA,MAAM,CAAC,IAAP,MAAW,IAAX,IAAW,EAAA,KAAA,KAAA,CAAX,GAAW,KAAA,CAAX,GAAW,EAAA,CAAE,IAAb,KAAqB,EAAtB,CAAtB;AACN,mBAAA,CAAA;AAAA;AAAA,cAAO;AAAE,cAAA,IAAI,EAAE,IAAR;AAAc,cAAA,QAAQ,EAAA;AAAtB,aAAP,CAAA;;;;AACH,GAJK;;AAQV,SAAA,WAAA;AAAC,CA5BD,EAAA","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { Download, ReadFile, DownloadBlob, RawData } from '../transforms/data';\r\nimport { getFileInfo } from '../../mol-util/file-info';\r\nvar DataBuilder = /** @class */ (function () {\r\n    function DataBuilder(plugin) {\r\n        this.plugin = plugin;\r\n    }\r\n    Object.defineProperty(DataBuilder.prototype, \"dataState\", {\r\n        get: function () {\r\n            return this.plugin.state.data;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    DataBuilder.prototype.rawData = function (params, options) {\r\n        var data = this.dataState.build().toRoot().apply(RawData, params, options);\r\n        return data.commit({ revertOnError: true });\r\n    };\r\n    DataBuilder.prototype.download = function (params, options) {\r\n        var data = this.dataState.build().toRoot().apply(Download, params, options);\r\n        return data.commit({ revertOnError: true });\r\n    };\r\n    DataBuilder.prototype.downloadBlob = function (params, options) {\r\n        var data = this.dataState.build().toRoot().apply(DownloadBlob, params, options);\r\n        return data.commit({ revertOnError: true });\r\n    };\r\n    DataBuilder.prototype.readFile = function (params, options) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var data, fileInfo;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.dataState.build().toRoot().apply(ReadFile, params, options).commit({ revertOnError: true })];\r\n                    case 1:\r\n                        data = _b.sent();\r\n                        fileInfo = getFileInfo(((_a = params.file) === null || _a === void 0 ? void 0 : _a.file) || '');\r\n                        return [2 /*return*/, { data: data, fileInfo: fileInfo }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return DataBuilder;\r\n}());\r\nexport { DataBuilder };\r\n//# sourceMappingURL=data.js.map"]},"metadata":{},"sourceType":"module"}