{"ast":null,"code":"/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { Structure, StructureSelection as Sel, QueryContext } from '../../mol-model/structure';\nimport { Script } from '../../mol-script/script';\nimport { compile } from '../../mol-script/runtime/query/compiler';\nexport { StructureQueryHelper };\nvar StructureQueryHelper;\n\n(function (StructureQueryHelper) {\n  function isUnchanged(entry, query, structure) {\n    if (entry.currentStructure !== structure) return false;\n\n    if (Script.is(query)) {\n      return !!entry.script && Script.areEqual(entry.script, query);\n    }\n\n    return entry.expression === query;\n  }\n\n  StructureQueryHelper.isUnchanged = isUnchanged;\n\n  function create(structure, query) {\n    var script = Script.is(query) ? query : void 0;\n    var expression = Script.is(query) ? Script.toExpression(query) : query;\n    var compiled = compile(expression);\n    return {\n      script: script,\n      expression: expression,\n      compiled: compiled,\n      originalStructure: structure,\n      currentStructure: structure\n    };\n  }\n\n  StructureQueryHelper.create = create;\n\n  function run(entry, structure) {\n    return entry.compiled(new QueryContext(structure));\n  }\n\n  StructureQueryHelper.run = run;\n\n  function createAndRun(structure, query) {\n    var entry = create(structure, query);\n    return {\n      entry: entry,\n      selection: run(entry, structure)\n    };\n  }\n\n  StructureQueryHelper.createAndRun = createAndRun;\n\n  function updateStructure(entry, structure) {\n    entry.currentStructure = structure;\n    return entry.compiled(new QueryContext(structure));\n  }\n\n  StructureQueryHelper.updateStructure = updateStructure;\n\n  function updateStructureObject(obj, selection, label) {\n    var s = Sel.unionStructure(selection);\n    obj.label = \"\" + (label || 'Selection');\n    obj.description = Structure.elementDescription(s);\n    obj.data = s;\n  }\n\n  StructureQueryHelper.updateStructureObject = updateStructureObject;\n})(StructureQueryHelper || (StructureQueryHelper = {}));","map":{"version":3,"sources":["../../../src/mol-plugin-state/helpers/structure-query.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAGH,SAAkB,SAAlB,EAA6B,kBAAkB,IAAI,GAAnD,EAAwD,YAAxD,QAA4E,2BAA5E;AACA,SAAS,MAAT,QAAuB,yBAAvB;AACA,SAAS,OAAT,QAAwB,yCAAxB;AAGA,SAAS,oBAAT;AACA,IAAU,oBAAV;;AAAA,CAAA,UAAU,oBAAV,EAA8B;AAS1B,WAAgB,WAAhB,CAA4B,KAA5B,EAA+C,KAA/C,EAA2E,SAA3E,EAA+F;AAC3F,QAAI,KAAK,CAAC,gBAAN,KAA2B,SAA/B,EAA0C,OAAO,KAAP;;AAC1C,QAAI,MAAM,CAAC,EAAP,CAAU,KAAV,CAAJ,EAAsB;AAClB,aAAO,CAAC,CAAC,KAAK,CAAC,MAAR,IAAkB,MAAM,CAAC,QAAP,CAAgB,KAAK,CAAC,MAAtB,EAA8B,KAA9B,CAAzB;AACH;;AACD,WAAO,KAAK,CAAC,UAAN,KAAqB,KAA5B;AACH;;AANe,EAAA,oBAAA,CAAA,WAAA,GAAW,WAAX;;AAQhB,WAAgB,MAAhB,CAAuB,SAAvB,EAA6C,KAA7C,EAAuE;AACnE,QAAM,MAAM,GAAG,MAAM,CAAC,EAAP,CAAU,KAAV,IAAmB,KAAnB,GAA2B,KAAK,CAA/C;AACA,QAAM,UAAU,GAAG,MAAM,CAAC,EAAP,CAAU,KAAV,IAAmB,MAAM,CAAC,YAAP,CAAoB,KAApB,CAAnB,GAAgD,KAAnE;AACA,QAAM,QAAQ,GAAG,OAAO,CAAM,UAAN,CAAxB;AAEA,WAAO;AAAE,MAAA,MAAM,EAAA,MAAR;AAAU,MAAA,UAAU,EAAA,UAApB;AAAsB,MAAA,QAAQ,EAAA,QAA9B;AAAgC,MAAA,iBAAiB,EAAE,SAAnD;AAA8D,MAAA,gBAAgB,EAAE;AAAhF,KAAP;AACH;;AANe,EAAA,oBAAA,CAAA,MAAA,GAAM,MAAN;;AAQhB,WAAgB,GAAhB,CAAoB,KAApB,EAAuC,SAAvC,EAA2D;AACvD,WAAO,KAAK,CAAC,QAAN,CAAe,IAAI,YAAJ,CAAiB,SAAjB,CAAf,CAAP;AACH;;AAFe,EAAA,oBAAA,CAAA,GAAA,GAAG,GAAH;;AAIhB,WAAgB,YAAhB,CAA6B,SAA7B,EAAmD,KAAnD,EAA6E;AACzE,QAAM,KAAK,GAAG,MAAM,CAAC,SAAD,EAAY,KAAZ,CAApB;AACA,WAAO;AAAE,MAAA,KAAK,EAAA,KAAP;AAAS,MAAA,SAAS,EAAE,GAAG,CAAC,KAAD,EAAQ,SAAR;AAAvB,KAAP;AACH;;AAHe,EAAA,oBAAA,CAAA,YAAA,GAAY,YAAZ;;AAKhB,WAAgB,eAAhB,CAAgC,KAAhC,EAAmD,SAAnD,EAAuE;AACnE,IAAA,KAAK,CAAC,gBAAN,GAAyB,SAAzB;AACA,WAAO,KAAK,CAAC,QAAN,CAAe,IAAI,YAAJ,CAAiB,SAAjB,CAAf,CAAP;AACH;;AAHe,EAAA,oBAAA,CAAA,eAAA,GAAe,eAAf;;AAKhB,WAAgB,qBAAhB,CAAsC,GAAtC,EAAkE,SAAlE,EAAkF,KAAlF,EAAgG;AAC5F,QAAM,CAAC,GAAG,GAAG,CAAC,cAAJ,CAAmB,SAAnB,CAAV;AACA,IAAA,GAAG,CAAC,KAAJ,GAAY,MAAG,KAAK,IAAI,WAAZ,CAAZ;AACA,IAAA,GAAG,CAAC,WAAJ,GAAkB,SAAS,CAAC,kBAAV,CAA6B,CAA7B,CAAlB;AACA,IAAA,GAAG,CAAC,IAAJ,GAAW,CAAX;AACH;;AALe,EAAA,oBAAA,CAAA,qBAAA,GAAqB,qBAArB;AAMnB,CA7CD,EAAU,oBAAoB,KAApB,oBAAoB,GAAA,EAAA,CAA9B","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { Structure, StructureSelection as Sel, QueryContext } from '../../mol-model/structure';\r\nimport { Script } from '../../mol-script/script';\r\nimport { compile } from '../../mol-script/runtime/query/compiler';\r\nexport { StructureQueryHelper };\r\nvar StructureQueryHelper;\r\n(function (StructureQueryHelper) {\r\n    function isUnchanged(entry, query, structure) {\r\n        if (entry.currentStructure !== structure)\r\n            return false;\r\n        if (Script.is(query)) {\r\n            return !!entry.script && Script.areEqual(entry.script, query);\r\n        }\r\n        return entry.expression === query;\r\n    }\r\n    StructureQueryHelper.isUnchanged = isUnchanged;\r\n    function create(structure, query) {\r\n        var script = Script.is(query) ? query : void 0;\r\n        var expression = Script.is(query) ? Script.toExpression(query) : query;\r\n        var compiled = compile(expression);\r\n        return { script: script, expression: expression, compiled: compiled, originalStructure: structure, currentStructure: structure };\r\n    }\r\n    StructureQueryHelper.create = create;\r\n    function run(entry, structure) {\r\n        return entry.compiled(new QueryContext(structure));\r\n    }\r\n    StructureQueryHelper.run = run;\r\n    function createAndRun(structure, query) {\r\n        var entry = create(structure, query);\r\n        return { entry: entry, selection: run(entry, structure) };\r\n    }\r\n    StructureQueryHelper.createAndRun = createAndRun;\r\n    function updateStructure(entry, structure) {\r\n        entry.currentStructure = structure;\r\n        return entry.compiled(new QueryContext(structure));\r\n    }\r\n    StructureQueryHelper.updateStructure = updateStructure;\r\n    function updateStructureObject(obj, selection, label) {\r\n        var s = Sel.unionStructure(selection);\r\n        obj.label = \"\" + (label || 'Selection');\r\n        obj.description = Structure.elementDescription(s);\r\n        obj.data = s;\r\n    }\r\n    StructureQueryHelper.updateStructureObject = updateStructureObject;\r\n})(StructureQueryHelper || (StructureQueryHelper = {}));\r\n//# sourceMappingURL=structure-query.js.map"]},"metadata":{},"sourceType":"module"}