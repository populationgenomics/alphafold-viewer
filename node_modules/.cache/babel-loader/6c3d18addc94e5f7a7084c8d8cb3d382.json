{"ast":null,"code":"/*\r\n * Copyright (c) 2018 Mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nvar Expression;\n\n(function (Expression) {\n  function Symbol(name) {\n    return {\n      name: name\n    };\n  }\n\n  Expression.Symbol = Symbol;\n\n  function Apply(head, args) {\n    return args ? {\n      head: head,\n      args: args\n    } : {\n      head: head\n    };\n  }\n\n  Expression.Apply = Apply;\n\n  function isArgumentsArray(e) {\n    return !!e && Array.isArray(e);\n  }\n\n  Expression.isArgumentsArray = isArgumentsArray;\n\n  function isArgumentsMap(e) {\n    return !!e && !Array.isArray(e);\n  }\n\n  Expression.isArgumentsMap = isArgumentsMap;\n\n  function isLiteral(e) {\n    return !isApply(e) && !isSymbol(e);\n  }\n\n  Expression.isLiteral = isLiteral;\n\n  function isApply(e) {\n    return !!e && !!e.head && typeof e === 'object';\n  }\n\n  Expression.isApply = isApply;\n\n  function isSymbol(e) {\n    return !!e && typeof e.name === 'string';\n  }\n\n  Expression.isSymbol = isSymbol;\n})(Expression || (Expression = {}));\n\nexport { Expression };","map":{"version":3,"sources":["../../../src/mol-script/language/expression.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAOH,IAAU,UAAV;;AAAA,CAAA,UAAU,UAAV,EAAoB;AAMhB,WAAgB,MAAhB,CAAuB,IAAvB,EAAmC;AAAuB,WAAO;AAAE,MAAA,IAAI,EAAA;AAAN,KAAP;AAAkB;;AAA5D,EAAA,UAAA,CAAA,MAAA,GAAM,MAAN;;AAChB,WAAgB,KAAhB,CAAsB,IAAtB,EAAwC,IAAxC,EAAwD;AAAW,WAAO,IAAI,GAAG;AAAE,MAAA,IAAI,EAAA,IAAN;AAAQ,MAAA,IAAI,EAAA;AAAZ,KAAH,GAAoB;AAAE,MAAA,IAAI,EAAA;AAAN,KAA/B;AAA0C;;AAA7F,EAAA,UAAA,CAAA,KAAA,GAAK,KAAL;;AAEhB,WAAgB,gBAAhB,CAAiC,CAAjC,EAA8C;AAAuB,WAAO,CAAC,CAAC,CAAF,IAAO,KAAK,CAAC,OAAN,CAAc,CAAd,CAAd;AAAiC;;AAAtF,EAAA,UAAA,CAAA,gBAAA,GAAgB,gBAAhB;;AAChB,WAAgB,cAAhB,CAA+B,CAA/B,EAA4C;AAAyC,WAAO,CAAC,CAAC,CAAF,IAAO,CAAC,KAAK,CAAC,OAAN,CAAc,CAAd,CAAf;AAAkC;;AAAvG,EAAA,UAAA,CAAA,cAAA,GAAc,cAAd;;AAChB,WAAgB,SAAhB,CAA0B,CAA1B,EAAuC;AAA6B,WAAO,CAAC,OAAO,CAAC,CAAD,CAAR,IAAe,CAAC,QAAQ,CAAC,CAAD,CAA/B;AAAqC;;AAAzF,EAAA,UAAA,CAAA,SAAA,GAAS,SAAT;;AAChB,WAAgB,OAAhB,CAAwB,CAAxB,EAAqC;AAA2B,WAAO,CAAC,CAAC,CAAF,IAAO,CAAC,CAAE,CAAsB,CAAC,IAAjC,IAAyC,OAAO,CAAP,KAAa,QAA7D;AAAwE;;AAAxH,EAAA,UAAA,CAAA,OAAA,GAAO,OAAP;;AAChB,WAAgB,QAAhB,CAAyB,CAAzB,EAAsC;AAA4B,WAAO,CAAC,CAAC,CAAF,IAAO,OAAQ,CAAS,CAAC,IAAlB,KAA2B,QAAzC;AAAoD;;AAAtG,EAAA,UAAA,CAAA,QAAA,GAAQ,QAAR;AACnB,CAdD,EAAU,UAAU,KAAV,UAAU,GAAA,EAAA,CAApB;;AAgBA,SAAS,UAAT","sourceRoot":"","sourcesContent":["/*\r\n * Copyright (c) 2018 Mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nvar Expression;\r\n(function (Expression) {\r\n    function Symbol(name) { return { name: name }; }\r\n    Expression.Symbol = Symbol;\r\n    function Apply(head, args) { return args ? { head: head, args: args } : { head: head }; }\r\n    Expression.Apply = Apply;\r\n    function isArgumentsArray(e) { return !!e && Array.isArray(e); }\r\n    Expression.isArgumentsArray = isArgumentsArray;\r\n    function isArgumentsMap(e) { return !!e && !Array.isArray(e); }\r\n    Expression.isArgumentsMap = isArgumentsMap;\r\n    function isLiteral(e) { return !isApply(e) && !isSymbol(e); }\r\n    Expression.isLiteral = isLiteral;\r\n    function isApply(e) { return !!e && !!e.head && typeof e === 'object'; }\r\n    Expression.isApply = isApply;\r\n    function isSymbol(e) { return !!e && typeof e.name === 'string'; }\r\n    Expression.isSymbol = isSymbol;\r\n})(Expression || (Expression = {}));\r\nexport { Expression };\r\n//# sourceMappingURL=expression.js.map"]},"metadata":{},"sourceType":"module"}