{"ast":null,"code":"/**\r\n * Copyright (c) 2017 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { StructureSelection } from './query/selection';\nimport { StructureQuery } from './query/query';\nexport * from './query/context';\nimport * as generators from './query/queries/generators';\nimport * as modifiers from './query/queries/modifiers';\nimport * as filters from './query/queries/filters';\nimport * as combinators from './query/queries/combinators';\nimport * as internal from './query/queries/internal';\nimport { Predicates as pred } from './query/predicates';\nexport var Queries = {\n  generators: generators,\n  filters: filters,\n  modifiers: modifiers,\n  combinators: combinators,\n  pred: pred,\n  internal: internal\n};\nexport { StructureSelection, StructureQuery };","map":{"version":3,"sources":["../../../src/mol-model/structure/query.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,SAAS,kBAAT,QAAmC,mBAAnC;AACA,SAAS,cAAT,QAA+B,eAA/B;AACA,cAAc,iBAAd;AACA,OAAO,KAAK,UAAZ,MAA4B,4BAA5B;AACA,OAAO,KAAK,SAAZ,MAA2B,2BAA3B;AACA,OAAO,KAAK,OAAZ,MAAyB,yBAAzB;AACA,OAAO,KAAK,WAAZ,MAA6B,6BAA7B;AACA,OAAO,KAAK,QAAZ,MAA0B,0BAA1B;AACA,SAAS,UAAU,IAAI,IAAvB,QAAmC,oBAAnC;AAEA,OAAO,IAAM,OAAO,GAAG;AACnB,EAAA,UAAU,EAAA,UADS;AAEnB,EAAA,OAAO,EAAA,OAFY;AAGnB,EAAA,SAAS,EAAA,SAHU;AAInB,EAAA,WAAW,EAAA,WAJQ;AAKnB,EAAA,IAAI,EAAA,IALe;AAMnB,EAAA,QAAQ,EAAA;AANW,CAAhB;AASP,SAAS,kBAAT,EAA6B,cAA7B","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2017 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { StructureSelection } from './query/selection';\r\nimport { StructureQuery } from './query/query';\r\nexport * from './query/context';\r\nimport * as generators from './query/queries/generators';\r\nimport * as modifiers from './query/queries/modifiers';\r\nimport * as filters from './query/queries/filters';\r\nimport * as combinators from './query/queries/combinators';\r\nimport * as internal from './query/queries/internal';\r\nimport { Predicates as pred } from './query/predicates';\r\nexport var Queries = {\r\n    generators: generators,\r\n    filters: filters,\r\n    modifiers: modifiers,\r\n    combinators: combinators,\r\n    pred: pred,\r\n    internal: internal\r\n};\r\nexport { StructureSelection, StructureQuery };\r\n//# sourceMappingURL=query.js.map"]},"metadata":{},"sourceType":"module"}