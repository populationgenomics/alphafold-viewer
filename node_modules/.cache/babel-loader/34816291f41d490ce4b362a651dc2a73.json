{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { PluginCommands } from '../mol-plugin/commands';\nimport { PluginConfig } from '../mol-plugin/config';\nimport { PluginUIComponent } from './base';\nimport { ControlGroup, IconButton } from './controls/common';\nimport { AutorenewSvg, BuildOutlinedSvg, CameraOutlinedSvg, CloseSvg, FullscreenSvg, TuneSvg } from './controls/icons';\nimport { ToggleSelectionModeButton } from './structure/selection';\nimport { ViewportCanvas } from './viewport/canvas';\nimport { DownloadScreenshotControls } from './viewport/screenshot';\nimport { SimpleSettingsControl } from './viewport/simple-settings';\n\nvar ViewportControls =\n/** @class */\nfunction (_super) {\n  __extends(ViewportControls, _super);\n\n  function ViewportControls() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.allCollapsedState = {\n      isSettingsExpanded: false,\n      isScreenshotExpanded: false\n    };\n    _this.state = __assign({}, _this.allCollapsedState);\n\n    _this.resetCamera = function () {\n      PluginCommands.Camera.Reset(_this.plugin, {});\n    };\n\n    _this.toggleSettingsExpanded = _this.toggle('isSettingsExpanded');\n    _this.toggleScreenshotExpanded = _this.toggle('isScreenshotExpanded');\n\n    _this.toggleControls = function () {\n      PluginCommands.Layout.Update(_this.plugin, {\n        state: {\n          showControls: !_this.plugin.layout.state.showControls\n        }\n      });\n    };\n\n    _this.toggleExpanded = function () {\n      PluginCommands.Layout.Update(_this.plugin, {\n        state: {\n          isExpanded: !_this.plugin.layout.state.isExpanded\n        }\n      });\n    };\n\n    _this.setSettings = function (p) {\n      var _a;\n\n      PluginCommands.Canvas3D.SetSettings(_this.plugin, {\n        settings: (_a = {}, _a[p.name] = p.value, _a)\n      });\n    };\n\n    _this.setLayout = function (p) {\n      var _a;\n\n      PluginCommands.Layout.Update(_this.plugin, {\n        state: (_a = {}, _a[p.name] = p.value, _a)\n      });\n    };\n\n    _this.screenshot = function () {\n      var _a;\n\n      (_a = _this.plugin.helpers.viewportScreenshot) === null || _a === void 0 ? void 0 : _a.download();\n    };\n\n    _this.onMouseMove = function (e) {\n      // ignore mouse moves when no button is held\n      if (e.buttons === 0) e.stopPropagation();\n    };\n\n    return _this;\n  }\n\n  ViewportControls.prototype.toggle = function (panel) {\n    var _this = this;\n\n    return function (e) {\n      var _a;\n\n      _this.setState(__assign(__assign({}, _this.allCollapsedState), (_a = {}, _a[panel] = !_this.state[panel], _a)));\n\n      e === null || e === void 0 ? void 0 : e.currentTarget.blur();\n    };\n  };\n\n  ViewportControls.prototype.componentDidMount = function () {\n    var _this = this;\n\n    this.subscribe(this.plugin.events.canvas3d.settingsUpdated, function () {\n      return _this.forceUpdate();\n    });\n    this.subscribe(this.plugin.layout.events.updated, function () {\n      return _this.forceUpdate();\n    });\n  };\n\n  ViewportControls.prototype.icon = function (icon, onClick, title, isOn) {\n    if (isOn === void 0) {\n      isOn = true;\n    }\n\n    return _jsx(IconButton, {\n      svg: icon,\n      toggleState: isOn,\n      onClick: onClick,\n      title: title,\n      style: {\n        background: 'transparent'\n      }\n    }, void 0);\n  };\n\n  ViewportControls.prototype.render = function () {\n    return _jsxs(\"div\", __assign({\n      className: 'msp-viewport-controls',\n      onMouseMove: this.onMouseMove\n    }, {\n      children: [_jsxs(\"div\", __assign({\n        className: 'msp-viewport-controls-buttons'\n      }, {\n        children: [_jsxs(\"div\", {\n          children: [_jsx(\"div\", {\n            className: 'msp-semi-transparent-background'\n          }, void 0), this.icon(AutorenewSvg, this.resetCamera, 'Reset Camera')]\n        }, void 0), _jsxs(\"div\", {\n          children: [_jsx(\"div\", {\n            className: 'msp-semi-transparent-background'\n          }, void 0), this.icon(CameraOutlinedSvg, this.toggleScreenshotExpanded, 'Screenshot / State Snapshot', this.state.isScreenshotExpanded)]\n        }, void 0), _jsxs(\"div\", {\n          children: [_jsx(\"div\", {\n            className: 'msp-semi-transparent-background'\n          }, void 0), this.plugin.config.get(PluginConfig.Viewport.ShowControls) && this.icon(BuildOutlinedSvg, this.toggleControls, 'Toggle Controls Panel', this.plugin.layout.state.showControls), this.plugin.config.get(PluginConfig.Viewport.ShowExpand) && this.icon(FullscreenSvg, this.toggleExpanded, 'Toggle Expanded Viewport', this.plugin.layout.state.isExpanded), this.plugin.config.get(PluginConfig.Viewport.ShowSettings) && this.icon(TuneSvg, this.toggleSettingsExpanded, 'Settings / Controls Info', this.state.isSettingsExpanded)]\n        }, void 0), this.plugin.config.get(PluginConfig.Viewport.ShowSelectionMode) && _jsxs(\"div\", {\n          children: [_jsx(\"div\", {\n            className: 'msp-semi-transparent-background'\n          }, void 0), _jsx(ToggleSelectionModeButton, {}, void 0)]\n        }, void 0)]\n      }), void 0), this.state.isScreenshotExpanded && _jsx(\"div\", __assign({\n        className: 'msp-viewport-controls-panel'\n      }, {\n        children: _jsx(ControlGroup, __assign({\n          header: 'Screenshot / State',\n          title: 'Click to close.',\n          initialExpanded: true,\n          hideExpander: true,\n          hideOffset: true,\n          onHeaderClick: this.toggleScreenshotExpanded,\n          topRightIcon: CloseSvg,\n          noTopMargin: true,\n          childrenClassName: 'msp-viewport-controls-panel-controls'\n        }, {\n          children: _jsx(DownloadScreenshotControls, {\n            close: this.toggleScreenshotExpanded\n          }, void 0)\n        }), void 0)\n      }), void 0), this.state.isSettingsExpanded && _jsx(\"div\", __assign({\n        className: 'msp-viewport-controls-panel'\n      }, {\n        children: _jsx(ControlGroup, __assign({\n          header: 'Settings / Controls Info',\n          title: 'Click to close.',\n          initialExpanded: true,\n          hideExpander: true,\n          hideOffset: true,\n          onHeaderClick: this.toggleSettingsExpanded,\n          topRightIcon: CloseSvg,\n          noTopMargin: true,\n          childrenClassName: 'msp-viewport-controls-panel-controls'\n        }, {\n          children: _jsx(SimpleSettingsControl, {}, void 0)\n        }), void 0)\n      }), void 0)]\n    }), void 0);\n  };\n\n  return ViewportControls;\n}(PluginUIComponent);\n\nexport { ViewportControls };\nexport var Logo = function () {\n  return _jsx(\"a\", {\n    className: 'msp-logo',\n    href: 'https://molstar.org',\n    target: '_blank'\n  }, void 0);\n};\nexport var Viewport = function () {\n  return _jsx(ViewportCanvas, {\n    logo: Logo\n  }, void 0);\n};","map":{"version":3,"sources":["../../src/mol-plugin-ui/viewport.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { PluginCommands } from '../mol-plugin/commands';\r\nimport { PluginConfig } from '../mol-plugin/config';\r\nimport { PluginUIComponent } from './base';\r\nimport { ControlGroup, IconButton } from './controls/common';\r\nimport { AutorenewSvg, BuildOutlinedSvg, CameraOutlinedSvg, CloseSvg, FullscreenSvg, TuneSvg } from './controls/icons';\r\nimport { ToggleSelectionModeButton } from './structure/selection';\r\nimport { ViewportCanvas } from './viewport/canvas';\r\nimport { DownloadScreenshotControls } from './viewport/screenshot';\r\nimport { SimpleSettingsControl } from './viewport/simple-settings';\r\nvar ViewportControls = /** @class */ (function (_super) {\r\n    __extends(ViewportControls, _super);\r\n    function ViewportControls() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.allCollapsedState = {\r\n            isSettingsExpanded: false,\r\n            isScreenshotExpanded: false\r\n        };\r\n        _this.state = __assign({}, _this.allCollapsedState);\r\n        _this.resetCamera = function () {\r\n            PluginCommands.Camera.Reset(_this.plugin, {});\r\n        };\r\n        _this.toggleSettingsExpanded = _this.toggle('isSettingsExpanded');\r\n        _this.toggleScreenshotExpanded = _this.toggle('isScreenshotExpanded');\r\n        _this.toggleControls = function () {\r\n            PluginCommands.Layout.Update(_this.plugin, { state: { showControls: !_this.plugin.layout.state.showControls } });\r\n        };\r\n        _this.toggleExpanded = function () {\r\n            PluginCommands.Layout.Update(_this.plugin, { state: { isExpanded: !_this.plugin.layout.state.isExpanded } });\r\n        };\r\n        _this.setSettings = function (p) {\r\n            var _a;\r\n            PluginCommands.Canvas3D.SetSettings(_this.plugin, { settings: (_a = {}, _a[p.name] = p.value, _a) });\r\n        };\r\n        _this.setLayout = function (p) {\r\n            var _a;\r\n            PluginCommands.Layout.Update(_this.plugin, { state: (_a = {}, _a[p.name] = p.value, _a) });\r\n        };\r\n        _this.screenshot = function () {\r\n            var _a;\r\n            (_a = _this.plugin.helpers.viewportScreenshot) === null || _a === void 0 ? void 0 : _a.download();\r\n        };\r\n        _this.onMouseMove = function (e) {\r\n            // ignore mouse moves when no button is held\r\n            if (e.buttons === 0)\r\n                e.stopPropagation();\r\n        };\r\n        return _this;\r\n    }\r\n    ViewportControls.prototype.toggle = function (panel) {\r\n        var _this = this;\r\n        return function (e) {\r\n            var _a;\r\n            _this.setState(__assign(__assign({}, _this.allCollapsedState), (_a = {}, _a[panel] = !_this.state[panel], _a)));\r\n            e === null || e === void 0 ? void 0 : e.currentTarget.blur();\r\n        };\r\n    };\r\n    ViewportControls.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        this.subscribe(this.plugin.events.canvas3d.settingsUpdated, function () { return _this.forceUpdate(); });\r\n        this.subscribe(this.plugin.layout.events.updated, function () { return _this.forceUpdate(); });\r\n    };\r\n    ViewportControls.prototype.icon = function (icon, onClick, title, isOn) {\r\n        if (isOn === void 0) { isOn = true; }\r\n        return _jsx(IconButton, { svg: icon, toggleState: isOn, onClick: onClick, title: title, style: { background: 'transparent' } }, void 0);\r\n    };\r\n    ViewportControls.prototype.render = function () {\r\n        return _jsxs(\"div\", __assign({ className: 'msp-viewport-controls', onMouseMove: this.onMouseMove }, { children: [_jsxs(\"div\", __assign({ className: 'msp-viewport-controls-buttons' }, { children: [_jsxs(\"div\", { children: [_jsx(\"div\", { className: 'msp-semi-transparent-background' }, void 0), this.icon(AutorenewSvg, this.resetCamera, 'Reset Camera')] }, void 0), _jsxs(\"div\", { children: [_jsx(\"div\", { className: 'msp-semi-transparent-background' }, void 0), this.icon(CameraOutlinedSvg, this.toggleScreenshotExpanded, 'Screenshot / State Snapshot', this.state.isScreenshotExpanded)] }, void 0), _jsxs(\"div\", { children: [_jsx(\"div\", { className: 'msp-semi-transparent-background' }, void 0), this.plugin.config.get(PluginConfig.Viewport.ShowControls) && this.icon(BuildOutlinedSvg, this.toggleControls, 'Toggle Controls Panel', this.plugin.layout.state.showControls), this.plugin.config.get(PluginConfig.Viewport.ShowExpand) && this.icon(FullscreenSvg, this.toggleExpanded, 'Toggle Expanded Viewport', this.plugin.layout.state.isExpanded), this.plugin.config.get(PluginConfig.Viewport.ShowSettings) && this.icon(TuneSvg, this.toggleSettingsExpanded, 'Settings / Controls Info', this.state.isSettingsExpanded)] }, void 0), this.plugin.config.get(PluginConfig.Viewport.ShowSelectionMode) && _jsxs(\"div\", { children: [_jsx(\"div\", { className: 'msp-semi-transparent-background' }, void 0), _jsx(ToggleSelectionModeButton, {}, void 0)] }, void 0)] }), void 0), this.state.isScreenshotExpanded && _jsx(\"div\", __assign({ className: 'msp-viewport-controls-panel' }, { children: _jsx(ControlGroup, __assign({ header: 'Screenshot / State', title: 'Click to close.', initialExpanded: true, hideExpander: true, hideOffset: true, onHeaderClick: this.toggleScreenshotExpanded, topRightIcon: CloseSvg, noTopMargin: true, childrenClassName: 'msp-viewport-controls-panel-controls' }, { children: _jsx(DownloadScreenshotControls, { close: this.toggleScreenshotExpanded }, void 0) }), void 0) }), void 0), this.state.isSettingsExpanded && _jsx(\"div\", __assign({ className: 'msp-viewport-controls-panel' }, { children: _jsx(ControlGroup, __assign({ header: 'Settings / Controls Info', title: 'Click to close.', initialExpanded: true, hideExpander: true, hideOffset: true, onHeaderClick: this.toggleSettingsExpanded, topRightIcon: CloseSvg, noTopMargin: true, childrenClassName: 'msp-viewport-controls-panel-controls' }, { children: _jsx(SimpleSettingsControl, {}, void 0) }), void 0) }), void 0)] }), void 0);\r\n    };\r\n    return ViewportControls;\r\n}(PluginUIComponent));\r\nexport { ViewportControls };\r\nexport var Logo = function () {\r\n    return _jsx(\"a\", { className: 'msp-logo', href: 'https://molstar.org', target: '_blank' }, void 0);\r\n};\r\nexport var Viewport = function () { return _jsx(ViewportCanvas, { logo: Logo }, void 0); };\r\n//# sourceMappingURL=viewport.js.map"]},"metadata":{},"sourceType":"module"}