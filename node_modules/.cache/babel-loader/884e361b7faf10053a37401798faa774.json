{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Color } from '../mol-util/color';\nimport { CarbohydrateSymbolColorThemeProvider } from './color/carbohydrate-symbol';\nimport { UniformColorThemeProvider } from './color/uniform';\nimport { deepEqual } from '../mol-util';\nimport { ThemeRegistry } from './theme';\nimport { ChainIdColorThemeProvider } from './color/chain-id';\nimport { ElementIndexColorThemeProvider } from './color/element-index';\nimport { ElementSymbolColorThemeProvider } from './color/element-symbol';\nimport { MoleculeTypeColorThemeProvider } from './color/molecule-type';\nimport { PolymerIdColorThemeProvider } from './color/polymer-id';\nimport { PolymerIndexColorThemeProvider } from './color/polymer-index';\nimport { ResidueNameColorThemeProvider } from './color/residue-name';\nimport { SecondaryStructureColorThemeProvider } from './color/secondary-structure';\nimport { SequenceIdColorThemeProvider } from './color/sequence-id';\nimport { ShapeGroupColorThemeProvider } from './color/shape-group';\nimport { UnitIndexColorThemeProvider } from './color/unit-index';\nimport { UncertaintyColorThemeProvider } from './color/uncertainty';\nimport { EntitySourceColorThemeProvider } from './color/entity-source';\nimport { IllustrativeColorThemeProvider } from './color/illustrative';\nimport { HydrophobicityColorThemeProvider } from './color/hydrophobicity';\nimport { ModelIndexColorThemeProvider } from './color/model-index';\nimport { OccupancyColorThemeProvider } from './color/occupancy';\nimport { OperatorNameColorThemeProvider } from './color/operator-name';\nimport { OperatorHklColorThemeProvider } from './color/operator-hkl';\nimport { PartialChargeColorThemeProvider } from './color/partial-charge';\nimport { AtomIdColorThemeProvider } from './color/atom-id';\nimport { EntityIdColorThemeProvider } from './color/entity-id';\nexport { ColorTheme };\nvar ColorTheme;\n\n(function (ColorTheme) {\n  ColorTheme.PaletteScale = (1 << 24) - 1;\n\n  ColorTheme.EmptyFactory = function () {\n    return ColorTheme.Empty;\n  };\n\n  var EmptyColor = Color(0xCCCCCC);\n  ColorTheme.Empty = {\n    factory: ColorTheme.EmptyFactory,\n    granularity: 'uniform',\n    color: function () {\n      return EmptyColor;\n    },\n    props: {}\n  };\n\n  function areEqual(themeA, themeB) {\n    return themeA.contextHash === themeB.contextHash && themeA.factory === themeB.factory && deepEqual(themeA.props, themeB.props);\n  }\n\n  ColorTheme.areEqual = areEqual;\n  ColorTheme.EmptyProvider = {\n    name: '',\n    label: '',\n    category: '',\n    factory: ColorTheme.EmptyFactory,\n    getParams: function () {\n      return {};\n    },\n    defaultValues: {},\n    isApplicable: function () {\n      return true;\n    }\n  };\n\n  function createRegistry() {\n    return new ThemeRegistry(ColorTheme.BuiltIn, ColorTheme.EmptyProvider);\n  }\n\n  ColorTheme.createRegistry = createRegistry;\n  ColorTheme.BuiltIn = {\n    'atom-id': AtomIdColorThemeProvider,\n    'carbohydrate-symbol': CarbohydrateSymbolColorThemeProvider,\n    'chain-id': ChainIdColorThemeProvider,\n    'element-index': ElementIndexColorThemeProvider,\n    'element-symbol': ElementSymbolColorThemeProvider,\n    'entity-id': EntityIdColorThemeProvider,\n    'entity-source': EntitySourceColorThemeProvider,\n    'hydrophobicity': HydrophobicityColorThemeProvider,\n    'illustrative': IllustrativeColorThemeProvider,\n    'model-index': ModelIndexColorThemeProvider,\n    'molecule-type': MoleculeTypeColorThemeProvider,\n    'occupancy': OccupancyColorThemeProvider,\n    'operator-hkl': OperatorHklColorThemeProvider,\n    'operator-name': OperatorNameColorThemeProvider,\n    'partial-charge': PartialChargeColorThemeProvider,\n    'polymer-id': PolymerIdColorThemeProvider,\n    'polymer-index': PolymerIndexColorThemeProvider,\n    'residue-name': ResidueNameColorThemeProvider,\n    'secondary-structure': SecondaryStructureColorThemeProvider,\n    'sequence-id': SequenceIdColorThemeProvider,\n    'shape-group': ShapeGroupColorThemeProvider,\n    'uncertainty': UncertaintyColorThemeProvider,\n    'unit-index': UnitIndexColorThemeProvider,\n    'uniform': UniformColorThemeProvider\n  };\n})(ColorTheme || (ColorTheme = {}));\n\nexport function ColorThemeProvider(p) {\n  return p;\n}","map":{"version":3,"sources":["../../src/mol-theme/color.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,SAAS,KAAT,QAAsB,mBAAtB;AAGA,SAAS,oCAAT,QAAqD,6BAArD;AACA,SAAS,yBAAT,QAA0C,iBAA1C;AACA,SAAS,SAAT,QAA0B,aAA1B;AAEA,SAA2B,aAA3B,QAA+D,SAA/D;AACA,SAAS,yBAAT,QAA0C,kBAA1C;AACA,SAAS,8BAAT,QAA+C,uBAA/C;AACA,SAAS,+BAAT,QAAgD,wBAAhD;AACA,SAAS,8BAAT,QAA+C,uBAA/C;AACA,SAAS,2BAAT,QAA4C,oBAA5C;AACA,SAAS,8BAAT,QAA+C,uBAA/C;AACA,SAAS,6BAAT,QAA8C,sBAA9C;AACA,SAAS,oCAAT,QAAqD,6BAArD;AACA,SAAS,4BAAT,QAA6C,qBAA7C;AACA,SAAS,4BAAT,QAA6C,qBAA7C;AACA,SAAS,2BAAT,QAA4C,oBAA5C;AAEA,SAAS,6BAAT,QAA8C,qBAA9C;AACA,SAAS,8BAAT,QAA+C,uBAA/C;AACA,SAAS,8BAAT,QAA+C,sBAA/C;AACA,SAAS,gCAAT,QAAiD,wBAAjD;AACA,SAAS,4BAAT,QAA6C,qBAA7C;AACA,SAAS,2BAAT,QAA4C,mBAA5C;AACA,SAAS,8BAAT,QAA+C,uBAA/C;AACA,SAAS,6BAAT,QAA8C,sBAA9C;AACA,SAAS,+BAAT,QAAgD,wBAAhD;AACA,SAAS,wBAAT,QAAyC,iBAAzC;AACA,SAAS,0BAAT,QAA2C,mBAA3C;AAKA,SAAS,UAAT;AAgBA,IAAU,UAAV;;AAAA,CAAA,UAAU,UAAV,EAAoB;AAeH,EAAA,UAAA,CAAA,YAAA,GAAe,CAAC,KAAK,EAAN,IAAY,CAA3B;;AAIA,EAAA,UAAA,CAAA,YAAA,GAAe,YAAA;AAAM,WAAA,UAAA,CAAA,KAAA;AAAK,GAA1B;;AACb,MAAM,UAAU,GAAG,KAAK,CAAC,QAAD,CAAxB;AACa,EAAA,UAAA,CAAA,KAAA,GAAwB;AACjC,IAAA,OAAO,EAAE,UAAA,CAAA,YADwB;AAEjC,IAAA,WAAW,EAAE,SAFoB;AAGjC,IAAA,KAAK,EAAE,YAAA;AAAM,aAAA,UAAA;AAAU,KAHU;AAIjC,IAAA,KAAK,EAAE;AAJ0B,GAAxB;;AAOb,WAAgB,QAAhB,CAAyB,MAAzB,EAAkD,MAAlD,EAAyE;AACrE,WAAO,MAAM,CAAC,WAAP,KAAuB,MAAM,CAAC,WAA9B,IAA6C,MAAM,CAAC,OAAP,KAAmB,MAAM,CAAC,OAAvE,IAAkF,SAAS,CAAC,MAAM,CAAC,KAAR,EAAe,MAAM,CAAC,KAAtB,CAAlG;AACH;;AAFe,EAAA,UAAA,CAAA,QAAA,GAAQ,QAAR;AAKH,EAAA,UAAA,CAAA,aAAA,GAA8B;AAAE,IAAA,IAAI,EAAE,EAAR;AAAY,IAAA,KAAK,EAAE,EAAnB;AAAuB,IAAA,QAAQ,EAAE,EAAjC;AAAqC,IAAA,OAAO,EAAE,UAAA,CAAA,YAA9C;AAA4D,IAAA,SAAS,EAAE,YAAA;AAAM,aAAA,EAAA;AAAI,KAAjF;AAAmF,IAAA,aAAa,EAAE,EAAlG;AAAsG,IAAA,YAAY,EAAE,YAAA;AAAM,aAAA,IAAA;AAAI;AAA9H,GAA9B;;AAGb,WAAgB,cAAhB,GAA8B;AAC1B,WAAO,IAAI,aAAJ,CAAkB,UAAA,CAAA,OAAlB,EAA6D,UAAA,CAAA,aAA7D,CAAP;AACH;;AAFe,EAAA,UAAA,CAAA,cAAA,GAAc,cAAd;AAIH,EAAA,UAAA,CAAA,OAAA,GAAU;AACnB,eAAW,wBADQ;AAEnB,2BAAuB,oCAFJ;AAGnB,gBAAY,yBAHO;AAInB,qBAAiB,8BAJE;AAKnB,sBAAkB,+BALC;AAMnB,iBAAa,0BANM;AAOnB,qBAAiB,8BAPE;AAQnB,sBAAkB,gCARC;AASnB,oBAAgB,8BATG;AAUnB,mBAAe,4BAVI;AAWnB,qBAAiB,8BAXE;AAYnB,iBAAa,2BAZM;AAanB,oBAAgB,6BAbG;AAcnB,qBAAiB,8BAdE;AAenB,sBAAkB,+BAfC;AAgBnB,kBAAc,2BAhBK;AAiBnB,qBAAiB,8BAjBE;AAkBnB,oBAAgB,6BAlBG;AAmBnB,2BAAuB,oCAnBJ;AAoBnB,mBAAe,4BApBI;AAqBnB,mBAAe,4BArBI;AAsBnB,mBAAe,6BAtBI;AAuBnB,kBAAc,2BAvBK;AAwBnB,eAAW;AAxBQ,GAAV;AA8BhB,CAtED,EAAU,UAAU,KAAV,UAAU,GAAA,EAAA,CAApB;;AAwEA,OAAM,SAAU,kBAAV,CAAqE,CAArE,EAAkG;AAAgC,SAAO,CAAP;AAAW","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Color } from '../mol-util/color';\r\nimport { CarbohydrateSymbolColorThemeProvider } from './color/carbohydrate-symbol';\r\nimport { UniformColorThemeProvider } from './color/uniform';\r\nimport { deepEqual } from '../mol-util';\r\nimport { ThemeRegistry } from './theme';\r\nimport { ChainIdColorThemeProvider } from './color/chain-id';\r\nimport { ElementIndexColorThemeProvider } from './color/element-index';\r\nimport { ElementSymbolColorThemeProvider } from './color/element-symbol';\r\nimport { MoleculeTypeColorThemeProvider } from './color/molecule-type';\r\nimport { PolymerIdColorThemeProvider } from './color/polymer-id';\r\nimport { PolymerIndexColorThemeProvider } from './color/polymer-index';\r\nimport { ResidueNameColorThemeProvider } from './color/residue-name';\r\nimport { SecondaryStructureColorThemeProvider } from './color/secondary-structure';\r\nimport { SequenceIdColorThemeProvider } from './color/sequence-id';\r\nimport { ShapeGroupColorThemeProvider } from './color/shape-group';\r\nimport { UnitIndexColorThemeProvider } from './color/unit-index';\r\nimport { UncertaintyColorThemeProvider } from './color/uncertainty';\r\nimport { EntitySourceColorThemeProvider } from './color/entity-source';\r\nimport { IllustrativeColorThemeProvider } from './color/illustrative';\r\nimport { HydrophobicityColorThemeProvider } from './color/hydrophobicity';\r\nimport { ModelIndexColorThemeProvider } from './color/model-index';\r\nimport { OccupancyColorThemeProvider } from './color/occupancy';\r\nimport { OperatorNameColorThemeProvider } from './color/operator-name';\r\nimport { OperatorHklColorThemeProvider } from './color/operator-hkl';\r\nimport { PartialChargeColorThemeProvider } from './color/partial-charge';\r\nimport { AtomIdColorThemeProvider } from './color/atom-id';\r\nimport { EntityIdColorThemeProvider } from './color/entity-id';\r\nexport { ColorTheme };\r\nvar ColorTheme;\r\n(function (ColorTheme) {\r\n    ColorTheme.PaletteScale = (1 << 24) - 1;\r\n    ColorTheme.EmptyFactory = function () { return ColorTheme.Empty; };\r\n    var EmptyColor = Color(0xCCCCCC);\r\n    ColorTheme.Empty = {\r\n        factory: ColorTheme.EmptyFactory,\r\n        granularity: 'uniform',\r\n        color: function () { return EmptyColor; },\r\n        props: {}\r\n    };\r\n    function areEqual(themeA, themeB) {\r\n        return themeA.contextHash === themeB.contextHash && themeA.factory === themeB.factory && deepEqual(themeA.props, themeB.props);\r\n    }\r\n    ColorTheme.areEqual = areEqual;\r\n    ColorTheme.EmptyProvider = { name: '', label: '', category: '', factory: ColorTheme.EmptyFactory, getParams: function () { return ({}); }, defaultValues: {}, isApplicable: function () { return true; } };\r\n    function createRegistry() {\r\n        return new ThemeRegistry(ColorTheme.BuiltIn, ColorTheme.EmptyProvider);\r\n    }\r\n    ColorTheme.createRegistry = createRegistry;\r\n    ColorTheme.BuiltIn = {\r\n        'atom-id': AtomIdColorThemeProvider,\r\n        'carbohydrate-symbol': CarbohydrateSymbolColorThemeProvider,\r\n        'chain-id': ChainIdColorThemeProvider,\r\n        'element-index': ElementIndexColorThemeProvider,\r\n        'element-symbol': ElementSymbolColorThemeProvider,\r\n        'entity-id': EntityIdColorThemeProvider,\r\n        'entity-source': EntitySourceColorThemeProvider,\r\n        'hydrophobicity': HydrophobicityColorThemeProvider,\r\n        'illustrative': IllustrativeColorThemeProvider,\r\n        'model-index': ModelIndexColorThemeProvider,\r\n        'molecule-type': MoleculeTypeColorThemeProvider,\r\n        'occupancy': OccupancyColorThemeProvider,\r\n        'operator-hkl': OperatorHklColorThemeProvider,\r\n        'operator-name': OperatorNameColorThemeProvider,\r\n        'partial-charge': PartialChargeColorThemeProvider,\r\n        'polymer-id': PolymerIdColorThemeProvider,\r\n        'polymer-index': PolymerIndexColorThemeProvider,\r\n        'residue-name': ResidueNameColorThemeProvider,\r\n        'secondary-structure': SecondaryStructureColorThemeProvider,\r\n        'sequence-id': SequenceIdColorThemeProvider,\r\n        'shape-group': ShapeGroupColorThemeProvider,\r\n        'uncertainty': UncertaintyColorThemeProvider,\r\n        'unit-index': UnitIndexColorThemeProvider,\r\n        'uniform': UniformColorThemeProvider,\r\n    };\r\n})(ColorTheme || (ColorTheme = {}));\r\nexport function ColorThemeProvider(p) { return p; }\r\n//# sourceMappingURL=color.js.map"]},"metadata":{},"sourceType":"module"}