{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { Loci } from '../../../mol-model/loci';\nimport { Lines } from '../../../mol-geo/geometry/lines/lines';\nimport { Text } from '../../../mol-geo/geometry/text/text';\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { ColorNames } from '../../../mol-util/color/names';\nimport { ShapeRepresentation } from '../representation';\nimport { Representation } from '../../representation';\nimport { Shape } from '../../../mol-model/shape';\nimport { LinesBuilder } from '../../../mol-geo/geometry/lines/lines-builder';\nimport { TextBuilder } from '../../../mol-geo/geometry/text/text-builder';\nimport { Vec3 } from '../../../mol-math/linear-algebra';\nimport { MarkerActions, MarkerAction } from '../../../mol-util/marker-action';\nimport { distanceLabel } from '../../../mol-theme/label';\nimport { LociLabelTextParams } from './common';\nimport { Sphere3D } from '../../../mol-math/geometry';\nvar SharedParams = {\n  unitLabel: PD.Text('\\u212B', {\n    isEssential: true\n  })\n};\n\nvar LineParams = __assign(__assign(__assign({}, Lines.Params), SharedParams), {\n  lineSizeAttenuation: PD.Boolean(true),\n  linesColor: PD.Color(ColorNames.lightgreen, {\n    isEssential: true\n  }),\n  linesSize: PD.Numeric(0.075, {\n    min: 0.01,\n    max: 5,\n    step: 0.01\n  }),\n  dashLength: PD.Numeric(0.2, {\n    min: 0.01,\n    max: 0.2,\n    step: 0.01\n  })\n});\n\nvar TextParams = __assign(__assign({}, LociLabelTextParams), SharedParams);\n\nvar DistanceVisuals = {\n  'lines': function (ctx, getParams) {\n    return ShapeRepresentation(getLinesShape, Lines.Utils, {\n      modifyState: function (s) {\n        return __assign(__assign({}, s), {\n          markerActions: MarkerActions.Highlighting\n        });\n      }\n    });\n  },\n  'text': function (ctx, getParams) {\n    return ShapeRepresentation(getTextShape, Text.Utils, {\n      modifyState: function (s) {\n        return __assign(__assign({}, s), {\n          markerActions: MarkerAction.None\n        });\n      }\n    });\n  }\n};\nexport var DistanceParams = __assign(__assign(__assign({}, LineParams), TextParams), {\n  visuals: PD.MultiSelect(['lines', 'text'], PD.objectToOptions(DistanceVisuals))\n}); //\n\nfunction getDistanceState() {\n  return {\n    sphereA: Sphere3D(),\n    sphereB: Sphere3D(),\n    center: Vec3(),\n    distance: 0\n  };\n}\n\nfunction setDistanceState(pair, state) {\n  var sphereA = state.sphereA,\n      sphereB = state.sphereB,\n      center = state.center;\n  var _a = pair.loci,\n      lociA = _a[0],\n      lociB = _a[1];\n  Loci.getBoundingSphere(lociA, sphereA);\n  Loci.getBoundingSphere(lociB, sphereB);\n  Vec3.add(center, sphereA.center, sphereB.center);\n  Vec3.scale(center, center, 0.5);\n  state.distance = Vec3.distance(sphereA.center, sphereB.center);\n  return state;\n}\n\nvar tmpState = getDistanceState();\n\nfunction getDistanceName(data, unitLabel) {\n  return data.pairs.length === 1 ? \"Distance \" + distanceLabel(data.pairs[0], {\n    unitLabel: unitLabel,\n    measureOnly: true\n  }) : data.pairs.length + \" Distances\";\n} //\n\n\nfunction buildLines(data, props, lines) {\n  var builder = LinesBuilder.create(128, 64, lines);\n\n  for (var i = 0, il = data.pairs.length; i < il; ++i) {\n    setDistanceState(data.pairs[i], tmpState);\n    builder.addFixedLengthDashes(tmpState.sphereA.center, tmpState.sphereB.center, props.dashLength, i);\n  }\n\n  return builder.getLines();\n}\n\nfunction getLinesShape(ctx, data, props, shape) {\n  var lines = buildLines(data, props, shape && shape.geometry);\n  var name = getDistanceName(data, props.unitLabel);\n\n  var getLabel = function (groupId) {\n    return distanceLabel(data.pairs[groupId], props);\n  };\n\n  return Shape.create(name, data, lines, function () {\n    return props.linesColor;\n  }, function () {\n    return props.linesSize;\n  }, getLabel);\n} //\n\n\nfunction buildText(data, props, text) {\n  var builder = TextBuilder.create(props, 128, 64, text);\n\n  for (var i = 0, il = data.pairs.length; i < il; ++i) {\n    setDistanceState(data.pairs[i], tmpState);\n    var center = tmpState.center,\n        distance = tmpState.distance,\n        sphereA = tmpState.sphereA,\n        sphereB = tmpState.sphereB;\n    var label = props.customText || distance.toFixed(2) + \" \" + props.unitLabel;\n    var radius = Math.max(2, sphereA.radius, sphereB.radius);\n    var scale = radius / 2;\n    builder.add(label, center[0], center[1], center[2], 1, scale, i);\n  }\n\n  return builder.getText();\n}\n\nfunction getTextShape(ctx, data, props, shape) {\n  var text = buildText(data, props, shape && shape.geometry);\n  var name = getDistanceName(data, props.unitLabel);\n\n  var getLabel = function (groupId) {\n    return distanceLabel(data.pairs[groupId], props);\n  };\n\n  return Shape.create(name, data, text, function () {\n    return props.textColor;\n  }, function () {\n    return props.textSize;\n  }, getLabel);\n}\n\nexport function DistanceRepresentation(ctx, getParams) {\n  return Representation.createMulti('Distance', ctx, getParams, Representation.StateBuilder, DistanceVisuals);\n}","map":{"version":3,"sources":["../../../../src/mol-repr/shape/loci/distance.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { Loci } from '../../../mol-model/loci';\r\nimport { Lines } from '../../../mol-geo/geometry/lines/lines';\r\nimport { Text } from '../../../mol-geo/geometry/text/text';\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { ColorNames } from '../../../mol-util/color/names';\r\nimport { ShapeRepresentation } from '../representation';\r\nimport { Representation } from '../../representation';\r\nimport { Shape } from '../../../mol-model/shape';\r\nimport { LinesBuilder } from '../../../mol-geo/geometry/lines/lines-builder';\r\nimport { TextBuilder } from '../../../mol-geo/geometry/text/text-builder';\r\nimport { Vec3 } from '../../../mol-math/linear-algebra';\r\nimport { MarkerActions, MarkerAction } from '../../../mol-util/marker-action';\r\nimport { distanceLabel } from '../../../mol-theme/label';\r\nimport { LociLabelTextParams } from './common';\r\nimport { Sphere3D } from '../../../mol-math/geometry';\r\nvar SharedParams = {\r\n    unitLabel: PD.Text('\\u212B', { isEssential: true })\r\n};\r\nvar LineParams = __assign(__assign(__assign({}, Lines.Params), SharedParams), { lineSizeAttenuation: PD.Boolean(true), linesColor: PD.Color(ColorNames.lightgreen, { isEssential: true }), linesSize: PD.Numeric(0.075, { min: 0.01, max: 5, step: 0.01 }), dashLength: PD.Numeric(0.2, { min: 0.01, max: 0.2, step: 0.01 }) });\r\nvar TextParams = __assign(__assign({}, LociLabelTextParams), SharedParams);\r\nvar DistanceVisuals = {\r\n    'lines': function (ctx, getParams) { return ShapeRepresentation(getLinesShape, Lines.Utils, { modifyState: function (s) { return (__assign(__assign({}, s), { markerActions: MarkerActions.Highlighting })); } }); },\r\n    'text': function (ctx, getParams) { return ShapeRepresentation(getTextShape, Text.Utils, { modifyState: function (s) { return (__assign(__assign({}, s), { markerActions: MarkerAction.None })); } }); },\r\n};\r\nexport var DistanceParams = __assign(__assign(__assign({}, LineParams), TextParams), { visuals: PD.MultiSelect(['lines', 'text'], PD.objectToOptions(DistanceVisuals)) });\r\n//\r\nfunction getDistanceState() {\r\n    return {\r\n        sphereA: Sphere3D(),\r\n        sphereB: Sphere3D(),\r\n        center: Vec3(),\r\n        distance: 0,\r\n    };\r\n}\r\nfunction setDistanceState(pair, state) {\r\n    var sphereA = state.sphereA, sphereB = state.sphereB, center = state.center;\r\n    var _a = pair.loci, lociA = _a[0], lociB = _a[1];\r\n    Loci.getBoundingSphere(lociA, sphereA);\r\n    Loci.getBoundingSphere(lociB, sphereB);\r\n    Vec3.add(center, sphereA.center, sphereB.center);\r\n    Vec3.scale(center, center, 0.5);\r\n    state.distance = Vec3.distance(sphereA.center, sphereB.center);\r\n    return state;\r\n}\r\nvar tmpState = getDistanceState();\r\nfunction getDistanceName(data, unitLabel) {\r\n    return data.pairs.length === 1 ? \"Distance \" + distanceLabel(data.pairs[0], { unitLabel: unitLabel, measureOnly: true }) : data.pairs.length + \" Distances\";\r\n}\r\n//\r\nfunction buildLines(data, props, lines) {\r\n    var builder = LinesBuilder.create(128, 64, lines);\r\n    for (var i = 0, il = data.pairs.length; i < il; ++i) {\r\n        setDistanceState(data.pairs[i], tmpState);\r\n        builder.addFixedLengthDashes(tmpState.sphereA.center, tmpState.sphereB.center, props.dashLength, i);\r\n    }\r\n    return builder.getLines();\r\n}\r\nfunction getLinesShape(ctx, data, props, shape) {\r\n    var lines = buildLines(data, props, shape && shape.geometry);\r\n    var name = getDistanceName(data, props.unitLabel);\r\n    var getLabel = function (groupId) { return distanceLabel(data.pairs[groupId], props); };\r\n    return Shape.create(name, data, lines, function () { return props.linesColor; }, function () { return props.linesSize; }, getLabel);\r\n}\r\n//\r\nfunction buildText(data, props, text) {\r\n    var builder = TextBuilder.create(props, 128, 64, text);\r\n    for (var i = 0, il = data.pairs.length; i < il; ++i) {\r\n        setDistanceState(data.pairs[i], tmpState);\r\n        var center = tmpState.center, distance = tmpState.distance, sphereA = tmpState.sphereA, sphereB = tmpState.sphereB;\r\n        var label = props.customText || distance.toFixed(2) + \" \" + props.unitLabel;\r\n        var radius = Math.max(2, sphereA.radius, sphereB.radius);\r\n        var scale = radius / 2;\r\n        builder.add(label, center[0], center[1], center[2], 1, scale, i);\r\n    }\r\n    return builder.getText();\r\n}\r\nfunction getTextShape(ctx, data, props, shape) {\r\n    var text = buildText(data, props, shape && shape.geometry);\r\n    var name = getDistanceName(data, props.unitLabel);\r\n    var getLabel = function (groupId) { return distanceLabel(data.pairs[groupId], props); };\r\n    return Shape.create(name, data, text, function () { return props.textColor; }, function () { return props.textSize; }, getLabel);\r\n}\r\nexport function DistanceRepresentation(ctx, getParams) {\r\n    return Representation.createMulti('Distance', ctx, getParams, Representation.StateBuilder, DistanceVisuals);\r\n}\r\n//# sourceMappingURL=distance.js.map"]},"metadata":{},"sourceType":"module"}