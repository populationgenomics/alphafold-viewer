{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __assign } from \"tslib\";\nimport { shallowEqualObjects } from './index';\nimport { Vec2 as Vec2Data, Vec3 as Vec3Data, Mat4 as Mat4Data, EPSILON } from '../mol-math/linear-algebra';\nimport { deepClone } from './object';\nimport { stringToWords } from './string';\nimport { getColorListFromName } from './color/lists';\nimport { Asset } from './assets';\nexport var ParamDefinition;\n\n(function (ParamDefinition) {\n  ParamDefinition.Essential = {\n    isEssential: true\n  };\n\n  function setInfo(param, info) {\n    if (!info) return param;\n    if (info.label) param.label = info.label;\n    if (info.description) param.description = info.description;\n    if (info.legend) param.legend = info.legend;\n    if (info.fieldLabels) param.fieldLabels = info.fieldLabels;\n    if (info.isHidden) param.isHidden = info.isHidden;\n    if (info.shortLabel) param.shortLabel = info.shortLabel;\n    if (info.twoColumns) param.twoColumns = info.twoColumns;\n    if (info.isEssential) param.isEssential = info.isEssential;\n    if (info.category) param.category = info.category;\n    if (info.hideIf) param.hideIf = info.hideIf;\n    if (info.help) param.help = info.help;\n    return param;\n  }\n\n  function Optional(p) {\n    var ret = __assign({}, p);\n\n    ret.isOptional = true;\n    return ret;\n  }\n\n  ParamDefinition.Optional = Optional;\n\n  function Value(defaultValue, info) {\n    return setInfo({\n      type: 'value',\n      defaultValue: defaultValue\n    }, info);\n  }\n\n  ParamDefinition.Value = Value;\n\n  function Select(defaultValue, options, info) {\n    return setInfo({\n      type: 'select',\n      defaultValue: checkDefaultKey(defaultValue, options),\n      options: options,\n      cycle: info === null || info === void 0 ? void 0 : info.cycle\n    }, info);\n  }\n\n  ParamDefinition.Select = Select;\n\n  function MultiSelect(defaultValue, options, info) {\n    // TODO: check if default value is a subset of options?\n    var ret = setInfo({\n      type: 'multi-select',\n      defaultValue: defaultValue,\n      options: options\n    }, info);\n    if (info === null || info === void 0 ? void 0 : info.emptyValue) ret.emptyValue = info.emptyValue;\n    return ret;\n  }\n\n  ParamDefinition.MultiSelect = MultiSelect;\n\n  function Boolean(defaultValue, info) {\n    return setInfo({\n      type: 'boolean',\n      defaultValue: defaultValue\n    }, info);\n  }\n\n  ParamDefinition.Boolean = Boolean;\n\n  function Text(defaultValue, info) {\n    if (defaultValue === void 0) {\n      defaultValue = '';\n    }\n\n    return setInfo({\n      type: 'text',\n      defaultValue: defaultValue\n    }, info);\n  }\n\n  ParamDefinition.Text = Text;\n\n  function Color(defaultValue, info) {\n    var ret = setInfo({\n      type: 'color',\n      defaultValue: defaultValue\n    }, info);\n    if (info === null || info === void 0 ? void 0 : info.isExpanded) ret.isExpanded = info.isExpanded;\n    return ret;\n  }\n\n  ParamDefinition.Color = Color;\n\n  function ColorList(defaultValue, info) {\n    var def;\n\n    if (typeof defaultValue === 'string') {\n      var colors = getColorListFromName(defaultValue);\n      def = {\n        kind: colors.type !== 'qualitative' ? 'interpolate' : 'set',\n        colors: colors.list\n      };\n    } else {\n      def = defaultValue;\n    }\n\n    return setInfo({\n      type: 'color-list',\n      presetKind: (info === null || info === void 0 ? void 0 : info.presetKind) || 'all',\n      defaultValue: def,\n      offsets: !!(info === null || info === void 0 ? void 0 : info.offsets)\n    }, info);\n  }\n\n  ParamDefinition.ColorList = ColorList;\n\n  function Vec3(defaultValue, range, info) {\n    return setInfo(setRange({\n      type: 'vec3',\n      defaultValue: defaultValue\n    }, range), info);\n  }\n\n  ParamDefinition.Vec3 = Vec3;\n\n  function Mat4(defaultValue, info) {\n    return setInfo({\n      type: 'mat4',\n      defaultValue: defaultValue\n    }, info);\n  }\n\n  ParamDefinition.Mat4 = Mat4;\n\n  function Url(url, info) {\n    var defaultValue = typeof url === 'string' ? Asset.Url(url) : Asset.Url(url.url, {\n      body: url.body\n    });\n    var ret = setInfo({\n      type: 'url',\n      defaultValue: defaultValue\n    }, info);\n    return ret;\n  }\n\n  ParamDefinition.Url = Url;\n\n  function File(info) {\n    var ret = setInfo({\n      type: 'file',\n      defaultValue: null\n    }, info);\n    if (info === null || info === void 0 ? void 0 : info.accept) ret.accept = info.accept;\n    return ret;\n  }\n\n  ParamDefinition.File = File;\n\n  function FileList(info) {\n    var ret = setInfo({\n      type: 'file-list',\n      defaultValue: null\n    }, info);\n    if (info === null || info === void 0 ? void 0 : info.accept) ret.accept = info.accept;\n    return ret;\n  }\n\n  ParamDefinition.FileList = FileList;\n\n  function setRange(p, range) {\n    if (!range) return p;\n    if (typeof range.min !== 'undefined') p.min = range.min;\n    if (typeof range.max !== 'undefined') p.max = range.max;\n    if (typeof range.step !== 'undefined') p.step = range.step;\n    return p;\n  }\n\n  function Numeric(defaultValue, range, info) {\n    var ret = setInfo(setRange({\n      type: 'number',\n      defaultValue: defaultValue\n    }, range), info);\n    if (info === null || info === void 0 ? void 0 : info.immediateUpdate) ret.immediateUpdate = true;\n    return ret;\n  }\n\n  ParamDefinition.Numeric = Numeric;\n\n  function Interval(defaultValue, range, info) {\n    return setInfo(setRange({\n      type: 'interval',\n      defaultValue: defaultValue\n    }, range), info);\n  }\n\n  ParamDefinition.Interval = Interval;\n\n  function LineGraph(defaultValue, info) {\n    return setInfo({\n      type: 'line-graph',\n      defaultValue: defaultValue\n    }, info);\n  }\n\n  ParamDefinition.LineGraph = LineGraph;\n\n  function Group(params, info) {\n    var ret = setInfo({\n      type: 'group',\n      defaultValue: (info === null || info === void 0 ? void 0 : info.customDefault) || getDefaultValues(params),\n      params: params\n    }, info);\n    if (info === null || info === void 0 ? void 0 : info.isExpanded) ret.isExpanded = info.isExpanded;\n    if (info === null || info === void 0 ? void 0 : info.isFlat) ret.isFlat = info.isFlat;\n    if (info === null || info === void 0 ? void 0 : info.pivot) ret.pivot = info.pivot;\n    return ret;\n  }\n\n  ParamDefinition.Group = Group;\n\n  function EmptyGroup(info) {\n    return Group({}, info);\n  }\n\n  ParamDefinition.EmptyGroup = EmptyGroup;\n\n  function Mapped(defaultKey, names, map, info) {\n    var name = checkDefaultKey(defaultKey, names);\n    return setInfo({\n      type: 'mapped',\n      defaultValue: {\n        name: name,\n        params: map(name).defaultValue\n      },\n      select: Select(name, names, info),\n      map: map\n    }, info);\n  }\n\n  ParamDefinition.Mapped = Mapped;\n\n  function MappedStatic(defaultKey, map, info) {\n    var options = (info === null || info === void 0 ? void 0 : info.options) ? info.options : Object.keys(map).map(function (k) {\n      return [k, map[k].label || stringToWords(k)];\n    });\n    var name = checkDefaultKey(defaultKey, options);\n    return setInfo({\n      type: 'mapped',\n      defaultValue: {\n        name: name,\n        params: map[name].defaultValue\n      },\n      select: Select(name, options, info),\n      map: function (key) {\n        return map[key];\n      }\n    }, info);\n  }\n\n  ParamDefinition.MappedStatic = MappedStatic;\n\n  function ObjectList(element, getLabel, info) {\n    return setInfo({\n      type: 'object-list',\n      element: element,\n      getLabel: getLabel,\n      ctor: _defaultObjectListCtor,\n      defaultValue: (info === null || info === void 0 ? void 0 : info.defaultValue) || []\n    }, info);\n  }\n\n  ParamDefinition.ObjectList = ObjectList;\n\n  function _defaultObjectListCtor() {\n    return getDefaultValues(this.element);\n  }\n\n  function unsetGetValue() {\n    throw new Error('getValue not set. Fix runtime.');\n  }\n\n  function ValueRef(getOptions, resolveRef, info) {\n    var _a;\n\n    return setInfo({\n      type: 'value-ref',\n      defaultValue: {\n        ref: (_a = info === null || info === void 0 ? void 0 : info.defaultRef) !== null && _a !== void 0 ? _a : '',\n        getValue: unsetGetValue\n      },\n      getOptions: getOptions,\n      resolveRef: resolveRef\n    }, info);\n  }\n\n  ParamDefinition.ValueRef = ValueRef;\n\n  function DataRef(info) {\n    var _a;\n\n    return setInfo({\n      type: 'data-ref',\n      defaultValue: {\n        ref: (_a = info === null || info === void 0 ? void 0 : info.defaultRef) !== null && _a !== void 0 ? _a : '',\n        getValue: unsetGetValue\n      }\n    }, info);\n  }\n\n  ParamDefinition.DataRef = DataRef;\n\n  function Converted(fromValue, toValue, converted) {\n    return {\n      type: 'converted',\n      defaultValue: toValue(converted.defaultValue),\n      converted: converted,\n      fromValue: fromValue,\n      toValue: toValue\n    };\n  }\n\n  ParamDefinition.Converted = Converted;\n\n  function Conditioned(defaultValue, conditionParams, conditionForValue, conditionedValue, info) {\n    var options = Object.keys(conditionParams).map(function (k) {\n      return [k, k];\n    });\n    return setInfo({\n      type: 'conditioned',\n      select: Select(conditionForValue(defaultValue), options, info),\n      defaultValue: defaultValue,\n      conditionParams: conditionParams,\n      conditionForValue: conditionForValue,\n      conditionedValue: conditionedValue\n    }, info);\n  }\n\n  ParamDefinition.Conditioned = Conditioned;\n\n  function Script(defaultValue, info) {\n    return setInfo({\n      type: 'script',\n      defaultValue: defaultValue\n    }, info);\n  }\n\n  ParamDefinition.Script = Script;\n\n  function For(params) {\n    return 0;\n  }\n\n  ParamDefinition.For = For;\n\n  function getDefaultValues(params) {\n    var d = {};\n\n    for (var _a = 0, _b = Object.keys(params); _a < _b.length; _a++) {\n      var k = _b[_a];\n      if (params[k].isOptional) continue;\n      d[k] = params[k].defaultValue;\n    }\n\n    return d;\n  }\n\n  ParamDefinition.getDefaultValues = getDefaultValues;\n\n  function _resolveRef(resolve, ref) {\n    return function () {\n      return resolve(ref);\n    };\n  }\n\n  function resolveRefValue(p, value, getData) {\n    if (!value) return;\n\n    if (p.type === 'value-ref') {\n      var v = value;\n      if (!v.ref) v.getValue = function () {\n        throw new Error('Unset ref in ValueRef value.');\n      };else v.getValue = _resolveRef(p.resolveRef, v.ref);\n    } else if (p.type === 'data-ref') {\n      var v = value;\n      if (!v.ref) v.getValue = function () {\n        throw new Error('Unset ref in ValueRef value.');\n      };else v.getValue = _resolveRef(getData, v.ref);\n    } else if (p.type === 'group') {\n      resolveRefs(p.params, value, getData);\n    } else if (p.type === 'mapped') {\n      var v = value;\n      var param = p.map(v.name);\n      resolveRefValue(param, v.params, getData);\n    } else if (p.type === 'object-list') {\n      if (!hasValueRef(p.element)) return;\n\n      for (var _a = 0, value_1 = value; _a < value_1.length; _a++) {\n        var e = value_1[_a];\n        resolveRefs(p.element, e, getData);\n      }\n    }\n  }\n\n  function hasParamValueRef(p) {\n    if (p.type === 'value-ref' || p.type === 'data-ref') {\n      return true;\n    } else if (p.type === 'group') {\n      if (hasValueRef(p.params)) return true;\n    } else if (p.type === 'mapped') {\n      for (var _a = 0, _b = p.select.options; _a < _b.length; _a++) {\n        var o = _b[_a][0];\n        if (hasParamValueRef(p.map(o))) return true;\n      }\n    } else if (p.type === 'object-list') {\n      return hasValueRef(p.element);\n    }\n\n    return false;\n  }\n\n  function hasValueRef(params) {\n    for (var _a = 0, _b = Object.keys(params); _a < _b.length; _a++) {\n      var n = _b[_a];\n      if (hasParamValueRef(params[n])) return true;\n    }\n\n    return false;\n  }\n\n  function resolveRefs(params, values, getData) {\n    for (var _a = 0, _b = Object.keys(params); _a < _b.length; _a++) {\n      var n = _b[_a];\n      resolveRefValue(params[n], values === null || values === void 0 ? void 0 : values[n], getData);\n    }\n  }\n\n  ParamDefinition.resolveRefs = resolveRefs;\n\n  function setDefaultValues(params, defaultValues) {\n    for (var _a = 0, _b = Object.keys(params); _a < _b.length; _a++) {\n      var k = _b[_a];\n      if (params[k].isOptional) continue;\n      params[k].defaultValue = defaultValues[k];\n    }\n  }\n\n  ParamDefinition.setDefaultValues = setDefaultValues;\n\n  function clone(params) {\n    return deepClone(params);\n  }\n\n  ParamDefinition.clone = clone;\n\n  function validate(params, values) {\n    // TODO\n    return void 0;\n  }\n\n  ParamDefinition.validate = validate;\n\n  function areEqual(params, a, b) {\n    if (a === b) return true;\n    if (typeof a !== 'object' || typeof b !== 'object') return false;\n\n    for (var _a = 0, _b = Object.keys(params); _a < _b.length; _a++) {\n      var k = _b[_a];\n      if (!isParamEqual(params[k], a[k], b[k])) return false;\n    }\n\n    return true;\n  }\n\n  ParamDefinition.areEqual = areEqual;\n\n  function isParamEqual(p, a, b) {\n    if (a === b) return true;\n\n    if (p.type === 'group') {\n      return areEqual(p.params, a, b);\n    } else if (p.type === 'mapped') {\n      var u = a,\n          v = b;\n      if (u.name !== v.name) return false;\n      var map = p.map(u.name);\n      return isParamEqual(map, u.params, v.params);\n    } else if (p.type === 'multi-select') {\n      var u = a,\n          v = b;\n      if (u.length !== v.length) return false;\n\n      if (u.length < 10) {\n        for (var i = 0, _i = u.length; i < _i; i++) {\n          if (u[i] === v[i]) continue;\n          if (v.indexOf(u[i]) < 0) return false;\n        }\n      } else {\n        // TODO: should the value of multiselect be a set?\n        var vSet = new Set(v);\n\n        for (var i = 0, _i = u.length; i < _i; i++) {\n          if (u[i] === v[i]) continue;\n          if (!vSet.has(u[i])) return false;\n        }\n      }\n\n      return true;\n    } else if (p.type === 'interval') {\n      return a[0] === b[0] && a[1] === b[1];\n    } else if (p.type === 'line-graph') {\n      var u = a,\n          v = b;\n      if (u.length !== v.length) return false;\n\n      for (var i = 0, _i = u.length; i < _i; i++) {\n        if (!Vec2Data.areEqual(u[i], v[i])) return false;\n      }\n\n      return true;\n    } else if (p.type === 'vec3') {\n      return Vec3Data.equals(a, b);\n    } else if (p.type === 'mat4') {\n      return Mat4Data.areEqual(a, b, EPSILON);\n    } else if (p.type === 'script') {\n      var u = a,\n          v = b;\n      return u.language === v.language && u.expression === v.expression;\n    } else if (p.type === 'object-list') {\n      var u = a,\n          v = b;\n      var l = u.length;\n      if (l !== v.length) return false;\n\n      for (var i = 0; i < l; i++) {\n        if (!areEqual(p.element, u[i], v[i])) return false;\n      }\n\n      return true;\n    } else if (typeof a === 'object' && typeof b === 'object') {\n      return shallowEqualObjects(a, b);\n    } // a === b was checked at the top.\n\n\n    return false;\n  }\n\n  ParamDefinition.isParamEqual = isParamEqual;\n\n  function merge(params, a, b) {\n    if (a === undefined) return __assign({}, b);\n    if (b === undefined) return __assign({}, a);\n    var o = Object.create(null);\n\n    for (var _a = 0, _b = Object.keys(params); _a < _b.length; _a++) {\n      var k = _b[_a];\n      o[k] = mergeParam(params[k], a[k], b[k]);\n    }\n\n    return o;\n  }\n\n  ParamDefinition.merge = merge;\n\n  function mergeParam(p, a, b) {\n    if (a === undefined) return typeof b === 'object' && !Array.isArray(b) ? __assign({}, b) : b;\n    if (b === undefined) return typeof a === 'object' && !Array.isArray(a) ? __assign({}, a) : a;\n\n    if (p.type === 'group') {\n      return merge(p.params, a, b);\n    } else if (p.type === 'mapped') {\n      var u = a,\n          v = b;\n      if (u.name !== v.name) return __assign({}, v);\n      var map = p.map(v.name);\n      return {\n        name: v.name,\n        params: mergeParam(map, u.params, v.params)\n      };\n    } else if (p.type === 'value') {\n      return b;\n    } else if (typeof a === 'object' && typeof b === 'object') {\n      if (Array.isArray(b)) {\n        return b;\n      }\n\n      return __assign(__assign({}, a), b);\n    } else {\n      return b;\n    }\n  }\n\n  ParamDefinition.mergeParam = mergeParam;\n\n  function selectHasOption(p, v) {\n    for (var _a = 0, _b = p.options; _a < _b.length; _a++) {\n      var o = _b[_a];\n      if (o[0] === v) return true;\n    }\n\n    return false;\n  }\n\n  function normalizeParam(p, value, defaultIfUndefined) {\n    if (value === void 0 || value === null) {\n      return defaultIfUndefined ? p.defaultValue : void 0;\n    } // TODO: is this a good idea and will work well?\n    // if (typeof p.defaultValue !== typeof value) {\n    //     return p.defaultValue;\n    // }\n\n\n    if (p.type === 'value') {\n      return value;\n    } else if (p.type === 'group') {\n      var ret = Object.create(null);\n\n      for (var _a = 0, _b = Object.keys(p.params); _a < _b.length; _a++) {\n        var key = _b[_a];\n        var param = p.params[key];\n\n        if (value[key] === void 0) {\n          if (defaultIfUndefined) ret[key] = param.defaultValue;\n        } else {\n          ret[key] = normalizeParam(param, value[key], defaultIfUndefined);\n        }\n      }\n\n      return ret;\n    } else if (p.type === 'mapped') {\n      var v = value;\n\n      if (typeof v.name !== 'string') {\n        return p.defaultValue;\n      }\n\n      if (typeof v.params === 'undefined') {\n        return defaultIfUndefined ? p.defaultValue : void 0;\n      }\n\n      if (!selectHasOption(p.select, v.name)) {\n        return p.defaultValue;\n      }\n\n      var param = p.map(v.name);\n      return {\n        name: v.name,\n        params: normalizeParam(param, v.params, defaultIfUndefined)\n      };\n    } else if (p.type === 'select') {\n      if (!selectHasOption(p, value)) return p.defaultValue;\n      return value;\n    } else if (p.type === 'multi-select') {\n      if (!Array.isArray(value)) return p.defaultValue;\n      var ret = value.filter(function (v) {\n        return selectHasOption(this, v);\n      }, p);\n      if (value.length > 0 && ret.length === 0) return p.defaultValue;\n      return ret;\n    } else if (p.type === 'object-list') {\n      if (!Array.isArray(value)) return p.defaultValue;\n      return value.map(function (v) {\n        return normalizeParams(p.element, v, defaultIfUndefined ? 'all' : 'skip');\n      });\n    } // TODO: validate/normalize all param types \"properly\"??\n\n\n    return value;\n  }\n\n  function normalizeParams(p, value, defaultIfUndefined) {\n    if (typeof value !== 'object' || value === null) {\n      return defaultIfUndefined ? getDefaultValues(p) : value;\n    }\n\n    var ret = Object.create(null);\n\n    for (var _a = 0, _b = Object.keys(p); _a < _b.length; _a++) {\n      var key = _b[_a];\n      var param = p[key];\n\n      if (value[key] === void 0) {\n        if (defaultIfUndefined === 'all') ret[key] = param.defaultValue;\n      } else {\n        ret[key] = normalizeParam(param, value[key], defaultIfUndefined !== 'skip');\n      }\n    }\n\n    return ret;\n  }\n\n  ParamDefinition.normalizeParams = normalizeParams;\n  /**\r\n   * Map an object to a list of [K, string][] to be used as options, stringToWords for key used by default (or identity of null).\r\n   *\r\n   * if options is { [string]: string } and mapping is not provided, use the Value.\r\n   */\n\n  function objectToOptions(options, f) {\n    var ret = [];\n\n    for (var _a = 0, _b = Object.keys(options); _a < _b.length; _a++) {\n      var k = _b[_a];\n\n      if (!f) {\n        if (typeof options[k] === 'string') ret.push([k, options[k]]);else ret.push([k, f === null ? k : stringToWords(k)]);\n      } else {\n        var o = f(k, options[k]);\n        ret.push(typeof o === 'string' ? [k, o] : [k, o[0], o[1]]);\n      }\n    }\n\n    return ret;\n  }\n\n  ParamDefinition.objectToOptions = objectToOptions;\n  /**\r\n   * Map array of options using stringToWords by default (or identity of null).\r\n   */\n\n  function arrayToOptions(xs, f) {\n    var ret = [];\n\n    for (var _a = 0, xs_1 = xs; _a < xs_1.length; _a++) {\n      var x = xs_1[_a];\n\n      if (!f) {\n        ret.push([x, f === null ? x : stringToWords(x)]);\n      } else {\n        ret.push([x, f(x)]);\n      }\n    }\n\n    return ret;\n  }\n\n  ParamDefinition.arrayToOptions = arrayToOptions;\n\n  function optionLabel(param, value) {\n    for (var _a = 0, _b = param.options; _a < _b.length; _a++) {\n      var o = _b[_a];\n      if (o[0] === value) return o[1];\n    }\n\n    return '';\n  }\n\n  ParamDefinition.optionLabel = optionLabel;\n\n  function checkDefaultKey(k, options) {\n    for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {\n      var o = options_1[_a];\n      if (o[0] === k) return k;\n    }\n\n    return options.length > 0 ? options[0][0] : void 0;\n  }\n})(ParamDefinition || (ParamDefinition = {}));","map":{"version":3,"sources":["../../src/mol-util/param-definition.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { shallowEqualObjects } from './index';\r\nimport { Vec2 as Vec2Data, Vec3 as Vec3Data, Mat4 as Mat4Data, EPSILON } from '../mol-math/linear-algebra';\r\nimport { deepClone } from './object';\r\nimport { stringToWords } from './string';\r\nimport { getColorListFromName } from './color/lists';\r\nimport { Asset } from './assets';\r\nexport var ParamDefinition;\r\n(function (ParamDefinition) {\r\n    ParamDefinition.Essential = { isEssential: true };\r\n    function setInfo(param, info) {\r\n        if (!info)\r\n            return param;\r\n        if (info.label)\r\n            param.label = info.label;\r\n        if (info.description)\r\n            param.description = info.description;\r\n        if (info.legend)\r\n            param.legend = info.legend;\r\n        if (info.fieldLabels)\r\n            param.fieldLabels = info.fieldLabels;\r\n        if (info.isHidden)\r\n            param.isHidden = info.isHidden;\r\n        if (info.shortLabel)\r\n            param.shortLabel = info.shortLabel;\r\n        if (info.twoColumns)\r\n            param.twoColumns = info.twoColumns;\r\n        if (info.isEssential)\r\n            param.isEssential = info.isEssential;\r\n        if (info.category)\r\n            param.category = info.category;\r\n        if (info.hideIf)\r\n            param.hideIf = info.hideIf;\r\n        if (info.help)\r\n            param.help = info.help;\r\n        return param;\r\n    }\r\n    function Optional(p) {\r\n        var ret = __assign({}, p);\r\n        ret.isOptional = true;\r\n        return ret;\r\n    }\r\n    ParamDefinition.Optional = Optional;\r\n    function Value(defaultValue, info) {\r\n        return setInfo({ type: 'value', defaultValue: defaultValue }, info);\r\n    }\r\n    ParamDefinition.Value = Value;\r\n    function Select(defaultValue, options, info) {\r\n        return setInfo({ type: 'select', defaultValue: checkDefaultKey(defaultValue, options), options: options, cycle: info === null || info === void 0 ? void 0 : info.cycle }, info);\r\n    }\r\n    ParamDefinition.Select = Select;\r\n    function MultiSelect(defaultValue, options, info) {\r\n        // TODO: check if default value is a subset of options?\r\n        var ret = setInfo({ type: 'multi-select', defaultValue: defaultValue, options: options }, info);\r\n        if (info === null || info === void 0 ? void 0 : info.emptyValue)\r\n            ret.emptyValue = info.emptyValue;\r\n        return ret;\r\n    }\r\n    ParamDefinition.MultiSelect = MultiSelect;\r\n    function Boolean(defaultValue, info) {\r\n        return setInfo({ type: 'boolean', defaultValue: defaultValue }, info);\r\n    }\r\n    ParamDefinition.Boolean = Boolean;\r\n    function Text(defaultValue, info) {\r\n        if (defaultValue === void 0) { defaultValue = ''; }\r\n        return setInfo({ type: 'text', defaultValue: defaultValue }, info);\r\n    }\r\n    ParamDefinition.Text = Text;\r\n    function Color(defaultValue, info) {\r\n        var ret = setInfo({ type: 'color', defaultValue: defaultValue }, info);\r\n        if (info === null || info === void 0 ? void 0 : info.isExpanded)\r\n            ret.isExpanded = info.isExpanded;\r\n        return ret;\r\n    }\r\n    ParamDefinition.Color = Color;\r\n    function ColorList(defaultValue, info) {\r\n        var def;\r\n        if (typeof defaultValue === 'string') {\r\n            var colors = getColorListFromName(defaultValue);\r\n            def = { kind: colors.type !== 'qualitative' ? 'interpolate' : 'set', colors: colors.list };\r\n        }\r\n        else {\r\n            def = defaultValue;\r\n        }\r\n        return setInfo({ type: 'color-list', presetKind: (info === null || info === void 0 ? void 0 : info.presetKind) || 'all', defaultValue: def, offsets: !!(info === null || info === void 0 ? void 0 : info.offsets) }, info);\r\n    }\r\n    ParamDefinition.ColorList = ColorList;\r\n    function Vec3(defaultValue, range, info) {\r\n        return setInfo(setRange({ type: 'vec3', defaultValue: defaultValue }, range), info);\r\n    }\r\n    ParamDefinition.Vec3 = Vec3;\r\n    function Mat4(defaultValue, info) {\r\n        return setInfo({ type: 'mat4', defaultValue: defaultValue }, info);\r\n    }\r\n    ParamDefinition.Mat4 = Mat4;\r\n    function Url(url, info) {\r\n        var defaultValue = typeof url === 'string' ? Asset.Url(url) : Asset.Url(url.url, { body: url.body });\r\n        var ret = setInfo({ type: 'url', defaultValue: defaultValue }, info);\r\n        return ret;\r\n    }\r\n    ParamDefinition.Url = Url;\r\n    function File(info) {\r\n        var ret = setInfo({ type: 'file', defaultValue: null }, info);\r\n        if (info === null || info === void 0 ? void 0 : info.accept)\r\n            ret.accept = info.accept;\r\n        return ret;\r\n    }\r\n    ParamDefinition.File = File;\r\n    function FileList(info) {\r\n        var ret = setInfo({ type: 'file-list', defaultValue: null }, info);\r\n        if (info === null || info === void 0 ? void 0 : info.accept)\r\n            ret.accept = info.accept;\r\n        return ret;\r\n    }\r\n    ParamDefinition.FileList = FileList;\r\n    function setRange(p, range) {\r\n        if (!range)\r\n            return p;\r\n        if (typeof range.min !== 'undefined')\r\n            p.min = range.min;\r\n        if (typeof range.max !== 'undefined')\r\n            p.max = range.max;\r\n        if (typeof range.step !== 'undefined')\r\n            p.step = range.step;\r\n        return p;\r\n    }\r\n    function Numeric(defaultValue, range, info) {\r\n        var ret = setInfo(setRange({ type: 'number', defaultValue: defaultValue }, range), info);\r\n        if (info === null || info === void 0 ? void 0 : info.immediateUpdate)\r\n            ret.immediateUpdate = true;\r\n        return ret;\r\n    }\r\n    ParamDefinition.Numeric = Numeric;\r\n    function Interval(defaultValue, range, info) {\r\n        return setInfo(setRange({ type: 'interval', defaultValue: defaultValue }, range), info);\r\n    }\r\n    ParamDefinition.Interval = Interval;\r\n    function LineGraph(defaultValue, info) {\r\n        return setInfo({ type: 'line-graph', defaultValue: defaultValue }, info);\r\n    }\r\n    ParamDefinition.LineGraph = LineGraph;\r\n    function Group(params, info) {\r\n        var ret = setInfo({ type: 'group', defaultValue: (info === null || info === void 0 ? void 0 : info.customDefault) || getDefaultValues(params), params: params }, info);\r\n        if (info === null || info === void 0 ? void 0 : info.isExpanded)\r\n            ret.isExpanded = info.isExpanded;\r\n        if (info === null || info === void 0 ? void 0 : info.isFlat)\r\n            ret.isFlat = info.isFlat;\r\n        if (info === null || info === void 0 ? void 0 : info.pivot)\r\n            ret.pivot = info.pivot;\r\n        return ret;\r\n    }\r\n    ParamDefinition.Group = Group;\r\n    function EmptyGroup(info) {\r\n        return Group({}, info);\r\n    }\r\n    ParamDefinition.EmptyGroup = EmptyGroup;\r\n    function Mapped(defaultKey, names, map, info) {\r\n        var name = checkDefaultKey(defaultKey, names);\r\n        return setInfo({\r\n            type: 'mapped',\r\n            defaultValue: { name: name, params: map(name).defaultValue },\r\n            select: Select(name, names, info),\r\n            map: map\r\n        }, info);\r\n    }\r\n    ParamDefinition.Mapped = Mapped;\r\n    function MappedStatic(defaultKey, map, info) {\r\n        var options = (info === null || info === void 0 ? void 0 : info.options)\r\n            ? info.options\r\n            : Object.keys(map).map(function (k) { return [k, map[k].label || stringToWords(k)]; });\r\n        var name = checkDefaultKey(defaultKey, options);\r\n        return setInfo({\r\n            type: 'mapped',\r\n            defaultValue: { name: name, params: map[name].defaultValue },\r\n            select: Select(name, options, info),\r\n            map: function (key) { return map[key]; }\r\n        }, info);\r\n    }\r\n    ParamDefinition.MappedStatic = MappedStatic;\r\n    function ObjectList(element, getLabel, info) {\r\n        return setInfo({ type: 'object-list', element: element, getLabel: getLabel, ctor: _defaultObjectListCtor, defaultValue: (info === null || info === void 0 ? void 0 : info.defaultValue) || [] }, info);\r\n    }\r\n    ParamDefinition.ObjectList = ObjectList;\r\n    function _defaultObjectListCtor() { return getDefaultValues(this.element); }\r\n    function unsetGetValue() {\r\n        throw new Error('getValue not set. Fix runtime.');\r\n    }\r\n    function ValueRef(getOptions, resolveRef, info) {\r\n        var _a;\r\n        return setInfo({ type: 'value-ref', defaultValue: { ref: (_a = info === null || info === void 0 ? void 0 : info.defaultRef) !== null && _a !== void 0 ? _a : '', getValue: unsetGetValue }, getOptions: getOptions, resolveRef: resolveRef }, info);\r\n    }\r\n    ParamDefinition.ValueRef = ValueRef;\r\n    function DataRef(info) {\r\n        var _a;\r\n        return setInfo({ type: 'data-ref', defaultValue: { ref: (_a = info === null || info === void 0 ? void 0 : info.defaultRef) !== null && _a !== void 0 ? _a : '', getValue: unsetGetValue } }, info);\r\n    }\r\n    ParamDefinition.DataRef = DataRef;\r\n    function Converted(fromValue, toValue, converted) {\r\n        return { type: 'converted', defaultValue: toValue(converted.defaultValue), converted: converted, fromValue: fromValue, toValue: toValue };\r\n    }\r\n    ParamDefinition.Converted = Converted;\r\n    function Conditioned(defaultValue, conditionParams, conditionForValue, conditionedValue, info) {\r\n        var options = Object.keys(conditionParams).map(function (k) { return [k, k]; });\r\n        return setInfo({ type: 'conditioned', select: Select(conditionForValue(defaultValue), options, info), defaultValue: defaultValue, conditionParams: conditionParams, conditionForValue: conditionForValue, conditionedValue: conditionedValue }, info);\r\n    }\r\n    ParamDefinition.Conditioned = Conditioned;\r\n    function Script(defaultValue, info) {\r\n        return setInfo({ type: 'script', defaultValue: defaultValue }, info);\r\n    }\r\n    ParamDefinition.Script = Script;\r\n    function For(params) {\r\n        return 0;\r\n    }\r\n    ParamDefinition.For = For;\r\n    function getDefaultValues(params) {\r\n        var d = {};\r\n        for (var _a = 0, _b = Object.keys(params); _a < _b.length; _a++) {\r\n            var k = _b[_a];\r\n            if (params[k].isOptional)\r\n                continue;\r\n            d[k] = params[k].defaultValue;\r\n        }\r\n        return d;\r\n    }\r\n    ParamDefinition.getDefaultValues = getDefaultValues;\r\n    function _resolveRef(resolve, ref) {\r\n        return function () { return resolve(ref); };\r\n    }\r\n    function resolveRefValue(p, value, getData) {\r\n        if (!value)\r\n            return;\r\n        if (p.type === 'value-ref') {\r\n            var v = value;\r\n            if (!v.ref)\r\n                v.getValue = function () { throw new Error('Unset ref in ValueRef value.'); };\r\n            else\r\n                v.getValue = _resolveRef(p.resolveRef, v.ref);\r\n        }\r\n        else if (p.type === 'data-ref') {\r\n            var v = value;\r\n            if (!v.ref)\r\n                v.getValue = function () { throw new Error('Unset ref in ValueRef value.'); };\r\n            else\r\n                v.getValue = _resolveRef(getData, v.ref);\r\n        }\r\n        else if (p.type === 'group') {\r\n            resolveRefs(p.params, value, getData);\r\n        }\r\n        else if (p.type === 'mapped') {\r\n            var v = value;\r\n            var param = p.map(v.name);\r\n            resolveRefValue(param, v.params, getData);\r\n        }\r\n        else if (p.type === 'object-list') {\r\n            if (!hasValueRef(p.element))\r\n                return;\r\n            for (var _a = 0, value_1 = value; _a < value_1.length; _a++) {\r\n                var e = value_1[_a];\r\n                resolveRefs(p.element, e, getData);\r\n            }\r\n        }\r\n    }\r\n    function hasParamValueRef(p) {\r\n        if (p.type === 'value-ref' || p.type === 'data-ref') {\r\n            return true;\r\n        }\r\n        else if (p.type === 'group') {\r\n            if (hasValueRef(p.params))\r\n                return true;\r\n        }\r\n        else if (p.type === 'mapped') {\r\n            for (var _a = 0, _b = p.select.options; _a < _b.length; _a++) {\r\n                var o = _b[_a][0];\r\n                if (hasParamValueRef(p.map(o)))\r\n                    return true;\r\n            }\r\n        }\r\n        else if (p.type === 'object-list') {\r\n            return hasValueRef(p.element);\r\n        }\r\n        return false;\r\n    }\r\n    function hasValueRef(params) {\r\n        for (var _a = 0, _b = Object.keys(params); _a < _b.length; _a++) {\r\n            var n = _b[_a];\r\n            if (hasParamValueRef(params[n]))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    function resolveRefs(params, values, getData) {\r\n        for (var _a = 0, _b = Object.keys(params); _a < _b.length; _a++) {\r\n            var n = _b[_a];\r\n            resolveRefValue(params[n], values === null || values === void 0 ? void 0 : values[n], getData);\r\n        }\r\n    }\r\n    ParamDefinition.resolveRefs = resolveRefs;\r\n    function setDefaultValues(params, defaultValues) {\r\n        for (var _a = 0, _b = Object.keys(params); _a < _b.length; _a++) {\r\n            var k = _b[_a];\r\n            if (params[k].isOptional)\r\n                continue;\r\n            params[k].defaultValue = defaultValues[k];\r\n        }\r\n    }\r\n    ParamDefinition.setDefaultValues = setDefaultValues;\r\n    function clone(params) {\r\n        return deepClone(params);\r\n    }\r\n    ParamDefinition.clone = clone;\r\n    function validate(params, values) {\r\n        // TODO\r\n        return void 0;\r\n    }\r\n    ParamDefinition.validate = validate;\r\n    function areEqual(params, a, b) {\r\n        if (a === b)\r\n            return true;\r\n        if (typeof a !== 'object' || typeof b !== 'object')\r\n            return false;\r\n        for (var _a = 0, _b = Object.keys(params); _a < _b.length; _a++) {\r\n            var k = _b[_a];\r\n            if (!isParamEqual(params[k], a[k], b[k]))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    ParamDefinition.areEqual = areEqual;\r\n    function isParamEqual(p, a, b) {\r\n        if (a === b)\r\n            return true;\r\n        if (p.type === 'group') {\r\n            return areEqual(p.params, a, b);\r\n        }\r\n        else if (p.type === 'mapped') {\r\n            var u = a, v = b;\r\n            if (u.name !== v.name)\r\n                return false;\r\n            var map = p.map(u.name);\r\n            return isParamEqual(map, u.params, v.params);\r\n        }\r\n        else if (p.type === 'multi-select') {\r\n            var u = a, v = b;\r\n            if (u.length !== v.length)\r\n                return false;\r\n            if (u.length < 10) {\r\n                for (var i = 0, _i = u.length; i < _i; i++) {\r\n                    if (u[i] === v[i])\r\n                        continue;\r\n                    if (v.indexOf(u[i]) < 0)\r\n                        return false;\r\n                }\r\n            }\r\n            else {\r\n                // TODO: should the value of multiselect be a set?\r\n                var vSet = new Set(v);\r\n                for (var i = 0, _i = u.length; i < _i; i++) {\r\n                    if (u[i] === v[i])\r\n                        continue;\r\n                    if (!vSet.has(u[i]))\r\n                        return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        else if (p.type === 'interval') {\r\n            return a[0] === b[0] && a[1] === b[1];\r\n        }\r\n        else if (p.type === 'line-graph') {\r\n            var u = a, v = b;\r\n            if (u.length !== v.length)\r\n                return false;\r\n            for (var i = 0, _i = u.length; i < _i; i++) {\r\n                if (!Vec2Data.areEqual(u[i], v[i]))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        else if (p.type === 'vec3') {\r\n            return Vec3Data.equals(a, b);\r\n        }\r\n        else if (p.type === 'mat4') {\r\n            return Mat4Data.areEqual(a, b, EPSILON);\r\n        }\r\n        else if (p.type === 'script') {\r\n            var u = a, v = b;\r\n            return u.language === v.language && u.expression === v.expression;\r\n        }\r\n        else if (p.type === 'object-list') {\r\n            var u = a, v = b;\r\n            var l = u.length;\r\n            if (l !== v.length)\r\n                return false;\r\n            for (var i = 0; i < l; i++) {\r\n                if (!areEqual(p.element, u[i], v[i]))\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        else if (typeof a === 'object' && typeof b === 'object') {\r\n            return shallowEqualObjects(a, b);\r\n        }\r\n        // a === b was checked at the top.\r\n        return false;\r\n    }\r\n    ParamDefinition.isParamEqual = isParamEqual;\r\n    function merge(params, a, b) {\r\n        if (a === undefined)\r\n            return __assign({}, b);\r\n        if (b === undefined)\r\n            return __assign({}, a);\r\n        var o = Object.create(null);\r\n        for (var _a = 0, _b = Object.keys(params); _a < _b.length; _a++) {\r\n            var k = _b[_a];\r\n            o[k] = mergeParam(params[k], a[k], b[k]);\r\n        }\r\n        return o;\r\n    }\r\n    ParamDefinition.merge = merge;\r\n    function mergeParam(p, a, b) {\r\n        if (a === undefined)\r\n            return typeof b === 'object' && !Array.isArray(b) ? __assign({}, b) : b;\r\n        if (b === undefined)\r\n            return typeof a === 'object' && !Array.isArray(a) ? __assign({}, a) : a;\r\n        if (p.type === 'group') {\r\n            return merge(p.params, a, b);\r\n        }\r\n        else if (p.type === 'mapped') {\r\n            var u = a, v = b;\r\n            if (u.name !== v.name)\r\n                return __assign({}, v);\r\n            var map = p.map(v.name);\r\n            return {\r\n                name: v.name,\r\n                params: mergeParam(map, u.params, v.params)\r\n            };\r\n        }\r\n        else if (p.type === 'value') {\r\n            return b;\r\n        }\r\n        else if (typeof a === 'object' && typeof b === 'object') {\r\n            if (Array.isArray(b)) {\r\n                return b;\r\n            }\r\n            return __assign(__assign({}, a), b);\r\n        }\r\n        else {\r\n            return b;\r\n        }\r\n    }\r\n    ParamDefinition.mergeParam = mergeParam;\r\n    function selectHasOption(p, v) {\r\n        for (var _a = 0, _b = p.options; _a < _b.length; _a++) {\r\n            var o = _b[_a];\r\n            if (o[0] === v)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    function normalizeParam(p, value, defaultIfUndefined) {\r\n        if (value === void 0 || value === null) {\r\n            return defaultIfUndefined ? p.defaultValue : void 0;\r\n        }\r\n        // TODO: is this a good idea and will work well?\r\n        // if (typeof p.defaultValue !== typeof value) {\r\n        //     return p.defaultValue;\r\n        // }\r\n        if (p.type === 'value') {\r\n            return value;\r\n        }\r\n        else if (p.type === 'group') {\r\n            var ret = Object.create(null);\r\n            for (var _a = 0, _b = Object.keys(p.params); _a < _b.length; _a++) {\r\n                var key = _b[_a];\r\n                var param = p.params[key];\r\n                if (value[key] === void 0) {\r\n                    if (defaultIfUndefined)\r\n                        ret[key] = param.defaultValue;\r\n                }\r\n                else {\r\n                    ret[key] = normalizeParam(param, value[key], defaultIfUndefined);\r\n                }\r\n            }\r\n            return ret;\r\n        }\r\n        else if (p.type === 'mapped') {\r\n            var v = value;\r\n            if (typeof v.name !== 'string') {\r\n                return p.defaultValue;\r\n            }\r\n            if (typeof v.params === 'undefined') {\r\n                return defaultIfUndefined ? p.defaultValue : void 0;\r\n            }\r\n            if (!selectHasOption(p.select, v.name)) {\r\n                return p.defaultValue;\r\n            }\r\n            var param = p.map(v.name);\r\n            return {\r\n                name: v.name,\r\n                params: normalizeParam(param, v.params, defaultIfUndefined)\r\n            };\r\n        }\r\n        else if (p.type === 'select') {\r\n            if (!selectHasOption(p, value))\r\n                return p.defaultValue;\r\n            return value;\r\n        }\r\n        else if (p.type === 'multi-select') {\r\n            if (!Array.isArray(value))\r\n                return p.defaultValue;\r\n            var ret = value.filter(function (v) { return selectHasOption(this, v); }, p);\r\n            if (value.length > 0 && ret.length === 0)\r\n                return p.defaultValue;\r\n            return ret;\r\n        }\r\n        else if (p.type === 'object-list') {\r\n            if (!Array.isArray(value))\r\n                return p.defaultValue;\r\n            return value.map(function (v) { return normalizeParams(p.element, v, defaultIfUndefined ? 'all' : 'skip'); });\r\n        }\r\n        // TODO: validate/normalize all param types \"properly\"??\r\n        return value;\r\n    }\r\n    function normalizeParams(p, value, defaultIfUndefined) {\r\n        if (typeof value !== 'object' || value === null) {\r\n            return defaultIfUndefined ? getDefaultValues(p) : value;\r\n        }\r\n        var ret = Object.create(null);\r\n        for (var _a = 0, _b = Object.keys(p); _a < _b.length; _a++) {\r\n            var key = _b[_a];\r\n            var param = p[key];\r\n            if (value[key] === void 0) {\r\n                if (defaultIfUndefined === 'all')\r\n                    ret[key] = param.defaultValue;\r\n            }\r\n            else {\r\n                ret[key] = normalizeParam(param, value[key], defaultIfUndefined !== 'skip');\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    ParamDefinition.normalizeParams = normalizeParams;\r\n    /**\r\n     * Map an object to a list of [K, string][] to be used as options, stringToWords for key used by default (or identity of null).\r\n     *\r\n     * if options is { [string]: string } and mapping is not provided, use the Value.\r\n     */\r\n    function objectToOptions(options, f) {\r\n        var ret = [];\r\n        for (var _a = 0, _b = Object.keys(options); _a < _b.length; _a++) {\r\n            var k = _b[_a];\r\n            if (!f) {\r\n                if (typeof options[k] === 'string')\r\n                    ret.push([k, options[k]]);\r\n                else\r\n                    ret.push([k, f === null ? k : stringToWords(k)]);\r\n            }\r\n            else {\r\n                var o = f(k, options[k]);\r\n                ret.push(typeof o === 'string' ? [k, o] : [k, o[0], o[1]]);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    ParamDefinition.objectToOptions = objectToOptions;\r\n    /**\r\n     * Map array of options using stringToWords by default (or identity of null).\r\n     */\r\n    function arrayToOptions(xs, f) {\r\n        var ret = [];\r\n        for (var _a = 0, xs_1 = xs; _a < xs_1.length; _a++) {\r\n            var x = xs_1[_a];\r\n            if (!f) {\r\n                ret.push([x, f === null ? x : stringToWords(x)]);\r\n            }\r\n            else {\r\n                ret.push([x, f(x)]);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    ParamDefinition.arrayToOptions = arrayToOptions;\r\n    function optionLabel(param, value) {\r\n        for (var _a = 0, _b = param.options; _a < _b.length; _a++) {\r\n            var o = _b[_a];\r\n            if (o[0] === value)\r\n                return o[1];\r\n        }\r\n        return '';\r\n    }\r\n    ParamDefinition.optionLabel = optionLabel;\r\n    function checkDefaultKey(k, options) {\r\n        for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {\r\n            var o = options_1[_a];\r\n            if (o[0] === k)\r\n                return k;\r\n        }\r\n        return options.length > 0 ? options[0][0] : void 0;\r\n    }\r\n})(ParamDefinition || (ParamDefinition = {}));\r\n//# sourceMappingURL=param-definition.js.map"]},"metadata":{},"sourceType":"module"}