{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __assign, __awaiter, __extends, __generator, __spreadArray } from \"tslib\";\nimport { VisualQualityOptions } from '../../../mol-geo/geometry/base';\nimport { InteractionsProvider } from '../../../mol-model-props/computed/interactions';\nimport { Structure, StructureElement, StructureSelection } from '../../../mol-model/structure';\nimport { structureAreEqual, structureAreIntersecting, structureIntersect, structureSubtract, structureUnion } from '../../../mol-model/structure/query/utils/structure-set';\nimport { setSubtreeVisibility } from '../../../mol-plugin/behavior/static/state';\nimport { Task } from '../../../mol-task';\nimport { UUID } from '../../../mol-util';\nimport { ColorNames } from '../../../mol-util/color/names';\nimport { objectForEach } from '../../../mol-util/object';\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { StatefulPluginComponent } from '../../component';\nimport { setStructureOverpaint } from '../../helpers/structure-overpaint';\nimport { createStructureColorThemeParams, createStructureSizeThemeParams } from '../../helpers/structure-representation-params';\nimport { StructureSelectionQueries } from '../../helpers/structure-selection-query';\nimport { StructureRepresentation3D } from '../../transforms/representation';\nimport { Clipping } from '../../../mol-theme/clipping';\nimport { setStructureClipping } from '../../helpers/structure-clipping';\nimport { setStructureTransparency } from '../../helpers/structure-transparency';\nimport { StructureFocusRepresentation } from '../../../mol-plugin/behavior/dynamic/selection/structure-focus-representation';\nexport { StructureComponentManager };\n\nvar StructureComponentManager =\n/** @class */\nfunction (_super) {\n  __extends(StructureComponentManager, _super);\n\n  function StructureComponentManager(plugin) {\n    var _this = _super.call(this, {\n      options: PD.getDefaultValues(StructureComponentManager.OptionsParams)\n    }) || this;\n\n    _this.plugin = plugin;\n    _this.events = {\n      optionsUpdated: _this.ev()\n    };\n    return _this;\n  }\n\n  Object.defineProperty(StructureComponentManager.prototype, \"currentStructures\", {\n    get: function () {\n      return this.plugin.managers.structure.hierarchy.selection.structures;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StructureComponentManager.prototype, \"pivotStructure\", {\n    get: function () {\n      return this.currentStructures[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StructureComponentManager.prototype.setOptions = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var interactionChanged, update, _i, _a, s, _b, _c, c;\n\n      var _this = this;\n\n      return __generator(this, function (_d) {\n        interactionChanged = options.interactions !== this.state.options.interactions;\n        this.updateState({\n          options: options\n        });\n        this.events.optionsUpdated.next(void 0);\n        update = this.dataState.build();\n\n        for (_i = 0, _a = this.currentStructures; _i < _a.length; _i++) {\n          s = _a[_i];\n\n          for (_b = 0, _c = s.components; _b < _c.length; _b++) {\n            c = _c[_b];\n            this.updateReprParams(update, c);\n          }\n        }\n\n        return [2\n        /*return*/\n        , this.plugin.dataTransaction(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , update.commit()];\n\n                case 1:\n                  _a.sent();\n\n                  return [4\n                  /*yield*/\n                  , this.plugin.state.updateBehavior(StructureFocusRepresentation, function (p) {\n                    p.ignoreHydrogens = !options.showHydrogens;\n                  })];\n\n                case 2:\n                  _a.sent();\n\n                  if (!interactionChanged) return [3\n                  /*break*/\n                  , 4];\n                  return [4\n                  /*yield*/\n                  , this.updateInterationProps()];\n\n                case 3:\n                  _a.sent();\n\n                  _a.label = 4;\n\n                case 4:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        })];\n      });\n    });\n  };\n\n  StructureComponentManager.prototype.updateReprParams = function (update, component) {\n    var _a = this.state.options,\n        showHydrogens = _a.showHydrogens,\n        quality = _a.visualQuality;\n    var ignoreHydrogens = !showHydrogens;\n\n    for (var _i = 0, _b = component.representations; _i < _b.length; _i++) {\n      var r = _b[_i];\n      if (r.cell.transform.transformer !== StructureRepresentation3D) continue;\n      var params = r.cell.transform.params;\n\n      if (!!params.type.params.ignoreHydrogens !== ignoreHydrogens || params.type.params.quality !== quality) {\n        update.to(r.cell).update(function (old) {\n          old.type.params.ignoreHydrogens = ignoreHydrogens;\n          old.type.params.quality = quality;\n        });\n      }\n    }\n  };\n\n  StructureComponentManager.prototype.updateInterationProps = function () {\n    var _a, _b, _c;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _i, _d, s, interactionParams, oldParams, pd, params;\n\n      var _this = this;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _i = 0, _d = this.currentStructures;\n            _e.label = 1;\n\n          case 1:\n            if (!(_i < _d.length)) return [3\n            /*break*/\n            , 6];\n            s = _d[_i];\n            interactionParams = InteractionsProvider.getParams((_a = s.cell.obj) === null || _a === void 0 ? void 0 : _a.data);\n            if (!s.properties) return [3\n            /*break*/\n            , 3];\n            oldParams = (_b = s.properties.cell.transform.params) === null || _b === void 0 ? void 0 : _b.properties[InteractionsProvider.descriptor.name];\n            if (PD.areEqual(interactionParams, oldParams, this.state.options.interactions)) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.dataState.build().to(s.properties.cell).update(function (old) {\n              old.properties[InteractionsProvider.descriptor.name] = _this.state.options.interactions;\n            }).commit()];\n\n          case 2:\n            _e.sent();\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            pd = this.plugin.customStructureProperties.getParams((_c = s.cell.obj) === null || _c === void 0 ? void 0 : _c.data);\n            params = PD.getDefaultValues(pd);\n            if (PD.areEqual(interactionParams, params.properties[InteractionsProvider.descriptor.name], this.state.options.interactions)) return [3\n            /*break*/\n            , 5];\n            params.properties[InteractionsProvider.descriptor.name] = this.state.options.interactions;\n            return [4\n            /*yield*/\n            , this.plugin.builders.structure.insertStructureProperties(s.cell, params)];\n\n          case 4:\n            _e.sent();\n\n            _e.label = 5;\n\n          case 5:\n            _i++;\n            return [3\n            /*break*/\n            , 1];\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  StructureComponentManager.prototype.applyPreset = function (structures, provider, params) {\n    var _this = this;\n\n    return this.plugin.dataTransaction(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _i, structures_1, s, preset;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _i = 0, structures_1 = structures;\n              _a.label = 1;\n\n            case 1:\n              if (!(_i < structures_1.length)) return [3\n              /*break*/\n              , 5];\n              s = structures_1[_i];\n              return [4\n              /*yield*/\n              , this.plugin.builders.structure.representation.applyPreset(s.cell, provider, params)];\n\n            case 2:\n              preset = _a.sent();\n              return [4\n              /*yield*/\n              , this.syncPreset(s, preset)];\n\n            case 3:\n              _a.sent();\n\n              _a.label = 4;\n\n            case 4:\n              _i++;\n              return [3\n              /*break*/\n              , 1];\n\n            case 5:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }, {\n      canUndo: 'Preset'\n    });\n  };\n\n  StructureComponentManager.prototype.syncPreset = function (root, preset) {\n    if (!preset || !preset.components) return this.clearComponents([root]);\n    var keptRefs = new Set();\n    objectForEach(preset.components, function (c) {\n      if (c) keptRefs.add(c.ref);\n    });\n\n    if (preset.representations) {\n      objectForEach(preset.representations, function (r) {\n        if (r) keptRefs.add(r.ref);\n      });\n    }\n\n    if (keptRefs.size === 0) return this.clearComponents([root]);\n    var changed = false;\n    var update = this.dataState.build();\n\n    var sync = function (r) {\n      if (!keptRefs.has(r.cell.transform.ref)) {\n        changed = true;\n        update.delete(r.cell);\n      }\n    };\n\n    for (var _i = 0, _a = root.components; _i < _a.length; _i++) {\n      var c = _a[_i];\n      sync(c);\n\n      for (var _b = 0, _c = c.representations; _b < _c.length; _b++) {\n        var r = _c[_b];\n        sync(r);\n      }\n\n      if (c.genericRepresentations) {\n        for (var _d = 0, _e = c.genericRepresentations; _d < _e.length; _d++) {\n          var r = _e[_d];\n          sync(r);\n        }\n      }\n    }\n\n    if (root.genericRepresentations) {\n      for (var _f = 0, _g = root.genericRepresentations; _f < _g.length; _f++) {\n        var r = _g[_f];\n        sync(r);\n      }\n    }\n\n    if (changed) return update.commit();\n  };\n\n  StructureComponentManager.prototype.clear = function (structures) {\n    return this.clearComponents(structures);\n  };\n\n  StructureComponentManager.prototype.selectThis = function (components) {\n    var _a;\n\n    var mng = this.plugin.managers.structure.selection;\n    mng.clear();\n\n    for (var _i = 0, components_1 = components; _i < components_1.length; _i++) {\n      var c = components_1[_i];\n      var loci = Structure.toSubStructureElementLoci(c.structure.cell.obj.data, (_a = c.cell.obj) === null || _a === void 0 ? void 0 : _a.data);\n      mng.fromLoci('set', loci);\n    }\n  };\n\n  StructureComponentManager.prototype.canBeModified = function (ref) {\n    return this.plugin.builders.structure.isComponentTransform(ref.cell);\n  };\n\n  StructureComponentManager.prototype.modifyByCurrentSelection = function (components, action) {\n    var _this = this;\n\n    return this.plugin.runTask(Task.create('Modify Component', function (taskCtx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var b, _i, components_2, c, selection;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              b = this.dataState.build();\n\n              for (_i = 0, components_2 = components; _i < components_2.length; _i++) {\n                c = components_2[_i];\n                if (!this.canBeModified(c)) continue;\n                selection = this.plugin.managers.structure.selection.getStructure(c.structure.cell.obj.data);\n                if (!selection || selection.elementCount === 0) continue;\n                this.modifyComponent(b, c, selection, action);\n              }\n\n              return [4\n              /*yield*/\n              , this.dataState.updateTree(b, {\n                canUndo: 'Modify Selection'\n              }).runInContext(taskCtx)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }));\n  };\n\n  StructureComponentManager.prototype.toggleVisibility = function (components, reprPivot) {\n    if (components.length === 0) return;\n\n    if (!reprPivot) {\n      var isHidden = !components[0].cell.state.isHidden;\n\n      for (var _i = 0, components_3 = components; _i < components_3.length; _i++) {\n        var c = components_3[_i];\n        setSubtreeVisibility(this.dataState, c.cell.transform.ref, isHidden);\n      }\n    } else {\n      var index = components[0].representations.indexOf(reprPivot);\n      var isHidden = !reprPivot.cell.state.isHidden;\n\n      for (var _a = 0, components_4 = components; _a < components_4.length; _a++) {\n        var c = components_4[_a]; // TODO: is it ok to use just the index here? Could possible lead to ugly edge cases, but perhaps not worth the trouble to \"fix\".\n\n        var repr = c.representations[index];\n        if (!repr) continue;\n        setSubtreeVisibility(this.dataState, repr.cell.transform.ref, isHidden);\n      }\n    }\n  };\n\n  StructureComponentManager.prototype.removeRepresentations = function (components, pivot) {\n    if (components.length === 0) return;\n    var toRemove = [];\n\n    if (pivot) {\n      var index = components[0].representations.indexOf(pivot);\n      if (index < 0) return;\n\n      for (var _i = 0, components_5 = components; _i < components_5.length; _i++) {\n        var c = components_5[_i];\n        if (c.representations[index]) toRemove.push(c.representations[index]);\n      }\n    } else {\n      for (var _a = 0, components_6 = components; _a < components_6.length; _a++) {\n        var c = components_6[_a];\n\n        for (var _b = 0, _c = c.representations; _b < _c.length; _b++) {\n          var r = _c[_b];\n          toRemove.push(r);\n        }\n      }\n    }\n\n    return this.plugin.managers.structure.hierarchy.remove(toRemove, true);\n  };\n\n  StructureComponentManager.prototype.updateRepresentations = function (components, pivot, params) {\n    if (components.length === 0) return Promise.resolve();\n    var index = components[0].representations.indexOf(pivot);\n    if (index < 0) return Promise.resolve();\n    var update = this.dataState.build();\n\n    for (var _i = 0, components_7 = components; _i < components_7.length; _i++) {\n      var c = components_7[_i]; // TODO: is it ok to use just the index here? Could possible lead to ugly edge cases, but perhaps not worth the trouble to \"fix\".\n\n      var repr = c.representations[index];\n      if (!repr) continue;\n      if (repr.cell.transform.transformer !== pivot.cell.transform.transformer) continue;\n      update.to(repr.cell).update(params);\n    }\n\n    return update.commit({\n      canUndo: 'Update Representation'\n    });\n  };\n\n  StructureComponentManager.prototype.updateRepresentationsTheme = function (components, paramsOrProvider) {\n    var _a, _b, _c, _d;\n\n    if (components.length === 0) return;\n    var update = this.dataState.build();\n\n    for (var _i = 0, components_8 = components; _i < components_8.length; _i++) {\n      var c = components_8[_i];\n\n      var _loop_1 = function (repr) {\n        var old = repr.cell.transform.params;\n        var params = typeof paramsOrProvider === 'function' ? paramsOrProvider(c, repr) : paramsOrProvider;\n        var colorTheme = params.color === 'default' ? createStructureColorThemeParams(this_1.plugin, (_a = c.structure.cell.obj) === null || _a === void 0 ? void 0 : _a.data, old === null || old === void 0 ? void 0 : old.type.name) : params.color ? createStructureColorThemeParams(this_1.plugin, (_b = c.structure.cell.obj) === null || _b === void 0 ? void 0 : _b.data, old === null || old === void 0 ? void 0 : old.type.name, params.color, params.colorParams) : void 0;\n        var sizeTheme = params.size === 'default' ? createStructureSizeThemeParams(this_1.plugin, (_c = c.structure.cell.obj) === null || _c === void 0 ? void 0 : _c.data, old === null || old === void 0 ? void 0 : old.type.name) : params.color ? createStructureSizeThemeParams(this_1.plugin, (_d = c.structure.cell.obj) === null || _d === void 0 ? void 0 : _d.data, old === null || old === void 0 ? void 0 : old.type.name, params.size, params.sizeParams) : void 0;\n\n        if (colorTheme || sizeTheme) {\n          update.to(repr.cell).update(function (prev) {\n            if (colorTheme) prev.colorTheme = colorTheme;\n            if (sizeTheme) prev.sizeTheme = sizeTheme;\n          });\n        }\n      };\n\n      var this_1 = this;\n\n      for (var _e = 0, _f = c.representations; _e < _f.length; _e++) {\n        var repr = _f[_e];\n\n        _loop_1(repr);\n      }\n    }\n\n    return update.commit({\n      canUndo: 'Update Theme'\n    });\n  };\n\n  StructureComponentManager.prototype.addRepresentation = function (components, type) {\n    var _this = this;\n\n    if (components.length === 0) return;\n    var _a = this.state.options,\n        showHydrogens = _a.showHydrogens,\n        quality = _a.visualQuality;\n    var ignoreHydrogens = !showHydrogens;\n    var typeParams = {\n      ignoreHydrogens: ignoreHydrogens,\n      quality: quality\n    };\n    return this.plugin.dataTransaction(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _i, components_9, component;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _i = 0, components_9 = components;\n              _a.label = 1;\n\n            case 1:\n              if (!(_i < components_9.length)) return [3\n              /*break*/\n              , 4];\n              component = components_9[_i];\n              return [4\n              /*yield*/\n              , this.plugin.builders.structure.representation.addRepresentation(component.cell, {\n                type: this.plugin.representation.structure.registry.get(type),\n                typeParams: typeParams\n              })];\n\n            case 2:\n              _a.sent();\n\n              _a.label = 3;\n\n            case 3:\n              _i++;\n              return [3\n              /*break*/\n              , 1];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }, {\n      canUndo: 'Add Representation'\n    });\n  };\n\n  StructureComponentManager.prototype.tryFindComponent = function (structure, selection) {\n    var _this = this;\n\n    if (structure.components.length === 0) return;\n    return this.plugin.runTask(Task.create('Find Component', function (taskCtx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var data, sel, _a, _b, _i, _c, c, comp;\n\n        var _d, _e;\n\n        return __generator(this, function (_f) {\n          switch (_f.label) {\n            case 0:\n              data = (_d = structure.cell.obj) === null || _d === void 0 ? void 0 : _d.data;\n              if (!data) return [2\n              /*return*/\n              ];\n              _b = (_a = StructureSelection).unionStructure;\n              return [4\n              /*yield*/\n              , selection.getSelection(this.plugin, taskCtx, data)];\n\n            case 1:\n              sel = _b.apply(_a, [_f.sent()]);\n\n              for (_i = 0, _c = structure.components; _i < _c.length; _i++) {\n                c = _c[_i];\n                comp = (_e = c.cell.obj) === null || _e === void 0 ? void 0 : _e.data;\n                if (!comp || !c.cell.parent) continue;\n                if (structureAreEqual(sel, comp)) return [2\n                /*return*/\n                , c.cell];\n              }\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }));\n  };\n\n  StructureComponentManager.prototype.add = function (params, structures) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.plugin.dataTransaction(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var xs, _a, showHydrogens, quality, ignoreHydrogens, typeParams, componentKey, _i, xs_1, s, component;\n\n            return __generator(this, function (_b) {\n              switch (_b.label) {\n                case 0:\n                  xs = structures || this.currentStructures;\n                  if (xs.length === 0) return [2\n                  /*return*/\n                  ];\n                  _a = this.state.options, showHydrogens = _a.showHydrogens, quality = _a.visualQuality;\n                  ignoreHydrogens = !showHydrogens;\n                  typeParams = {\n                    ignoreHydrogens: ignoreHydrogens,\n                    quality: quality\n                  };\n                  componentKey = UUID.create22();\n                  _i = 0, xs_1 = xs;\n                  _b.label = 1;\n\n                case 1:\n                  if (!(_i < xs_1.length)) return [3\n                  /*break*/\n                  , 8];\n                  s = xs_1[_i];\n                  component = void 0;\n                  if (!params.options.checkExisting) return [3\n                  /*break*/\n                  , 3];\n                  return [4\n                  /*yield*/\n                  , this.tryFindComponent(s, params.selection)];\n\n                case 2:\n                  component = _b.sent();\n                  _b.label = 3;\n\n                case 3:\n                  if (!!component) return [3\n                  /*break*/\n                  , 5];\n                  return [4\n                  /*yield*/\n                  , this.plugin.builders.structure.tryCreateComponentFromSelection(s.cell, params.selection, componentKey, {\n                    label: params.options.label || (params.selection === StructureSelectionQueries.current ? 'Custom Selection' : '')\n                  })];\n\n                case 4:\n                  component = _b.sent();\n                  _b.label = 5;\n\n                case 5:\n                  if (params.representation === 'none' || !component) return [3\n                  /*break*/\n                  , 7];\n                  return [4\n                  /*yield*/\n                  , this.plugin.builders.structure.representation.addRepresentation(component, {\n                    type: this.plugin.representation.structure.registry.get(params.representation),\n                    typeParams: typeParams\n                  })];\n\n                case 6:\n                  _b.sent();\n\n                  _b.label = 7;\n\n                case 7:\n                  _i++;\n                  return [3\n                  /*break*/\n                  , 1];\n\n                case 8:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        }, {\n          canUndo: 'Add Selection'\n        })];\n      });\n    });\n  };\n\n  StructureComponentManager.prototype.applyTheme = function (params, structures) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.plugin.dataTransaction(function (ctx) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var xs, getLoci, _i, xs_2, s, p, p, p;\n\n            var _this = this;\n\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  xs = structures || this.currentStructures;\n                  if (xs.length === 0) return [2\n                  /*return*/\n                  ];\n\n                  getLoci = function (s) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var _a, _b;\n\n                      return __generator(this, function (_c) {\n                        switch (_c.label) {\n                          case 0:\n                            _b = (_a = StructureSelection).toLociWithSourceUnits;\n                            return [4\n                            /*yield*/\n                            , params.selection.getSelection(this.plugin, ctx, s)];\n\n                          case 1:\n                            return [2\n                            /*return*/\n                            , _b.apply(_a, [_c.sent()])];\n                        }\n                      });\n                    });\n                  };\n\n                  _i = 0, xs_2 = xs;\n                  _a.label = 1;\n\n                case 1:\n                  if (!(_i < xs_2.length)) return [3\n                  /*break*/\n                  , 10];\n                  s = xs_2[_i];\n                  if (!(params.action.name === 'reset')) return [3\n                  /*break*/\n                  , 3];\n                  return [4\n                  /*yield*/\n                  , setStructureOverpaint(this.plugin, s.components, -1, getLoci, params.representations)];\n\n                case 2:\n                  _a.sent();\n\n                  return [3\n                  /*break*/\n                  , 9];\n\n                case 3:\n                  if (!(params.action.name === 'color')) return [3\n                  /*break*/\n                  , 5];\n                  p = params.action.params;\n                  return [4\n                  /*yield*/\n                  , setStructureOverpaint(this.plugin, s.components, p.color, getLoci, params.representations)];\n\n                case 4:\n                  _a.sent();\n\n                  return [3\n                  /*break*/\n                  , 9];\n\n                case 5:\n                  if (!(params.action.name === 'transparency')) return [3\n                  /*break*/\n                  , 7];\n                  p = params.action.params;\n                  return [4\n                  /*yield*/\n                  , setStructureTransparency(this.plugin, s.components, p.value, getLoci, params.representations)];\n\n                case 6:\n                  _a.sent();\n\n                  return [3\n                  /*break*/\n                  , 9];\n\n                case 7:\n                  if (!(params.action.name === 'clipping')) return [3\n                  /*break*/\n                  , 9];\n                  p = params.action.params;\n                  return [4\n                  /*yield*/\n                  , setStructureClipping(this.plugin, s.components, Clipping.Groups.fromNames(p.excludeGroups), getLoci, params.representations)];\n\n                case 8:\n                  _a.sent();\n\n                  _a.label = 9;\n\n                case 9:\n                  _i++;\n                  return [3\n                  /*break*/\n                  , 1];\n\n                case 10:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        }, {\n          canUndo: 'Apply Theme'\n        })];\n      });\n    });\n  };\n\n  StructureComponentManager.prototype.modifyComponent = function (builder, component, by, action) {\n    var _a, _b, _c;\n\n    var structure = (_a = component.cell.obj) === null || _a === void 0 ? void 0 : _a.data;\n    if (!structure) return;\n    if ((action === 'subtract' || action === 'intersect') && !structureAreIntersecting(structure, by)) return;\n    var parent = (_b = component.structure.cell.obj) === null || _b === void 0 ? void 0 : _b.data;\n    var modified = action === 'union' ? structureUnion(parent, [structure, by]) : action === 'intersect' ? structureIntersect(structure, by) : structureSubtract(structure, by);\n\n    if (modified.elementCount === 0) {\n      builder.delete(component.cell.transform.ref);\n    } else {\n      var bundle = StructureElement.Bundle.fromSubStructure(parent, modified);\n      var params = {\n        type: {\n          name: 'bundle',\n          params: bundle\n        },\n        nullIfEmpty: true,\n        label: (_c = component.cell.obj) === null || _c === void 0 ? void 0 : _c.label\n      };\n      builder.to(component.cell).update(params);\n    }\n  };\n\n  StructureComponentManager.prototype.updateLabel = function (component, label) {\n    var _a, _b;\n\n    var params = {\n      type: (_a = component.cell.params) === null || _a === void 0 ? void 0 : _a.values.type,\n      nullIfEmpty: (_b = component.cell.params) === null || _b === void 0 ? void 0 : _b.values.nullIfEmpty,\n      label: label\n    };\n    this.dataState.build().to(component.cell).update(params).commit();\n  };\n\n  Object.defineProperty(StructureComponentManager.prototype, \"dataState\", {\n    get: function () {\n      return this.plugin.state.data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StructureComponentManager.prototype.clearComponents = function (structures) {\n    var deletes = this.dataState.build();\n\n    for (var _i = 0, structures_2 = structures; _i < structures_2.length; _i++) {\n      var s = structures_2[_i];\n\n      for (var _a = 0, _b = s.components; _a < _b.length; _a++) {\n        var c = _b[_a];\n        deletes.delete(c.cell.transform.ref);\n      }\n    }\n\n    return deletes.commit({\n      canUndo: 'Clear Selections'\n    });\n  };\n\n  return StructureComponentManager;\n}(StatefulPluginComponent);\n\n(function (StructureComponentManager) {\n  StructureComponentManager.OptionsParams = {\n    showHydrogens: PD.Boolean(true, {\n      description: 'Toggle display of hydrogen atoms in representations'\n    }),\n    visualQuality: PD.Select('auto', VisualQualityOptions, {\n      description: 'Control the visual/rendering quality of representations'\n    }),\n    interactions: PD.Group(InteractionsProvider.defaultParams, {\n      label: 'Non-covalent Interactions'\n    })\n  };\n\n  function getAddParams(plugin, params) {\n    var options = plugin.query.structure.registry.options;\n    params = __assign({\n      pivot: plugin.managers.structure.component.pivotStructure,\n      allowNone: true,\n      hideSelection: false,\n      checkExisting: false\n    }, params);\n    return {\n      selection: PD.Select(options[1][0], options, {\n        isHidden: params === null || params === void 0 ? void 0 : params.hideSelection\n      }),\n      representation: getRepresentationTypesSelect(plugin, params === null || params === void 0 ? void 0 : params.pivot, (params === null || params === void 0 ? void 0 : params.allowNone) ? [['none', '< Create Later >']] : []),\n      options: PD.Group({\n        label: PD.Text(''),\n        checkExisting: PD.Boolean(!!(params === null || params === void 0 ? void 0 : params.checkExisting), {\n          help: function () {\n            return {\n              description: 'Checks if a selection with the specifield elements already exists to avoid creating duplicate components.'\n            };\n          }\n        })\n      })\n    };\n  }\n\n  StructureComponentManager.getAddParams = getAddParams;\n\n  function getThemeParams(plugin, pivot) {\n    var options = plugin.query.structure.registry.options;\n    return {\n      selection: PD.Select(options[1][0], options, {\n        isHidden: false\n      }),\n      action: PD.MappedStatic('color', {\n        color: PD.Group({\n          color: PD.Color(ColorNames.blue, {\n            isExpanded: true\n          })\n        }, {\n          isFlat: true\n        }),\n        reset: PD.EmptyGroup({\n          label: 'Reset Color'\n        }),\n        transparency: PD.Group({\n          value: PD.Numeric(0.5, {\n            min: 0,\n            max: 1,\n            step: 0.01\n          })\n        }, {\n          isFlat: true\n        }),\n        clipping: PD.Group({\n          excludeGroups: PD.MultiSelect([], PD.objectToOptions(Clipping.Groups.Names))\n        }, {\n          isFlat: true\n        })\n      }),\n      representations: PD.MultiSelect([], getRepresentationTypes(plugin, pivot), {\n        emptyValue: 'All'\n      })\n    };\n  }\n\n  StructureComponentManager.getThemeParams = getThemeParams;\n\n  function getRepresentationTypes(plugin, pivot) {\n    var _a, _b;\n\n    return ((_a = pivot === null || pivot === void 0 ? void 0 : pivot.cell.obj) === null || _a === void 0 ? void 0 : _a.data) ? plugin.representation.structure.registry.getApplicableTypes((_b = pivot.cell.obj) === null || _b === void 0 ? void 0 : _b.data) : plugin.representation.structure.registry.types;\n  }\n\n  StructureComponentManager.getRepresentationTypes = getRepresentationTypes;\n\n  function getRepresentationTypesSelect(plugin, pivot, custom, label) {\n    var types = __spreadArray(__spreadArray([], custom, true), getRepresentationTypes(plugin, pivot), true);\n\n    return PD.Select(types[0][0], types, {\n      label: label\n    });\n  }\n})(StructureComponentManager || (StructureComponentManager = {}));","map":{"version":3,"sources":["../../../../src/mol-plugin-state/manager/structure/component.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __assign, __awaiter, __extends, __generator, __spreadArray } from \"tslib\";\r\nimport { VisualQualityOptions } from '../../../mol-geo/geometry/base';\r\nimport { InteractionsProvider } from '../../../mol-model-props/computed/interactions';\r\nimport { Structure, StructureElement, StructureSelection } from '../../../mol-model/structure';\r\nimport { structureAreEqual, structureAreIntersecting, structureIntersect, structureSubtract, structureUnion } from '../../../mol-model/structure/query/utils/structure-set';\r\nimport { setSubtreeVisibility } from '../../../mol-plugin/behavior/static/state';\r\nimport { Task } from '../../../mol-task';\r\nimport { UUID } from '../../../mol-util';\r\nimport { ColorNames } from '../../../mol-util/color/names';\r\nimport { objectForEach } from '../../../mol-util/object';\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { StatefulPluginComponent } from '../../component';\r\nimport { setStructureOverpaint } from '../../helpers/structure-overpaint';\r\nimport { createStructureColorThemeParams, createStructureSizeThemeParams } from '../../helpers/structure-representation-params';\r\nimport { StructureSelectionQueries } from '../../helpers/structure-selection-query';\r\nimport { StructureRepresentation3D } from '../../transforms/representation';\r\nimport { Clipping } from '../../../mol-theme/clipping';\r\nimport { setStructureClipping } from '../../helpers/structure-clipping';\r\nimport { setStructureTransparency } from '../../helpers/structure-transparency';\r\nimport { StructureFocusRepresentation } from '../../../mol-plugin/behavior/dynamic/selection/structure-focus-representation';\r\nexport { StructureComponentManager };\r\nvar StructureComponentManager = /** @class */ (function (_super) {\r\n    __extends(StructureComponentManager, _super);\r\n    function StructureComponentManager(plugin) {\r\n        var _this = _super.call(this, { options: PD.getDefaultValues(StructureComponentManager.OptionsParams) }) || this;\r\n        _this.plugin = plugin;\r\n        _this.events = {\r\n            optionsUpdated: _this.ev()\r\n        };\r\n        return _this;\r\n    }\r\n    Object.defineProperty(StructureComponentManager.prototype, \"currentStructures\", {\r\n        get: function () {\r\n            return this.plugin.managers.structure.hierarchy.selection.structures;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StructureComponentManager.prototype, \"pivotStructure\", {\r\n        get: function () {\r\n            return this.currentStructures[0];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StructureComponentManager.prototype.setOptions = function (options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var interactionChanged, update, _i, _a, s, _b, _c, c;\r\n            var _this = this;\r\n            return __generator(this, function (_d) {\r\n                interactionChanged = options.interactions !== this.state.options.interactions;\r\n                this.updateState({ options: options });\r\n                this.events.optionsUpdated.next(void 0);\r\n                update = this.dataState.build();\r\n                for (_i = 0, _a = this.currentStructures; _i < _a.length; _i++) {\r\n                    s = _a[_i];\r\n                    for (_b = 0, _c = s.components; _b < _c.length; _b++) {\r\n                        c = _c[_b];\r\n                        this.updateReprParams(update, c);\r\n                    }\r\n                }\r\n                return [2 /*return*/, this.plugin.dataTransaction(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                        return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0: return [4 /*yield*/, update.commit()];\r\n                                case 1:\r\n                                    _a.sent();\r\n                                    return [4 /*yield*/, this.plugin.state.updateBehavior(StructureFocusRepresentation, function (p) {\r\n                                            p.ignoreHydrogens = !options.showHydrogens;\r\n                                        })];\r\n                                case 2:\r\n                                    _a.sent();\r\n                                    if (!interactionChanged) return [3 /*break*/, 4];\r\n                                    return [4 /*yield*/, this.updateInterationProps()];\r\n                                case 3:\r\n                                    _a.sent();\r\n                                    _a.label = 4;\r\n                                case 4: return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    }); })];\r\n            });\r\n        });\r\n    };\r\n    StructureComponentManager.prototype.updateReprParams = function (update, component) {\r\n        var _a = this.state.options, showHydrogens = _a.showHydrogens, quality = _a.visualQuality;\r\n        var ignoreHydrogens = !showHydrogens;\r\n        for (var _i = 0, _b = component.representations; _i < _b.length; _i++) {\r\n            var r = _b[_i];\r\n            if (r.cell.transform.transformer !== StructureRepresentation3D)\r\n                continue;\r\n            var params = r.cell.transform.params;\r\n            if (!!params.type.params.ignoreHydrogens !== ignoreHydrogens || params.type.params.quality !== quality) {\r\n                update.to(r.cell).update(function (old) {\r\n                    old.type.params.ignoreHydrogens = ignoreHydrogens;\r\n                    old.type.params.quality = quality;\r\n                });\r\n            }\r\n        }\r\n    };\r\n    StructureComponentManager.prototype.updateInterationProps = function () {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _i, _d, s, interactionParams, oldParams, pd, params;\r\n            var _this = this;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _i = 0, _d = this.currentStructures;\r\n                        _e.label = 1;\r\n                    case 1:\r\n                        if (!(_i < _d.length)) return [3 /*break*/, 6];\r\n                        s = _d[_i];\r\n                        interactionParams = InteractionsProvider.getParams((_a = s.cell.obj) === null || _a === void 0 ? void 0 : _a.data);\r\n                        if (!s.properties) return [3 /*break*/, 3];\r\n                        oldParams = (_b = s.properties.cell.transform.params) === null || _b === void 0 ? void 0 : _b.properties[InteractionsProvider.descriptor.name];\r\n                        if (PD.areEqual(interactionParams, oldParams, this.state.options.interactions))\r\n                            return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.dataState.build().to(s.properties.cell)\r\n                                .update(function (old) {\r\n                                old.properties[InteractionsProvider.descriptor.name] = _this.state.options.interactions;\r\n                            })\r\n                                .commit()];\r\n                    case 2:\r\n                        _e.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3:\r\n                        pd = this.plugin.customStructureProperties.getParams((_c = s.cell.obj) === null || _c === void 0 ? void 0 : _c.data);\r\n                        params = PD.getDefaultValues(pd);\r\n                        if (PD.areEqual(interactionParams, params.properties[InteractionsProvider.descriptor.name], this.state.options.interactions))\r\n                            return [3 /*break*/, 5];\r\n                        params.properties[InteractionsProvider.descriptor.name] = this.state.options.interactions;\r\n                        return [4 /*yield*/, this.plugin.builders.structure.insertStructureProperties(s.cell, params)];\r\n                    case 4:\r\n                        _e.sent();\r\n                        _e.label = 5;\r\n                    case 5:\r\n                        _i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    StructureComponentManager.prototype.applyPreset = function (structures, provider, params) {\r\n        var _this = this;\r\n        return this.plugin.dataTransaction(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var _i, structures_1, s, preset;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _i = 0, structures_1 = structures;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!(_i < structures_1.length)) return [3 /*break*/, 5];\r\n                        s = structures_1[_i];\r\n                        return [4 /*yield*/, this.plugin.builders.structure.representation.applyPreset(s.cell, provider, params)];\r\n                    case 2:\r\n                        preset = _a.sent();\r\n                        return [4 /*yield*/, this.syncPreset(s, preset)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        _i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); }, { canUndo: 'Preset' });\r\n    };\r\n    StructureComponentManager.prototype.syncPreset = function (root, preset) {\r\n        if (!preset || !preset.components)\r\n            return this.clearComponents([root]);\r\n        var keptRefs = new Set();\r\n        objectForEach(preset.components, function (c) {\r\n            if (c)\r\n                keptRefs.add(c.ref);\r\n        });\r\n        if (preset.representations) {\r\n            objectForEach(preset.representations, function (r) {\r\n                if (r)\r\n                    keptRefs.add(r.ref);\r\n            });\r\n        }\r\n        if (keptRefs.size === 0)\r\n            return this.clearComponents([root]);\r\n        var changed = false;\r\n        var update = this.dataState.build();\r\n        var sync = function (r) {\r\n            if (!keptRefs.has(r.cell.transform.ref)) {\r\n                changed = true;\r\n                update.delete(r.cell);\r\n            }\r\n        };\r\n        for (var _i = 0, _a = root.components; _i < _a.length; _i++) {\r\n            var c = _a[_i];\r\n            sync(c);\r\n            for (var _b = 0, _c = c.representations; _b < _c.length; _b++) {\r\n                var r = _c[_b];\r\n                sync(r);\r\n            }\r\n            if (c.genericRepresentations) {\r\n                for (var _d = 0, _e = c.genericRepresentations; _d < _e.length; _d++) {\r\n                    var r = _e[_d];\r\n                    sync(r);\r\n                }\r\n            }\r\n        }\r\n        if (root.genericRepresentations) {\r\n            for (var _f = 0, _g = root.genericRepresentations; _f < _g.length; _f++) {\r\n                var r = _g[_f];\r\n                sync(r);\r\n            }\r\n        }\r\n        if (changed)\r\n            return update.commit();\r\n    };\r\n    StructureComponentManager.prototype.clear = function (structures) {\r\n        return this.clearComponents(structures);\r\n    };\r\n    StructureComponentManager.prototype.selectThis = function (components) {\r\n        var _a;\r\n        var mng = this.plugin.managers.structure.selection;\r\n        mng.clear();\r\n        for (var _i = 0, components_1 = components; _i < components_1.length; _i++) {\r\n            var c = components_1[_i];\r\n            var loci = Structure.toSubStructureElementLoci(c.structure.cell.obj.data, (_a = c.cell.obj) === null || _a === void 0 ? void 0 : _a.data);\r\n            mng.fromLoci('set', loci);\r\n        }\r\n    };\r\n    StructureComponentManager.prototype.canBeModified = function (ref) {\r\n        return this.plugin.builders.structure.isComponentTransform(ref.cell);\r\n    };\r\n    StructureComponentManager.prototype.modifyByCurrentSelection = function (components, action) {\r\n        var _this = this;\r\n        return this.plugin.runTask(Task.create('Modify Component', function (taskCtx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var b, _i, components_2, c, selection;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        b = this.dataState.build();\r\n                        for (_i = 0, components_2 = components; _i < components_2.length; _i++) {\r\n                            c = components_2[_i];\r\n                            if (!this.canBeModified(c))\r\n                                continue;\r\n                            selection = this.plugin.managers.structure.selection.getStructure(c.structure.cell.obj.data);\r\n                            if (!selection || selection.elementCount === 0)\r\n                                continue;\r\n                            this.modifyComponent(b, c, selection, action);\r\n                        }\r\n                        return [4 /*yield*/, this.dataState.updateTree(b, { canUndo: 'Modify Selection' }).runInContext(taskCtx)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); }));\r\n    };\r\n    StructureComponentManager.prototype.toggleVisibility = function (components, reprPivot) {\r\n        if (components.length === 0)\r\n            return;\r\n        if (!reprPivot) {\r\n            var isHidden = !components[0].cell.state.isHidden;\r\n            for (var _i = 0, components_3 = components; _i < components_3.length; _i++) {\r\n                var c = components_3[_i];\r\n                setSubtreeVisibility(this.dataState, c.cell.transform.ref, isHidden);\r\n            }\r\n        }\r\n        else {\r\n            var index = components[0].representations.indexOf(reprPivot);\r\n            var isHidden = !reprPivot.cell.state.isHidden;\r\n            for (var _a = 0, components_4 = components; _a < components_4.length; _a++) {\r\n                var c = components_4[_a];\r\n                // TODO: is it ok to use just the index here? Could possible lead to ugly edge cases, but perhaps not worth the trouble to \"fix\".\r\n                var repr = c.representations[index];\r\n                if (!repr)\r\n                    continue;\r\n                setSubtreeVisibility(this.dataState, repr.cell.transform.ref, isHidden);\r\n            }\r\n        }\r\n    };\r\n    StructureComponentManager.prototype.removeRepresentations = function (components, pivot) {\r\n        if (components.length === 0)\r\n            return;\r\n        var toRemove = [];\r\n        if (pivot) {\r\n            var index = components[0].representations.indexOf(pivot);\r\n            if (index < 0)\r\n                return;\r\n            for (var _i = 0, components_5 = components; _i < components_5.length; _i++) {\r\n                var c = components_5[_i];\r\n                if (c.representations[index])\r\n                    toRemove.push(c.representations[index]);\r\n            }\r\n        }\r\n        else {\r\n            for (var _a = 0, components_6 = components; _a < components_6.length; _a++) {\r\n                var c = components_6[_a];\r\n                for (var _b = 0, _c = c.representations; _b < _c.length; _b++) {\r\n                    var r = _c[_b];\r\n                    toRemove.push(r);\r\n                }\r\n            }\r\n        }\r\n        return this.plugin.managers.structure.hierarchy.remove(toRemove, true);\r\n    };\r\n    StructureComponentManager.prototype.updateRepresentations = function (components, pivot, params) {\r\n        if (components.length === 0)\r\n            return Promise.resolve();\r\n        var index = components[0].representations.indexOf(pivot);\r\n        if (index < 0)\r\n            return Promise.resolve();\r\n        var update = this.dataState.build();\r\n        for (var _i = 0, components_7 = components; _i < components_7.length; _i++) {\r\n            var c = components_7[_i];\r\n            // TODO: is it ok to use just the index here? Could possible lead to ugly edge cases, but perhaps not worth the trouble to \"fix\".\r\n            var repr = c.representations[index];\r\n            if (!repr)\r\n                continue;\r\n            if (repr.cell.transform.transformer !== pivot.cell.transform.transformer)\r\n                continue;\r\n            update.to(repr.cell).update(params);\r\n        }\r\n        return update.commit({ canUndo: 'Update Representation' });\r\n    };\r\n    StructureComponentManager.prototype.updateRepresentationsTheme = function (components, paramsOrProvider) {\r\n        var _a, _b, _c, _d;\r\n        if (components.length === 0)\r\n            return;\r\n        var update = this.dataState.build();\r\n        for (var _i = 0, components_8 = components; _i < components_8.length; _i++) {\r\n            var c = components_8[_i];\r\n            var _loop_1 = function (repr) {\r\n                var old = repr.cell.transform.params;\r\n                var params = typeof paramsOrProvider === 'function' ? paramsOrProvider(c, repr) : paramsOrProvider;\r\n                var colorTheme = params.color === 'default'\r\n                    ? createStructureColorThemeParams(this_1.plugin, (_a = c.structure.cell.obj) === null || _a === void 0 ? void 0 : _a.data, old === null || old === void 0 ? void 0 : old.type.name)\r\n                    : params.color\r\n                        ? createStructureColorThemeParams(this_1.plugin, (_b = c.structure.cell.obj) === null || _b === void 0 ? void 0 : _b.data, old === null || old === void 0 ? void 0 : old.type.name, params.color, params.colorParams)\r\n                        : void 0;\r\n                var sizeTheme = params.size === 'default'\r\n                    ? createStructureSizeThemeParams(this_1.plugin, (_c = c.structure.cell.obj) === null || _c === void 0 ? void 0 : _c.data, old === null || old === void 0 ? void 0 : old.type.name)\r\n                    : params.color\r\n                        ? createStructureSizeThemeParams(this_1.plugin, (_d = c.structure.cell.obj) === null || _d === void 0 ? void 0 : _d.data, old === null || old === void 0 ? void 0 : old.type.name, params.size, params.sizeParams)\r\n                        : void 0;\r\n                if (colorTheme || sizeTheme) {\r\n                    update.to(repr.cell).update(function (prev) {\r\n                        if (colorTheme)\r\n                            prev.colorTheme = colorTheme;\r\n                        if (sizeTheme)\r\n                            prev.sizeTheme = sizeTheme;\r\n                    });\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            for (var _e = 0, _f = c.representations; _e < _f.length; _e++) {\r\n                var repr = _f[_e];\r\n                _loop_1(repr);\r\n            }\r\n        }\r\n        return update.commit({ canUndo: 'Update Theme' });\r\n    };\r\n    StructureComponentManager.prototype.addRepresentation = function (components, type) {\r\n        var _this = this;\r\n        if (components.length === 0)\r\n            return;\r\n        var _a = this.state.options, showHydrogens = _a.showHydrogens, quality = _a.visualQuality;\r\n        var ignoreHydrogens = !showHydrogens;\r\n        var typeParams = { ignoreHydrogens: ignoreHydrogens, quality: quality };\r\n        return this.plugin.dataTransaction(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var _i, components_9, component;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _i = 0, components_9 = components;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!(_i < components_9.length)) return [3 /*break*/, 4];\r\n                        component = components_9[_i];\r\n                        return [4 /*yield*/, this.plugin.builders.structure.representation.addRepresentation(component.cell, {\r\n                                type: this.plugin.representation.structure.registry.get(type),\r\n                                typeParams: typeParams\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); }, { canUndo: 'Add Representation' });\r\n    };\r\n    StructureComponentManager.prototype.tryFindComponent = function (structure, selection) {\r\n        var _this = this;\r\n        if (structure.components.length === 0)\r\n            return;\r\n        return this.plugin.runTask(Task.create('Find Component', function (taskCtx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var data, sel, _a, _b, _i, _c, c, comp;\r\n            var _d, _e;\r\n            return __generator(this, function (_f) {\r\n                switch (_f.label) {\r\n                    case 0:\r\n                        data = (_d = structure.cell.obj) === null || _d === void 0 ? void 0 : _d.data;\r\n                        if (!data)\r\n                            return [2 /*return*/];\r\n                        _b = (_a = StructureSelection).unionStructure;\r\n                        return [4 /*yield*/, selection.getSelection(this.plugin, taskCtx, data)];\r\n                    case 1:\r\n                        sel = _b.apply(_a, [_f.sent()]);\r\n                        for (_i = 0, _c = structure.components; _i < _c.length; _i++) {\r\n                            c = _c[_i];\r\n                            comp = (_e = c.cell.obj) === null || _e === void 0 ? void 0 : _e.data;\r\n                            if (!comp || !c.cell.parent)\r\n                                continue;\r\n                            if (structureAreEqual(sel, comp))\r\n                                return [2 /*return*/, c.cell];\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); }));\r\n    };\r\n    StructureComponentManager.prototype.add = function (params, structures) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.plugin.dataTransaction(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                        var xs, _a, showHydrogens, quality, ignoreHydrogens, typeParams, componentKey, _i, xs_1, s, component;\r\n                        return __generator(this, function (_b) {\r\n                            switch (_b.label) {\r\n                                case 0:\r\n                                    xs = structures || this.currentStructures;\r\n                                    if (xs.length === 0)\r\n                                        return [2 /*return*/];\r\n                                    _a = this.state.options, showHydrogens = _a.showHydrogens, quality = _a.visualQuality;\r\n                                    ignoreHydrogens = !showHydrogens;\r\n                                    typeParams = { ignoreHydrogens: ignoreHydrogens, quality: quality };\r\n                                    componentKey = UUID.create22();\r\n                                    _i = 0, xs_1 = xs;\r\n                                    _b.label = 1;\r\n                                case 1:\r\n                                    if (!(_i < xs_1.length)) return [3 /*break*/, 8];\r\n                                    s = xs_1[_i];\r\n                                    component = void 0;\r\n                                    if (!params.options.checkExisting) return [3 /*break*/, 3];\r\n                                    return [4 /*yield*/, this.tryFindComponent(s, params.selection)];\r\n                                case 2:\r\n                                    component = _b.sent();\r\n                                    _b.label = 3;\r\n                                case 3:\r\n                                    if (!!component) return [3 /*break*/, 5];\r\n                                    return [4 /*yield*/, this.plugin.builders.structure.tryCreateComponentFromSelection(s.cell, params.selection, componentKey, {\r\n                                            label: params.options.label || (params.selection === StructureSelectionQueries.current ? 'Custom Selection' : ''),\r\n                                        })];\r\n                                case 4:\r\n                                    component = _b.sent();\r\n                                    _b.label = 5;\r\n                                case 5:\r\n                                    if (params.representation === 'none' || !component)\r\n                                        return [3 /*break*/, 7];\r\n                                    return [4 /*yield*/, this.plugin.builders.structure.representation.addRepresentation(component, {\r\n                                            type: this.plugin.representation.structure.registry.get(params.representation),\r\n                                            typeParams: typeParams\r\n                                        })];\r\n                                case 6:\r\n                                    _b.sent();\r\n                                    _b.label = 7;\r\n                                case 7:\r\n                                    _i++;\r\n                                    return [3 /*break*/, 1];\r\n                                case 8: return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    }); }, { canUndo: 'Add Selection' })];\r\n            });\r\n        });\r\n    };\r\n    StructureComponentManager.prototype.applyTheme = function (params, structures) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.plugin.dataTransaction(function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n                        var xs, getLoci, _i, xs_2, s, p, p, p;\r\n                        var _this = this;\r\n                        return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0:\r\n                                    xs = structures || this.currentStructures;\r\n                                    if (xs.length === 0)\r\n                                        return [2 /*return*/];\r\n                                    getLoci = function (s) { return __awaiter(_this, void 0, void 0, function () { var _a, _b; return __generator(this, function (_c) {\r\n                                        switch (_c.label) {\r\n                                            case 0:\r\n                                                _b = (_a = StructureSelection).toLociWithSourceUnits;\r\n                                                return [4 /*yield*/, params.selection.getSelection(this.plugin, ctx, s)];\r\n                                            case 1: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\r\n                                        }\r\n                                    }); }); };\r\n                                    _i = 0, xs_2 = xs;\r\n                                    _a.label = 1;\r\n                                case 1:\r\n                                    if (!(_i < xs_2.length)) return [3 /*break*/, 10];\r\n                                    s = xs_2[_i];\r\n                                    if (!(params.action.name === 'reset')) return [3 /*break*/, 3];\r\n                                    return [4 /*yield*/, setStructureOverpaint(this.plugin, s.components, -1, getLoci, params.representations)];\r\n                                case 2:\r\n                                    _a.sent();\r\n                                    return [3 /*break*/, 9];\r\n                                case 3:\r\n                                    if (!(params.action.name === 'color')) return [3 /*break*/, 5];\r\n                                    p = params.action.params;\r\n                                    return [4 /*yield*/, setStructureOverpaint(this.plugin, s.components, p.color, getLoci, params.representations)];\r\n                                case 4:\r\n                                    _a.sent();\r\n                                    return [3 /*break*/, 9];\r\n                                case 5:\r\n                                    if (!(params.action.name === 'transparency')) return [3 /*break*/, 7];\r\n                                    p = params.action.params;\r\n                                    return [4 /*yield*/, setStructureTransparency(this.plugin, s.components, p.value, getLoci, params.representations)];\r\n                                case 6:\r\n                                    _a.sent();\r\n                                    return [3 /*break*/, 9];\r\n                                case 7:\r\n                                    if (!(params.action.name === 'clipping')) return [3 /*break*/, 9];\r\n                                    p = params.action.params;\r\n                                    return [4 /*yield*/, setStructureClipping(this.plugin, s.components, Clipping.Groups.fromNames(p.excludeGroups), getLoci, params.representations)];\r\n                                case 8:\r\n                                    _a.sent();\r\n                                    _a.label = 9;\r\n                                case 9:\r\n                                    _i++;\r\n                                    return [3 /*break*/, 1];\r\n                                case 10: return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    }); }, { canUndo: 'Apply Theme' })];\r\n            });\r\n        });\r\n    };\r\n    StructureComponentManager.prototype.modifyComponent = function (builder, component, by, action) {\r\n        var _a, _b, _c;\r\n        var structure = (_a = component.cell.obj) === null || _a === void 0 ? void 0 : _a.data;\r\n        if (!structure)\r\n            return;\r\n        if ((action === 'subtract' || action === 'intersect') && !structureAreIntersecting(structure, by))\r\n            return;\r\n        var parent = (_b = component.structure.cell.obj) === null || _b === void 0 ? void 0 : _b.data;\r\n        var modified = action === 'union'\r\n            ? structureUnion(parent, [structure, by])\r\n            : action === 'intersect'\r\n                ? structureIntersect(structure, by)\r\n                : structureSubtract(structure, by);\r\n        if (modified.elementCount === 0) {\r\n            builder.delete(component.cell.transform.ref);\r\n        }\r\n        else {\r\n            var bundle = StructureElement.Bundle.fromSubStructure(parent, modified);\r\n            var params = {\r\n                type: { name: 'bundle', params: bundle },\r\n                nullIfEmpty: true,\r\n                label: (_c = component.cell.obj) === null || _c === void 0 ? void 0 : _c.label\r\n            };\r\n            builder.to(component.cell).update(params);\r\n        }\r\n    };\r\n    StructureComponentManager.prototype.updateLabel = function (component, label) {\r\n        var _a, _b;\r\n        var params = {\r\n            type: (_a = component.cell.params) === null || _a === void 0 ? void 0 : _a.values.type,\r\n            nullIfEmpty: (_b = component.cell.params) === null || _b === void 0 ? void 0 : _b.values.nullIfEmpty,\r\n            label: label\r\n        };\r\n        this.dataState.build().to(component.cell).update(params).commit();\r\n    };\r\n    Object.defineProperty(StructureComponentManager.prototype, \"dataState\", {\r\n        get: function () {\r\n            return this.plugin.state.data;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StructureComponentManager.prototype.clearComponents = function (structures) {\r\n        var deletes = this.dataState.build();\r\n        for (var _i = 0, structures_2 = structures; _i < structures_2.length; _i++) {\r\n            var s = structures_2[_i];\r\n            for (var _a = 0, _b = s.components; _a < _b.length; _a++) {\r\n                var c = _b[_a];\r\n                deletes.delete(c.cell.transform.ref);\r\n            }\r\n        }\r\n        return deletes.commit({ canUndo: 'Clear Selections' });\r\n    };\r\n    return StructureComponentManager;\r\n}(StatefulPluginComponent));\r\n(function (StructureComponentManager) {\r\n    StructureComponentManager.OptionsParams = {\r\n        showHydrogens: PD.Boolean(true, { description: 'Toggle display of hydrogen atoms in representations' }),\r\n        visualQuality: PD.Select('auto', VisualQualityOptions, { description: 'Control the visual/rendering quality of representations' }),\r\n        interactions: PD.Group(InteractionsProvider.defaultParams, { label: 'Non-covalent Interactions' }),\r\n    };\r\n    function getAddParams(plugin, params) {\r\n        var options = plugin.query.structure.registry.options;\r\n        params = __assign({ pivot: plugin.managers.structure.component.pivotStructure, allowNone: true, hideSelection: false, checkExisting: false }, params);\r\n        return {\r\n            selection: PD.Select(options[1][0], options, { isHidden: params === null || params === void 0 ? void 0 : params.hideSelection }),\r\n            representation: getRepresentationTypesSelect(plugin, params === null || params === void 0 ? void 0 : params.pivot, (params === null || params === void 0 ? void 0 : params.allowNone) ? [['none', '< Create Later >']] : []),\r\n            options: PD.Group({\r\n                label: PD.Text(''),\r\n                checkExisting: PD.Boolean(!!(params === null || params === void 0 ? void 0 : params.checkExisting), { help: function () { return ({ description: 'Checks if a selection with the specifield elements already exists to avoid creating duplicate components.' }); } }),\r\n            })\r\n        };\r\n    }\r\n    StructureComponentManager.getAddParams = getAddParams;\r\n    function getThemeParams(plugin, pivot) {\r\n        var options = plugin.query.structure.registry.options;\r\n        return {\r\n            selection: PD.Select(options[1][0], options, { isHidden: false }),\r\n            action: PD.MappedStatic('color', {\r\n                color: PD.Group({\r\n                    color: PD.Color(ColorNames.blue, { isExpanded: true }),\r\n                }, { isFlat: true }),\r\n                reset: PD.EmptyGroup({ label: 'Reset Color' }),\r\n                transparency: PD.Group({\r\n                    value: PD.Numeric(0.5, { min: 0, max: 1, step: 0.01 }),\r\n                }, { isFlat: true }),\r\n                clipping: PD.Group({\r\n                    excludeGroups: PD.MultiSelect([], PD.objectToOptions(Clipping.Groups.Names)),\r\n                }, { isFlat: true }),\r\n            }),\r\n            representations: PD.MultiSelect([], getRepresentationTypes(plugin, pivot), { emptyValue: 'All' })\r\n        };\r\n    }\r\n    StructureComponentManager.getThemeParams = getThemeParams;\r\n    function getRepresentationTypes(plugin, pivot) {\r\n        var _a, _b;\r\n        return ((_a = pivot === null || pivot === void 0 ? void 0 : pivot.cell.obj) === null || _a === void 0 ? void 0 : _a.data)\r\n            ? plugin.representation.structure.registry.getApplicableTypes((_b = pivot.cell.obj) === null || _b === void 0 ? void 0 : _b.data)\r\n            : plugin.representation.structure.registry.types;\r\n    }\r\n    StructureComponentManager.getRepresentationTypes = getRepresentationTypes;\r\n    function getRepresentationTypesSelect(plugin, pivot, custom, label) {\r\n        var types = __spreadArray(__spreadArray([], custom, true), getRepresentationTypes(plugin, pivot), true);\r\n        return PD.Select(types[0][0], types, { label: label });\r\n    }\r\n})(StructureComponentManager || (StructureComponentManager = {}));\r\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}