{"ast":null,"code":"/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { memoize1 } from '../../../mol-util/memoize';\nvar ChainIdAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nfunction _getChainId(index) {\n  var n = ChainIdAlphabet.length;\n  var j = index;\n  var k = 0;\n  var chainId = ChainIdAlphabet[j % n];\n\n  while (j >= n) {\n    j = Math.floor(j / n);\n    chainId += ChainIdAlphabet[j % n];\n    k += 1;\n  }\n\n  if (k >= 5) {\n    console.warn('getChainId overflow');\n  }\n\n  return chainId;\n}\n\nexport var getChainId = memoize1(_getChainId);","map":{"version":3,"sources":["../../../../src/mol-model-formats/structure/common/util.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,SAAS,QAAT,QAAyB,2BAAzB;AAEA,IAAM,eAAe,GAAG,4BAAxB;;AAEA,SAAS,WAAT,CAAqB,KAArB,EAAkC;AAC9B,MAAM,CAAC,GAAG,eAAe,CAAC,MAA1B;AACA,MAAI,CAAC,GAAG,KAAR;AACA,MAAI,CAAC,GAAG,CAAR;AACA,MAAI,OAAO,GAAG,eAAe,CAAC,CAAC,GAAG,CAAL,CAA7B;;AACA,SAAO,CAAC,IAAI,CAAZ,EAAe;AACX,IAAA,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,GAAG,CAAf,CAAJ;AACA,IAAA,OAAO,IAAI,eAAe,CAAC,CAAC,GAAG,CAAL,CAA1B;AACA,IAAA,CAAC,IAAI,CAAL;AACH;;AACD,MAAI,CAAC,IAAI,CAAT,EAAY;AACR,IAAA,OAAO,CAAC,IAAR,CAAa,qBAAb;AACH;;AACD,SAAO,OAAP;AACH;;AAED,OAAO,IAAM,UAAU,GAAG,QAAQ,CAAC,WAAD,CAA3B","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { memoize1 } from '../../../mol-util/memoize';\r\nvar ChainIdAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\nfunction _getChainId(index) {\r\n    var n = ChainIdAlphabet.length;\r\n    var j = index;\r\n    var k = 0;\r\n    var chainId = ChainIdAlphabet[j % n];\r\n    while (j >= n) {\r\n        j = Math.floor(j / n);\r\n        chainId += ChainIdAlphabet[j % n];\r\n        k += 1;\r\n    }\r\n    if (k >= 5) {\r\n        console.warn('getChainId overflow');\r\n    }\r\n    return chainId;\r\n}\r\nexport var getChainId = memoize1(_getChainId);\r\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}