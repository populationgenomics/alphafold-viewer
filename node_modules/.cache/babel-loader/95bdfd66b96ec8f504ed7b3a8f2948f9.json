{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Sphere3D } from '../../../../mol-math/geometry';\nimport { BoundaryHelper } from '../../../../mol-math/geometry/boundary-helper';\nvar tmpSphere = Sphere3D();\nvar boundaryHelperCoarse = new BoundaryHelper('14');\nvar boundaryHelperFine = new BoundaryHelper('98');\n\nfunction getBoundaryHelper(count) {\n  return count > 500 ? boundaryHelperCoarse : boundaryHelperFine;\n}\n\nexport function computeStructureBoundary(s) {\n  var units = s.units;\n  var boundaryHelper = getBoundaryHelper(units.length);\n  boundaryHelper.reset();\n\n  for (var i = 0, _i = units.length; i < _i; i++) {\n    var u = units[i];\n    var invariantBoundary = u.boundary;\n    var o = u.conformation.operator;\n\n    if (o.isIdentity) {\n      boundaryHelper.includeSphere(invariantBoundary.sphere);\n    } else {\n      Sphere3D.transform(tmpSphere, invariantBoundary.sphere, o.matrix);\n      boundaryHelper.includeSphere(tmpSphere);\n    }\n  }\n\n  boundaryHelper.finishedIncludeStep();\n\n  for (var i = 0, _i = units.length; i < _i; i++) {\n    var u = units[i];\n    var invariantBoundary = u.boundary;\n    var o = u.conformation.operator;\n\n    if (o.isIdentity) {\n      boundaryHelper.radiusSphere(invariantBoundary.sphere);\n    } else {\n      Sphere3D.transform(tmpSphere, invariantBoundary.sphere, o.matrix);\n      boundaryHelper.radiusSphere(tmpSphere);\n    }\n  }\n\n  return {\n    box: boundaryHelper.getBox(),\n    sphere: boundaryHelper.getSphere()\n  };\n}","map":{"version":3,"sources":["../../../../../src/mol-model/structure/structure/util/boundary.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;AAEH,SAAS,QAAT,QAAyB,+BAAzB;AAEA,SAAS,cAAT,QAA+B,+CAA/B;AAGA,IAAM,SAAS,GAAG,QAAQ,EAA1B;AAEA,IAAM,oBAAoB,GAAG,IAAI,cAAJ,CAAmB,IAAnB,CAA7B;AACA,IAAM,kBAAkB,GAAG,IAAI,cAAJ,CAAmB,IAAnB,CAA3B;;AACA,SAAS,iBAAT,CAA2B,KAA3B,EAAwC;AACpC,SAAO,KAAK,GAAG,GAAR,GAAc,oBAAd,GAAqC,kBAA5C;AACH;;AAED,OAAM,SAAU,wBAAV,CAAmC,CAAnC,EAA+C;AACzC,MAAA,KAAK,GAAK,CAAC,CAAN,KAAL;AAER,MAAM,cAAc,GAAG,iBAAiB,CAAC,KAAK,CAAC,MAAP,CAAxC;AACA,EAAA,cAAc,CAAC,KAAf;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,KAAK,CAAC,MAA3B,EAAmC,CAAC,GAAG,EAAvC,EAA2C,CAAC,EAA5C,EAAgD;AAC5C,QAAM,CAAC,GAAG,KAAK,CAAC,CAAD,CAAf;AACA,QAAM,iBAAiB,GAAG,CAAC,CAAC,QAA5B;AACA,QAAM,CAAC,GAAG,CAAC,CAAC,YAAF,CAAe,QAAzB;;AAEA,QAAI,CAAC,CAAC,UAAN,EAAkB;AACd,MAAA,cAAc,CAAC,aAAf,CAA6B,iBAAiB,CAAC,MAA/C;AACH,KAFD,MAEO;AACH,MAAA,QAAQ,CAAC,SAAT,CAAmB,SAAnB,EAA8B,iBAAiB,CAAC,MAAhD,EAAwD,CAAC,CAAC,MAA1D;AACA,MAAA,cAAc,CAAC,aAAf,CAA6B,SAA7B;AACH;AACJ;;AAED,EAAA,cAAc,CAAC,mBAAf;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,KAAK,CAAC,MAA3B,EAAmC,CAAC,GAAG,EAAvC,EAA2C,CAAC,EAA5C,EAAgD;AAC5C,QAAM,CAAC,GAAG,KAAK,CAAC,CAAD,CAAf;AACA,QAAM,iBAAiB,GAAG,CAAC,CAAC,QAA5B;AACA,QAAM,CAAC,GAAG,CAAC,CAAC,YAAF,CAAe,QAAzB;;AAEA,QAAI,CAAC,CAAC,UAAN,EAAkB;AACd,MAAA,cAAc,CAAC,YAAf,CAA4B,iBAAiB,CAAC,MAA9C;AACH,KAFD,MAEO;AACH,MAAA,QAAQ,CAAC,SAAT,CAAmB,SAAnB,EAA8B,iBAAiB,CAAC,MAAhD,EAAwD,CAAC,CAAC,MAA1D;AACA,MAAA,cAAc,CAAC,YAAf,CAA4B,SAA5B;AACH;AACJ;;AAED,SAAO;AAAE,IAAA,GAAG,EAAE,cAAc,CAAC,MAAf,EAAP;AAAgC,IAAA,MAAM,EAAE,cAAc,CAAC,SAAf;AAAxC,GAAP;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Sphere3D } from '../../../../mol-math/geometry';\r\nimport { BoundaryHelper } from '../../../../mol-math/geometry/boundary-helper';\r\nvar tmpSphere = Sphere3D();\r\nvar boundaryHelperCoarse = new BoundaryHelper('14');\r\nvar boundaryHelperFine = new BoundaryHelper('98');\r\nfunction getBoundaryHelper(count) {\r\n    return count > 500 ? boundaryHelperCoarse : boundaryHelperFine;\r\n}\r\nexport function computeStructureBoundary(s) {\r\n    var units = s.units;\r\n    var boundaryHelper = getBoundaryHelper(units.length);\r\n    boundaryHelper.reset();\r\n    for (var i = 0, _i = units.length; i < _i; i++) {\r\n        var u = units[i];\r\n        var invariantBoundary = u.boundary;\r\n        var o = u.conformation.operator;\r\n        if (o.isIdentity) {\r\n            boundaryHelper.includeSphere(invariantBoundary.sphere);\r\n        }\r\n        else {\r\n            Sphere3D.transform(tmpSphere, invariantBoundary.sphere, o.matrix);\r\n            boundaryHelper.includeSphere(tmpSphere);\r\n        }\r\n    }\r\n    boundaryHelper.finishedIncludeStep();\r\n    for (var i = 0, _i = units.length; i < _i; i++) {\r\n        var u = units[i];\r\n        var invariantBoundary = u.boundary;\r\n        var o = u.conformation.operator;\r\n        if (o.isIdentity) {\r\n            boundaryHelper.radiusSphere(invariantBoundary.sphere);\r\n        }\r\n        else {\r\n            Sphere3D.transform(tmpSphere, invariantBoundary.sphere, o.matrix);\r\n            boundaryHelper.radiusSphere(tmpSphere);\r\n        }\r\n    }\r\n    return { box: boundaryHelper.getBox(), sphere: boundaryHelper.getSphere() };\r\n}\r\n//# sourceMappingURL=boundary.js.map"]},"metadata":{},"sourceType":"module"}