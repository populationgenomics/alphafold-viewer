{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __awaiter, __generator } from \"tslib\";\nimport { parseDcd } from '../../mol-io/reader/dcd/parser';\nimport { parseGRO } from '../../mol-io/reader/gro/parser';\nimport { parsePDB } from '../../mol-io/reader/pdb/parser';\nimport { Mat4, Vec3 } from '../../mol-math/linear-algebra';\nimport { shapeFromPly } from '../../mol-model-formats/shape/ply';\nimport { coordinatesFromDcd } from '../../mol-model-formats/structure/dcd';\nimport { trajectoryFromGRO } from '../../mol-model-formats/structure/gro';\nimport { trajectoryFromMmCIF } from '../../mol-model-formats/structure/mmcif';\nimport { trajectoryFromPDB } from '../../mol-model-formats/structure/pdb';\nimport { topologyFromPsf } from '../../mol-model-formats/structure/psf';\nimport { Model, Queries, QueryContext, Structure, StructureElement, StructureSelection as Sel, ArrayTrajectory } from '../../mol-model/structure';\nimport { MolScriptBuilder } from '../../mol-script/language/builder';\nimport { Script } from '../../mol-script/script';\nimport { StateObject, StateTransformer } from '../../mol-state';\nimport { Task } from '../../mol-task';\nimport { deepEqual } from '../../mol-util';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { RootStructureDefinition } from '../helpers/root-structure';\nimport { createStructureComponent, StructureComponentParams, updateStructureComponent } from '../helpers/structure-component';\nimport { StructureQueryHelper } from '../helpers/structure-query';\nimport { StructureSelectionQueries } from '../helpers/structure-selection-query';\nimport { PluginStateObject as SO, PluginStateTransform } from '../objects';\nimport { parseMol } from '../../mol-io/reader/mol/parser';\nimport { trajectoryFromMol } from '../../mol-model-formats/structure/mol';\nimport { trajectoryFromCifCore } from '../../mol-model-formats/structure/cif-core';\nimport { trajectoryFromCube } from '../../mol-model-formats/structure/cube';\nimport { parseMol2 } from '../../mol-io/reader/mol2/parser';\nimport { trajectoryFromMol2 } from '../../mol-model-formats/structure/mol2';\nimport { parseXtc } from '../../mol-io/reader/xtc/parser';\nimport { coordinatesFromXtc } from '../../mol-model-formats/structure/xtc';\nimport { parseXyz } from '../../mol-io/reader/xyz/parser';\nimport { trajectoryFromXyz } from '../../mol-model-formats/structure/xyz';\nimport { parseSdf } from '../../mol-io/reader/sdf/parser';\nimport { trajectoryFromSdf } from '../../mol-model-formats/structure/sdf';\nexport { CoordinatesFromDcd };\nexport { CoordinatesFromXtc };\nexport { TopologyFromPsf };\nexport { TrajectoryFromModelAndCoordinates };\nexport { TrajectoryFromBlob };\nexport { TrajectoryFromMmCif };\nexport { TrajectoryFromPDB };\nexport { TrajectoryFromGRO };\nexport { TrajectoryFromXYZ };\nexport { TrajectoryFromMOL };\nexport { TrajectoryFromSDF };\nexport { TrajectoryFromMOL2 };\nexport { TrajectoryFromCube };\nexport { TrajectoryFromCifCore };\nexport { ModelFromTrajectory };\nexport { StructureFromTrajectory };\nexport { StructureFromModel };\nexport { TransformStructureConformation };\nexport { StructureSelectionFromExpression };\nexport { MultiStructureSelectionFromExpression };\nexport { StructureSelectionFromScript };\nexport { StructureSelectionFromBundle };\nexport { StructureComplexElement };\nexport { StructureComponent };\nexport { CustomModelProperties };\nexport { CustomStructureProperties };\nexport { ShapeFromPly };\nvar CoordinatesFromDcd = PluginStateTransform.BuiltIn({\n  name: 'coordinates-from-dcd',\n  display: {\n    name: 'Parse DCD',\n    description: 'Parse DCD binary data.'\n  },\n  from: [SO.Data.Binary],\n  to: SO.Molecule.Coordinates\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a;\n    return Task.create('Parse DCD', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var parsed, coordinates;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , parseDcd(a.data).runInContext(ctx)];\n\n            case 1:\n              parsed = _a.sent();\n              if (parsed.isError) throw new Error(parsed.message);\n              return [4\n              /*yield*/\n              , coordinatesFromDcd(parsed.result).runInContext(ctx)];\n\n            case 2:\n              coordinates = _a.sent();\n              return [2\n              /*return*/\n              , new SO.Molecule.Coordinates(coordinates, {\n                label: a.label,\n                description: 'Coordinates'\n              })];\n          }\n        });\n      });\n    });\n  }\n});\nvar CoordinatesFromXtc = PluginStateTransform.BuiltIn({\n  name: 'coordinates-from-xtc',\n  display: {\n    name: 'Parse XTC',\n    description: 'Parse XTC binary data.'\n  },\n  from: [SO.Data.Binary],\n  to: SO.Molecule.Coordinates\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a;\n    return Task.create('Parse XTC', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var parsed, coordinates;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , parseXtc(a.data).runInContext(ctx)];\n\n            case 1:\n              parsed = _a.sent();\n              if (parsed.isError) throw new Error(parsed.message);\n              return [4\n              /*yield*/\n              , coordinatesFromXtc(parsed.result).runInContext(ctx)];\n\n            case 2:\n              coordinates = _a.sent();\n              return [2\n              /*return*/\n              , new SO.Molecule.Coordinates(coordinates, {\n                label: a.label,\n                description: 'Coordinates'\n              })];\n          }\n        });\n      });\n    });\n  }\n});\nvar TopologyFromPsf = PluginStateTransform.BuiltIn({\n  name: 'topology-from-psf',\n  display: {\n    name: 'PSF Topology',\n    description: 'Parse PSF string data.'\n  },\n  from: [SO.Format.Psf],\n  to: SO.Molecule.Topology\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a;\n    return Task.create('Create Topology', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var topology;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , topologyFromPsf(a.data).runInContext(ctx)];\n\n            case 1:\n              topology = _a.sent();\n              return [2\n              /*return*/\n              , new SO.Molecule.Topology(topology, {\n                label: topology.label || a.label,\n                description: 'Topology'\n              })];\n          }\n        });\n      });\n    });\n  }\n});\n\nfunction getTrajectory(ctx, obj, coordinates) {\n  return __awaiter(this, void 0, void 0, function () {\n    var topology, model;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!(obj.type === SO.Molecule.Topology.type)) return [3\n          /*break*/\n          , 2];\n          topology = obj.data;\n          return [4\n          /*yield*/\n          , Model.trajectoryFromTopologyAndCoordinates(topology, coordinates).runInContext(ctx)];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent()];\n\n        case 2:\n          if (obj.type === SO.Molecule.Model.type) {\n            model = obj.data;\n            return [2\n            /*return*/\n            , Model.trajectoryFromModelAndCoordinates(model, coordinates)];\n          }\n\n          _a.label = 3;\n\n        case 3:\n          throw new Error('no model/topology found');\n      }\n    });\n  });\n}\n\nvar TrajectoryFromModelAndCoordinates = PluginStateTransform.BuiltIn({\n  name: 'trajectory-from-model-and-coordinates',\n  display: {\n    name: 'Trajectory from Topology & Coordinates',\n    description: 'Create a trajectory from existing model/topology and coordinates.'\n  },\n  from: SO.Root,\n  to: SO.Molecule.Trajectory,\n  params: {\n    modelRef: PD.Text('', {\n      isHidden: true\n    }),\n    coordinatesRef: PD.Text('', {\n      isHidden: true\n    })\n  }\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var params = _a.params,\n        dependencies = _a.dependencies;\n    return Task.create('Create trajectory from model/topology and coordinates', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var coordinates, trajectory, props;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              coordinates = dependencies[params.coordinatesRef].data;\n              return [4\n              /*yield*/\n              , getTrajectory(ctx, dependencies[params.modelRef], coordinates)];\n\n            case 1:\n              trajectory = _a.sent();\n              props = {\n                label: 'Trajectory',\n                description: trajectory.frameCount + \" model\" + (trajectory.frameCount === 1 ? '' : 's')\n              };\n              return [2\n              /*return*/\n              , new SO.Molecule.Trajectory(trajectory, props)];\n          }\n        });\n      });\n    });\n  }\n});\nvar TrajectoryFromBlob = PluginStateTransform.BuiltIn({\n  name: 'trajectory-from-blob',\n  display: {\n    name: 'Parse Blob',\n    description: 'Parse format blob into a single trajectory.'\n  },\n  from: SO.Format.Blob,\n  to: SO.Molecule.Trajectory\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a;\n    return Task.create('Parse Format Blob', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var models, _i, _a, e, block, xs, i, x, i, props;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              models = [];\n              _i = 0, _a = a.data;\n              _b.label = 1;\n\n            case 1:\n              if (!(_i < _a.length)) return [3\n              /*break*/\n              , 7];\n              e = _a[_i];\n              if (e.kind !== 'cif') return [3\n              /*break*/\n              , 6];\n              block = e.data.blocks[0];\n              return [4\n              /*yield*/\n              , trajectoryFromMmCIF(block).runInContext(ctx)];\n\n            case 2:\n              xs = _b.sent();\n              if (xs.frameCount === 0) throw new Error('No models found.');\n              i = 0;\n              _b.label = 3;\n\n            case 3:\n              if (!(i < xs.frameCount)) return [3\n              /*break*/\n              , 6];\n              return [4\n              /*yield*/\n              , Task.resolveInContext(xs.getFrameAtIndex(i), ctx)];\n\n            case 4:\n              x = _b.sent();\n              models.push(x);\n              _b.label = 5;\n\n            case 5:\n              i++;\n              return [3\n              /*break*/\n              , 3];\n\n            case 6:\n              _i++;\n              return [3\n              /*break*/\n              , 1];\n\n            case 7:\n              for (i = 0; i < models.length; i++) {\n                Model.TrajectoryInfo.set(models[i], {\n                  index: i,\n                  size: models.length\n                });\n              }\n\n              props = {\n                label: 'Trajectory',\n                description: models.length + \" model\" + (models.length === 1 ? '' : 's')\n              };\n              return [2\n              /*return*/\n              , new SO.Molecule.Trajectory(new ArrayTrajectory(models), props)];\n          }\n        });\n      });\n    });\n  }\n});\n\nfunction trajectoryProps(trajectory) {\n  var first = trajectory.representative;\n  return {\n    label: \"\" + first.entry,\n    description: trajectory.frameCount + \" model\" + (trajectory.frameCount === 1 ? '' : 's')\n  };\n}\n\nvar TrajectoryFromMmCif = PluginStateTransform.BuiltIn({\n  name: 'trajectory-from-mmcif',\n  display: {\n    name: 'Trajectory from mmCIF',\n    description: 'Identify and create all separate models in the specified CIF data block'\n  },\n  from: SO.Format.Cif,\n  to: SO.Molecule.Trajectory,\n  params: function (a) {\n    if (!a) {\n      return {\n        blockHeader: PD.Optional(PD.Text(void 0, {\n          description: 'Header of the block to parse. If none is specifed, the 1st data block in the file is used.'\n        }))\n      };\n    }\n\n    var blocks = a.data.blocks;\n    return {\n      blockHeader: PD.Optional(PD.Select(blocks[0] && blocks[0].header, blocks.map(function (b) {\n        return [b.header, b.header];\n      }), {\n        description: 'Header of the block to parse'\n      }))\n    };\n  }\n})({\n  isApplicable: function (a) {\n    return a.data.blocks.length > 0;\n  },\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Parse mmCIF', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var header, block, models, props;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              header = params.blockHeader || a.data.blocks[0].header;\n              block = a.data.blocks.find(function (b) {\n                return b.header === header;\n              });\n              if (!block) throw new Error(\"Data block '\" + [header] + \"' not found.\");\n              return [4\n              /*yield*/\n              , trajectoryFromMmCIF(block).runInContext(ctx)];\n\n            case 1:\n              models = _a.sent();\n              if (models.frameCount === 0) throw new Error('No models found.');\n              props = trajectoryProps(models);\n              return [2\n              /*return*/\n              , new SO.Molecule.Trajectory(models, props)];\n          }\n        });\n      });\n    });\n  }\n});\nvar TrajectoryFromPDB = PluginStateTransform.BuiltIn({\n  name: 'trajectory-from-pdb',\n  display: {\n    name: 'Parse PDB',\n    description: 'Parse PDB string and create trajectory.'\n  },\n  from: [SO.Data.String],\n  to: SO.Molecule.Trajectory,\n  params: {\n    isPdbqt: PD.Boolean(false)\n  }\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Parse PDB', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var parsed, models, props;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , parsePDB(a.data, a.label, params.isPdbqt).runInContext(ctx)];\n\n            case 1:\n              parsed = _a.sent();\n              if (parsed.isError) throw new Error(parsed.message);\n              return [4\n              /*yield*/\n              , trajectoryFromPDB(parsed.result).runInContext(ctx)];\n\n            case 2:\n              models = _a.sent();\n              props = trajectoryProps(models);\n              return [2\n              /*return*/\n              , new SO.Molecule.Trajectory(models, props)];\n          }\n        });\n      });\n    });\n  }\n});\nvar TrajectoryFromGRO = PluginStateTransform.BuiltIn({\n  name: 'trajectory-from-gro',\n  display: {\n    name: 'Parse GRO',\n    description: 'Parse GRO string and create trajectory.'\n  },\n  from: [SO.Data.String],\n  to: SO.Molecule.Trajectory\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a;\n    return Task.create('Parse GRO', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var parsed, models, props;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , parseGRO(a.data).runInContext(ctx)];\n\n            case 1:\n              parsed = _a.sent();\n              if (parsed.isError) throw new Error(parsed.message);\n              return [4\n              /*yield*/\n              , trajectoryFromGRO(parsed.result).runInContext(ctx)];\n\n            case 2:\n              models = _a.sent();\n              props = trajectoryProps(models);\n              return [2\n              /*return*/\n              , new SO.Molecule.Trajectory(models, props)];\n          }\n        });\n      });\n    });\n  }\n});\nvar TrajectoryFromXYZ = PluginStateTransform.BuiltIn({\n  name: 'trajectory-from-xyz',\n  display: {\n    name: 'Parse XYZ',\n    description: 'Parse XYZ string and create trajectory.'\n  },\n  from: [SO.Data.String],\n  to: SO.Molecule.Trajectory\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a;\n    return Task.create('Parse XYZ', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var parsed, models, props;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , parseXyz(a.data).runInContext(ctx)];\n\n            case 1:\n              parsed = _a.sent();\n              if (parsed.isError) throw new Error(parsed.message);\n              return [4\n              /*yield*/\n              , trajectoryFromXyz(parsed.result).runInContext(ctx)];\n\n            case 2:\n              models = _a.sent();\n              props = trajectoryProps(models);\n              return [2\n              /*return*/\n              , new SO.Molecule.Trajectory(models, props)];\n          }\n        });\n      });\n    });\n  }\n});\nvar TrajectoryFromMOL = PluginStateTransform.BuiltIn({\n  name: 'trajectory-from-mol',\n  display: {\n    name: 'Parse MOL',\n    description: 'Parse MOL string and create trajectory.'\n  },\n  from: [SO.Data.String],\n  to: SO.Molecule.Trajectory\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a;\n    return Task.create('Parse MOL', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var parsed, models, props;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , parseMol(a.data).runInContext(ctx)];\n\n            case 1:\n              parsed = _a.sent();\n              if (parsed.isError) throw new Error(parsed.message);\n              return [4\n              /*yield*/\n              , trajectoryFromMol(parsed.result).runInContext(ctx)];\n\n            case 2:\n              models = _a.sent();\n              props = trajectoryProps(models);\n              return [2\n              /*return*/\n              , new SO.Molecule.Trajectory(models, props)];\n          }\n        });\n      });\n    });\n  }\n});\nvar TrajectoryFromSDF = PluginStateTransform.BuiltIn({\n  name: 'trajectory-from-sdf',\n  display: {\n    name: 'Parse SDF',\n    description: 'Parse SDF string and create trajectory.'\n  },\n  from: [SO.Data.String],\n  to: SO.Molecule.Trajectory\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a;\n    return Task.create('Parse SDF', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var parsed, models, _i, _a, compound, traj_1, i, _b, _c, traj, props;\n\n        return __generator(this, function (_d) {\n          switch (_d.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , parseSdf(a.data).runInContext(ctx)];\n\n            case 1:\n              parsed = _d.sent();\n              if (parsed.isError) throw new Error(parsed.message);\n              models = [];\n              _i = 0, _a = parsed.result.compounds;\n              _d.label = 2;\n\n            case 2:\n              if (!(_i < _a.length)) return [3\n              /*break*/\n              , 8];\n              compound = _a[_i];\n              return [4\n              /*yield*/\n              , trajectoryFromSdf(compound).runInContext(ctx)];\n\n            case 3:\n              traj_1 = _d.sent();\n              i = 0;\n              _d.label = 4;\n\n            case 4:\n              if (!(i < traj_1.frameCount)) return [3\n              /*break*/\n              , 7];\n              _c = (_b = models).push;\n              return [4\n              /*yield*/\n              , Task.resolveInContext(traj_1.getFrameAtIndex(i), ctx)];\n\n            case 5:\n              _c.apply(_b, [_d.sent()]);\n\n              _d.label = 6;\n\n            case 6:\n              i++;\n              return [3\n              /*break*/\n              , 4];\n\n            case 7:\n              _i++;\n              return [3\n              /*break*/\n              , 2];\n\n            case 8:\n              traj = new ArrayTrajectory(models);\n              props = trajectoryProps(traj);\n              return [2\n              /*return*/\n              , new SO.Molecule.Trajectory(traj, props)];\n          }\n        });\n      });\n    });\n  }\n});\nvar TrajectoryFromMOL2 = PluginStateTransform.BuiltIn({\n  name: 'trajectory-from-mol2',\n  display: {\n    name: 'Parse MOL2',\n    description: 'Parse MOL2 string and create trajectory.'\n  },\n  from: [SO.Data.String],\n  to: SO.Molecule.Trajectory\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a;\n    return Task.create('Parse MOL2', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var parsed, models, props;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , parseMol2(a.data, a.label).runInContext(ctx)];\n\n            case 1:\n              parsed = _a.sent();\n              if (parsed.isError) throw new Error(parsed.message);\n              return [4\n              /*yield*/\n              , trajectoryFromMol2(parsed.result).runInContext(ctx)];\n\n            case 2:\n              models = _a.sent();\n              props = trajectoryProps(models);\n              return [2\n              /*return*/\n              , new SO.Molecule.Trajectory(models, props)];\n          }\n        });\n      });\n    });\n  }\n});\nvar TrajectoryFromCube = PluginStateTransform.BuiltIn({\n  name: 'trajectory-from-cube',\n  display: {\n    name: 'Parse Cube',\n    description: 'Parse Cube file to create a trajectory.'\n  },\n  from: SO.Format.Cube,\n  to: SO.Molecule.Trajectory\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a;\n    return Task.create('Parse MOL', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var models, props;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , trajectoryFromCube(a.data).runInContext(ctx)];\n\n            case 1:\n              models = _a.sent();\n              props = trajectoryProps(models);\n              return [2\n              /*return*/\n              , new SO.Molecule.Trajectory(models, props)];\n          }\n        });\n      });\n    });\n  }\n});\nvar TrajectoryFromCifCore = PluginStateTransform.BuiltIn({\n  name: 'trajectory-from-cif-core',\n  display: {\n    name: 'Parse CIF Core',\n    description: 'Identify and create all separate models in the specified CIF data block'\n  },\n  from: SO.Format.Cif,\n  to: SO.Molecule.Trajectory,\n  params: function (a) {\n    if (!a) {\n      return {\n        blockHeader: PD.Optional(PD.Text(void 0, {\n          description: 'Header of the block to parse. If none is specifed, the 1st data block in the file is used.'\n        }))\n      };\n    }\n\n    var blocks = a.data.blocks;\n    return {\n      blockHeader: PD.Optional(PD.Select(blocks[0] && blocks[0].header, blocks.map(function (b) {\n        return [b.header, b.header];\n      }), {\n        description: 'Header of the block to parse'\n      }))\n    };\n  }\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Parse CIF Core', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var header, block, models, props;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              header = params.blockHeader || a.data.blocks[0].header;\n              block = a.data.blocks.find(function (b) {\n                return b.header === header;\n              });\n              if (!block) throw new Error(\"Data block '\" + [header] + \"' not found.\");\n              return [4\n              /*yield*/\n              , trajectoryFromCifCore(block).runInContext(ctx)];\n\n            case 1:\n              models = _a.sent();\n              if (models.frameCount === 0) throw new Error('No models found.');\n              props = trajectoryProps(models);\n              return [2\n              /*return*/\n              , new SO.Molecule.Trajectory(models, props)];\n          }\n        });\n      });\n    });\n  }\n});\n\nvar plus1 = function (v) {\n  return v + 1;\n},\n    minus1 = function (v) {\n  return v - 1;\n};\n\nvar ModelFromTrajectory = PluginStateTransform.BuiltIn({\n  name: 'model-from-trajectory',\n  display: {\n    name: 'Molecular Model',\n    description: 'Create a molecular model from specified index in a trajectory.'\n  },\n  from: SO.Molecule.Trajectory,\n  to: SO.Molecule.Model,\n  params: function (a) {\n    if (!a) {\n      return {\n        modelIndex: PD.Numeric(0, {}, {\n          description: 'Zero-based index of the model',\n          immediateUpdate: true\n        })\n      };\n    }\n\n    return {\n      modelIndex: PD.Converted(plus1, minus1, PD.Numeric(1, {\n        min: 1,\n        max: a.data.frameCount,\n        step: 1\n      }, {\n        description: 'Model Index',\n        immediateUpdate: true\n      }))\n    };\n  }\n})({\n  isApplicable: function (a) {\n    return a.data.frameCount > 0;\n  },\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Model from Trajectory', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var modelIndex, model, label, description;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              modelIndex = params.modelIndex % a.data.frameCount;\n              if (modelIndex < 0) modelIndex += a.data.frameCount;\n              return [4\n              /*yield*/\n              , Task.resolveInContext(a.data.getFrameAtIndex(modelIndex), ctx)];\n\n            case 1:\n              model = _a.sent();\n              label = \"Model \" + (modelIndex + 1);\n              description = a.data.frameCount === 1 ? undefined : \"of \" + a.data.frameCount;\n              return [2\n              /*return*/\n              , new SO.Molecule.Model(model, {\n                label: label,\n                description: description\n              })];\n          }\n        });\n      });\n    });\n  },\n  interpolate: function (a, b, t) {\n    var modelIndex = t >= 1 ? b.modelIndex : a.modelIndex + Math.floor((b.modelIndex - a.modelIndex + 1) * t);\n    return {\n      modelIndex: modelIndex\n    };\n  },\n  dispose: function (_a) {\n    var b = _a.b;\n    b === null || b === void 0 ? void 0 : b.data.customProperties.dispose();\n  }\n});\nvar StructureFromTrajectory = PluginStateTransform.BuiltIn({\n  name: 'structure-from-trajectory',\n  display: {\n    name: 'Structure from Trajectory',\n    description: 'Create a molecular structure from a trajectory.'\n  },\n  from: SO.Molecule.Trajectory,\n  to: SO.Molecule.Structure\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a;\n    return Task.create('Build Structure', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var s, props;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , Structure.ofTrajectory(a.data, ctx)];\n\n            case 1:\n              s = _a.sent();\n              props = {\n                label: 'Ensemble',\n                description: Structure.elementDescription(s)\n              };\n              return [2\n              /*return*/\n              , new SO.Molecule.Structure(s, props)];\n          }\n        });\n      });\n    });\n  },\n  dispose: function (_a) {\n    var b = _a.b;\n    b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\n  }\n});\nvar StructureFromModel = PluginStateTransform.BuiltIn({\n  name: 'structure-from-model',\n  display: {\n    name: 'Structure',\n    description: 'Create a molecular structure (model, assembly, or symmetry) from the specified model.'\n  },\n  from: SO.Molecule.Model,\n  to: SO.Molecule.Structure,\n  params: function (a) {\n    return RootStructureDefinition.getParams(a && a.data);\n  }\n})({\n  canAutoUpdate: function (_a) {\n    var oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return RootStructureDefinition.canAutoUpdate(oldParams.type, newParams.type);\n  },\n  apply: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Build Structure', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2\n          /*return*/\n          , RootStructureDefinition.create(plugin, ctx, a.data, params && params.type)];\n        });\n      });\n    });\n  },\n  update: function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    if (!deepEqual(oldParams, newParams)) return StateTransformer.UpdateResult.Recreate;\n    if (b.data.model === a.data) return StateTransformer.UpdateResult.Unchanged;\n    if (!Model.areHierarchiesEqual(a.data, b.data.model)) return StateTransformer.UpdateResult.Recreate;\n    b.data = b.data.remapModel(a.data);\n    return StateTransformer.UpdateResult.Updated;\n  },\n  dispose: function (_a) {\n    var b = _a.b;\n    b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\n  }\n});\n\nvar _translation = Vec3(),\n    _m = Mat4(),\n    _n = Mat4();\n\nvar TransformStructureConformation = PluginStateTransform.BuiltIn({\n  name: 'transform-structure-conformation',\n  display: {\n    name: 'Transform Conformation'\n  },\n  isDecorator: true,\n  from: SO.Molecule.Structure,\n  to: SO.Molecule.Structure,\n  params: {\n    transform: PD.MappedStatic('components', {\n      components: PD.Group({\n        axis: PD.Vec3(Vec3.create(1, 0, 0)),\n        angle: PD.Numeric(0, {\n          min: -180,\n          max: 180,\n          step: 0.1\n        }),\n        translation: PD.Vec3(Vec3.create(0, 0, 0))\n      }, {\n        isFlat: true\n      }),\n      matrix: PD.Group({\n        data: PD.Mat4(Mat4.identity()),\n        transpose: PD.Boolean(false)\n      }, {\n        isFlat: true\n      })\n    }, {\n      label: 'Kind'\n    })\n  }\n})({\n  canAutoUpdate: function (_a) {\n    var newParams = _a.newParams;\n    return newParams.transform.name !== 'matrix';\n  },\n  apply: function (_a) {\n    // TODO: optimze\n    // TODO: think of ways how to fast-track changes to this for animations\n    var a = _a.a,\n        params = _a.params;\n    var transform = Mat4();\n\n    if (params.transform.name === 'components') {\n      var _b = params.transform.params,\n          axis = _b.axis,\n          angle = _b.angle,\n          translation = _b.translation;\n      var center = a.data.boundary.sphere.center;\n      Mat4.fromTranslation(_m, Vec3.negate(_translation, center));\n      Mat4.fromTranslation(_n, Vec3.add(_translation, center, translation));\n      var rot = Mat4.fromRotation(Mat4(), Math.PI / 180 * angle, Vec3.normalize(Vec3(), axis));\n      Mat4.mul3(transform, _n, rot, _m);\n    } else if (params.transform.name === 'matrix') {\n      Mat4.copy(transform, params.transform.params.data);\n      if (params.transform.params.transpose) Mat4.transpose(transform, transform);\n    }\n\n    var s = Structure.transform(a.data, transform);\n    return new SO.Molecule.Structure(s, {\n      label: a.label,\n      description: a.description + \" [Transformed]\"\n    });\n  },\n  dispose: function (_a) {\n    var b = _a.b;\n    b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\n  } // interpolate(src, tar, t) {\n  //     // TODO: optimize\n  //     const u = Mat4.fromRotation(Mat4(), Math.PI / 180 * src.angle, Vec3.normalize(Vec3(), src.axis));\n  //     Mat4.setTranslation(u, src.translation);\n  //     const v = Mat4.fromRotation(Mat4(), Math.PI / 180 * tar.angle, Vec3.normalize(Vec3(), tar.axis));\n  //     Mat4.setTranslation(v, tar.translation);\n  //     const m = SymmetryOperator.slerp(Mat4(), u, v, t);\n  //     const rot = Mat4.getRotation(Quat.zero(), m);\n  //     const axis = Vec3();\n  //     const angle = Quat.getAxisAngle(axis, rot);\n  //     const translation = Mat4.getTranslation(Vec3(), m);\n  //     return { axis, angle, translation };\n  // }\n\n});\nvar StructureSelectionFromExpression = PluginStateTransform.BuiltIn({\n  name: 'structure-selection-from-expression',\n  display: {\n    name: 'Selection',\n    description: 'Create a molecular structure from the specified expression.'\n  },\n  from: SO.Molecule.Structure,\n  to: SO.Molecule.Structure,\n  params: function () {\n    return {\n      expression: PD.Value(MolScriptBuilder.struct.generator.all, {\n        isHidden: true\n      }),\n      label: PD.Optional(PD.Text('', {\n        isHidden: true\n      }))\n    };\n  }\n})({\n  apply: function (_a) {\n    var a = _a.a,\n        params = _a.params,\n        cache = _a.cache;\n\n    var _b = StructureQueryHelper.createAndRun(a.data, params.expression),\n        selection = _b.selection,\n        entry = _b.entry;\n\n    cache.entry = entry;\n    if (Sel.isEmpty(selection)) return StateObject.Null;\n    var s = Sel.unionStructure(selection);\n    var props = {\n      label: \"\" + (params.label || 'Selection'),\n      description: Structure.elementDescription(s)\n    };\n    return new SO.Molecule.Structure(s, props);\n  },\n  update: function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams,\n        cache = _a.cache;\n    if (oldParams.expression !== newParams.expression) return StateTransformer.UpdateResult.Recreate;\n    var entry = cache.entry;\n\n    if (entry.currentStructure === a.data) {\n      return StateTransformer.UpdateResult.Unchanged;\n    }\n\n    var selection = StructureQueryHelper.updateStructure(entry, a.data);\n    if (Sel.isEmpty(selection)) return StateTransformer.UpdateResult.Null;\n    StructureQueryHelper.updateStructureObject(b, selection, newParams.label);\n    return StateTransformer.UpdateResult.Updated;\n  },\n  dispose: function (_a) {\n    var b = _a.b;\n    b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\n  }\n});\nvar MultiStructureSelectionFromExpression = PluginStateTransform.BuiltIn({\n  name: 'structure-multi-selection-from-expression',\n  display: {\n    name: 'Multi-structure Measurement Selection',\n    description: 'Create selection object from multiple structures.'\n  },\n  from: SO.Root,\n  to: SO.Molecule.Structure.Selections,\n  params: function () {\n    return {\n      selections: PD.ObjectList({\n        key: PD.Text(void 0, {\n          description: 'A unique key.'\n        }),\n        ref: PD.Text(),\n        groupId: PD.Optional(PD.Text()),\n        expression: PD.Value(MolScriptBuilder.struct.generator.empty)\n      }, function (e) {\n        return e.ref;\n      }, {\n        isHidden: true\n      }),\n      isTransitive: PD.Optional(PD.Boolean(false, {\n        isHidden: true,\n        description: 'Remap the selections from the original structure if structurally equivalent.'\n      })),\n      label: PD.Optional(PD.Text('', {\n        isHidden: true\n      }))\n    };\n  }\n})({\n  apply: function (_a) {\n    var params = _a.params,\n        cache = _a.cache,\n        dependencies = _a.dependencies;\n    var entries = new Map();\n    var selections = [];\n    var totalSize = 0;\n\n    for (var _i = 0, _b = params.selections; _i < _b.length; _i++) {\n      var sel = _b[_i];\n\n      var _c = StructureQueryHelper.createAndRun(dependencies[sel.ref].data, sel.expression),\n          selection = _c.selection,\n          entry = _c.entry;\n\n      entries.set(sel.key, entry);\n      var loci = Sel.toLociWithSourceUnits(selection);\n      selections.push({\n        key: sel.key,\n        loci: loci,\n        groupId: sel.groupId\n      });\n      totalSize += StructureElement.Loci.size(loci);\n    }\n\n    cache.entries = entries;\n    var props = {\n      label: \"\" + (params.label || 'Multi-selection'),\n      description: params.selections.length + \" source(s), \" + totalSize + \" element(s) total\"\n    };\n    return new SO.Molecule.Structure.Selections(selections, props);\n  },\n  update: function (_a) {\n    var b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams,\n        cache = _a.cache,\n        dependencies = _a.dependencies;\n    if (!!oldParams.isTransitive !== !!newParams.isTransitive) return StateTransformer.UpdateResult.Recreate;\n    var cacheEntries = cache.entries;\n    var entries = new Map();\n    var current = new Map();\n\n    for (var _i = 0, _b = b.data; _i < _b.length; _i++) {\n      var e = _b[_i];\n      current.set(e.key, e);\n    }\n\n    var changed = false;\n    var totalSize = 0;\n    var selections = [];\n\n    for (var _c = 0, _d = newParams.selections; _c < _d.length; _c++) {\n      var sel = _d[_c];\n      var structure = dependencies[sel.ref].data;\n      var recreate = false;\n\n      if (cacheEntries.has(sel.key)) {\n        var entry = cacheEntries.get(sel.key);\n\n        if (StructureQueryHelper.isUnchanged(entry, sel.expression, structure) && current.has(sel.key)) {\n          var loci = current.get(sel.key);\n\n          if (loci.groupId !== sel.groupId) {\n            loci.groupId = sel.groupId;\n            changed = true;\n          }\n\n          entries.set(sel.key, entry);\n          selections.push(loci);\n          totalSize += StructureElement.Loci.size(loci.loci);\n          continue;\n        }\n\n        if (entry.expression !== sel.expression) {\n          recreate = true;\n        } else {\n          // TODO: properly support \"transitive\" queries. For that Structure.areUnitAndIndicesEqual needs to be fixed;\n          var update = false;\n\n          if (!!newParams.isTransitive) {\n            if (Structure.areUnitIdsAndIndicesEqual(entry.originalStructure, structure)) {\n              var selection = StructureQueryHelper.run(entry, entry.originalStructure);\n              entry.currentStructure = structure;\n              entries.set(sel.key, entry);\n              var loci = StructureElement.Loci.remap(Sel.toLociWithSourceUnits(selection), structure);\n              selections.push({\n                key: sel.key,\n                loci: loci,\n                groupId: sel.groupId\n              });\n              totalSize += StructureElement.Loci.size(loci);\n              changed = true;\n            } else {\n              update = true;\n            }\n          } else {\n            update = true;\n          }\n\n          if (update) {\n            changed = true;\n            var selection = StructureQueryHelper.updateStructure(entry, structure);\n            entries.set(sel.key, entry);\n            var loci = Sel.toLociWithSourceUnits(selection);\n            selections.push({\n              key: sel.key,\n              loci: loci,\n              groupId: sel.groupId\n            });\n            totalSize += StructureElement.Loci.size(loci);\n          }\n        }\n      } else {\n        recreate = true;\n      }\n\n      if (recreate) {\n        changed = true; // create new selection\n\n        var _e = StructureQueryHelper.createAndRun(structure, sel.expression),\n            selection = _e.selection,\n            entry = _e.entry;\n\n        entries.set(sel.key, entry);\n        var loci = Sel.toLociWithSourceUnits(selection);\n        selections.push({\n          key: sel.key,\n          loci: loci\n        });\n        totalSize += StructureElement.Loci.size(loci);\n      }\n    }\n\n    if (!changed) return StateTransformer.UpdateResult.Unchanged;\n    cache.entries = entries;\n    b.data = selections;\n    b.label = \"\" + (newParams.label || 'Multi-selection');\n    b.description = selections.length + \" source(s), \" + totalSize + \" element(s) total\";\n    return StateTransformer.UpdateResult.Updated;\n  }\n});\nvar StructureSelectionFromScript = PluginStateTransform.BuiltIn({\n  name: 'structure-selection-from-script',\n  display: {\n    name: 'Selection',\n    description: 'Create a molecular structure from the specified script.'\n  },\n  from: SO.Molecule.Structure,\n  to: SO.Molecule.Structure,\n  params: function () {\n    return {\n      script: PD.Script({\n        language: 'mol-script',\n        expression: '(sel.atom.atom-groups :residue-test (= atom.resname ALA))'\n      }),\n      label: PD.Optional(PD.Text(''))\n    };\n  }\n})({\n  apply: function (_a) {\n    var a = _a.a,\n        params = _a.params,\n        cache = _a.cache;\n\n    var _b = StructureQueryHelper.createAndRun(a.data, params.script),\n        selection = _b.selection,\n        entry = _b.entry;\n\n    cache.entry = entry;\n    var s = Sel.unionStructure(selection);\n    var props = {\n      label: \"\" + (params.label || 'Selection'),\n      description: Structure.elementDescription(s)\n    };\n    return new SO.Molecule.Structure(s, props);\n  },\n  update: function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams,\n        cache = _a.cache;\n\n    if (!Script.areEqual(oldParams.script, newParams.script)) {\n      return StateTransformer.UpdateResult.Recreate;\n    }\n\n    var entry = cache.entry;\n\n    if (entry.currentStructure === a.data) {\n      return StateTransformer.UpdateResult.Unchanged;\n    }\n\n    var selection = StructureQueryHelper.updateStructure(entry, a.data);\n    StructureQueryHelper.updateStructureObject(b, selection, newParams.label);\n    return StateTransformer.UpdateResult.Updated;\n  },\n  dispose: function (_a) {\n    var b = _a.b;\n    b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\n  }\n});\nvar StructureSelectionFromBundle = PluginStateTransform.BuiltIn({\n  name: 'structure-selection-from-bundle',\n  display: {\n    name: 'Selection',\n    description: 'Create a molecular structure from the specified structure-element bundle.'\n  },\n  from: SO.Molecule.Structure,\n  to: SO.Molecule.Structure,\n  params: function () {\n    return {\n      bundle: PD.Value(StructureElement.Bundle.Empty, {\n        isHidden: true\n      }),\n      label: PD.Optional(PD.Text('', {\n        isHidden: true\n      }))\n    };\n  }\n})({\n  apply: function (_a) {\n    var a = _a.a,\n        params = _a.params,\n        cache = _a.cache;\n\n    if (params.bundle.hash !== a.data.hashCode) {\n      return StateObject.Null;\n    }\n\n    cache.source = a.data;\n    var s = StructureElement.Bundle.toStructure(params.bundle, a.data);\n    if (s.elementCount === 0) return StateObject.Null;\n    var props = {\n      label: \"\" + (params.label || 'Selection'),\n      description: Structure.elementDescription(s)\n    };\n    return new SO.Molecule.Structure(s, props);\n  },\n  update: function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams,\n        cache = _a.cache;\n\n    if (!StructureElement.Bundle.areEqual(oldParams.bundle, newParams.bundle)) {\n      return StateTransformer.UpdateResult.Recreate;\n    }\n\n    if (newParams.bundle.hash !== a.data.hashCode) {\n      return StateTransformer.UpdateResult.Null;\n    }\n\n    if (cache.source === a.data) {\n      return StateTransformer.UpdateResult.Unchanged;\n    }\n\n    cache.source = a.data;\n    var s = StructureElement.Bundle.toStructure(newParams.bundle, a.data);\n    if (s.elementCount === 0) return StateTransformer.UpdateResult.Null;\n    b.label = \"\" + (newParams.label || 'Selection');\n    b.description = Structure.elementDescription(s);\n    b.data = s;\n    return StateTransformer.UpdateResult.Updated;\n  },\n  dispose: function (_a) {\n    var b = _a.b;\n    b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\n  }\n});\nexport var StructureComplexElementTypes = {\n  'polymer': 'polymer',\n  'protein': 'protein',\n  'nucleic': 'nucleic',\n  'water': 'water',\n  'branched': 'branched',\n  'ligand': 'ligand',\n  'non-standard': 'non-standard',\n  'coarse': 'coarse',\n  // Legacy\n  'atomic-sequence': 'atomic-sequence',\n  'atomic-het': 'atomic-het',\n  'spheres': 'spheres'\n};\nvar StructureComplexElementTypeTuples = PD.objectToOptions(StructureComplexElementTypes);\nvar StructureComplexElement = PluginStateTransform.BuiltIn({\n  name: 'structure-complex-element',\n  display: {\n    name: 'Complex Element',\n    description: 'Create a molecular structure from the specified model.'\n  },\n  from: SO.Molecule.Structure,\n  to: SO.Molecule.Structure,\n  params: {\n    type: PD.Select('atomic-sequence', StructureComplexElementTypeTuples, {\n      isHidden: true\n    })\n  }\n})({\n  apply: function (_a) {\n    // TODO: update function.\n    var a = _a.a,\n        params = _a.params;\n    var query, label;\n\n    switch (params.type) {\n      case 'polymer':\n        query = StructureSelectionQueries.polymer.query;\n        label = 'Polymer';\n        break;\n\n      case 'protein':\n        query = StructureSelectionQueries.protein.query;\n        label = 'Protein';\n        break;\n\n      case 'nucleic':\n        query = StructureSelectionQueries.nucleic.query;\n        label = 'Nucleic';\n        break;\n\n      case 'water':\n        query = Queries.internal.water();\n        label = 'Water';\n        break;\n\n      case 'branched':\n        query = StructureSelectionQueries.branchedPlusConnected.query;\n        label = 'Branched';\n        break;\n\n      case 'ligand':\n        query = StructureSelectionQueries.ligandPlusConnected.query;\n        label = 'Ligand';\n        break;\n\n      case 'non-standard':\n        query = StructureSelectionQueries.nonStandardPolymer.query;\n        label = 'Non-standard';\n        break;\n\n      case 'coarse':\n        query = StructureSelectionQueries.coarse.query;\n        label = 'Coarse';\n        break;\n\n      case 'atomic-sequence':\n        query = Queries.internal.atomicSequence();\n        label = 'Sequence';\n        break;\n\n      case 'atomic-het':\n        query = Queries.internal.atomicHet();\n        label = 'HET Groups/Ligands';\n        break;\n\n      case 'spheres':\n        query = Queries.internal.spheres();\n        label = 'Coarse Spheres';\n        break;\n\n      default:\n        throw new Error(params.type + \" is a not valid complex element.\");\n    }\n\n    var result = query(new QueryContext(a.data));\n    var s = Sel.unionStructure(result);\n    if (s.elementCount === 0) return StateObject.Null;\n    return new SO.Molecule.Structure(s, {\n      label: label,\n      description: Structure.elementDescription(s)\n    });\n  },\n  dispose: function (_a) {\n    var b = _a.b;\n    b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\n  }\n});\nvar StructureComponent = PluginStateTransform.BuiltIn({\n  name: 'structure-component',\n  display: {\n    name: 'Component',\n    description: 'A molecular structure component.'\n  },\n  from: SO.Molecule.Structure,\n  to: SO.Molecule.Structure,\n  params: StructureComponentParams\n})({\n  apply: function (_a) {\n    var a = _a.a,\n        params = _a.params,\n        cache = _a.cache;\n    return createStructureComponent(a.data, params, cache);\n  },\n  update: function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams,\n        cache = _a.cache;\n    return updateStructureComponent(a.data, b, oldParams, newParams, cache);\n  },\n  dispose: function (_a) {\n    var b = _a.b;\n    b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\n  }\n});\nvar CustomModelProperties = PluginStateTransform.BuiltIn({\n  name: 'custom-model-properties',\n  display: {\n    name: 'Custom Model Properties'\n  },\n  isDecorator: true,\n  from: SO.Molecule.Model,\n  to: SO.Molecule.Model,\n  params: function (a, ctx) {\n    return ctx.customModelProperties.getParams(a === null || a === void 0 ? void 0 : a.data);\n  }\n})({\n  apply: function (_a, ctx) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Custom Props', function (taskCtx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , attachModelProps(a.data, ctx, taskCtx, params)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              , new SO.Molecule.Model(a.data, {\n                label: a.label,\n                description: a.description\n              })];\n          }\n        });\n      });\n    });\n  },\n  update: function (_a, ctx) {\n    var _this = this;\n\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return Task.create('Custom Props', function (taskCtx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _i, _a, name_1, property;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              b.data = a.data;\n              b.label = a.label;\n              b.description = a.description;\n\n              for (_i = 0, _a = oldParams.autoAttach; _i < _a.length; _i++) {\n                name_1 = _a[_i];\n                property = ctx.customModelProperties.get(name_1);\n                if (!property) continue;\n                a.data.customProperties.reference(property.descriptor, false);\n              }\n\n              return [4\n              /*yield*/\n              , attachModelProps(a.data, ctx, taskCtx, newParams)];\n\n            case 1:\n              _b.sent();\n\n              return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Updated];\n          }\n        });\n      });\n    });\n  },\n  dispose: function (_a) {\n    var b = _a.b;\n    b === null || b === void 0 ? void 0 : b.data.customProperties.dispose();\n  }\n});\n\nfunction attachModelProps(model, ctx, taskCtx, params) {\n  return __awaiter(this, void 0, void 0, function () {\n    var propertyCtx, autoAttach, properties, _i, _a, name_2, property, props, e_1;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          propertyCtx = {\n            runtime: taskCtx,\n            assetManager: ctx.managers.asset\n          };\n          autoAttach = params.autoAttach, properties = params.properties;\n          _i = 0, _a = Object.keys(properties);\n          _b.label = 1;\n\n        case 1:\n          if (!(_i < _a.length)) return [3\n          /*break*/\n          , 8];\n          name_2 = _a[_i];\n          property = ctx.customModelProperties.get(name_2);\n          props = properties[name_2];\n          if (!(autoAttach.includes(name_2) || property.isHidden)) return [3\n          /*break*/\n          , 6];\n          _b.label = 2;\n\n        case 2:\n          _b.trys.push([2, 4,, 5]);\n\n          return [4\n          /*yield*/\n          , property.attach(propertyCtx, model, props, true)];\n\n        case 3:\n          _b.sent();\n\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          e_1 = _b.sent();\n          ctx.log.warn(\"Error attaching model prop '\" + name_2 + \"': \" + e_1);\n          return [3\n          /*break*/\n          , 5];\n\n        case 5:\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          property.set(model, props);\n          _b.label = 7;\n\n        case 7:\n          _i++;\n          return [3\n          /*break*/\n          , 1];\n\n        case 8:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nvar CustomStructureProperties = PluginStateTransform.BuiltIn({\n  name: 'custom-structure-properties',\n  display: {\n    name: 'Custom Structure Properties'\n  },\n  isDecorator: true,\n  from: SO.Molecule.Structure,\n  to: SO.Molecule.Structure,\n  params: function (a, ctx) {\n    return ctx.customStructureProperties.getParams(a === null || a === void 0 ? void 0 : a.data.root);\n  }\n})({\n  apply: function (_a, ctx) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Custom Props', function (taskCtx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , attachStructureProps(a.data.root, ctx, taskCtx, params)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              , new SO.Molecule.Structure(a.data, {\n                label: a.label,\n                description: a.description\n              })];\n          }\n        });\n      });\n    });\n  },\n  update: function (_a, ctx) {\n    var _this = this;\n\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    if (a.data !== b.data) return StateTransformer.UpdateResult.Recreate;\n    return Task.create('Custom Props', function (taskCtx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _i, _a, name_3, property;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              b.data = a.data;\n              b.label = a.label;\n              b.description = a.description;\n\n              for (_i = 0, _a = oldParams.autoAttach; _i < _a.length; _i++) {\n                name_3 = _a[_i];\n                property = ctx.customStructureProperties.get(name_3);\n                if (!property) continue;\n                a.data.customPropertyDescriptors.reference(property.descriptor, false);\n              }\n\n              return [4\n              /*yield*/\n              , attachStructureProps(a.data.root, ctx, taskCtx, newParams)];\n\n            case 1:\n              _b.sent();\n\n              return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Updated];\n          }\n        });\n      });\n    });\n  },\n  dispose: function (_a) {\n    var b = _a.b;\n    b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\n  }\n});\n\nfunction attachStructureProps(structure, ctx, taskCtx, params) {\n  return __awaiter(this, void 0, void 0, function () {\n    var propertyCtx, autoAttach, properties, _i, _a, name_4, property, props, e_2;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          propertyCtx = {\n            runtime: taskCtx,\n            assetManager: ctx.managers.asset\n          };\n          autoAttach = params.autoAttach, properties = params.properties;\n          _i = 0, _a = Object.keys(properties);\n          _b.label = 1;\n\n        case 1:\n          if (!(_i < _a.length)) return [3\n          /*break*/\n          , 8];\n          name_4 = _a[_i];\n          property = ctx.customStructureProperties.get(name_4);\n          props = properties[name_4];\n          if (!(autoAttach.includes(name_4) || property.isHidden)) return [3\n          /*break*/\n          , 6];\n          _b.label = 2;\n\n        case 2:\n          _b.trys.push([2, 4,, 5]);\n\n          return [4\n          /*yield*/\n          , property.attach(propertyCtx, structure, props, true)];\n\n        case 3:\n          _b.sent();\n\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          e_2 = _b.sent();\n          ctx.log.warn(\"Error attaching structure prop '\" + name_4 + \"': \" + e_2);\n          return [3\n          /*break*/\n          , 5];\n\n        case 5:\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          property.set(structure, props);\n          _b.label = 7;\n\n        case 7:\n          _i++;\n          return [3\n          /*break*/\n          , 1];\n\n        case 8:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nvar ShapeFromPly = PluginStateTransform.BuiltIn({\n  name: 'shape-from-ply',\n  display: {\n    name: 'Shape from PLY',\n    description: 'Create Shape from PLY data'\n  },\n  from: SO.Format.Ply,\n  to: SO.Shape.Provider,\n  params: function (a) {\n    return {};\n  }\n})({\n  apply: function (_a) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Create shape from PLY', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var shape, props;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , shapeFromPly(a.data, params).runInContext(ctx)];\n\n            case 1:\n              shape = _a.sent();\n              props = {\n                label: 'Shape'\n              };\n              return [2\n              /*return*/\n              , new SO.Shape.Provider(shape, props)];\n          }\n        });\n      });\n    });\n  }\n});","map":{"version":3,"sources":["../../../src/mol-plugin-state/transforms/model.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { parseDcd } from '../../mol-io/reader/dcd/parser';\r\nimport { parseGRO } from '../../mol-io/reader/gro/parser';\r\nimport { parsePDB } from '../../mol-io/reader/pdb/parser';\r\nimport { Mat4, Vec3 } from '../../mol-math/linear-algebra';\r\nimport { shapeFromPly } from '../../mol-model-formats/shape/ply';\r\nimport { coordinatesFromDcd } from '../../mol-model-formats/structure/dcd';\r\nimport { trajectoryFromGRO } from '../../mol-model-formats/structure/gro';\r\nimport { trajectoryFromMmCIF } from '../../mol-model-formats/structure/mmcif';\r\nimport { trajectoryFromPDB } from '../../mol-model-formats/structure/pdb';\r\nimport { topologyFromPsf } from '../../mol-model-formats/structure/psf';\r\nimport { Model, Queries, QueryContext, Structure, StructureElement, StructureSelection as Sel, ArrayTrajectory } from '../../mol-model/structure';\r\nimport { MolScriptBuilder } from '../../mol-script/language/builder';\r\nimport { Script } from '../../mol-script/script';\r\nimport { StateObject, StateTransformer } from '../../mol-state';\r\nimport { Task } from '../../mol-task';\r\nimport { deepEqual } from '../../mol-util';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { RootStructureDefinition } from '../helpers/root-structure';\r\nimport { createStructureComponent, StructureComponentParams, updateStructureComponent } from '../helpers/structure-component';\r\nimport { StructureQueryHelper } from '../helpers/structure-query';\r\nimport { StructureSelectionQueries } from '../helpers/structure-selection-query';\r\nimport { PluginStateObject as SO, PluginStateTransform } from '../objects';\r\nimport { parseMol } from '../../mol-io/reader/mol/parser';\r\nimport { trajectoryFromMol } from '../../mol-model-formats/structure/mol';\r\nimport { trajectoryFromCifCore } from '../../mol-model-formats/structure/cif-core';\r\nimport { trajectoryFromCube } from '../../mol-model-formats/structure/cube';\r\nimport { parseMol2 } from '../../mol-io/reader/mol2/parser';\r\nimport { trajectoryFromMol2 } from '../../mol-model-formats/structure/mol2';\r\nimport { parseXtc } from '../../mol-io/reader/xtc/parser';\r\nimport { coordinatesFromXtc } from '../../mol-model-formats/structure/xtc';\r\nimport { parseXyz } from '../../mol-io/reader/xyz/parser';\r\nimport { trajectoryFromXyz } from '../../mol-model-formats/structure/xyz';\r\nimport { parseSdf } from '../../mol-io/reader/sdf/parser';\r\nimport { trajectoryFromSdf } from '../../mol-model-formats/structure/sdf';\r\nexport { CoordinatesFromDcd };\r\nexport { CoordinatesFromXtc };\r\nexport { TopologyFromPsf };\r\nexport { TrajectoryFromModelAndCoordinates };\r\nexport { TrajectoryFromBlob };\r\nexport { TrajectoryFromMmCif };\r\nexport { TrajectoryFromPDB };\r\nexport { TrajectoryFromGRO };\r\nexport { TrajectoryFromXYZ };\r\nexport { TrajectoryFromMOL };\r\nexport { TrajectoryFromSDF };\r\nexport { TrajectoryFromMOL2 };\r\nexport { TrajectoryFromCube };\r\nexport { TrajectoryFromCifCore };\r\nexport { ModelFromTrajectory };\r\nexport { StructureFromTrajectory };\r\nexport { StructureFromModel };\r\nexport { TransformStructureConformation };\r\nexport { StructureSelectionFromExpression };\r\nexport { MultiStructureSelectionFromExpression };\r\nexport { StructureSelectionFromScript };\r\nexport { StructureSelectionFromBundle };\r\nexport { StructureComplexElement };\r\nexport { StructureComponent };\r\nexport { CustomModelProperties };\r\nexport { CustomStructureProperties };\r\nexport { ShapeFromPly };\r\nvar CoordinatesFromDcd = PluginStateTransform.BuiltIn({\r\n    name: 'coordinates-from-dcd',\r\n    display: { name: 'Parse DCD', description: 'Parse DCD binary data.' },\r\n    from: [SO.Data.Binary],\r\n    to: SO.Molecule.Coordinates\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a;\r\n        return Task.create('Parse DCD', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var parsed, coordinates;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, parseDcd(a.data).runInContext(ctx)];\r\n                    case 1:\r\n                        parsed = _a.sent();\r\n                        if (parsed.isError)\r\n                            throw new Error(parsed.message);\r\n                        return [4 /*yield*/, coordinatesFromDcd(parsed.result).runInContext(ctx)];\r\n                    case 2:\r\n                        coordinates = _a.sent();\r\n                        return [2 /*return*/, new SO.Molecule.Coordinates(coordinates, { label: a.label, description: 'Coordinates' })];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nvar CoordinatesFromXtc = PluginStateTransform.BuiltIn({\r\n    name: 'coordinates-from-xtc',\r\n    display: { name: 'Parse XTC', description: 'Parse XTC binary data.' },\r\n    from: [SO.Data.Binary],\r\n    to: SO.Molecule.Coordinates\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a;\r\n        return Task.create('Parse XTC', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var parsed, coordinates;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, parseXtc(a.data).runInContext(ctx)];\r\n                    case 1:\r\n                        parsed = _a.sent();\r\n                        if (parsed.isError)\r\n                            throw new Error(parsed.message);\r\n                        return [4 /*yield*/, coordinatesFromXtc(parsed.result).runInContext(ctx)];\r\n                    case 2:\r\n                        coordinates = _a.sent();\r\n                        return [2 /*return*/, new SO.Molecule.Coordinates(coordinates, { label: a.label, description: 'Coordinates' })];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nvar TopologyFromPsf = PluginStateTransform.BuiltIn({\r\n    name: 'topology-from-psf',\r\n    display: { name: 'PSF Topology', description: 'Parse PSF string data.' },\r\n    from: [SO.Format.Psf],\r\n    to: SO.Molecule.Topology\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a;\r\n        return Task.create('Create Topology', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var topology;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, topologyFromPsf(a.data).runInContext(ctx)];\r\n                    case 1:\r\n                        topology = _a.sent();\r\n                        return [2 /*return*/, new SO.Molecule.Topology(topology, { label: topology.label || a.label, description: 'Topology' })];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nfunction getTrajectory(ctx, obj, coordinates) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var topology, model;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!(obj.type === SO.Molecule.Topology.type)) return [3 /*break*/, 2];\r\n                    topology = obj.data;\r\n                    return [4 /*yield*/, Model.trajectoryFromTopologyAndCoordinates(topology, coordinates).runInContext(ctx)];\r\n                case 1: return [2 /*return*/, _a.sent()];\r\n                case 2:\r\n                    if (obj.type === SO.Molecule.Model.type) {\r\n                        model = obj.data;\r\n                        return [2 /*return*/, Model.trajectoryFromModelAndCoordinates(model, coordinates)];\r\n                    }\r\n                    _a.label = 3;\r\n                case 3: throw new Error('no model/topology found');\r\n            }\r\n        });\r\n    });\r\n}\r\nvar TrajectoryFromModelAndCoordinates = PluginStateTransform.BuiltIn({\r\n    name: 'trajectory-from-model-and-coordinates',\r\n    display: { name: 'Trajectory from Topology & Coordinates', description: 'Create a trajectory from existing model/topology and coordinates.' },\r\n    from: SO.Root,\r\n    to: SO.Molecule.Trajectory,\r\n    params: {\r\n        modelRef: PD.Text('', { isHidden: true }),\r\n        coordinatesRef: PD.Text('', { isHidden: true }),\r\n    }\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var params = _a.params, dependencies = _a.dependencies;\r\n        return Task.create('Create trajectory from model/topology and coordinates', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var coordinates, trajectory, props;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        coordinates = dependencies[params.coordinatesRef].data;\r\n                        return [4 /*yield*/, getTrajectory(ctx, dependencies[params.modelRef], coordinates)];\r\n                    case 1:\r\n                        trajectory = _a.sent();\r\n                        props = { label: 'Trajectory', description: trajectory.frameCount + \" model\" + (trajectory.frameCount === 1 ? '' : 's') };\r\n                        return [2 /*return*/, new SO.Molecule.Trajectory(trajectory, props)];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nvar TrajectoryFromBlob = PluginStateTransform.BuiltIn({\r\n    name: 'trajectory-from-blob',\r\n    display: { name: 'Parse Blob', description: 'Parse format blob into a single trajectory.' },\r\n    from: SO.Format.Blob,\r\n    to: SO.Molecule.Trajectory\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a;\r\n        return Task.create('Parse Format Blob', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var models, _i, _a, e, block, xs, i, x, i, props;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        models = [];\r\n                        _i = 0, _a = a.data;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        if (!(_i < _a.length)) return [3 /*break*/, 7];\r\n                        e = _a[_i];\r\n                        if (e.kind !== 'cif')\r\n                            return [3 /*break*/, 6];\r\n                        block = e.data.blocks[0];\r\n                        return [4 /*yield*/, trajectoryFromMmCIF(block).runInContext(ctx)];\r\n                    case 2:\r\n                        xs = _b.sent();\r\n                        if (xs.frameCount === 0)\r\n                            throw new Error('No models found.');\r\n                        i = 0;\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        if (!(i < xs.frameCount)) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, Task.resolveInContext(xs.getFrameAtIndex(i), ctx)];\r\n                    case 4:\r\n                        x = _b.sent();\r\n                        models.push(x);\r\n                        _b.label = 5;\r\n                    case 5:\r\n                        i++;\r\n                        return [3 /*break*/, 3];\r\n                    case 6:\r\n                        _i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 7:\r\n                        for (i = 0; i < models.length; i++) {\r\n                            Model.TrajectoryInfo.set(models[i], { index: i, size: models.length });\r\n                        }\r\n                        props = { label: 'Trajectory', description: models.length + \" model\" + (models.length === 1 ? '' : 's') };\r\n                        return [2 /*return*/, new SO.Molecule.Trajectory(new ArrayTrajectory(models), props)];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nfunction trajectoryProps(trajectory) {\r\n    var first = trajectory.representative;\r\n    return { label: \"\" + first.entry, description: trajectory.frameCount + \" model\" + (trajectory.frameCount === 1 ? '' : 's') };\r\n}\r\nvar TrajectoryFromMmCif = PluginStateTransform.BuiltIn({\r\n    name: 'trajectory-from-mmcif',\r\n    display: { name: 'Trajectory from mmCIF', description: 'Identify and create all separate models in the specified CIF data block' },\r\n    from: SO.Format.Cif,\r\n    to: SO.Molecule.Trajectory,\r\n    params: function (a) {\r\n        if (!a) {\r\n            return {\r\n                blockHeader: PD.Optional(PD.Text(void 0, { description: 'Header of the block to parse. If none is specifed, the 1st data block in the file is used.' }))\r\n            };\r\n        }\r\n        var blocks = a.data.blocks;\r\n        return {\r\n            blockHeader: PD.Optional(PD.Select(blocks[0] && blocks[0].header, blocks.map(function (b) { return [b.header, b.header]; }), { description: 'Header of the block to parse' }))\r\n        };\r\n    }\r\n})({\r\n    isApplicable: function (a) { return a.data.blocks.length > 0; },\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Parse mmCIF', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var header, block, models, props;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        header = params.blockHeader || a.data.blocks[0].header;\r\n                        block = a.data.blocks.find(function (b) { return b.header === header; });\r\n                        if (!block)\r\n                            throw new Error(\"Data block '\" + [header] + \"' not found.\");\r\n                        return [4 /*yield*/, trajectoryFromMmCIF(block).runInContext(ctx)];\r\n                    case 1:\r\n                        models = _a.sent();\r\n                        if (models.frameCount === 0)\r\n                            throw new Error('No models found.');\r\n                        props = trajectoryProps(models);\r\n                        return [2 /*return*/, new SO.Molecule.Trajectory(models, props)];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nvar TrajectoryFromPDB = PluginStateTransform.BuiltIn({\r\n    name: 'trajectory-from-pdb',\r\n    display: { name: 'Parse PDB', description: 'Parse PDB string and create trajectory.' },\r\n    from: [SO.Data.String],\r\n    to: SO.Molecule.Trajectory,\r\n    params: {\r\n        isPdbqt: PD.Boolean(false)\r\n    }\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Parse PDB', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var parsed, models, props;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, parsePDB(a.data, a.label, params.isPdbqt).runInContext(ctx)];\r\n                    case 1:\r\n                        parsed = _a.sent();\r\n                        if (parsed.isError)\r\n                            throw new Error(parsed.message);\r\n                        return [4 /*yield*/, trajectoryFromPDB(parsed.result).runInContext(ctx)];\r\n                    case 2:\r\n                        models = _a.sent();\r\n                        props = trajectoryProps(models);\r\n                        return [2 /*return*/, new SO.Molecule.Trajectory(models, props)];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nvar TrajectoryFromGRO = PluginStateTransform.BuiltIn({\r\n    name: 'trajectory-from-gro',\r\n    display: { name: 'Parse GRO', description: 'Parse GRO string and create trajectory.' },\r\n    from: [SO.Data.String],\r\n    to: SO.Molecule.Trajectory\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a;\r\n        return Task.create('Parse GRO', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var parsed, models, props;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, parseGRO(a.data).runInContext(ctx)];\r\n                    case 1:\r\n                        parsed = _a.sent();\r\n                        if (parsed.isError)\r\n                            throw new Error(parsed.message);\r\n                        return [4 /*yield*/, trajectoryFromGRO(parsed.result).runInContext(ctx)];\r\n                    case 2:\r\n                        models = _a.sent();\r\n                        props = trajectoryProps(models);\r\n                        return [2 /*return*/, new SO.Molecule.Trajectory(models, props)];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nvar TrajectoryFromXYZ = PluginStateTransform.BuiltIn({\r\n    name: 'trajectory-from-xyz',\r\n    display: { name: 'Parse XYZ', description: 'Parse XYZ string and create trajectory.' },\r\n    from: [SO.Data.String],\r\n    to: SO.Molecule.Trajectory\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a;\r\n        return Task.create('Parse XYZ', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var parsed, models, props;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, parseXyz(a.data).runInContext(ctx)];\r\n                    case 1:\r\n                        parsed = _a.sent();\r\n                        if (parsed.isError)\r\n                            throw new Error(parsed.message);\r\n                        return [4 /*yield*/, trajectoryFromXyz(parsed.result).runInContext(ctx)];\r\n                    case 2:\r\n                        models = _a.sent();\r\n                        props = trajectoryProps(models);\r\n                        return [2 /*return*/, new SO.Molecule.Trajectory(models, props)];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nvar TrajectoryFromMOL = PluginStateTransform.BuiltIn({\r\n    name: 'trajectory-from-mol',\r\n    display: { name: 'Parse MOL', description: 'Parse MOL string and create trajectory.' },\r\n    from: [SO.Data.String],\r\n    to: SO.Molecule.Trajectory\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a;\r\n        return Task.create('Parse MOL', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var parsed, models, props;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, parseMol(a.data).runInContext(ctx)];\r\n                    case 1:\r\n                        parsed = _a.sent();\r\n                        if (parsed.isError)\r\n                            throw new Error(parsed.message);\r\n                        return [4 /*yield*/, trajectoryFromMol(parsed.result).runInContext(ctx)];\r\n                    case 2:\r\n                        models = _a.sent();\r\n                        props = trajectoryProps(models);\r\n                        return [2 /*return*/, new SO.Molecule.Trajectory(models, props)];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nvar TrajectoryFromSDF = PluginStateTransform.BuiltIn({\r\n    name: 'trajectory-from-sdf',\r\n    display: { name: 'Parse SDF', description: 'Parse SDF string and create trajectory.' },\r\n    from: [SO.Data.String],\r\n    to: SO.Molecule.Trajectory\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a;\r\n        return Task.create('Parse SDF', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var parsed, models, _i, _a, compound, traj_1, i, _b, _c, traj, props;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0: return [4 /*yield*/, parseSdf(a.data).runInContext(ctx)];\r\n                    case 1:\r\n                        parsed = _d.sent();\r\n                        if (parsed.isError)\r\n                            throw new Error(parsed.message);\r\n                        models = [];\r\n                        _i = 0, _a = parsed.result.compounds;\r\n                        _d.label = 2;\r\n                    case 2:\r\n                        if (!(_i < _a.length)) return [3 /*break*/, 8];\r\n                        compound = _a[_i];\r\n                        return [4 /*yield*/, trajectoryFromSdf(compound).runInContext(ctx)];\r\n                    case 3:\r\n                        traj_1 = _d.sent();\r\n                        i = 0;\r\n                        _d.label = 4;\r\n                    case 4:\r\n                        if (!(i < traj_1.frameCount)) return [3 /*break*/, 7];\r\n                        _c = (_b = models).push;\r\n                        return [4 /*yield*/, Task.resolveInContext(traj_1.getFrameAtIndex(i), ctx)];\r\n                    case 5:\r\n                        _c.apply(_b, [_d.sent()]);\r\n                        _d.label = 6;\r\n                    case 6:\r\n                        i++;\r\n                        return [3 /*break*/, 4];\r\n                    case 7:\r\n                        _i++;\r\n                        return [3 /*break*/, 2];\r\n                    case 8:\r\n                        traj = new ArrayTrajectory(models);\r\n                        props = trajectoryProps(traj);\r\n                        return [2 /*return*/, new SO.Molecule.Trajectory(traj, props)];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nvar TrajectoryFromMOL2 = PluginStateTransform.BuiltIn({\r\n    name: 'trajectory-from-mol2',\r\n    display: { name: 'Parse MOL2', description: 'Parse MOL2 string and create trajectory.' },\r\n    from: [SO.Data.String],\r\n    to: SO.Molecule.Trajectory\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a;\r\n        return Task.create('Parse MOL2', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var parsed, models, props;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, parseMol2(a.data, a.label).runInContext(ctx)];\r\n                    case 1:\r\n                        parsed = _a.sent();\r\n                        if (parsed.isError)\r\n                            throw new Error(parsed.message);\r\n                        return [4 /*yield*/, trajectoryFromMol2(parsed.result).runInContext(ctx)];\r\n                    case 2:\r\n                        models = _a.sent();\r\n                        props = trajectoryProps(models);\r\n                        return [2 /*return*/, new SO.Molecule.Trajectory(models, props)];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nvar TrajectoryFromCube = PluginStateTransform.BuiltIn({\r\n    name: 'trajectory-from-cube',\r\n    display: { name: 'Parse Cube', description: 'Parse Cube file to create a trajectory.' },\r\n    from: SO.Format.Cube,\r\n    to: SO.Molecule.Trajectory\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a;\r\n        return Task.create('Parse MOL', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var models, props;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, trajectoryFromCube(a.data).runInContext(ctx)];\r\n                    case 1:\r\n                        models = _a.sent();\r\n                        props = trajectoryProps(models);\r\n                        return [2 /*return*/, new SO.Molecule.Trajectory(models, props)];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nvar TrajectoryFromCifCore = PluginStateTransform.BuiltIn({\r\n    name: 'trajectory-from-cif-core',\r\n    display: { name: 'Parse CIF Core', description: 'Identify and create all separate models in the specified CIF data block' },\r\n    from: SO.Format.Cif,\r\n    to: SO.Molecule.Trajectory,\r\n    params: function (a) {\r\n        if (!a) {\r\n            return {\r\n                blockHeader: PD.Optional(PD.Text(void 0, { description: 'Header of the block to parse. If none is specifed, the 1st data block in the file is used.' }))\r\n            };\r\n        }\r\n        var blocks = a.data.blocks;\r\n        return {\r\n            blockHeader: PD.Optional(PD.Select(blocks[0] && blocks[0].header, blocks.map(function (b) { return [b.header, b.header]; }), { description: 'Header of the block to parse' }))\r\n        };\r\n    }\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Parse CIF Core', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var header, block, models, props;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        header = params.blockHeader || a.data.blocks[0].header;\r\n                        block = a.data.blocks.find(function (b) { return b.header === header; });\r\n                        if (!block)\r\n                            throw new Error(\"Data block '\" + [header] + \"' not found.\");\r\n                        return [4 /*yield*/, trajectoryFromCifCore(block).runInContext(ctx)];\r\n                    case 1:\r\n                        models = _a.sent();\r\n                        if (models.frameCount === 0)\r\n                            throw new Error('No models found.');\r\n                        props = trajectoryProps(models);\r\n                        return [2 /*return*/, new SO.Molecule.Trajectory(models, props)];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nvar plus1 = function (v) { return v + 1; }, minus1 = function (v) { return v - 1; };\r\nvar ModelFromTrajectory = PluginStateTransform.BuiltIn({\r\n    name: 'model-from-trajectory',\r\n    display: { name: 'Molecular Model', description: 'Create a molecular model from specified index in a trajectory.' },\r\n    from: SO.Molecule.Trajectory,\r\n    to: SO.Molecule.Model,\r\n    params: function (a) {\r\n        if (!a) {\r\n            return { modelIndex: PD.Numeric(0, {}, { description: 'Zero-based index of the model', immediateUpdate: true }) };\r\n        }\r\n        return { modelIndex: PD.Converted(plus1, minus1, PD.Numeric(1, { min: 1, max: a.data.frameCount, step: 1 }, { description: 'Model Index', immediateUpdate: true })) };\r\n    }\r\n})({\r\n    isApplicable: function (a) { return a.data.frameCount > 0; },\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Model from Trajectory', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var modelIndex, model, label, description;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        modelIndex = params.modelIndex % a.data.frameCount;\r\n                        if (modelIndex < 0)\r\n                            modelIndex += a.data.frameCount;\r\n                        return [4 /*yield*/, Task.resolveInContext(a.data.getFrameAtIndex(modelIndex), ctx)];\r\n                    case 1:\r\n                        model = _a.sent();\r\n                        label = \"Model \" + (modelIndex + 1);\r\n                        description = a.data.frameCount === 1 ? undefined : \"of \" + a.data.frameCount;\r\n                        return [2 /*return*/, new SO.Molecule.Model(model, { label: label, description: description })];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    interpolate: function (a, b, t) {\r\n        var modelIndex = t >= 1 ? b.modelIndex : a.modelIndex + Math.floor((b.modelIndex - a.modelIndex + 1) * t);\r\n        return { modelIndex: modelIndex };\r\n    },\r\n    dispose: function (_a) {\r\n        var b = _a.b;\r\n        b === null || b === void 0 ? void 0 : b.data.customProperties.dispose();\r\n    }\r\n});\r\nvar StructureFromTrajectory = PluginStateTransform.BuiltIn({\r\n    name: 'structure-from-trajectory',\r\n    display: { name: 'Structure from Trajectory', description: 'Create a molecular structure from a trajectory.' },\r\n    from: SO.Molecule.Trajectory,\r\n    to: SO.Molecule.Structure\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a;\r\n        return Task.create('Build Structure', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var s, props;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, Structure.ofTrajectory(a.data, ctx)];\r\n                    case 1:\r\n                        s = _a.sent();\r\n                        props = { label: 'Ensemble', description: Structure.elementDescription(s) };\r\n                        return [2 /*return*/, new SO.Molecule.Structure(s, props)];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    dispose: function (_a) {\r\n        var b = _a.b;\r\n        b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\r\n    }\r\n});\r\nvar StructureFromModel = PluginStateTransform.BuiltIn({\r\n    name: 'structure-from-model',\r\n    display: { name: 'Structure', description: 'Create a molecular structure (model, assembly, or symmetry) from the specified model.' },\r\n    from: SO.Molecule.Model,\r\n    to: SO.Molecule.Structure,\r\n    params: function (a) { return RootStructureDefinition.getParams(a && a.data); }\r\n})({\r\n    canAutoUpdate: function (_a) {\r\n        var oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return RootStructureDefinition.canAutoUpdate(oldParams.type, newParams.type);\r\n    },\r\n    apply: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Build Structure', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, RootStructureDefinition.create(plugin, ctx, a.data, params && params.type)];\r\n            });\r\n        }); });\r\n    },\r\n    update: function (_a) {\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams;\r\n        if (!deepEqual(oldParams, newParams))\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        if (b.data.model === a.data)\r\n            return StateTransformer.UpdateResult.Unchanged;\r\n        if (!Model.areHierarchiesEqual(a.data, b.data.model))\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        b.data = b.data.remapModel(a.data);\r\n        return StateTransformer.UpdateResult.Updated;\r\n    },\r\n    dispose: function (_a) {\r\n        var b = _a.b;\r\n        b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\r\n    }\r\n});\r\nvar _translation = Vec3(), _m = Mat4(), _n = Mat4();\r\nvar TransformStructureConformation = PluginStateTransform.BuiltIn({\r\n    name: 'transform-structure-conformation',\r\n    display: { name: 'Transform Conformation' },\r\n    isDecorator: true,\r\n    from: SO.Molecule.Structure,\r\n    to: SO.Molecule.Structure,\r\n    params: {\r\n        transform: PD.MappedStatic('components', {\r\n            components: PD.Group({\r\n                axis: PD.Vec3(Vec3.create(1, 0, 0)),\r\n                angle: PD.Numeric(0, { min: -180, max: 180, step: 0.1 }),\r\n                translation: PD.Vec3(Vec3.create(0, 0, 0)),\r\n            }, { isFlat: true }),\r\n            matrix: PD.Group({\r\n                data: PD.Mat4(Mat4.identity()),\r\n                transpose: PD.Boolean(false)\r\n            }, { isFlat: true })\r\n        }, { label: 'Kind' })\r\n    }\r\n})({\r\n    canAutoUpdate: function (_a) {\r\n        var newParams = _a.newParams;\r\n        return newParams.transform.name !== 'matrix';\r\n    },\r\n    apply: function (_a) {\r\n        // TODO: optimze\r\n        // TODO: think of ways how to fast-track changes to this for animations\r\n        var a = _a.a, params = _a.params;\r\n        var transform = Mat4();\r\n        if (params.transform.name === 'components') {\r\n            var _b = params.transform.params, axis = _b.axis, angle = _b.angle, translation = _b.translation;\r\n            var center = a.data.boundary.sphere.center;\r\n            Mat4.fromTranslation(_m, Vec3.negate(_translation, center));\r\n            Mat4.fromTranslation(_n, Vec3.add(_translation, center, translation));\r\n            var rot = Mat4.fromRotation(Mat4(), Math.PI / 180 * angle, Vec3.normalize(Vec3(), axis));\r\n            Mat4.mul3(transform, _n, rot, _m);\r\n        }\r\n        else if (params.transform.name === 'matrix') {\r\n            Mat4.copy(transform, params.transform.params.data);\r\n            if (params.transform.params.transpose)\r\n                Mat4.transpose(transform, transform);\r\n        }\r\n        var s = Structure.transform(a.data, transform);\r\n        return new SO.Molecule.Structure(s, { label: a.label, description: a.description + \" [Transformed]\" });\r\n    },\r\n    dispose: function (_a) {\r\n        var b = _a.b;\r\n        b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\r\n    }\r\n    // interpolate(src, tar, t) {\r\n    //     // TODO: optimize\r\n    //     const u = Mat4.fromRotation(Mat4(), Math.PI / 180 * src.angle, Vec3.normalize(Vec3(), src.axis));\r\n    //     Mat4.setTranslation(u, src.translation);\r\n    //     const v = Mat4.fromRotation(Mat4(), Math.PI / 180 * tar.angle, Vec3.normalize(Vec3(), tar.axis));\r\n    //     Mat4.setTranslation(v, tar.translation);\r\n    //     const m = SymmetryOperator.slerp(Mat4(), u, v, t);\r\n    //     const rot = Mat4.getRotation(Quat.zero(), m);\r\n    //     const axis = Vec3();\r\n    //     const angle = Quat.getAxisAngle(axis, rot);\r\n    //     const translation = Mat4.getTranslation(Vec3(), m);\r\n    //     return { axis, angle, translation };\r\n    // }\r\n});\r\nvar StructureSelectionFromExpression = PluginStateTransform.BuiltIn({\r\n    name: 'structure-selection-from-expression',\r\n    display: { name: 'Selection', description: 'Create a molecular structure from the specified expression.' },\r\n    from: SO.Molecule.Structure,\r\n    to: SO.Molecule.Structure,\r\n    params: function () { return ({\r\n        expression: PD.Value(MolScriptBuilder.struct.generator.all, { isHidden: true }),\r\n        label: PD.Optional(PD.Text('', { isHidden: true }))\r\n    }); }\r\n})({\r\n    apply: function (_a) {\r\n        var a = _a.a, params = _a.params, cache = _a.cache;\r\n        var _b = StructureQueryHelper.createAndRun(a.data, params.expression), selection = _b.selection, entry = _b.entry;\r\n        cache.entry = entry;\r\n        if (Sel.isEmpty(selection))\r\n            return StateObject.Null;\r\n        var s = Sel.unionStructure(selection);\r\n        var props = { label: \"\" + (params.label || 'Selection'), description: Structure.elementDescription(s) };\r\n        return new SO.Molecule.Structure(s, props);\r\n    },\r\n    update: function (_a) {\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams, cache = _a.cache;\r\n        if (oldParams.expression !== newParams.expression)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        var entry = cache.entry;\r\n        if (entry.currentStructure === a.data) {\r\n            return StateTransformer.UpdateResult.Unchanged;\r\n        }\r\n        var selection = StructureQueryHelper.updateStructure(entry, a.data);\r\n        if (Sel.isEmpty(selection))\r\n            return StateTransformer.UpdateResult.Null;\r\n        StructureQueryHelper.updateStructureObject(b, selection, newParams.label);\r\n        return StateTransformer.UpdateResult.Updated;\r\n    },\r\n    dispose: function (_a) {\r\n        var b = _a.b;\r\n        b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\r\n    }\r\n});\r\nvar MultiStructureSelectionFromExpression = PluginStateTransform.BuiltIn({\r\n    name: 'structure-multi-selection-from-expression',\r\n    display: { name: 'Multi-structure Measurement Selection', description: 'Create selection object from multiple structures.' },\r\n    from: SO.Root,\r\n    to: SO.Molecule.Structure.Selections,\r\n    params: function () { return ({\r\n        selections: PD.ObjectList({\r\n            key: PD.Text(void 0, { description: 'A unique key.' }),\r\n            ref: PD.Text(),\r\n            groupId: PD.Optional(PD.Text()),\r\n            expression: PD.Value(MolScriptBuilder.struct.generator.empty)\r\n        }, function (e) { return e.ref; }, { isHidden: true }),\r\n        isTransitive: PD.Optional(PD.Boolean(false, { isHidden: true, description: 'Remap the selections from the original structure if structurally equivalent.' })),\r\n        label: PD.Optional(PD.Text('', { isHidden: true }))\r\n    }); }\r\n})({\r\n    apply: function (_a) {\r\n        var params = _a.params, cache = _a.cache, dependencies = _a.dependencies;\r\n        var entries = new Map();\r\n        var selections = [];\r\n        var totalSize = 0;\r\n        for (var _i = 0, _b = params.selections; _i < _b.length; _i++) {\r\n            var sel = _b[_i];\r\n            var _c = StructureQueryHelper.createAndRun(dependencies[sel.ref].data, sel.expression), selection = _c.selection, entry = _c.entry;\r\n            entries.set(sel.key, entry);\r\n            var loci = Sel.toLociWithSourceUnits(selection);\r\n            selections.push({ key: sel.key, loci: loci, groupId: sel.groupId });\r\n            totalSize += StructureElement.Loci.size(loci);\r\n        }\r\n        cache.entries = entries;\r\n        var props = { label: \"\" + (params.label || 'Multi-selection'), description: params.selections.length + \" source(s), \" + totalSize + \" element(s) total\" };\r\n        return new SO.Molecule.Structure.Selections(selections, props);\r\n    },\r\n    update: function (_a) {\r\n        var b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams, cache = _a.cache, dependencies = _a.dependencies;\r\n        if (!!oldParams.isTransitive !== !!newParams.isTransitive)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        var cacheEntries = cache.entries;\r\n        var entries = new Map();\r\n        var current = new Map();\r\n        for (var _i = 0, _b = b.data; _i < _b.length; _i++) {\r\n            var e = _b[_i];\r\n            current.set(e.key, e);\r\n        }\r\n        var changed = false;\r\n        var totalSize = 0;\r\n        var selections = [];\r\n        for (var _c = 0, _d = newParams.selections; _c < _d.length; _c++) {\r\n            var sel = _d[_c];\r\n            var structure = dependencies[sel.ref].data;\r\n            var recreate = false;\r\n            if (cacheEntries.has(sel.key)) {\r\n                var entry = cacheEntries.get(sel.key);\r\n                if (StructureQueryHelper.isUnchanged(entry, sel.expression, structure) && current.has(sel.key)) {\r\n                    var loci = current.get(sel.key);\r\n                    if (loci.groupId !== sel.groupId) {\r\n                        loci.groupId = sel.groupId;\r\n                        changed = true;\r\n                    }\r\n                    entries.set(sel.key, entry);\r\n                    selections.push(loci);\r\n                    totalSize += StructureElement.Loci.size(loci.loci);\r\n                    continue;\r\n                }\r\n                if (entry.expression !== sel.expression) {\r\n                    recreate = true;\r\n                }\r\n                else {\r\n                    // TODO: properly support \"transitive\" queries. For that Structure.areUnitAndIndicesEqual needs to be fixed;\r\n                    var update = false;\r\n                    if (!!newParams.isTransitive) {\r\n                        if (Structure.areUnitIdsAndIndicesEqual(entry.originalStructure, structure)) {\r\n                            var selection = StructureQueryHelper.run(entry, entry.originalStructure);\r\n                            entry.currentStructure = structure;\r\n                            entries.set(sel.key, entry);\r\n                            var loci = StructureElement.Loci.remap(Sel.toLociWithSourceUnits(selection), structure);\r\n                            selections.push({ key: sel.key, loci: loci, groupId: sel.groupId });\r\n                            totalSize += StructureElement.Loci.size(loci);\r\n                            changed = true;\r\n                        }\r\n                        else {\r\n                            update = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        update = true;\r\n                    }\r\n                    if (update) {\r\n                        changed = true;\r\n                        var selection = StructureQueryHelper.updateStructure(entry, structure);\r\n                        entries.set(sel.key, entry);\r\n                        var loci = Sel.toLociWithSourceUnits(selection);\r\n                        selections.push({ key: sel.key, loci: loci, groupId: sel.groupId });\r\n                        totalSize += StructureElement.Loci.size(loci);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                recreate = true;\r\n            }\r\n            if (recreate) {\r\n                changed = true;\r\n                // create new selection\r\n                var _e = StructureQueryHelper.createAndRun(structure, sel.expression), selection = _e.selection, entry = _e.entry;\r\n                entries.set(sel.key, entry);\r\n                var loci = Sel.toLociWithSourceUnits(selection);\r\n                selections.push({ key: sel.key, loci: loci });\r\n                totalSize += StructureElement.Loci.size(loci);\r\n            }\r\n        }\r\n        if (!changed)\r\n            return StateTransformer.UpdateResult.Unchanged;\r\n        cache.entries = entries;\r\n        b.data = selections;\r\n        b.label = \"\" + (newParams.label || 'Multi-selection');\r\n        b.description = selections.length + \" source(s), \" + totalSize + \" element(s) total\";\r\n        return StateTransformer.UpdateResult.Updated;\r\n    }\r\n});\r\nvar StructureSelectionFromScript = PluginStateTransform.BuiltIn({\r\n    name: 'structure-selection-from-script',\r\n    display: { name: 'Selection', description: 'Create a molecular structure from the specified script.' },\r\n    from: SO.Molecule.Structure,\r\n    to: SO.Molecule.Structure,\r\n    params: function () { return ({\r\n        script: PD.Script({ language: 'mol-script', expression: '(sel.atom.atom-groups :residue-test (= atom.resname ALA))' }),\r\n        label: PD.Optional(PD.Text(''))\r\n    }); }\r\n})({\r\n    apply: function (_a) {\r\n        var a = _a.a, params = _a.params, cache = _a.cache;\r\n        var _b = StructureQueryHelper.createAndRun(a.data, params.script), selection = _b.selection, entry = _b.entry;\r\n        cache.entry = entry;\r\n        var s = Sel.unionStructure(selection);\r\n        var props = { label: \"\" + (params.label || 'Selection'), description: Structure.elementDescription(s) };\r\n        return new SO.Molecule.Structure(s, props);\r\n    },\r\n    update: function (_a) {\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams, cache = _a.cache;\r\n        if (!Script.areEqual(oldParams.script, newParams.script)) {\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        }\r\n        var entry = cache.entry;\r\n        if (entry.currentStructure === a.data) {\r\n            return StateTransformer.UpdateResult.Unchanged;\r\n        }\r\n        var selection = StructureQueryHelper.updateStructure(entry, a.data);\r\n        StructureQueryHelper.updateStructureObject(b, selection, newParams.label);\r\n        return StateTransformer.UpdateResult.Updated;\r\n    },\r\n    dispose: function (_a) {\r\n        var b = _a.b;\r\n        b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\r\n    }\r\n});\r\nvar StructureSelectionFromBundle = PluginStateTransform.BuiltIn({\r\n    name: 'structure-selection-from-bundle',\r\n    display: { name: 'Selection', description: 'Create a molecular structure from the specified structure-element bundle.' },\r\n    from: SO.Molecule.Structure,\r\n    to: SO.Molecule.Structure,\r\n    params: function () { return ({\r\n        bundle: PD.Value(StructureElement.Bundle.Empty, { isHidden: true }),\r\n        label: PD.Optional(PD.Text('', { isHidden: true }))\r\n    }); }\r\n})({\r\n    apply: function (_a) {\r\n        var a = _a.a, params = _a.params, cache = _a.cache;\r\n        if (params.bundle.hash !== a.data.hashCode) {\r\n            return StateObject.Null;\r\n        }\r\n        cache.source = a.data;\r\n        var s = StructureElement.Bundle.toStructure(params.bundle, a.data);\r\n        if (s.elementCount === 0)\r\n            return StateObject.Null;\r\n        var props = { label: \"\" + (params.label || 'Selection'), description: Structure.elementDescription(s) };\r\n        return new SO.Molecule.Structure(s, props);\r\n    },\r\n    update: function (_a) {\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams, cache = _a.cache;\r\n        if (!StructureElement.Bundle.areEqual(oldParams.bundle, newParams.bundle)) {\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        }\r\n        if (newParams.bundle.hash !== a.data.hashCode) {\r\n            return StateTransformer.UpdateResult.Null;\r\n        }\r\n        if (cache.source === a.data) {\r\n            return StateTransformer.UpdateResult.Unchanged;\r\n        }\r\n        cache.source = a.data;\r\n        var s = StructureElement.Bundle.toStructure(newParams.bundle, a.data);\r\n        if (s.elementCount === 0)\r\n            return StateTransformer.UpdateResult.Null;\r\n        b.label = \"\" + (newParams.label || 'Selection');\r\n        b.description = Structure.elementDescription(s);\r\n        b.data = s;\r\n        return StateTransformer.UpdateResult.Updated;\r\n    },\r\n    dispose: function (_a) {\r\n        var b = _a.b;\r\n        b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\r\n    }\r\n});\r\nexport var StructureComplexElementTypes = {\r\n    'polymer': 'polymer',\r\n    'protein': 'protein',\r\n    'nucleic': 'nucleic',\r\n    'water': 'water',\r\n    'branched': 'branched',\r\n    'ligand': 'ligand',\r\n    'non-standard': 'non-standard',\r\n    'coarse': 'coarse',\r\n    // Legacy\r\n    'atomic-sequence': 'atomic-sequence',\r\n    'atomic-het': 'atomic-het',\r\n    'spheres': 'spheres'\r\n};\r\nvar StructureComplexElementTypeTuples = PD.objectToOptions(StructureComplexElementTypes);\r\nvar StructureComplexElement = PluginStateTransform.BuiltIn({\r\n    name: 'structure-complex-element',\r\n    display: { name: 'Complex Element', description: 'Create a molecular structure from the specified model.' },\r\n    from: SO.Molecule.Structure,\r\n    to: SO.Molecule.Structure,\r\n    params: { type: PD.Select('atomic-sequence', StructureComplexElementTypeTuples, { isHidden: true }) }\r\n})({\r\n    apply: function (_a) {\r\n        // TODO: update function.\r\n        var a = _a.a, params = _a.params;\r\n        var query, label;\r\n        switch (params.type) {\r\n            case 'polymer':\r\n                query = StructureSelectionQueries.polymer.query;\r\n                label = 'Polymer';\r\n                break;\r\n            case 'protein':\r\n                query = StructureSelectionQueries.protein.query;\r\n                label = 'Protein';\r\n                break;\r\n            case 'nucleic':\r\n                query = StructureSelectionQueries.nucleic.query;\r\n                label = 'Nucleic';\r\n                break;\r\n            case 'water':\r\n                query = Queries.internal.water();\r\n                label = 'Water';\r\n                break;\r\n            case 'branched':\r\n                query = StructureSelectionQueries.branchedPlusConnected.query;\r\n                label = 'Branched';\r\n                break;\r\n            case 'ligand':\r\n                query = StructureSelectionQueries.ligandPlusConnected.query;\r\n                label = 'Ligand';\r\n                break;\r\n            case 'non-standard':\r\n                query = StructureSelectionQueries.nonStandardPolymer.query;\r\n                label = 'Non-standard';\r\n                break;\r\n            case 'coarse':\r\n                query = StructureSelectionQueries.coarse.query;\r\n                label = 'Coarse';\r\n                break;\r\n            case 'atomic-sequence':\r\n                query = Queries.internal.atomicSequence();\r\n                label = 'Sequence';\r\n                break;\r\n            case 'atomic-het':\r\n                query = Queries.internal.atomicHet();\r\n                label = 'HET Groups/Ligands';\r\n                break;\r\n            case 'spheres':\r\n                query = Queries.internal.spheres();\r\n                label = 'Coarse Spheres';\r\n                break;\r\n            default: throw new Error(params.type + \" is a not valid complex element.\");\r\n        }\r\n        var result = query(new QueryContext(a.data));\r\n        var s = Sel.unionStructure(result);\r\n        if (s.elementCount === 0)\r\n            return StateObject.Null;\r\n        return new SO.Molecule.Structure(s, { label: label, description: Structure.elementDescription(s) });\r\n    },\r\n    dispose: function (_a) {\r\n        var b = _a.b;\r\n        b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\r\n    }\r\n});\r\nvar StructureComponent = PluginStateTransform.BuiltIn({\r\n    name: 'structure-component',\r\n    display: { name: 'Component', description: 'A molecular structure component.' },\r\n    from: SO.Molecule.Structure,\r\n    to: SO.Molecule.Structure,\r\n    params: StructureComponentParams\r\n})({\r\n    apply: function (_a) {\r\n        var a = _a.a, params = _a.params, cache = _a.cache;\r\n        return createStructureComponent(a.data, params, cache);\r\n    },\r\n    update: function (_a) {\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams, cache = _a.cache;\r\n        return updateStructureComponent(a.data, b, oldParams, newParams, cache);\r\n    },\r\n    dispose: function (_a) {\r\n        var b = _a.b;\r\n        b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\r\n    }\r\n});\r\nvar CustomModelProperties = PluginStateTransform.BuiltIn({\r\n    name: 'custom-model-properties',\r\n    display: { name: 'Custom Model Properties' },\r\n    isDecorator: true,\r\n    from: SO.Molecule.Model,\r\n    to: SO.Molecule.Model,\r\n    params: function (a, ctx) {\r\n        return ctx.customModelProperties.getParams(a === null || a === void 0 ? void 0 : a.data);\r\n    }\r\n})({\r\n    apply: function (_a, ctx) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Custom Props', function (taskCtx) { return __awaiter(_this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, attachModelProps(a.data, ctx, taskCtx, params)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, new SO.Molecule.Model(a.data, { label: a.label, description: a.description })];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    update: function (_a, ctx) {\r\n        var _this = this;\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return Task.create('Custom Props', function (taskCtx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _i, _a, name_1, property;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        b.data = a.data;\r\n                        b.label = a.label;\r\n                        b.description = a.description;\r\n                        for (_i = 0, _a = oldParams.autoAttach; _i < _a.length; _i++) {\r\n                            name_1 = _a[_i];\r\n                            property = ctx.customModelProperties.get(name_1);\r\n                            if (!property)\r\n                                continue;\r\n                            a.data.customProperties.reference(property.descriptor, false);\r\n                        }\r\n                        return [4 /*yield*/, attachModelProps(a.data, ctx, taskCtx, newParams)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [2 /*return*/, StateTransformer.UpdateResult.Updated];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    dispose: function (_a) {\r\n        var b = _a.b;\r\n        b === null || b === void 0 ? void 0 : b.data.customProperties.dispose();\r\n    }\r\n});\r\nfunction attachModelProps(model, ctx, taskCtx, params) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var propertyCtx, autoAttach, properties, _i, _a, name_2, property, props, e_1;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    propertyCtx = { runtime: taskCtx, assetManager: ctx.managers.asset };\r\n                    autoAttach = params.autoAttach, properties = params.properties;\r\n                    _i = 0, _a = Object.keys(properties);\r\n                    _b.label = 1;\r\n                case 1:\r\n                    if (!(_i < _a.length)) return [3 /*break*/, 8];\r\n                    name_2 = _a[_i];\r\n                    property = ctx.customModelProperties.get(name_2);\r\n                    props = properties[name_2];\r\n                    if (!(autoAttach.includes(name_2) || property.isHidden)) return [3 /*break*/, 6];\r\n                    _b.label = 2;\r\n                case 2:\r\n                    _b.trys.push([2, 4, , 5]);\r\n                    return [4 /*yield*/, property.attach(propertyCtx, model, props, true)];\r\n                case 3:\r\n                    _b.sent();\r\n                    return [3 /*break*/, 5];\r\n                case 4:\r\n                    e_1 = _b.sent();\r\n                    ctx.log.warn(\"Error attaching model prop '\" + name_2 + \"': \" + e_1);\r\n                    return [3 /*break*/, 5];\r\n                case 5: return [3 /*break*/, 7];\r\n                case 6:\r\n                    property.set(model, props);\r\n                    _b.label = 7;\r\n                case 7:\r\n                    _i++;\r\n                    return [3 /*break*/, 1];\r\n                case 8: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nvar CustomStructureProperties = PluginStateTransform.BuiltIn({\r\n    name: 'custom-structure-properties',\r\n    display: { name: 'Custom Structure Properties' },\r\n    isDecorator: true,\r\n    from: SO.Molecule.Structure,\r\n    to: SO.Molecule.Structure,\r\n    params: function (a, ctx) {\r\n        return ctx.customStructureProperties.getParams(a === null || a === void 0 ? void 0 : a.data.root);\r\n    }\r\n})({\r\n    apply: function (_a, ctx) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Custom Props', function (taskCtx) { return __awaiter(_this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, attachStructureProps(a.data.root, ctx, taskCtx, params)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, new SO.Molecule.Structure(a.data, { label: a.label, description: a.description })];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    update: function (_a, ctx) {\r\n        var _this = this;\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams;\r\n        if (a.data !== b.data)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        return Task.create('Custom Props', function (taskCtx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _i, _a, name_3, property;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        b.data = a.data;\r\n                        b.label = a.label;\r\n                        b.description = a.description;\r\n                        for (_i = 0, _a = oldParams.autoAttach; _i < _a.length; _i++) {\r\n                            name_3 = _a[_i];\r\n                            property = ctx.customStructureProperties.get(name_3);\r\n                            if (!property)\r\n                                continue;\r\n                            a.data.customPropertyDescriptors.reference(property.descriptor, false);\r\n                        }\r\n                        return [4 /*yield*/, attachStructureProps(a.data.root, ctx, taskCtx, newParams)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [2 /*return*/, StateTransformer.UpdateResult.Updated];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    dispose: function (_a) {\r\n        var b = _a.b;\r\n        b === null || b === void 0 ? void 0 : b.data.customPropertyDescriptors.dispose();\r\n    }\r\n});\r\nfunction attachStructureProps(structure, ctx, taskCtx, params) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var propertyCtx, autoAttach, properties, _i, _a, name_4, property, props, e_2;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    propertyCtx = { runtime: taskCtx, assetManager: ctx.managers.asset };\r\n                    autoAttach = params.autoAttach, properties = params.properties;\r\n                    _i = 0, _a = Object.keys(properties);\r\n                    _b.label = 1;\r\n                case 1:\r\n                    if (!(_i < _a.length)) return [3 /*break*/, 8];\r\n                    name_4 = _a[_i];\r\n                    property = ctx.customStructureProperties.get(name_4);\r\n                    props = properties[name_4];\r\n                    if (!(autoAttach.includes(name_4) || property.isHidden)) return [3 /*break*/, 6];\r\n                    _b.label = 2;\r\n                case 2:\r\n                    _b.trys.push([2, 4, , 5]);\r\n                    return [4 /*yield*/, property.attach(propertyCtx, structure, props, true)];\r\n                case 3:\r\n                    _b.sent();\r\n                    return [3 /*break*/, 5];\r\n                case 4:\r\n                    e_2 = _b.sent();\r\n                    ctx.log.warn(\"Error attaching structure prop '\" + name_4 + \"': \" + e_2);\r\n                    return [3 /*break*/, 5];\r\n                case 5: return [3 /*break*/, 7];\r\n                case 6:\r\n                    property.set(structure, props);\r\n                    _b.label = 7;\r\n                case 7:\r\n                    _i++;\r\n                    return [3 /*break*/, 1];\r\n                case 8: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nvar ShapeFromPly = PluginStateTransform.BuiltIn({\r\n    name: 'shape-from-ply',\r\n    display: { name: 'Shape from PLY', description: 'Create Shape from PLY data' },\r\n    from: SO.Format.Ply,\r\n    to: SO.Shape.Provider,\r\n    params: function (a) {\r\n        return {};\r\n    }\r\n})({\r\n    apply: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Create shape from PLY', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var shape, props;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, shapeFromPly(a.data, params).runInContext(ctx)];\r\n                    case 1:\r\n                        shape = _a.sent();\r\n                        props = { label: 'Shape' };\r\n                        return [2 /*return*/, new SO.Shape.Provider(shape, props)];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\n//# sourceMappingURL=model.js.map"]},"metadata":{},"sourceType":"module"}