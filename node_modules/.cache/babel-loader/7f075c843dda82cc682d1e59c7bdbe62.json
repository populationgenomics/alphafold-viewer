{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __extends } from \"tslib\";\nimport { PluginBehavior } from '../../../behavior';\nimport { ParamDefinition as PD } from '../../../../../mol-util/param-definition';\nimport { AccessibleSurfaceAreaProvider, AccessibleSurfaceAreaSymbols } from '../../../../../mol-model-props/computed/accessible-surface-area';\nimport { AccessibleSurfaceAreaColorThemeProvider } from '../../../../../mol-model-props/computed/themes/accessible-surface-area';\nimport { OrderedSet } from '../../../../../mol-data/int';\nimport { arraySum } from '../../../../../mol-util/array';\nimport { DefaultQueryRuntimeTable } from '../../../../../mol-script/runtime/query/compiler';\nimport { StructureSelectionQuery, StructureSelectionCategory } from '../../../../../mol-plugin-state/helpers/structure-selection-query';\nimport { MolScriptBuilder as MS } from '../../../../../mol-script/language/builder';\nexport var AccessibleSurfaceArea = PluginBehavior.create({\n  name: 'computed-accessible-surface-area-prop',\n  category: 'custom-props',\n  display: {\n    name: 'Accessible Surface Area'\n  },\n  ctor:\n  /** @class */\n  function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n\n      _this.provider = AccessibleSurfaceAreaProvider;\n      _this.labelProvider = {\n        label: function (loci) {\n          if (!_this.params.showTooltip) return;\n          return accessibleSurfaceAreaLabel(loci);\n        }\n      };\n      return _this;\n    }\n\n    class_1.prototype.update = function (p) {\n      var updated = this.params.autoAttach !== p.autoAttach || this.params.showTooltip !== p.showTooltip;\n      this.params.autoAttach = p.autoAttach;\n      this.params.showTooltip = p.showTooltip;\n      this.ctx.customStructureProperties.setDefaultAutoAttach(this.provider.descriptor.name, this.params.autoAttach);\n      return updated;\n    };\n\n    class_1.prototype.register = function () {\n      DefaultQueryRuntimeTable.addCustomProp(this.provider.descriptor);\n      this.ctx.customStructureProperties.register(this.provider, this.params.autoAttach);\n      this.ctx.representation.structure.themes.colorThemeRegistry.add(AccessibleSurfaceAreaColorThemeProvider);\n      this.ctx.managers.lociLabels.addProvider(this.labelProvider);\n      this.ctx.query.structure.registry.add(isBuried);\n      this.ctx.query.structure.registry.add(isAccessible);\n    };\n\n    class_1.prototype.unregister = function () {\n      DefaultQueryRuntimeTable.removeCustomProp(this.provider.descriptor);\n      this.ctx.customStructureProperties.unregister(this.provider.descriptor.name);\n      this.ctx.representation.structure.themes.colorThemeRegistry.remove(AccessibleSurfaceAreaColorThemeProvider);\n      this.ctx.managers.lociLabels.removeProvider(this.labelProvider);\n      this.ctx.query.structure.registry.remove(isBuried);\n      this.ctx.query.structure.registry.remove(isAccessible);\n    };\n\n    return class_1;\n  }(PluginBehavior.Handler),\n  params: function () {\n    return {\n      autoAttach: PD.Boolean(false),\n      showTooltip: PD.Boolean(true)\n    };\n  }\n}); //\n\nfunction accessibleSurfaceAreaLabel(loci) {\n  if (loci.kind === 'element-loci') {\n    if (loci.elements.length === 0) return;\n    var accessibleSurfaceArea = AccessibleSurfaceAreaProvider.get(loci.structure).value;\n    if (!accessibleSurfaceArea || loci.structure.customPropertyDescriptors.hasReference(AccessibleSurfaceAreaProvider.descriptor)) return;\n    var getSerialIndex_1 = loci.structure.root.serialMapping.getSerialIndex;\n    var area_1 = accessibleSurfaceArea.area,\n        serialResidueIndex_1 = accessibleSurfaceArea.serialResidueIndex;\n    var seen_1 = new Set();\n    var cummulativeArea_1 = 0;\n\n    var _loop_1 = function (indices, unit) {\n      var elements = unit.elements;\n      OrderedSet.forEach(indices, function (idx) {\n        var rSI = serialResidueIndex_1[getSerialIndex_1(unit, elements[idx])];\n\n        if (rSI !== -1 && !seen_1.has(rSI)) {\n          cummulativeArea_1 += area_1[rSI];\n          seen_1.add(rSI);\n        }\n      });\n    };\n\n    for (var _i = 0, _a = loci.elements; _i < _a.length; _i++) {\n      var _b = _a[_i],\n          indices = _b.indices,\n          unit = _b.unit;\n\n      _loop_1(indices, unit);\n    }\n\n    if (seen_1.size === 0) return;\n    var residueCount = \"<small>(\" + seen_1.size + \" \" + (seen_1.size > 1 ? 'Residues sum' : 'Residue') + \")</small>\";\n    return \"Accessible Surface Area \" + residueCount + \": \" + cummulativeArea_1.toFixed(2) + \" \\u212B<sup>2</sup>\";\n  } else if (loci.kind === 'structure-loci') {\n    var accessibleSurfaceArea = AccessibleSurfaceAreaProvider.get(loci.structure).value;\n    if (!accessibleSurfaceArea || loci.structure.customPropertyDescriptors.hasReference(AccessibleSurfaceAreaProvider.descriptor)) return;\n    return \"Accessible Surface Area <small>(Whole Structure)</small>: \" + arraySum(accessibleSurfaceArea.area).toFixed(2) + \" \\u212B<sup>2</sup>\";\n  }\n} //\n\n\nvar isBuried = StructureSelectionQuery('Buried Protein Residues', MS.struct.modifier.union([MS.struct.modifier.wholeResidues([MS.struct.modifier.union([MS.struct.generator.atomGroups({\n  'chain-test': MS.core.rel.eq([MS.ammp('objectPrimitive'), 'atomistic']),\n  'residue-test': AccessibleSurfaceAreaSymbols.isBuried.symbol()\n})])])]), {\n  description: 'Select buried protein residues.',\n  category: StructureSelectionCategory.Residue,\n  ensureCustomProperties: function (ctx, structure) {\n    return AccessibleSurfaceAreaProvider.attach(ctx, structure);\n  }\n});\nvar isAccessible = StructureSelectionQuery('Accessible Protein Residues', MS.struct.modifier.union([MS.struct.modifier.wholeResidues([MS.struct.modifier.union([MS.struct.generator.atomGroups({\n  'chain-test': MS.core.rel.eq([MS.ammp('objectPrimitive'), 'atomistic']),\n  'residue-test': AccessibleSurfaceAreaSymbols.isAccessible.symbol()\n})])])]), {\n  description: 'Select accessible protein residues.',\n  category: StructureSelectionCategory.Residue,\n  ensureCustomProperties: function (ctx, structure) {\n    return AccessibleSurfaceAreaProvider.attach(ctx, structure);\n  }\n});","map":{"version":3,"sources":["../../../../../../src/mol-plugin/behavior/dynamic/custom-props/computed/accessible-surface-area.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { PluginBehavior } from '../../../behavior';\r\nimport { ParamDefinition as PD } from '../../../../../mol-util/param-definition';\r\nimport { AccessibleSurfaceAreaProvider, AccessibleSurfaceAreaSymbols } from '../../../../../mol-model-props/computed/accessible-surface-area';\r\nimport { AccessibleSurfaceAreaColorThemeProvider } from '../../../../../mol-model-props/computed/themes/accessible-surface-area';\r\nimport { OrderedSet } from '../../../../../mol-data/int';\r\nimport { arraySum } from '../../../../../mol-util/array';\r\nimport { DefaultQueryRuntimeTable } from '../../../../../mol-script/runtime/query/compiler';\r\nimport { StructureSelectionQuery, StructureSelectionCategory } from '../../../../../mol-plugin-state/helpers/structure-selection-query';\r\nimport { MolScriptBuilder as MS } from '../../../../../mol-script/language/builder';\r\nexport var AccessibleSurfaceArea = PluginBehavior.create({\r\n    name: 'computed-accessible-surface-area-prop',\r\n    category: 'custom-props',\r\n    display: { name: 'Accessible Surface Area' },\r\n    ctor: /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.provider = AccessibleSurfaceAreaProvider;\r\n            _this.labelProvider = {\r\n                label: function (loci) {\r\n                    if (!_this.params.showTooltip)\r\n                        return;\r\n                    return accessibleSurfaceAreaLabel(loci);\r\n                }\r\n            };\r\n            return _this;\r\n        }\r\n        class_1.prototype.update = function (p) {\r\n            var updated = (this.params.autoAttach !== p.autoAttach ||\r\n                this.params.showTooltip !== p.showTooltip);\r\n            this.params.autoAttach = p.autoAttach;\r\n            this.params.showTooltip = p.showTooltip;\r\n            this.ctx.customStructureProperties.setDefaultAutoAttach(this.provider.descriptor.name, this.params.autoAttach);\r\n            return updated;\r\n        };\r\n        class_1.prototype.register = function () {\r\n            DefaultQueryRuntimeTable.addCustomProp(this.provider.descriptor);\r\n            this.ctx.customStructureProperties.register(this.provider, this.params.autoAttach);\r\n            this.ctx.representation.structure.themes.colorThemeRegistry.add(AccessibleSurfaceAreaColorThemeProvider);\r\n            this.ctx.managers.lociLabels.addProvider(this.labelProvider);\r\n            this.ctx.query.structure.registry.add(isBuried);\r\n            this.ctx.query.structure.registry.add(isAccessible);\r\n        };\r\n        class_1.prototype.unregister = function () {\r\n            DefaultQueryRuntimeTable.removeCustomProp(this.provider.descriptor);\r\n            this.ctx.customStructureProperties.unregister(this.provider.descriptor.name);\r\n            this.ctx.representation.structure.themes.colorThemeRegistry.remove(AccessibleSurfaceAreaColorThemeProvider);\r\n            this.ctx.managers.lociLabels.removeProvider(this.labelProvider);\r\n            this.ctx.query.structure.registry.remove(isBuried);\r\n            this.ctx.query.structure.registry.remove(isAccessible);\r\n        };\r\n        return class_1;\r\n    }(PluginBehavior.Handler)),\r\n    params: function () { return ({\r\n        autoAttach: PD.Boolean(false),\r\n        showTooltip: PD.Boolean(true)\r\n    }); }\r\n});\r\n//\r\nfunction accessibleSurfaceAreaLabel(loci) {\r\n    if (loci.kind === 'element-loci') {\r\n        if (loci.elements.length === 0)\r\n            return;\r\n        var accessibleSurfaceArea = AccessibleSurfaceAreaProvider.get(loci.structure).value;\r\n        if (!accessibleSurfaceArea || loci.structure.customPropertyDescriptors.hasReference(AccessibleSurfaceAreaProvider.descriptor))\r\n            return;\r\n        var getSerialIndex_1 = loci.structure.root.serialMapping.getSerialIndex;\r\n        var area_1 = accessibleSurfaceArea.area, serialResidueIndex_1 = accessibleSurfaceArea.serialResidueIndex;\r\n        var seen_1 = new Set();\r\n        var cummulativeArea_1 = 0;\r\n        var _loop_1 = function (indices, unit) {\r\n            var elements = unit.elements;\r\n            OrderedSet.forEach(indices, function (idx) {\r\n                var rSI = serialResidueIndex_1[getSerialIndex_1(unit, elements[idx])];\r\n                if (rSI !== -1 && !seen_1.has(rSI)) {\r\n                    cummulativeArea_1 += area_1[rSI];\r\n                    seen_1.add(rSI);\r\n                }\r\n            });\r\n        };\r\n        for (var _i = 0, _a = loci.elements; _i < _a.length; _i++) {\r\n            var _b = _a[_i], indices = _b.indices, unit = _b.unit;\r\n            _loop_1(indices, unit);\r\n        }\r\n        if (seen_1.size === 0)\r\n            return;\r\n        var residueCount = \"<small>(\" + seen_1.size + \" \" + (seen_1.size > 1 ? 'Residues sum' : 'Residue') + \")</small>\";\r\n        return \"Accessible Surface Area \" + residueCount + \": \" + cummulativeArea_1.toFixed(2) + \" \\u212B<sup>2</sup>\";\r\n    }\r\n    else if (loci.kind === 'structure-loci') {\r\n        var accessibleSurfaceArea = AccessibleSurfaceAreaProvider.get(loci.structure).value;\r\n        if (!accessibleSurfaceArea || loci.structure.customPropertyDescriptors.hasReference(AccessibleSurfaceAreaProvider.descriptor))\r\n            return;\r\n        return \"Accessible Surface Area <small>(Whole Structure)</small>: \" + arraySum(accessibleSurfaceArea.area).toFixed(2) + \" \\u212B<sup>2</sup>\";\r\n    }\r\n}\r\n//\r\nvar isBuried = StructureSelectionQuery('Buried Protein Residues', MS.struct.modifier.union([\r\n    MS.struct.modifier.wholeResidues([\r\n        MS.struct.modifier.union([\r\n            MS.struct.generator.atomGroups({\r\n                'chain-test': MS.core.rel.eq([MS.ammp('objectPrimitive'), 'atomistic']),\r\n                'residue-test': AccessibleSurfaceAreaSymbols.isBuried.symbol(),\r\n            })\r\n        ])\r\n    ])\r\n]), {\r\n    description: 'Select buried protein residues.',\r\n    category: StructureSelectionCategory.Residue,\r\n    ensureCustomProperties: function (ctx, structure) {\r\n        return AccessibleSurfaceAreaProvider.attach(ctx, structure);\r\n    }\r\n});\r\nvar isAccessible = StructureSelectionQuery('Accessible Protein Residues', MS.struct.modifier.union([\r\n    MS.struct.modifier.wholeResidues([\r\n        MS.struct.modifier.union([\r\n            MS.struct.generator.atomGroups({\r\n                'chain-test': MS.core.rel.eq([MS.ammp('objectPrimitive'), 'atomistic']),\r\n                'residue-test': AccessibleSurfaceAreaSymbols.isAccessible.symbol(),\r\n            })\r\n        ])\r\n    ])\r\n]), {\r\n    description: 'Select accessible protein residues.',\r\n    category: StructureSelectionCategory.Residue,\r\n    ensureCustomProperties: function (ctx, structure) {\r\n        return AccessibleSurfaceAreaProvider.attach(ctx, structure);\r\n    }\r\n});\r\n//# sourceMappingURL=accessible-surface-area.js.map"]},"metadata":{},"sourceType":"module"}