{"ast":null,"code":"/**\r\n * Copyright (c) 2017 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * Adapted from CIFTools.js (https://github.com/dsehnal/CIFTools.js)\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nvar StringBuilder;\n\n(function (StringBuilder) {\n  function create(chunkCapacity) {\n    if (chunkCapacity === void 0) {\n      chunkCapacity = 512;\n    }\n\n    return {\n      current: [],\n      offset: 0,\n      capacity: chunkCapacity,\n      chunks: []\n    };\n  }\n\n  StringBuilder.create = create;\n\n  function getString(builder) {\n    if (!builder.chunks.length) {\n      if (builder.current.length === builder.offset) return builder.current.join('');\n      return builder.current.splice(0, builder.offset).join('');\n    }\n\n    if (builder.offset > 0) {\n      builder.chunks[builder.chunks.length] = builder.current.length === builder.offset ? builder.current.join('') : builder.current.slice(0, builder.offset).join('');\n    }\n\n    return builder.chunks.join('');\n  }\n\n  StringBuilder.getString = getString;\n\n  function getSize(builder) {\n    var size = 0;\n\n    for (var _i = 0, _a = builder.chunks; _i < _a.length; _i++) {\n      var c = _a[_i];\n      size += c.length;\n    }\n\n    for (var i = 0; i < builder.offset; i++) size += builder.current[i].length;\n\n    return size;\n  }\n\n  StringBuilder.getSize = getSize;\n\n  function getChunks(builder) {\n    if (builder.offset > 0) {\n      if (builder.current.length === builder.offset) builder.chunks[builder.chunks.length] = builder.current.join('');else builder.chunks[builder.chunks.length] = builder.current.slice(0, builder.offset).join('');\n      builder.offset = 0;\n    }\n\n    return builder.chunks;\n  }\n\n  StringBuilder.getChunks = getChunks;\n  var __paddingSpaces = [];\n\n  (function () {\n    var s = '';\n\n    for (var i = 0; i < 512\n    /* Count */\n    ; i++) {\n      __paddingSpaces[i] = s;\n      s = s + ' ';\n    }\n  })();\n\n  function newline(builder) {\n    writeSafe(builder, '\\n');\n  }\n\n  StringBuilder.newline = newline;\n\n  function whitespace(builder, len) {\n    if (len > 0) writeSafe(builder, __paddingSpaces[len]);\n  }\n\n  StringBuilder.whitespace = whitespace;\n\n  function whitespace1(builder) {\n    writeSafe(builder, ' ');\n  }\n\n  StringBuilder.whitespace1 = whitespace1;\n\n  function write(builder, val) {\n    if (!val) return;\n\n    if (builder.offset === builder.capacity) {\n      builder.chunks[builder.chunks.length] = builder.current.join('');\n      builder.offset = 0;\n    }\n\n    builder.current[builder.offset++] = val;\n  }\n\n  StringBuilder.write = write;\n  /** Write without check. */\n\n  function writeSafe(builder, val) {\n    if (builder.offset === builder.capacity) {\n      builder.chunks[builder.chunks.length] = builder.current.join('');\n      builder.offset = 0;\n    }\n\n    builder.current[builder.offset++] = val;\n  }\n\n  StringBuilder.writeSafe = writeSafe;\n\n  function writePadLeft(builder, val, totalWidth) {\n    if (!val) {\n      whitespace(builder, totalWidth);\n      return;\n    }\n\n    var padding = totalWidth - val.length;\n    whitespace(builder, padding);\n    writeSafe(builder, val);\n  }\n\n  StringBuilder.writePadLeft = writePadLeft;\n\n  function writePadRight(builder, val, totalWidth) {\n    if (!val) {\n      whitespace(builder, totalWidth);\n      return;\n    }\n\n    var padding = totalWidth - val.length;\n    writeSafe(builder, val);\n    whitespace(builder, padding);\n  }\n\n  StringBuilder.writePadRight = writePadRight;\n\n  function writeInteger(builder, val) {\n    writeSafe(builder, '' + val);\n  }\n\n  StringBuilder.writeInteger = writeInteger;\n\n  function writeIntegerAndSpace(builder, val) {\n    writeSafe(builder, '' + val + ' ');\n  }\n\n  StringBuilder.writeIntegerAndSpace = writeIntegerAndSpace;\n\n  function writeIntegerPadLeft(builder, val, totalWidth) {\n    var s = '' + val;\n    var padding = totalWidth - s.length;\n    whitespace(builder, padding);\n    writeSafe(builder, s);\n  }\n\n  StringBuilder.writeIntegerPadLeft = writeIntegerPadLeft;\n\n  function writeIntegerPadRight(builder, val, totalWidth) {\n    var s = '' + val;\n    var padding = totalWidth - s.length;\n    writeSafe(builder, s);\n    whitespace(builder, padding);\n  }\n\n  StringBuilder.writeIntegerPadRight = writeIntegerPadRight;\n  /**\r\n   * @example writeFloat(123.2123, 100) -- 2 decim\r\n   */\n\n  function writeFloat(builder, val, precisionMultiplier) {\n    writeSafe(builder, '' + Math.round(precisionMultiplier * val) / precisionMultiplier);\n  }\n\n  StringBuilder.writeFloat = writeFloat;\n\n  function writeFloatPadLeft(builder, val, precisionMultiplier, totalWidth) {\n    var s = '' + Math.round(precisionMultiplier * val) / precisionMultiplier;\n    var padding = totalWidth - s.length;\n    whitespace(builder, padding);\n    writeSafe(builder, s);\n  }\n\n  StringBuilder.writeFloatPadLeft = writeFloatPadLeft;\n\n  function writeFloatPadRight(builder, val, precisionMultiplier, totalWidth) {\n    var s = '' + Math.round(precisionMultiplier * val) / precisionMultiplier;\n    var padding = totalWidth - s.length;\n    writeSafe(builder, s);\n    whitespace(builder, padding);\n  }\n\n  StringBuilder.writeFloatPadRight = writeFloatPadRight;\n})(StringBuilder || (StringBuilder = {}));\n\nexport { StringBuilder };","map":{"version":3,"sources":["../../src/mol-util/string-builder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2017 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * Adapted from CIFTools.js (https://github.com/dsehnal/CIFTools.js)\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nvar StringBuilder;\r\n(function (StringBuilder) {\r\n    function create(chunkCapacity) {\r\n        if (chunkCapacity === void 0) { chunkCapacity = 512; }\r\n        return {\r\n            current: [],\r\n            offset: 0,\r\n            capacity: chunkCapacity,\r\n            chunks: []\r\n        };\r\n    }\r\n    StringBuilder.create = create;\r\n    function getString(builder) {\r\n        if (!builder.chunks.length) {\r\n            if (builder.current.length === builder.offset)\r\n                return builder.current.join('');\r\n            return builder.current.splice(0, builder.offset).join('');\r\n        }\r\n        if (builder.offset > 0) {\r\n            builder.chunks[builder.chunks.length] = builder.current.length === builder.offset\r\n                ? builder.current.join('')\r\n                : builder.current.slice(0, builder.offset).join('');\r\n        }\r\n        return builder.chunks.join('');\r\n    }\r\n    StringBuilder.getString = getString;\r\n    function getSize(builder) {\r\n        var size = 0;\r\n        for (var _i = 0, _a = builder.chunks; _i < _a.length; _i++) {\r\n            var c = _a[_i];\r\n            size += c.length;\r\n        }\r\n        for (var i = 0; i < builder.offset; i++)\r\n            size += builder.current[i].length;\r\n        return size;\r\n    }\r\n    StringBuilder.getSize = getSize;\r\n    function getChunks(builder) {\r\n        if (builder.offset > 0) {\r\n            if (builder.current.length === builder.offset)\r\n                builder.chunks[builder.chunks.length] = builder.current.join('');\r\n            else\r\n                builder.chunks[builder.chunks.length] = builder.current.slice(0, builder.offset).join('');\r\n            builder.offset = 0;\r\n        }\r\n        return builder.chunks;\r\n    }\r\n    StringBuilder.getChunks = getChunks;\r\n    var __paddingSpaces = [];\r\n    (function () {\r\n        var s = '';\r\n        for (var i = 0; i < 512 /* Count */; i++) {\r\n            __paddingSpaces[i] = s;\r\n            s = s + ' ';\r\n        }\r\n    })();\r\n    function newline(builder) {\r\n        writeSafe(builder, '\\n');\r\n    }\r\n    StringBuilder.newline = newline;\r\n    function whitespace(builder, len) {\r\n        if (len > 0)\r\n            writeSafe(builder, __paddingSpaces[len]);\r\n    }\r\n    StringBuilder.whitespace = whitespace;\r\n    function whitespace1(builder) {\r\n        writeSafe(builder, ' ');\r\n    }\r\n    StringBuilder.whitespace1 = whitespace1;\r\n    function write(builder, val) {\r\n        if (!val)\r\n            return;\r\n        if (builder.offset === builder.capacity) {\r\n            builder.chunks[builder.chunks.length] = builder.current.join('');\r\n            builder.offset = 0;\r\n        }\r\n        builder.current[builder.offset++] = val;\r\n    }\r\n    StringBuilder.write = write;\r\n    /** Write without check. */\r\n    function writeSafe(builder, val) {\r\n        if (builder.offset === builder.capacity) {\r\n            builder.chunks[builder.chunks.length] = builder.current.join('');\r\n            builder.offset = 0;\r\n        }\r\n        builder.current[builder.offset++] = val;\r\n    }\r\n    StringBuilder.writeSafe = writeSafe;\r\n    function writePadLeft(builder, val, totalWidth) {\r\n        if (!val) {\r\n            whitespace(builder, totalWidth);\r\n            return;\r\n        }\r\n        var padding = totalWidth - val.length;\r\n        whitespace(builder, padding);\r\n        writeSafe(builder, val);\r\n    }\r\n    StringBuilder.writePadLeft = writePadLeft;\r\n    function writePadRight(builder, val, totalWidth) {\r\n        if (!val) {\r\n            whitespace(builder, totalWidth);\r\n            return;\r\n        }\r\n        var padding = totalWidth - val.length;\r\n        writeSafe(builder, val);\r\n        whitespace(builder, padding);\r\n    }\r\n    StringBuilder.writePadRight = writePadRight;\r\n    function writeInteger(builder, val) {\r\n        writeSafe(builder, '' + val);\r\n    }\r\n    StringBuilder.writeInteger = writeInteger;\r\n    function writeIntegerAndSpace(builder, val) {\r\n        writeSafe(builder, '' + val + ' ');\r\n    }\r\n    StringBuilder.writeIntegerAndSpace = writeIntegerAndSpace;\r\n    function writeIntegerPadLeft(builder, val, totalWidth) {\r\n        var s = '' + val;\r\n        var padding = totalWidth - s.length;\r\n        whitespace(builder, padding);\r\n        writeSafe(builder, s);\r\n    }\r\n    StringBuilder.writeIntegerPadLeft = writeIntegerPadLeft;\r\n    function writeIntegerPadRight(builder, val, totalWidth) {\r\n        var s = '' + val;\r\n        var padding = totalWidth - s.length;\r\n        writeSafe(builder, s);\r\n        whitespace(builder, padding);\r\n    }\r\n    StringBuilder.writeIntegerPadRight = writeIntegerPadRight;\r\n    /**\r\n     * @example writeFloat(123.2123, 100) -- 2 decim\r\n     */\r\n    function writeFloat(builder, val, precisionMultiplier) {\r\n        writeSafe(builder, '' + Math.round(precisionMultiplier * val) / precisionMultiplier);\r\n    }\r\n    StringBuilder.writeFloat = writeFloat;\r\n    function writeFloatPadLeft(builder, val, precisionMultiplier, totalWidth) {\r\n        var s = '' + Math.round(precisionMultiplier * val) / precisionMultiplier;\r\n        var padding = totalWidth - s.length;\r\n        whitespace(builder, padding);\r\n        writeSafe(builder, s);\r\n    }\r\n    StringBuilder.writeFloatPadLeft = writeFloatPadLeft;\r\n    function writeFloatPadRight(builder, val, precisionMultiplier, totalWidth) {\r\n        var s = '' + Math.round(precisionMultiplier * val) / precisionMultiplier;\r\n        var padding = totalWidth - s.length;\r\n        writeSafe(builder, s);\r\n        whitespace(builder, padding);\r\n    }\r\n    StringBuilder.writeFloatPadRight = writeFloatPadRight;\r\n})(StringBuilder || (StringBuilder = {}));\r\nexport { StringBuilder };\r\n//# sourceMappingURL=string-builder.js.map"]},"metadata":{},"sourceType":"module"}