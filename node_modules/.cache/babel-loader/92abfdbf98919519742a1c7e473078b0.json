{"ast":null,"code":"/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { SortedArray } from '../../../../../mol-data/int';\n\nvar ElementSetIntraBondCache =\n/** @class */\nfunction () {\n  function ElementSetIntraBondCache() {\n    this.data = new Map();\n  }\n\n  ElementSetIntraBondCache.prototype.get = function (xs) {\n    var hash = SortedArray.hashCode(xs);\n    if (!this.data.has(hash)) return void 0;\n\n    for (var _i = 0, _a = this.data.get(hash); _i < _a.length; _i++) {\n      var _b = _a[_i],\n          s = _b[0],\n          b = _b[1];\n      if (SortedArray.areEqual(xs, s)) return b;\n    }\n  };\n\n  ElementSetIntraBondCache.prototype.set = function (xs, bonds) {\n    var hash = SortedArray.hashCode(xs);\n\n    if (this.data.has(hash)) {\n      var es = this.data.get(hash);\n\n      for (var _i = 0, es_1 = es; _i < es_1.length; _i++) {\n        var e = es_1[_i];\n\n        if (SortedArray.areEqual(xs, e[0])) {\n          e[1] = bonds;\n          return;\n        }\n      }\n\n      es.push([xs, bonds]);\n    } else {\n      this.data.set(hash, [[xs, bonds]]);\n    }\n  };\n\n  ElementSetIntraBondCache.get = function (model) {\n    if (!model._dynamicPropertyData.ElementSetIntraBondCache) {\n      model._dynamicPropertyData.ElementSetIntraBondCache = new ElementSetIntraBondCache();\n    }\n\n    return model._dynamicPropertyData.ElementSetIntraBondCache;\n  };\n\n  return ElementSetIntraBondCache;\n}();\n\nexport { ElementSetIntraBondCache };","map":{"version":3,"sources":["../../../../../../src/mol-model/structure/structure/unit/bonds/element-set-intra-bond-cache.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAIH,SAAS,WAAT,QAA4B,6BAA5B;;AAGA,IAAA,wBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,wBAAA,GAAA;AACY,SAAA,IAAA,GAAO,IAAI,GAAJ,EAAP;AAgCX;;AA9BG,EAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,EAAJ,EAA4B;AACxB,QAAM,IAAI,GAAG,WAAW,CAAC,QAAZ,CAAqB,EAArB,CAAb;AACA,QAAI,CAAC,KAAK,IAAL,CAAU,GAAV,CAAc,IAAd,CAAL,EAA0B,OAAO,KAAK,CAAZ;;AAC1B,SAAqB,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAK,IAAL,CAAU,GAAV,CAAc,IAAd,CAArB,EAAqB,EAAA,GAAA,EAAA,CAAA,MAArB,EAAqB,EAAA,EAArB,EAA2C;AAAhC,UAAA,EAAA,GAAA,EAAA,CAAA,EAAA,CAAA;AAAA,UAAC,CAAC,GAAA,EAAA,CAAA,CAAA,CAAF;AAAA,UAAI,CAAC,GAAA,EAAA,CAAA,CAAA,CAAL;AACP,UAAI,WAAW,CAAC,QAAZ,CAAqB,EAArB,EAAyB,CAAzB,CAAJ,EAAiC,OAAO,CAAP;AACpC;AACJ,GAND;;AAQA,EAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,EAAJ,EAA8B,KAA9B,EAAmD;AAC/C,QAAM,IAAI,GAAG,WAAW,CAAC,QAAZ,CAAqB,EAArB,CAAb;;AACA,QAAI,KAAK,IAAL,CAAU,GAAV,CAAc,IAAd,CAAJ,EAAyB;AACrB,UAAM,EAAE,GAAG,KAAK,IAAL,CAAU,GAAV,CAAc,IAAd,CAAX;;AACA,WAAgB,IAAA,EAAA,GAAA,CAAA,EAAA,IAAA,GAAA,EAAhB,EAAgB,EAAA,GAAA,IAAA,CAAA,MAAhB,EAAgB,EAAA,EAAhB,EAAoB;AAAf,YAAM,CAAC,GAAA,IAAA,CAAA,EAAA,CAAP;;AACD,YAAI,WAAW,CAAC,QAAZ,CAAqB,EAArB,EAAyB,CAAC,CAAC,CAAD,CAA1B,CAAJ,EAAoC;AAChC,UAAA,CAAC,CAAC,CAAD,CAAD,GAAO,KAAP;AACA;AACH;AACJ;;AACD,MAAA,EAAE,CAAC,IAAH,CAAQ,CAAC,EAAD,EAAK,KAAL,CAAR;AACH,KATD,MASO;AACH,WAAK,IAAL,CAAU,GAAV,CAAc,IAAd,EAAoB,CAAC,CAAC,EAAD,EAAK,KAAL,CAAD,CAApB;AACH;AACJ,GAdD;;AAgBO,EAAA,wBAAA,CAAA,GAAA,GAAP,UAAW,KAAX,EAAuB;AACnB,QAAI,CAAC,KAAK,CAAC,oBAAN,CAA2B,wBAAhC,EAA0D;AACtD,MAAA,KAAK,CAAC,oBAAN,CAA2B,wBAA3B,GAAsD,IAAI,wBAAJ,EAAtD;AACH;;AACD,WAAO,KAAK,CAAC,oBAAN,CAA2B,wBAAlC;AACH,GALM;;AAMX,SAAA,wBAAA;AAAC,CAjCD,EAAA","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { SortedArray } from '../../../../../mol-data/int';\r\nvar ElementSetIntraBondCache = /** @class */ (function () {\r\n    function ElementSetIntraBondCache() {\r\n        this.data = new Map();\r\n    }\r\n    ElementSetIntraBondCache.prototype.get = function (xs) {\r\n        var hash = SortedArray.hashCode(xs);\r\n        if (!this.data.has(hash))\r\n            return void 0;\r\n        for (var _i = 0, _a = this.data.get(hash); _i < _a.length; _i++) {\r\n            var _b = _a[_i], s = _b[0], b = _b[1];\r\n            if (SortedArray.areEqual(xs, s))\r\n                return b;\r\n        }\r\n    };\r\n    ElementSetIntraBondCache.prototype.set = function (xs, bonds) {\r\n        var hash = SortedArray.hashCode(xs);\r\n        if (this.data.has(hash)) {\r\n            var es = this.data.get(hash);\r\n            for (var _i = 0, es_1 = es; _i < es_1.length; _i++) {\r\n                var e = es_1[_i];\r\n                if (SortedArray.areEqual(xs, e[0])) {\r\n                    e[1] = bonds;\r\n                    return;\r\n                }\r\n            }\r\n            es.push([xs, bonds]);\r\n        }\r\n        else {\r\n            this.data.set(hash, [[xs, bonds]]);\r\n        }\r\n    };\r\n    ElementSetIntraBondCache.get = function (model) {\r\n        if (!model._dynamicPropertyData.ElementSetIntraBondCache) {\r\n            model._dynamicPropertyData.ElementSetIntraBondCache = new ElementSetIntraBondCache();\r\n        }\r\n        return model._dynamicPropertyData.ElementSetIntraBondCache;\r\n    };\r\n    return ElementSetIntraBondCache;\r\n}());\r\nexport { ElementSetIntraBondCache };\r\n//# sourceMappingURL=element-set-intra-bond-cache.js.map"]},"metadata":{},"sourceType":"module"}