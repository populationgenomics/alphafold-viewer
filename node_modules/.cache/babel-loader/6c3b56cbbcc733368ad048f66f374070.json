{"ast":null,"code":"/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { Scene } from '../../mol-gl/scene';\nimport { MeshBuilder } from '../../mol-geo/geometry/mesh/mesh-builder';\nimport { Vec3, Mat4 } from '../../mol-math/linear-algebra';\nimport { addSphere } from '../../mol-geo/geometry/mesh/builder/sphere';\nimport { Mesh } from '../../mol-geo/geometry/mesh/mesh';\nimport { ColorNames } from '../../mol-util/color/names';\nimport { addCylinder } from '../../mol-geo/geometry/mesh/builder/cylinder';\nimport { ValueCell } from '../../mol-util';\nimport { Sphere3D } from '../../mol-math/geometry';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport produce from 'immer';\nimport { Shape } from '../../mol-model/shape';\nimport { DataLoci, EmptyLoci } from '../../mol-model/loci';\nimport { MarkerActions } from '../../mol-util/marker-action';\nimport { Visual } from '../../mol-repr/visual';\nimport { Interval } from '../../mol-data/int';\n\nvar HandleParams = __assign(__assign({}, Mesh.Params), {\n  alpha: __assign(__assign({}, Mesh.Params.alpha), {\n    defaultValue: 1\n  }),\n  ignoreLight: __assign(__assign({}, Mesh.Params.ignoreLight), {\n    defaultValue: true\n  }),\n  colorX: PD.Color(ColorNames.red, {\n    isEssential: true\n  }),\n  colorY: PD.Color(ColorNames.green, {\n    isEssential: true\n  }),\n  colorZ: PD.Color(ColorNames.blue, {\n    isEssential: true\n  }),\n  scale: PD.Numeric(0.33, {\n    min: 0.1,\n    max: 2,\n    step: 0.1\n  }, {\n    isEssential: true\n  })\n});\n\nexport var HandleHelperParams = {\n  handle: PD.MappedStatic('off', {\n    on: PD.Group(HandleParams),\n    off: PD.Group({})\n  }, {\n    cycle: true,\n    description: 'Show handle tool'\n  })\n};\n\nvar HandleHelper =\n/** @class */\nfunction () {\n  function HandleHelper(webgl, props) {\n    var _this = this;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    this.webgl = webgl;\n    this.props = {\n      handle: {\n        name: 'off',\n        params: {}\n      }\n    };\n    this._transform = Mat4();\n\n    this.eachGroup = function (loci, apply) {\n      if (!_this.renderObject) return false;\n      if (!isHandleLoci(loci)) return false;\n      var changed = false;\n      var groupCount = _this.renderObject.values.uGroupCount.ref.value;\n      var elements = loci.elements;\n\n      for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n        var _a = elements_1[_i],\n            groupId = _a.groupId,\n            instanceId = _a.instanceId;\n        var idx = instanceId * groupCount + groupId;\n        if (apply(Interval.ofSingleton(idx))) changed = true;\n      }\n\n      return changed;\n    };\n\n    this.scene = Scene.create(webgl);\n    this.setProps(props);\n  }\n\n  HandleHelper.prototype.getBoundingSphere = function (out, instanceId) {\n    if (this.renderObject) {\n      Sphere3D.copy(out, this.renderObject.values.invariantBoundingSphere.ref.value);\n      Mat4.fromArray(this._transform, this.renderObject.values.aTransform.ref.value, instanceId * 16);\n      Sphere3D.transform(out, out, this._transform);\n    }\n\n    return out;\n  };\n\n  HandleHelper.prototype.setProps = function (props) {\n    var _this = this;\n\n    this.props = produce(this.props, function (p) {\n      if (props.handle !== undefined) {\n        p.handle.name = props.handle.name;\n\n        if (props.handle.name === 'on') {\n          _this.scene.clear();\n\n          var params = __assign(__assign({}, props.handle.params), {\n            scale: props.handle.params.scale * _this.webgl.pixelRatio\n          });\n\n          _this.renderObject = createHandleRenderObject(params);\n          _this.renderObject.state.noClip = true;\n\n          _this.scene.add(_this.renderObject);\n\n          _this.scene.commit();\n\n          p.handle.params = __assign({}, props.handle.params);\n        }\n      }\n    });\n  };\n\n  Object.defineProperty(HandleHelper.prototype, \"isEnabled\", {\n    get: function () {\n      return this.props.handle.name === 'on';\n    },\n    enumerable: false,\n    configurable: true\n  }); // TODO could be a lists of position/rotation if we want to show more than one handle tool,\n  //      they would be distingishable by their instanceId\n\n  HandleHelper.prototype.update = function (camera, position, rotation) {\n    if (!this.renderObject) return;\n    Mat4.setTranslation(this.renderObject.values.aTransform.ref.value, position);\n    Mat4.fromMat3(this.renderObject.values.aTransform.ref.value, rotation); // TODO make invariant to camera scaling by adjusting renderObject transform\n\n    ValueCell.update(this.renderObject.values.aTransform, this.renderObject.values.aTransform.ref.value);\n    this.scene.update([this.renderObject], true);\n  };\n\n  HandleHelper.prototype.getLoci = function (pickingId) {\n    var objectId = pickingId.objectId,\n        groupId = pickingId.groupId,\n        instanceId = pickingId.instanceId;\n    if (!this.renderObject || objectId !== this.renderObject.id) return EmptyLoci;\n    return HandleLoci(this, groupId, instanceId);\n  };\n\n  HandleHelper.prototype.mark = function (loci, action) {\n    if (!MarkerActions.is(MarkerActions.Highlighting, action)) return false;\n    if (!isHandleLoci(loci)) return false;\n    if (loci.data !== this) return false;\n    return Visual.mark(this.renderObject, loci, action, this.eachGroup);\n  };\n\n  return HandleHelper;\n}();\n\nexport { HandleHelper };\n\nfunction createHandleMesh(scale, mesh) {\n  var state = MeshBuilder.createState(512, 256, mesh);\n  var radius = 0.05 * scale;\n  var x = Vec3.scale(Vec3(), Vec3.unitX, scale);\n  var y = Vec3.scale(Vec3(), Vec3.unitY, scale);\n  var z = Vec3.scale(Vec3(), Vec3.unitZ, scale);\n  var cylinderProps = {\n    radiusTop: radius,\n    radiusBottom: radius,\n    radialSegments: 32\n  };\n  state.currentGroup = HandleGroup.TranslateScreenXY;\n  addSphere(state, Vec3.origin, radius * 3, 2);\n  state.currentGroup = HandleGroup.TranslateObjectX;\n  addSphere(state, x, radius, 2);\n  addCylinder(state, Vec3.origin, x, 1, cylinderProps);\n  state.currentGroup = HandleGroup.TranslateObjectY;\n  addSphere(state, y, radius, 2);\n  addCylinder(state, Vec3.origin, y, 1, cylinderProps);\n  state.currentGroup = HandleGroup.TranslateObjectZ;\n  addSphere(state, z, radius, 2);\n  addCylinder(state, Vec3.origin, z, 1, cylinderProps); // TODO add more helper geometries for the other HandleGroup options\n  // TODO add props to create subset of geometries\n\n  return MeshBuilder.getMesh(state);\n}\n\nexport var HandleGroup = {\n  None: 0,\n  TranslateScreenXY: 1,\n  // TranslateScreenZ: 2,\n  TranslateObjectX: 3,\n  TranslateObjectY: 4,\n  TranslateObjectZ: 5 // TranslateObjectXY: 6,\n  // TranslateObjectXZ: 7,\n  // TranslateObjectYZ: 8,\n  // RotateScreenZ: 9,\n  // RotateObjectX: 10,\n  // RotateObjectY: 11,\n  // RotateObjectZ: 12,\n\n};\n\nfunction HandleLoci(handleHelper, groupId, instanceId) {\n  return DataLoci('handle', handleHelper, [{\n    groupId: groupId,\n    instanceId: instanceId\n  }], function (boundingSphere) {\n    return handleHelper.getBoundingSphere(boundingSphere, instanceId);\n  }, function () {\n    return \"Handle Helper | Group Id \" + groupId + \" | Instance Id \" + instanceId;\n  });\n}\n\nexport function isHandleLoci(x) {\n  return x.kind === 'data-loci' && x.tag === 'handle';\n}\n\nfunction getHandleShape(props, shape) {\n  var scale = 10 * props.scale;\n  var mesh = createHandleMesh(scale, shape === null || shape === void 0 ? void 0 : shape.geometry);\n  mesh.setBoundingSphere(Sphere3D.create(Vec3.create(scale / 2, scale / 2, scale / 2), scale + scale / 4));\n\n  var getColor = function (groupId) {\n    switch (groupId) {\n      case HandleGroup.TranslateObjectX:\n        return props.colorX;\n\n      case HandleGroup.TranslateObjectY:\n        return props.colorY;\n\n      case HandleGroup.TranslateObjectZ:\n        return props.colorZ;\n\n      default:\n        return ColorNames.grey;\n    }\n  };\n\n  return Shape.create('handle', {}, mesh, getColor, function () {\n    return 1;\n  }, function () {\n    return '';\n  });\n}\n\nfunction createHandleRenderObject(props) {\n  var shape = getHandleShape(props);\n  return Shape.createRenderObject(shape, props);\n}","map":{"version":3,"sources":["../../../src/mol-canvas3d/helper/handle-helper.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { Scene } from '../../mol-gl/scene';\r\nimport { MeshBuilder } from '../../mol-geo/geometry/mesh/mesh-builder';\r\nimport { Vec3, Mat4 } from '../../mol-math/linear-algebra';\r\nimport { addSphere } from '../../mol-geo/geometry/mesh/builder/sphere';\r\nimport { Mesh } from '../../mol-geo/geometry/mesh/mesh';\r\nimport { ColorNames } from '../../mol-util/color/names';\r\nimport { addCylinder } from '../../mol-geo/geometry/mesh/builder/cylinder';\r\nimport { ValueCell } from '../../mol-util';\r\nimport { Sphere3D } from '../../mol-math/geometry';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport produce from 'immer';\r\nimport { Shape } from '../../mol-model/shape';\r\nimport { DataLoci, EmptyLoci } from '../../mol-model/loci';\r\nimport { MarkerActions } from '../../mol-util/marker-action';\r\nimport { Visual } from '../../mol-repr/visual';\r\nimport { Interval } from '../../mol-data/int';\r\nvar HandleParams = __assign(__assign({}, Mesh.Params), { alpha: __assign(__assign({}, Mesh.Params.alpha), { defaultValue: 1 }), ignoreLight: __assign(__assign({}, Mesh.Params.ignoreLight), { defaultValue: true }), colorX: PD.Color(ColorNames.red, { isEssential: true }), colorY: PD.Color(ColorNames.green, { isEssential: true }), colorZ: PD.Color(ColorNames.blue, { isEssential: true }), scale: PD.Numeric(0.33, { min: 0.1, max: 2, step: 0.1 }, { isEssential: true }) });\r\nexport var HandleHelperParams = {\r\n    handle: PD.MappedStatic('off', {\r\n        on: PD.Group(HandleParams),\r\n        off: PD.Group({})\r\n    }, { cycle: true, description: 'Show handle tool' }),\r\n};\r\nvar HandleHelper = /** @class */ (function () {\r\n    function HandleHelper(webgl, props) {\r\n        var _this = this;\r\n        if (props === void 0) { props = {}; }\r\n        this.webgl = webgl;\r\n        this.props = {\r\n            handle: { name: 'off', params: {} }\r\n        };\r\n        this._transform = Mat4();\r\n        this.eachGroup = function (loci, apply) {\r\n            if (!_this.renderObject)\r\n                return false;\r\n            if (!isHandleLoci(loci))\r\n                return false;\r\n            var changed = false;\r\n            var groupCount = _this.renderObject.values.uGroupCount.ref.value;\r\n            var elements = loci.elements;\r\n            for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\r\n                var _a = elements_1[_i], groupId = _a.groupId, instanceId = _a.instanceId;\r\n                var idx = instanceId * groupCount + groupId;\r\n                if (apply(Interval.ofSingleton(idx)))\r\n                    changed = true;\r\n            }\r\n            return changed;\r\n        };\r\n        this.scene = Scene.create(webgl);\r\n        this.setProps(props);\r\n    }\r\n    HandleHelper.prototype.getBoundingSphere = function (out, instanceId) {\r\n        if (this.renderObject) {\r\n            Sphere3D.copy(out, this.renderObject.values.invariantBoundingSphere.ref.value);\r\n            Mat4.fromArray(this._transform, this.renderObject.values.aTransform.ref.value, instanceId * 16);\r\n            Sphere3D.transform(out, out, this._transform);\r\n        }\r\n        return out;\r\n    };\r\n    HandleHelper.prototype.setProps = function (props) {\r\n        var _this = this;\r\n        this.props = produce(this.props, function (p) {\r\n            if (props.handle !== undefined) {\r\n                p.handle.name = props.handle.name;\r\n                if (props.handle.name === 'on') {\r\n                    _this.scene.clear();\r\n                    var params = __assign(__assign({}, props.handle.params), { scale: props.handle.params.scale * _this.webgl.pixelRatio });\r\n                    _this.renderObject = createHandleRenderObject(params);\r\n                    _this.renderObject.state.noClip = true;\r\n                    _this.scene.add(_this.renderObject);\r\n                    _this.scene.commit();\r\n                    p.handle.params = __assign({}, props.handle.params);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(HandleHelper.prototype, \"isEnabled\", {\r\n        get: function () {\r\n            return this.props.handle.name === 'on';\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // TODO could be a lists of position/rotation if we want to show more than one handle tool,\r\n    //      they would be distingishable by their instanceId\r\n    HandleHelper.prototype.update = function (camera, position, rotation) {\r\n        if (!this.renderObject)\r\n            return;\r\n        Mat4.setTranslation(this.renderObject.values.aTransform.ref.value, position);\r\n        Mat4.fromMat3(this.renderObject.values.aTransform.ref.value, rotation);\r\n        // TODO make invariant to camera scaling by adjusting renderObject transform\r\n        ValueCell.update(this.renderObject.values.aTransform, this.renderObject.values.aTransform.ref.value);\r\n        this.scene.update([this.renderObject], true);\r\n    };\r\n    HandleHelper.prototype.getLoci = function (pickingId) {\r\n        var objectId = pickingId.objectId, groupId = pickingId.groupId, instanceId = pickingId.instanceId;\r\n        if (!this.renderObject || objectId !== this.renderObject.id)\r\n            return EmptyLoci;\r\n        return HandleLoci(this, groupId, instanceId);\r\n    };\r\n    HandleHelper.prototype.mark = function (loci, action) {\r\n        if (!MarkerActions.is(MarkerActions.Highlighting, action))\r\n            return false;\r\n        if (!isHandleLoci(loci))\r\n            return false;\r\n        if (loci.data !== this)\r\n            return false;\r\n        return Visual.mark(this.renderObject, loci, action, this.eachGroup);\r\n    };\r\n    return HandleHelper;\r\n}());\r\nexport { HandleHelper };\r\nfunction createHandleMesh(scale, mesh) {\r\n    var state = MeshBuilder.createState(512, 256, mesh);\r\n    var radius = 0.05 * scale;\r\n    var x = Vec3.scale(Vec3(), Vec3.unitX, scale);\r\n    var y = Vec3.scale(Vec3(), Vec3.unitY, scale);\r\n    var z = Vec3.scale(Vec3(), Vec3.unitZ, scale);\r\n    var cylinderProps = { radiusTop: radius, radiusBottom: radius, radialSegments: 32 };\r\n    state.currentGroup = HandleGroup.TranslateScreenXY;\r\n    addSphere(state, Vec3.origin, radius * 3, 2);\r\n    state.currentGroup = HandleGroup.TranslateObjectX;\r\n    addSphere(state, x, radius, 2);\r\n    addCylinder(state, Vec3.origin, x, 1, cylinderProps);\r\n    state.currentGroup = HandleGroup.TranslateObjectY;\r\n    addSphere(state, y, radius, 2);\r\n    addCylinder(state, Vec3.origin, y, 1, cylinderProps);\r\n    state.currentGroup = HandleGroup.TranslateObjectZ;\r\n    addSphere(state, z, radius, 2);\r\n    addCylinder(state, Vec3.origin, z, 1, cylinderProps);\r\n    // TODO add more helper geometries for the other HandleGroup options\r\n    // TODO add props to create subset of geometries\r\n    return MeshBuilder.getMesh(state);\r\n}\r\nexport var HandleGroup = {\r\n    None: 0,\r\n    TranslateScreenXY: 1,\r\n    // TranslateScreenZ: 2,\r\n    TranslateObjectX: 3,\r\n    TranslateObjectY: 4,\r\n    TranslateObjectZ: 5,\r\n    // TranslateObjectXY: 6,\r\n    // TranslateObjectXZ: 7,\r\n    // TranslateObjectYZ: 8,\r\n    // RotateScreenZ: 9,\r\n    // RotateObjectX: 10,\r\n    // RotateObjectY: 11,\r\n    // RotateObjectZ: 12,\r\n};\r\nfunction HandleLoci(handleHelper, groupId, instanceId) {\r\n    return DataLoci('handle', handleHelper, [{ groupId: groupId, instanceId: instanceId }], function (boundingSphere) { return handleHelper.getBoundingSphere(boundingSphere, instanceId); }, function () { return \"Handle Helper | Group Id \" + groupId + \" | Instance Id \" + instanceId; });\r\n}\r\nexport function isHandleLoci(x) {\r\n    return x.kind === 'data-loci' && x.tag === 'handle';\r\n}\r\nfunction getHandleShape(props, shape) {\r\n    var scale = 10 * props.scale;\r\n    var mesh = createHandleMesh(scale, shape === null || shape === void 0 ? void 0 : shape.geometry);\r\n    mesh.setBoundingSphere(Sphere3D.create(Vec3.create(scale / 2, scale / 2, scale / 2), scale + scale / 4));\r\n    var getColor = function (groupId) {\r\n        switch (groupId) {\r\n            case HandleGroup.TranslateObjectX: return props.colorX;\r\n            case HandleGroup.TranslateObjectY: return props.colorY;\r\n            case HandleGroup.TranslateObjectZ: return props.colorZ;\r\n            default: return ColorNames.grey;\r\n        }\r\n    };\r\n    return Shape.create('handle', {}, mesh, getColor, function () { return 1; }, function () { return ''; });\r\n}\r\nfunction createHandleRenderObject(props) {\r\n    var shape = getHandleShape(props);\r\n    return Shape.createRenderObject(shape, props);\r\n}\r\n//# sourceMappingURL=handle-helper.js.map"]},"metadata":{},"sourceType":"module"}