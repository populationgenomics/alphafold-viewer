/**
 * Copyright (c) 2021 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 */
import { ParamDefinition as PD } from '../../../mol-util/param-definition';
import { Structure } from '../../../mol-model/structure';
import { UnitsVisual } from '../units-visual';
import { WebGLContext } from '../../../mol-gl/webgl/context';
export declare const PolymerBackboneSphereParams: {
    sizeFactor: PD.Numeric;
    detail: PD.Numeric;
    tryUseImpostor: PD.BooleanParam;
    unitKinds: PD.MultiSelect<"spheres" | "atomic" | "gaussians">;
    includeParent: PD.BooleanParam;
    doubleSided: PD.BooleanParam;
    ignoreLight: PD.BooleanParam;
    xrayShaded: PD.BooleanParam;
    alpha: PD.Numeric;
    quality: PD.Select<"custom" | "auto" | "highest" | "higher" | "high" | "medium" | "low" | "lower" | "lowest">;
    flipSided: PD.BooleanParam;
    flatShaded: PD.BooleanParam;
};
export declare type PolymerBackboneSphereParams = typeof PolymerBackboneSphereParams;
export declare function PolymerBackboneSphereVisual(materialId: number, structure: Structure, props: PD.Values<PolymerBackboneSphereParams>, webgl?: WebGLContext): UnitsVisual<{
    sizeFactor: PD.Numeric;
    detail: PD.Numeric;
    tryUseImpostor: PD.BooleanParam;
    unitKinds: PD.MultiSelect<"spheres" | "atomic" | "gaussians">;
    includeParent: PD.BooleanParam;
    doubleSided: PD.BooleanParam;
    ignoreLight: PD.BooleanParam;
    xrayShaded: PD.BooleanParam;
    alpha: PD.Numeric;
    quality: PD.Select<"custom" | "auto" | "highest" | "higher" | "high" | "medium" | "low" | "lower" | "lowest">;
    flipSided: PD.BooleanParam;
    flatShaded: PD.BooleanParam;
}>;
export declare function PolymerBackboneSphereImpostorVisual(materialId: number): UnitsVisual<PolymerBackboneSphereParams>;
export declare function PolymerBackboneSphereMeshVisual(materialId: number): UnitsVisual<PolymerBackboneSphereParams>;
