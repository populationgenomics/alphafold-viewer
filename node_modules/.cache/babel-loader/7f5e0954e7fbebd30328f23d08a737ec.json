{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { isWebGL2 } from './compat';\nimport { checkFramebufferStatus } from './framebuffer';\nimport { Scheduler } from '../../mol-task';\nimport { isDebugMode } from '../../mol-util/debug';\nimport { createExtensions } from './extensions';\nimport { createState } from './state';\nimport { PixelData } from '../../mol-util/image';\nimport { createResources } from './resources';\nimport { createRenderTarget } from './render-target';\nimport { BehaviorSubject } from 'rxjs';\nimport { now } from '../../mol-util/now';\nexport function getGLContext(canvas, attribs) {\n  function get(id) {\n    try {\n      return canvas.getContext(id, attribs);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  var gl = ((attribs === null || attribs === void 0 ? void 0 : attribs.preferWebGl1) ? null : get('webgl2')) || get('webgl') || get('experimental-webgl');\n  if (isDebugMode) console.log(\"isWebgl2: \" + isWebGL2(gl));\n  return gl;\n}\nexport function getErrorDescription(gl, error) {\n  switch (error) {\n    case gl.NO_ERROR:\n      return 'no error';\n\n    case gl.INVALID_ENUM:\n      return 'invalid enum';\n\n    case gl.INVALID_VALUE:\n      return 'invalid value';\n\n    case gl.INVALID_OPERATION:\n      return 'invalid operation';\n\n    case gl.INVALID_FRAMEBUFFER_OPERATION:\n      return 'invalid framebuffer operation';\n\n    case gl.OUT_OF_MEMORY:\n      return 'out of memory';\n\n    case gl.CONTEXT_LOST_WEBGL:\n      return 'context lost';\n  }\n\n  return 'unknown error';\n}\nexport function checkError(gl) {\n  var error = gl.getError();\n\n  if (error !== gl.NO_ERROR) {\n    throw new Error(\"WebGL error: '\" + getErrorDescription(gl, error) + \"'\");\n  }\n}\n\nfunction unbindResources(gl) {\n  // bind null to all texture units\n  var maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\n  for (var i = 0; i < maxTextureImageUnits; ++i) {\n    gl.activeTexture(gl.TEXTURE0 + i);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n\n    if (isWebGL2(gl)) {\n      gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\n      gl.bindTexture(gl.TEXTURE_3D, null);\n    }\n  } // assign the smallest possible buffer to all attributes\n\n\n  var buf = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n  var maxVertexAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\n  for (var i = 0; i < maxVertexAttribs; ++i) {\n    gl.vertexAttribPointer(i, 1, gl.FLOAT, false, 0, 0);\n  } // bind null to all buffers\n\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n  gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  unbindFramebuffer(gl);\n}\n\nfunction unbindFramebuffer(gl) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n}\n\nvar tmpPixel = new Uint8Array(1 * 4);\n\nfunction checkSync(gl, sync, resolve) {\n  if (gl.getSyncParameter(sync, gl.SYNC_STATUS) === gl.SIGNALED) {\n    gl.deleteSync(sync);\n    resolve();\n  } else {\n    Scheduler.setImmediate(checkSync, gl, sync, resolve);\n  }\n}\n\nfunction fence(gl, resolve) {\n  var sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0);\n\n  if (!sync) {\n    console.warn('Could not create a WebGLSync object');\n    gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, tmpPixel);\n    resolve();\n  } else {\n    Scheduler.setImmediate(checkSync, gl, sync, resolve);\n  }\n}\n\nvar SentWebglSyncObjectNotSupportedInWebglMessage = false;\n\nfunction waitForGpuCommandsComplete(gl) {\n  return new Promise(function (resolve) {\n    if (isWebGL2(gl)) {\n      // TODO seems quite slow\n      fence(gl, resolve);\n    } else {\n      if (!SentWebglSyncObjectNotSupportedInWebglMessage) {\n        console.info('Sync object not supported in WebGL');\n        SentWebglSyncObjectNotSupportedInWebglMessage = true;\n      }\n\n      waitForGpuCommandsCompleteSync(gl);\n      resolve();\n    }\n  });\n}\n\nfunction waitForGpuCommandsCompleteSync(gl) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, tmpPixel);\n}\n\nexport function readPixels(gl, x, y, width, height, buffer) {\n  if (isDebugMode) checkFramebufferStatus(gl);\n\n  if (buffer instanceof Uint8Array) {\n    gl.readPixels(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n  } else if (buffer instanceof Float32Array) {\n    gl.readPixels(x, y, width, height, gl.RGBA, gl.FLOAT, buffer);\n  } else if (buffer instanceof Int32Array && isWebGL2(gl)) {\n    gl.readPixels(x, y, width, height, gl.RGBA_INTEGER, gl.INT, buffer);\n  } else {\n    throw new Error('unsupported readPixels buffer type');\n  }\n\n  if (isDebugMode) checkError(gl);\n}\n\nfunction getDrawingBufferPixelData(gl) {\n  var w = gl.drawingBufferWidth;\n  var h = gl.drawingBufferHeight;\n  var buffer = new Uint8Array(w * h * 4);\n  unbindFramebuffer(gl);\n  gl.viewport(0, 0, w, h);\n  readPixels(gl, 0, 0, w, h, buffer);\n  return PixelData.flipY(PixelData.create(buffer, w, h));\n} //\n\n\nfunction createStats() {\n  return {\n    resourceCounts: {\n      attribute: 0,\n      elements: 0,\n      framebuffer: 0,\n      program: 0,\n      renderbuffer: 0,\n      shader: 0,\n      texture: 0,\n      vertexArray: 0\n    },\n    drawCount: 0,\n    instanceCount: 0,\n    instancedDrawCount: 0\n  };\n}\n\nexport function createContext(gl, props) {\n  var _this = this;\n\n  if (props === void 0) {\n    props = {};\n  }\n\n  var extensions = createExtensions(gl);\n  var state = createState(gl);\n  var stats = createStats();\n  var resources = createResources(gl, state, stats, extensions);\n  var parameters = {\n    maxTextureSize: gl.getParameter(gl.MAX_TEXTURE_SIZE),\n    max3dTextureSize: isWebGL2(gl) ? gl.getParameter(gl.MAX_3D_TEXTURE_SIZE) : 0,\n    maxRenderbufferSize: gl.getParameter(gl.MAX_RENDERBUFFER_SIZE),\n    maxDrawBuffers: extensions.drawBuffers ? gl.getParameter(extensions.drawBuffers.MAX_DRAW_BUFFERS) : 0,\n    maxTextureImageUnits: gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS),\n    maxVertexTextureImageUnits: gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)\n  };\n\n  if (parameters.maxVertexTextureImageUnits < 8) {\n    throw new Error('Need \"MAX_VERTEX_TEXTURE_IMAGE_UNITS\" >= 8');\n  }\n\n  var isContextLost = false;\n  var contextRestored = new BehaviorSubject(0);\n  var readPixelsAsync;\n\n  if (isWebGL2(gl)) {\n    var pbo_1 = gl.createBuffer();\n\n    var _buffer_1 = void 0;\n\n    var _resolve_1 = void 0;\n\n    var _reading_1 = false;\n\n    var bindPBO_1 = function () {\n      gl.bindBuffer(gl.PIXEL_PACK_BUFFER, pbo_1);\n      gl.getBufferSubData(gl.PIXEL_PACK_BUFFER, 0, _buffer_1);\n      gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n      _reading_1 = false;\n\n      _resolve_1();\n\n      _resolve_1 = void 0;\n      _buffer_1 = void 0;\n    };\n\n    readPixelsAsync = function (x, y, width, height, buffer) {\n      return new Promise(function (resolve, reject) {\n        if (_reading_1) {\n          reject('Can not call multiple readPixelsAsync at the same time');\n          return;\n        }\n\n        _reading_1 = true;\n        gl.bindBuffer(gl.PIXEL_PACK_BUFFER, pbo_1);\n        gl.bufferData(gl.PIXEL_PACK_BUFFER, width * height * 4, gl.STREAM_READ);\n        gl.readPixels(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, 0);\n        gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null); // need to unbind/bind PBO before/after async awaiting the fence\n\n        _resolve_1 = resolve;\n        _buffer_1 = buffer;\n        fence(gl, bindPBO_1);\n      });\n    };\n  } else {\n    readPixelsAsync = function (x, y, width, height, buffer) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          readPixels(gl, x, y, width, height, buffer);\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    };\n  }\n\n  var renderTargets = new Set();\n  return {\n    gl: gl,\n    isWebGL2: isWebGL2(gl),\n\n    get pixelRatio() {\n      var dpr = typeof window !== 'undefined' ? window.devicePixelRatio : 1;\n      return dpr * (props.pixelScale || 1);\n    },\n\n    extensions: extensions,\n    state: state,\n    stats: stats,\n    resources: resources,\n\n    get maxTextureSize() {\n      return parameters.maxTextureSize;\n    },\n\n    get max3dTextureSize() {\n      return parameters.max3dTextureSize;\n    },\n\n    get maxRenderbufferSize() {\n      return parameters.maxRenderbufferSize;\n    },\n\n    get maxDrawBuffers() {\n      return parameters.maxDrawBuffers;\n    },\n\n    get maxTextureImageUnits() {\n      return parameters.maxTextureImageUnits;\n    },\n\n    namedComputeRenderables: Object.create(null),\n    namedFramebuffers: Object.create(null),\n    namedTextures: Object.create(null),\n\n    get isContextLost() {\n      return isContextLost || gl.isContextLost();\n    },\n\n    contextRestored: contextRestored,\n    setContextLost: function () {\n      isContextLost = true;\n    },\n    handleContextRestored: function (extraResets) {\n      Object.assign(extensions, createExtensions(gl));\n      state.reset();\n      state.currentMaterialId = -1;\n      state.currentProgramId = -1;\n      state.currentRenderItemId = -1;\n      resources.reset();\n      renderTargets.forEach(function (rt) {\n        return rt.reset();\n      });\n      extraResets === null || extraResets === void 0 ? void 0 : extraResets();\n      isContextLost = false;\n      contextRestored.next(now());\n    },\n    createRenderTarget: function (width, height, depth, type, filter) {\n      var renderTarget = createRenderTarget(gl, resources, width, height, depth, type, filter);\n      renderTargets.add(renderTarget);\n      return __assign(__assign({}, renderTarget), {\n        destroy: function () {\n          renderTarget.destroy();\n          renderTargets.delete(renderTarget);\n        }\n      });\n    },\n    unbindFramebuffer: function () {\n      return unbindFramebuffer(gl);\n    },\n    readPixels: function (x, y, width, height, buffer) {\n      readPixels(gl, x, y, width, height, buffer);\n    },\n    readPixelsAsync: readPixelsAsync,\n    waitForGpuCommandsComplete: function () {\n      return waitForGpuCommandsComplete(gl);\n    },\n    waitForGpuCommandsCompleteSync: function () {\n      return waitForGpuCommandsCompleteSync(gl);\n    },\n    getDrawingBufferPixelData: function () {\n      return getDrawingBufferPixelData(gl);\n    },\n    clear: function (red, green, blue, alpha) {\n      unbindFramebuffer(gl);\n      state.enable(gl.SCISSOR_TEST);\n      state.depthMask(true);\n      state.colorMask(true, true, true, true);\n      state.clearColor(red, green, blue, alpha);\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n      gl.scissor(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    },\n    destroy: function (options) {\n      var _a;\n\n      resources.destroy();\n      unbindResources(gl); // to aid GC\n\n      if (!(options === null || options === void 0 ? void 0 : options.doNotForceWebGLContextLoss)) (_a = gl.getExtension('WEBGL_lose_context')) === null || _a === void 0 ? void 0 : _a.loseContext();\n    }\n  };\n}","map":{"version":3,"sources":["../../../src/mol-gl/webgl/context.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { isWebGL2 } from './compat';\r\nimport { checkFramebufferStatus } from './framebuffer';\r\nimport { Scheduler } from '../../mol-task';\r\nimport { isDebugMode } from '../../mol-util/debug';\r\nimport { createExtensions } from './extensions';\r\nimport { createState } from './state';\r\nimport { PixelData } from '../../mol-util/image';\r\nimport { createResources } from './resources';\r\nimport { createRenderTarget } from './render-target';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { now } from '../../mol-util/now';\r\nexport function getGLContext(canvas, attribs) {\r\n    function get(id) {\r\n        try {\r\n            return canvas.getContext(id, attribs);\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n    var gl = ((attribs === null || attribs === void 0 ? void 0 : attribs.preferWebGl1) ? null : get('webgl2')) || get('webgl') || get('experimental-webgl');\r\n    if (isDebugMode)\r\n        console.log(\"isWebgl2: \" + isWebGL2(gl));\r\n    return gl;\r\n}\r\nexport function getErrorDescription(gl, error) {\r\n    switch (error) {\r\n        case gl.NO_ERROR: return 'no error';\r\n        case gl.INVALID_ENUM: return 'invalid enum';\r\n        case gl.INVALID_VALUE: return 'invalid value';\r\n        case gl.INVALID_OPERATION: return 'invalid operation';\r\n        case gl.INVALID_FRAMEBUFFER_OPERATION: return 'invalid framebuffer operation';\r\n        case gl.OUT_OF_MEMORY: return 'out of memory';\r\n        case gl.CONTEXT_LOST_WEBGL: return 'context lost';\r\n    }\r\n    return 'unknown error';\r\n}\r\nexport function checkError(gl) {\r\n    var error = gl.getError();\r\n    if (error !== gl.NO_ERROR) {\r\n        throw new Error(\"WebGL error: '\" + getErrorDescription(gl, error) + \"'\");\r\n    }\r\n}\r\nfunction unbindResources(gl) {\r\n    // bind null to all texture units\r\n    var maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n    for (var i = 0; i < maxTextureImageUnits; ++i) {\r\n        gl.activeTexture(gl.TEXTURE0 + i);\r\n        gl.bindTexture(gl.TEXTURE_2D, null);\r\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\r\n        if (isWebGL2(gl)) {\r\n            gl.bindTexture(gl.TEXTURE_2D_ARRAY, null);\r\n            gl.bindTexture(gl.TEXTURE_3D, null);\r\n        }\r\n    }\r\n    // assign the smallest possible buffer to all attributes\r\n    var buf = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\r\n    var maxVertexAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n    for (var i = 0; i < maxVertexAttribs; ++i) {\r\n        gl.vertexAttribPointer(i, 1, gl.FLOAT, false, 0, 0);\r\n    }\r\n    // bind null to all buffers\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n    unbindFramebuffer(gl);\r\n}\r\nfunction unbindFramebuffer(gl) {\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n}\r\nvar tmpPixel = new Uint8Array(1 * 4);\r\nfunction checkSync(gl, sync, resolve) {\r\n    if (gl.getSyncParameter(sync, gl.SYNC_STATUS) === gl.SIGNALED) {\r\n        gl.deleteSync(sync);\r\n        resolve();\r\n    }\r\n    else {\r\n        Scheduler.setImmediate(checkSync, gl, sync, resolve);\r\n    }\r\n}\r\nfunction fence(gl, resolve) {\r\n    var sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0);\r\n    if (!sync) {\r\n        console.warn('Could not create a WebGLSync object');\r\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, tmpPixel);\r\n        resolve();\r\n    }\r\n    else {\r\n        Scheduler.setImmediate(checkSync, gl, sync, resolve);\r\n    }\r\n}\r\nvar SentWebglSyncObjectNotSupportedInWebglMessage = false;\r\nfunction waitForGpuCommandsComplete(gl) {\r\n    return new Promise(function (resolve) {\r\n        if (isWebGL2(gl)) {\r\n            // TODO seems quite slow\r\n            fence(gl, resolve);\r\n        }\r\n        else {\r\n            if (!SentWebglSyncObjectNotSupportedInWebglMessage) {\r\n                console.info('Sync object not supported in WebGL');\r\n                SentWebglSyncObjectNotSupportedInWebglMessage = true;\r\n            }\r\n            waitForGpuCommandsCompleteSync(gl);\r\n            resolve();\r\n        }\r\n    });\r\n}\r\nfunction waitForGpuCommandsCompleteSync(gl) {\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, tmpPixel);\r\n}\r\nexport function readPixels(gl, x, y, width, height, buffer) {\r\n    if (isDebugMode)\r\n        checkFramebufferStatus(gl);\r\n    if (buffer instanceof Uint8Array) {\r\n        gl.readPixels(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\r\n    }\r\n    else if (buffer instanceof Float32Array) {\r\n        gl.readPixels(x, y, width, height, gl.RGBA, gl.FLOAT, buffer);\r\n    }\r\n    else if (buffer instanceof Int32Array && isWebGL2(gl)) {\r\n        gl.readPixels(x, y, width, height, gl.RGBA_INTEGER, gl.INT, buffer);\r\n    }\r\n    else {\r\n        throw new Error('unsupported readPixels buffer type');\r\n    }\r\n    if (isDebugMode)\r\n        checkError(gl);\r\n}\r\nfunction getDrawingBufferPixelData(gl) {\r\n    var w = gl.drawingBufferWidth;\r\n    var h = gl.drawingBufferHeight;\r\n    var buffer = new Uint8Array(w * h * 4);\r\n    unbindFramebuffer(gl);\r\n    gl.viewport(0, 0, w, h);\r\n    readPixels(gl, 0, 0, w, h, buffer);\r\n    return PixelData.flipY(PixelData.create(buffer, w, h));\r\n}\r\n//\r\nfunction createStats() {\r\n    return {\r\n        resourceCounts: {\r\n            attribute: 0,\r\n            elements: 0,\r\n            framebuffer: 0,\r\n            program: 0,\r\n            renderbuffer: 0,\r\n            shader: 0,\r\n            texture: 0,\r\n            vertexArray: 0,\r\n        },\r\n        drawCount: 0,\r\n        instanceCount: 0,\r\n        instancedDrawCount: 0,\r\n    };\r\n}\r\nexport function createContext(gl, props) {\r\n    var _this = this;\r\n    if (props === void 0) { props = {}; }\r\n    var extensions = createExtensions(gl);\r\n    var state = createState(gl);\r\n    var stats = createStats();\r\n    var resources = createResources(gl, state, stats, extensions);\r\n    var parameters = {\r\n        maxTextureSize: gl.getParameter(gl.MAX_TEXTURE_SIZE),\r\n        max3dTextureSize: isWebGL2(gl) ? gl.getParameter(gl.MAX_3D_TEXTURE_SIZE) : 0,\r\n        maxRenderbufferSize: gl.getParameter(gl.MAX_RENDERBUFFER_SIZE),\r\n        maxDrawBuffers: extensions.drawBuffers ? gl.getParameter(extensions.drawBuffers.MAX_DRAW_BUFFERS) : 0,\r\n        maxTextureImageUnits: gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS),\r\n        maxVertexTextureImageUnits: gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS),\r\n    };\r\n    if (parameters.maxVertexTextureImageUnits < 8) {\r\n        throw new Error('Need \"MAX_VERTEX_TEXTURE_IMAGE_UNITS\" >= 8');\r\n    }\r\n    var isContextLost = false;\r\n    var contextRestored = new BehaviorSubject(0);\r\n    var readPixelsAsync;\r\n    if (isWebGL2(gl)) {\r\n        var pbo_1 = gl.createBuffer();\r\n        var _buffer_1 = void 0;\r\n        var _resolve_1 = void 0;\r\n        var _reading_1 = false;\r\n        var bindPBO_1 = function () {\r\n            gl.bindBuffer(gl.PIXEL_PACK_BUFFER, pbo_1);\r\n            gl.getBufferSubData(gl.PIXEL_PACK_BUFFER, 0, _buffer_1);\r\n            gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\r\n            _reading_1 = false;\r\n            _resolve_1();\r\n            _resolve_1 = void 0;\r\n            _buffer_1 = void 0;\r\n        };\r\n        readPixelsAsync = function (x, y, width, height, buffer) { return new Promise(function (resolve, reject) {\r\n            if (_reading_1) {\r\n                reject('Can not call multiple readPixelsAsync at the same time');\r\n                return;\r\n            }\r\n            _reading_1 = true;\r\n            gl.bindBuffer(gl.PIXEL_PACK_BUFFER, pbo_1);\r\n            gl.bufferData(gl.PIXEL_PACK_BUFFER, width * height * 4, gl.STREAM_READ);\r\n            gl.readPixels(x, y, width, height, gl.RGBA, gl.UNSIGNED_BYTE, 0);\r\n            gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\r\n            // need to unbind/bind PBO before/after async awaiting the fence\r\n            _resolve_1 = resolve;\r\n            _buffer_1 = buffer;\r\n            fence(gl, bindPBO_1);\r\n        }); };\r\n    }\r\n    else {\r\n        readPixelsAsync = function (x, y, width, height, buffer) { return __awaiter(_this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                readPixels(gl, x, y, width, height, buffer);\r\n                return [2 /*return*/];\r\n            });\r\n        }); };\r\n    }\r\n    var renderTargets = new Set();\r\n    return {\r\n        gl: gl,\r\n        isWebGL2: isWebGL2(gl),\r\n        get pixelRatio() {\r\n            var dpr = (typeof window !== 'undefined') ? window.devicePixelRatio : 1;\r\n            return dpr * (props.pixelScale || 1);\r\n        },\r\n        extensions: extensions,\r\n        state: state,\r\n        stats: stats,\r\n        resources: resources,\r\n        get maxTextureSize() { return parameters.maxTextureSize; },\r\n        get max3dTextureSize() { return parameters.max3dTextureSize; },\r\n        get maxRenderbufferSize() { return parameters.maxRenderbufferSize; },\r\n        get maxDrawBuffers() { return parameters.maxDrawBuffers; },\r\n        get maxTextureImageUnits() { return parameters.maxTextureImageUnits; },\r\n        namedComputeRenderables: Object.create(null),\r\n        namedFramebuffers: Object.create(null),\r\n        namedTextures: Object.create(null),\r\n        get isContextLost() {\r\n            return isContextLost || gl.isContextLost();\r\n        },\r\n        contextRestored: contextRestored,\r\n        setContextLost: function () {\r\n            isContextLost = true;\r\n        },\r\n        handleContextRestored: function (extraResets) {\r\n            Object.assign(extensions, createExtensions(gl));\r\n            state.reset();\r\n            state.currentMaterialId = -1;\r\n            state.currentProgramId = -1;\r\n            state.currentRenderItemId = -1;\r\n            resources.reset();\r\n            renderTargets.forEach(function (rt) { return rt.reset(); });\r\n            extraResets === null || extraResets === void 0 ? void 0 : extraResets();\r\n            isContextLost = false;\r\n            contextRestored.next(now());\r\n        },\r\n        createRenderTarget: function (width, height, depth, type, filter) {\r\n            var renderTarget = createRenderTarget(gl, resources, width, height, depth, type, filter);\r\n            renderTargets.add(renderTarget);\r\n            return __assign(__assign({}, renderTarget), { destroy: function () {\r\n                    renderTarget.destroy();\r\n                    renderTargets.delete(renderTarget);\r\n                } });\r\n        },\r\n        unbindFramebuffer: function () { return unbindFramebuffer(gl); },\r\n        readPixels: function (x, y, width, height, buffer) {\r\n            readPixels(gl, x, y, width, height, buffer);\r\n        },\r\n        readPixelsAsync: readPixelsAsync,\r\n        waitForGpuCommandsComplete: function () { return waitForGpuCommandsComplete(gl); },\r\n        waitForGpuCommandsCompleteSync: function () { return waitForGpuCommandsCompleteSync(gl); },\r\n        getDrawingBufferPixelData: function () { return getDrawingBufferPixelData(gl); },\r\n        clear: function (red, green, blue, alpha) {\r\n            unbindFramebuffer(gl);\r\n            state.enable(gl.SCISSOR_TEST);\r\n            state.depthMask(true);\r\n            state.colorMask(true, true, true, true);\r\n            state.clearColor(red, green, blue, alpha);\r\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n            gl.scissor(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        },\r\n        destroy: function (options) {\r\n            var _a;\r\n            resources.destroy();\r\n            unbindResources(gl);\r\n            // to aid GC\r\n            if (!(options === null || options === void 0 ? void 0 : options.doNotForceWebGLContextLoss))\r\n                (_a = gl.getExtension('WEBGL_lose_context')) === null || _a === void 0 ? void 0 : _a.loseContext();\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=context.js.map"]},"metadata":{},"sourceType":"module"}