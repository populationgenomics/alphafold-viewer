{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nexport function createReference(value, usageCount) {\n  if (usageCount === void 0) {\n    usageCount = 0;\n  }\n\n  return {\n    value: value,\n    usageCount: usageCount\n  };\n}\nexport function createReferenceItem(ref) {\n  return {\n    free: function () {\n      ref.usageCount -= 1;\n    },\n    value: ref.value\n  };\n}\nexport function createReferenceCache(hashFn, ctor, deleteFn) {\n  var map = new Map();\n  return {\n    get: function (props) {\n      var id = hashFn(props);\n      var ref = map.get(id);\n\n      if (!ref) {\n        ref = createReference(ctor(props));\n        map.set(id, ref);\n      }\n\n      ref.usageCount += 1;\n      return createReferenceItem(ref);\n    },\n    clear: function () {\n      map.forEach(function (ref, id) {\n        if (ref.usageCount <= 0) {\n          if (ref.usageCount < 0) {\n            console.warn('Reference usageCount below zero.');\n          }\n\n          deleteFn(ref.value);\n          map.delete(id);\n        }\n      });\n    },\n\n    get count() {\n      return map.size;\n    },\n\n    dispose: function () {\n      map.forEach(function (ref) {\n        return deleteFn(ref.value);\n      });\n      map.clear();\n    }\n  };\n}","map":{"version":3,"sources":["../../src/mol-util/reference-cache.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAIH,OAAM,SAAU,eAAV,CAA6B,KAA7B,EAAuC,UAAvC,EAAqD;AAAd,MAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,CAAA;AAAc;;AACvD,SAAO;AAAE,IAAA,KAAK,EAAA,KAAP;AAAS,IAAA,UAAU,EAAA;AAAnB,GAAP;AACH;AAOD,OAAM,SAAU,mBAAV,CAAiC,GAAjC,EAAkD;AACpD,SAAO;AACH,IAAA,IAAI,EAAE,YAAA;AACF,MAAA,GAAG,CAAC,UAAJ,IAAkB,CAAlB;AACH,KAHE;AAIH,IAAA,KAAK,EAAE,GAAG,CAAC;AAJR,GAAP;AAMH;AASD,OAAM,SAAU,oBAAV,CAAqC,MAArC,EAAmE,IAAnE,EAA0F,QAA1F,EAAkH;AACpH,MAAM,GAAG,GAA8B,IAAI,GAAJ,EAAvC;AAEA,SAAO;AACH,IAAA,GAAG,EAAE,UAAC,KAAD,EAAS;AACV,UAAM,EAAE,GAAG,MAAM,CAAC,KAAD,CAAjB;AACA,UAAI,GAAG,GAAG,GAAG,CAAC,GAAJ,CAAQ,EAAR,CAAV;;AACA,UAAI,CAAC,GAAL,EAAU;AACN,QAAA,GAAG,GAAG,eAAe,CAAI,IAAI,CAAC,KAAD,CAAR,CAArB;AACA,QAAA,GAAG,CAAC,GAAJ,CAAQ,EAAR,EAAY,GAAZ;AACH;;AACD,MAAA,GAAG,CAAC,UAAJ,IAAkB,CAAlB;AACA,aAAO,mBAAmB,CAAC,GAAD,CAA1B;AACH,KAVE;AAWH,IAAA,KAAK,EAAE,YAAA;AACH,MAAA,GAAG,CAAC,OAAJ,CAAY,UAAC,GAAD,EAAM,EAAN,EAAQ;AAChB,YAAI,GAAG,CAAC,UAAJ,IAAkB,CAAtB,EAAyB;AACrB,cAAI,GAAG,CAAC,UAAJ,GAAiB,CAArB,EAAwB;AACpB,YAAA,OAAO,CAAC,IAAR,CAAa,kCAAb;AACH;;AACD,UAAA,QAAQ,CAAC,GAAG,CAAC,KAAL,CAAR;AACA,UAAA,GAAG,CAAC,MAAJ,CAAW,EAAX;AACH;AACJ,OARD;AASH,KArBE;;AAsBH,QAAI,KAAJ,GAAS;AACL,aAAO,GAAG,CAAC,IAAX;AACH,KAxBE;;AAyBH,IAAA,OAAO,EAAE,YAAA;AACL,MAAA,GAAG,CAAC,OAAJ,CAAY,UAAA,GAAA,EAAG;AAAI,eAAA,QAAQ,CAAC,GAAG,CAAZ,KAAQ,CAAR;AAAmB,OAAtC;AACA,MAAA,GAAG,CAAC,KAAJ;AACH;AA5BE,GAAP;AA8BH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nexport function createReference(value, usageCount) {\r\n    if (usageCount === void 0) { usageCount = 0; }\r\n    return { value: value, usageCount: usageCount };\r\n}\r\nexport function createReferenceItem(ref) {\r\n    return {\r\n        free: function () {\r\n            ref.usageCount -= 1;\r\n        },\r\n        value: ref.value\r\n    };\r\n}\r\nexport function createReferenceCache(hashFn, ctor, deleteFn) {\r\n    var map = new Map();\r\n    return {\r\n        get: function (props) {\r\n            var id = hashFn(props);\r\n            var ref = map.get(id);\r\n            if (!ref) {\r\n                ref = createReference(ctor(props));\r\n                map.set(id, ref);\r\n            }\r\n            ref.usageCount += 1;\r\n            return createReferenceItem(ref);\r\n        },\r\n        clear: function () {\r\n            map.forEach(function (ref, id) {\r\n                if (ref.usageCount <= 0) {\r\n                    if (ref.usageCount < 0) {\r\n                        console.warn('Reference usageCount below zero.');\r\n                    }\r\n                    deleteFn(ref.value);\r\n                    map.delete(id);\r\n                }\r\n            });\r\n        },\r\n        get count() {\r\n            return map.size;\r\n        },\r\n        dispose: function () {\r\n            map.forEach(function (ref) { return deleteFn(ref.value); });\r\n            map.clear();\r\n        },\r\n    };\r\n}\r\n//# sourceMappingURL=reference-cache.js.map"]},"metadata":{},"sourceType":"module"}