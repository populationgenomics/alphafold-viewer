{"ast":null,"code":"/**\r\n * Copyright (c) 2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { Task } from '../../mol-task';\nimport { getMolModels } from './mol';\nexport { SdfFormat };\nvar SdfFormat;\n\n(function (SdfFormat) {\n  function is(x) {\n    return (x === null || x === void 0 ? void 0 : x.kind) === 'sdf';\n  }\n\n  SdfFormat.is = is;\n\n  function create(mol) {\n    return {\n      kind: 'sdf',\n      name: mol.molFile.title,\n      data: mol\n    };\n  }\n\n  SdfFormat.create = create;\n})(SdfFormat || (SdfFormat = {}));\n\nexport function trajectoryFromSdf(mol) {\n  return Task.create('Parse SDF', function (ctx) {\n    return getMolModels(mol.molFile, SdfFormat.create(mol), ctx);\n  });\n}","map":{"version":3,"sources":["../../../src/mol-model-formats/structure/sdf.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAIH,SAAS,IAAT,QAAqB,gBAArB;AAEA,SAAS,YAAT,QAA6B,OAA7B;AAEA,SAAS,SAAT;AAIA,IAAU,SAAV;;AAAA,CAAA,UAAU,SAAV,EAAmB;AACf,WAAgB,EAAhB,CAAmB,CAAnB,EAAkC;AAC9B,WAAO,CAAA,CAAC,KAAA,IAAD,IAAA,CAAC,KAAA,KAAA,CAAD,GAAC,KAAA,CAAD,GAAA,CAAC,CAAE,IAAH,MAAY,KAAnB;AACH;;AAFe,EAAA,SAAA,CAAA,EAAA,GAAE,EAAF;;AAIhB,WAAgB,MAAhB,CAAuB,GAAvB,EAA2C;AACvC,WAAO;AAAE,MAAA,IAAI,EAAE,KAAR;AAAe,MAAA,IAAI,EAAE,GAAG,CAAC,OAAJ,CAAY,KAAjC;AAAwC,MAAA,IAAI,EAAE;AAA9C,KAAP;AACH;;AAFe,EAAA,SAAA,CAAA,MAAA,GAAM,MAAN;AAGnB,CARD,EAAU,SAAS,KAAT,SAAS,GAAA,EAAA,CAAnB;;AAUA,OAAM,SAAU,iBAAV,CAA4B,GAA5B,EAAgD;AAClD,SAAO,IAAI,CAAC,MAAL,CAAY,WAAZ,EAAyB,UAAA,GAAA,EAAG;AAAI,WAAA,YAAY,CAAC,GAAG,CAAC,OAAL,EAAc,SAAS,CAAC,MAAV,CAAiB,GAAjB,CAAd,EAAZ,GAAY,CAAZ;AAAqD,GAArF,CAAP;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { Task } from '../../mol-task';\r\nimport { getMolModels } from './mol';\r\nexport { SdfFormat };\r\nvar SdfFormat;\r\n(function (SdfFormat) {\r\n    function is(x) {\r\n        return (x === null || x === void 0 ? void 0 : x.kind) === 'sdf';\r\n    }\r\n    SdfFormat.is = is;\r\n    function create(mol) {\r\n        return { kind: 'sdf', name: mol.molFile.title, data: mol };\r\n    }\r\n    SdfFormat.create = create;\r\n})(SdfFormat || (SdfFormat = {}));\r\nexport function trajectoryFromSdf(mol) {\r\n    return Task.create('Parse SDF', function (ctx) { return getMolModels(mol.molFile, SdfFormat.create(mol), ctx); });\r\n}\r\n//# sourceMappingURL=sdf.js.map"]},"metadata":{},"sourceType":"module"}