{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { idFactory } from '../mol-util/id-factory';\nimport { DirectVolumeRenderable } from './renderable/direct-volume';\nimport { MeshRenderable } from './renderable/mesh';\nimport { PointsRenderable } from './renderable/points';\nimport { LinesRenderable } from './renderable/lines';\nimport { SpheresRenderable } from './renderable/spheres';\nimport { TextRenderable } from './renderable/text';\nimport { TextureMeshRenderable } from './renderable/texture-mesh';\nimport { ImageRenderable } from './renderable/image';\nimport { CylindersRenderable } from './renderable/cylinders';\nvar getNextId = idFactory(0, 0x7FFFFFFF);\nexport var getNextMaterialId = idFactory(0, 0x7FFFFFFF); //\n\nexport function createRenderObject(type, values, state, materialId) {\n  return {\n    id: getNextId(),\n    type: type,\n    values: values,\n    state: state,\n    materialId: materialId\n  };\n}\nexport function createRenderable(ctx, o) {\n  switch (o.type) {\n    case 'mesh':\n      return MeshRenderable(ctx, o.id, o.values, o.state, o.materialId);\n\n    case 'points':\n      return PointsRenderable(ctx, o.id, o.values, o.state, o.materialId);\n\n    case 'spheres':\n      return SpheresRenderable(ctx, o.id, o.values, o.state, o.materialId);\n\n    case 'cylinders':\n      return CylindersRenderable(ctx, o.id, o.values, o.state, o.materialId);\n\n    case 'text':\n      return TextRenderable(ctx, o.id, o.values, o.state, o.materialId);\n\n    case 'lines':\n      return LinesRenderable(ctx, o.id, o.values, o.state, o.materialId);\n\n    case 'direct-volume':\n      return DirectVolumeRenderable(ctx, o.id, o.values, o.state, o.materialId);\n\n    case 'image':\n      return ImageRenderable(ctx, o.id, o.values, o.state, o.materialId);\n\n    case 'texture-mesh':\n      return TextureMeshRenderable(ctx, o.id, o.values, o.state, o.materialId);\n  }\n\n  throw new Error('unsupported type');\n}","map":{"version":3,"sources":["../../src/mol-gl/render-object.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAGH,SAAS,SAAT,QAA0B,wBAA1B;AAEA,SAA6B,sBAA7B,QAA2D,4BAA3D;AACA,SAAqB,cAArB,QAA2C,mBAA3C;AACA,SAAuB,gBAAvB,QAA+C,qBAA/C;AACA,SAAsB,eAAtB,QAA6C,oBAA7C;AACA,SAAwB,iBAAxB,QAAiD,sBAAjD;AACA,SAAqB,cAArB,QAA2C,mBAA3C;AACA,SAA4B,qBAA5B,QAAyD,2BAAzD;AACA,SAAsB,eAAtB,QAA6C,oBAA7C;AACA,SAAS,mBAAT,QAAqD,wBAArD;AAEA,IAAM,SAAS,GAAG,SAAS,CAAC,CAAD,EAAI,UAAJ,CAA3B;AAEA,OAAO,IAAM,iBAAiB,GAAG,SAAS,CAAC,CAAD,EAAI,UAAJ,CAAnC,C,CAuBP;;AAEA,OAAM,SAAU,kBAAV,CAAyD,IAAzD,EAAkE,MAAlE,EAAiG,KAAjG,EAAyH,UAAzH,EAA2I;AAC7I,SAAO;AAAE,IAAA,EAAE,EAAE,SAAS,EAAf;AAAmB,IAAA,IAAI,EAAA,IAAvB;AAAyB,IAAA,MAAM,EAAA,MAA/B;AAAiC,IAAA,KAAK,EAAA,KAAtC;AAAwC,IAAA,UAAU,EAAA;AAAlD,GAAP;AACH;AAED,OAAM,SAAU,gBAAV,CAAuD,GAAvD,EAA0E,CAA1E,EAAoG;AACtG,UAAQ,CAAC,CAAC,IAAV;AACI,SAAK,MAAL;AAAa,aAAO,cAAc,CAAC,GAAD,EAAM,CAAC,CAAC,EAAR,EAAY,CAAC,CAAC,MAAd,EAAoC,CAAC,CAAC,KAAtC,EAA6C,CAAC,CAAC,UAA/C,CAArB;;AACb,SAAK,QAAL;AAAe,aAAO,gBAAgB,CAAC,GAAD,EAAM,CAAC,CAAC,EAAR,EAAY,CAAC,CAAC,MAAd,EAAsC,CAAC,CAAC,KAAxC,EAA+C,CAAC,CAAC,UAAjD,CAAvB;;AACf,SAAK,SAAL;AAAgB,aAAO,iBAAiB,CAAC,GAAD,EAAM,CAAC,CAAC,EAAR,EAAY,CAAC,CAAC,MAAd,EAAuC,CAAC,CAAC,KAAzC,EAAgD,CAAC,CAAC,UAAlD,CAAxB;;AAChB,SAAK,WAAL;AAAkB,aAAO,mBAAmB,CAAC,GAAD,EAAM,CAAC,CAAC,EAAR,EAAY,CAAC,CAAC,MAAd,EAAyC,CAAC,CAAC,KAA3C,EAAkD,CAAC,CAAC,UAApD,CAA1B;;AAClB,SAAK,MAAL;AAAa,aAAO,cAAc,CAAC,GAAD,EAAM,CAAC,CAAC,EAAR,EAAY,CAAC,CAAC,MAAd,EAAoC,CAAC,CAAC,KAAtC,EAA6C,CAAC,CAAC,UAA/C,CAArB;;AACb,SAAK,OAAL;AAAc,aAAO,eAAe,CAAC,GAAD,EAAM,CAAC,CAAC,EAAR,EAAY,CAAC,CAAC,MAAd,EAAqC,CAAC,CAAC,KAAvC,EAA8C,CAAC,CAAC,UAAhD,CAAtB;;AACd,SAAK,eAAL;AAAsB,aAAO,sBAAsB,CAAC,GAAD,EAAM,CAAC,CAAC,EAAR,EAAY,CAAC,CAAC,MAAd,EAA4C,CAAC,CAAC,KAA9C,EAAqD,CAAC,CAAC,UAAvD,CAA7B;;AACtB,SAAK,OAAL;AAAc,aAAO,eAAe,CAAC,GAAD,EAAM,CAAC,CAAC,EAAR,EAAY,CAAC,CAAC,MAAd,EAAqC,CAAC,CAAC,KAAvC,EAA8C,CAAC,CAAC,UAAhD,CAAtB;;AACd,SAAK,cAAL;AAAqB,aAAO,qBAAqB,CAAC,GAAD,EAAM,CAAC,CAAC,EAAR,EAAY,CAAC,CAAC,MAAd,EAA2C,CAAC,CAAC,KAA7C,EAAoD,CAAC,CAAC,UAAtD,CAA5B;AATzB;;AAWA,QAAM,IAAI,KAAJ,CAAU,kBAAV,CAAN;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { idFactory } from '../mol-util/id-factory';\r\nimport { DirectVolumeRenderable } from './renderable/direct-volume';\r\nimport { MeshRenderable } from './renderable/mesh';\r\nimport { PointsRenderable } from './renderable/points';\r\nimport { LinesRenderable } from './renderable/lines';\r\nimport { SpheresRenderable } from './renderable/spheres';\r\nimport { TextRenderable } from './renderable/text';\r\nimport { TextureMeshRenderable } from './renderable/texture-mesh';\r\nimport { ImageRenderable } from './renderable/image';\r\nimport { CylindersRenderable } from './renderable/cylinders';\r\nvar getNextId = idFactory(0, 0x7FFFFFFF);\r\nexport var getNextMaterialId = idFactory(0, 0x7FFFFFFF);\r\n//\r\nexport function createRenderObject(type, values, state, materialId) {\r\n    return { id: getNextId(), type: type, values: values, state: state, materialId: materialId };\r\n}\r\nexport function createRenderable(ctx, o) {\r\n    switch (o.type) {\r\n        case 'mesh': return MeshRenderable(ctx, o.id, o.values, o.state, o.materialId);\r\n        case 'points': return PointsRenderable(ctx, o.id, o.values, o.state, o.materialId);\r\n        case 'spheres': return SpheresRenderable(ctx, o.id, o.values, o.state, o.materialId);\r\n        case 'cylinders': return CylindersRenderable(ctx, o.id, o.values, o.state, o.materialId);\r\n        case 'text': return TextRenderable(ctx, o.id, o.values, o.state, o.materialId);\r\n        case 'lines': return LinesRenderable(ctx, o.id, o.values, o.state, o.materialId);\r\n        case 'direct-volume': return DirectVolumeRenderable(ctx, o.id, o.values, o.state, o.materialId);\r\n        case 'image': return ImageRenderable(ctx, o.id, o.values, o.state, o.materialId);\r\n        case 'texture-mesh': return TextureMeshRenderable(ctx, o.id, o.values, o.state, o.materialId);\r\n    }\r\n    throw new Error('unsupported type');\r\n}\r\n//# sourceMappingURL=render-object.js.map"]},"metadata":{},"sourceType":"module"}