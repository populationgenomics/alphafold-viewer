{"ast":null,"code":"/**\r\n * Copyright (c) 2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { StructureProperties } from '../../../structure/properties';\n\nvar ResidueSet =\n/** @class */\nfunction () {\n  function ResidueSet(options) {\n    var _a;\n\n    this.index = new Map();\n    this.checkOperator = false;\n    this.checkOperator = (_a = options === null || options === void 0 ? void 0 : options.checkOperator) !== null && _a !== void 0 ? _a : false;\n  }\n\n  ResidueSet.prototype.add = function (entry) {\n    var root = this.index.get(entry.label_asym_id);\n\n    if (!root) {\n      root = new Map();\n      this.index.set(entry.label_asym_id, root);\n    }\n\n    var entries = root.get(entry.label_seq_id);\n\n    if (!entries) {\n      entries = [];\n      root.set(entry.label_seq_id, entries);\n    }\n\n    var exists = this._find(entry, entries);\n\n    if (!exists) {\n      entries.push(entry);\n      return true;\n    }\n\n    return false;\n  };\n\n  ResidueSet.prototype.hasLabelAsymId = function (asym_id) {\n    return this.index.has(asym_id);\n  };\n\n  ResidueSet.prototype.has = function (loc) {\n    var _a, _b;\n\n    var asym_id = _asym_id(loc);\n\n    if (!this.index.has(asym_id)) return;\n    var root = this.index.get(asym_id);\n\n    var seq_id = _seq_id(loc);\n\n    if (!root.has(seq_id)) return;\n    var entries = root.get(seq_id);\n\n    var comp_id = _comp_id(loc);\n\n    var alt_id = _alt_id(loc);\n\n    var ins_code = _ins_code(loc);\n\n    var op_name = (_a = _op_name(loc)) !== null && _a !== void 0 ? _a : '1_555';\n\n    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n      var e = entries_1[_i];\n      if (e.label_comp_id !== comp_id || e.label_alt_id !== alt_id || e.ins_code !== ins_code) continue;\n      if (this.checkOperator && ((_b = e.operator_name) !== null && _b !== void 0 ? _b : '1_555') !== op_name) continue;\n      return e;\n    }\n  };\n\n  ResidueSet.getLabel = function (entry, checkOperator) {\n    var _a;\n\n    if (checkOperator === void 0) {\n      checkOperator = false;\n    }\n\n    return entry.label_asym_id + \" \" + entry.label_comp_id + \" \" + entry.label_seq_id + \":\" + entry.ins_code + \":\" + entry.label_alt_id + (checkOperator ? ' ' + ((_a = entry.operator_name) !== null && _a !== void 0 ? _a : '1_555') : '');\n  };\n\n  ResidueSet.getEntryFromLocation = function (loc) {\n    var _a;\n\n    return {\n      label_asym_id: _asym_id(loc),\n      label_comp_id: _comp_id(loc),\n      label_seq_id: _seq_id(loc),\n      label_alt_id: _alt_id(loc),\n      ins_code: _ins_code(loc),\n      operator_name: (_a = _op_name(loc)) !== null && _a !== void 0 ? _a : '1_555'\n    };\n  };\n\n  ResidueSet.prototype._find = function (entry, xs) {\n    var _a, _b;\n\n    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\n      var e = xs_1[_i];\n      if (e.label_comp_id !== entry.label_comp_id || e.label_alt_id !== entry.label_alt_id || e.ins_code !== entry.ins_code) continue;\n      if (this.checkOperator && ((_a = e.operator_name) !== null && _a !== void 0 ? _a : '1_555') !== ((_b = entry.operator_name) !== null && _b !== void 0 ? _b : '1_555')) continue;\n      return true;\n    }\n\n    return false;\n  };\n\n  return ResidueSet;\n}();\n\nexport { ResidueSet };\nvar _asym_id = StructureProperties.chain.label_asym_id;\nvar _seq_id = StructureProperties.residue.label_seq_id;\nvar _comp_id = StructureProperties.atom.label_comp_id;\nvar _alt_id = StructureProperties.atom.label_alt_id;\nvar _ins_code = StructureProperties.residue.pdbx_PDB_ins_code;\nvar _op_name = StructureProperties.unit.operator_name;","map":{"version":3,"sources":["../../../../../../src/mol-model/structure/model/properties/utils/residue-set.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { StructureProperties } from '../../../structure/properties';\r\nvar ResidueSet = /** @class */ (function () {\r\n    function ResidueSet(options) {\r\n        var _a;\r\n        this.index = new Map();\r\n        this.checkOperator = false;\r\n        this.checkOperator = (_a = options === null || options === void 0 ? void 0 : options.checkOperator) !== null && _a !== void 0 ? _a : false;\r\n    }\r\n    ResidueSet.prototype.add = function (entry) {\r\n        var root = this.index.get(entry.label_asym_id);\r\n        if (!root) {\r\n            root = new Map();\r\n            this.index.set(entry.label_asym_id, root);\r\n        }\r\n        var entries = root.get(entry.label_seq_id);\r\n        if (!entries) {\r\n            entries = [];\r\n            root.set(entry.label_seq_id, entries);\r\n        }\r\n        var exists = this._find(entry, entries);\r\n        if (!exists) {\r\n            entries.push(entry);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ResidueSet.prototype.hasLabelAsymId = function (asym_id) {\r\n        return this.index.has(asym_id);\r\n    };\r\n    ResidueSet.prototype.has = function (loc) {\r\n        var _a, _b;\r\n        var asym_id = _asym_id(loc);\r\n        if (!this.index.has(asym_id))\r\n            return;\r\n        var root = this.index.get(asym_id);\r\n        var seq_id = _seq_id(loc);\r\n        if (!root.has(seq_id))\r\n            return;\r\n        var entries = root.get(seq_id);\r\n        var comp_id = _comp_id(loc);\r\n        var alt_id = _alt_id(loc);\r\n        var ins_code = _ins_code(loc);\r\n        var op_name = (_a = _op_name(loc)) !== null && _a !== void 0 ? _a : '1_555';\r\n        for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\r\n            var e = entries_1[_i];\r\n            if (e.label_comp_id !== comp_id || e.label_alt_id !== alt_id || e.ins_code !== ins_code)\r\n                continue;\r\n            if (this.checkOperator && ((_b = e.operator_name) !== null && _b !== void 0 ? _b : '1_555') !== op_name)\r\n                continue;\r\n            return e;\r\n        }\r\n    };\r\n    ResidueSet.getLabel = function (entry, checkOperator) {\r\n        var _a;\r\n        if (checkOperator === void 0) { checkOperator = false; }\r\n        return entry.label_asym_id + \" \" + entry.label_comp_id + \" \" + entry.label_seq_id + \":\" + entry.ins_code + \":\" + entry.label_alt_id + (checkOperator ? ' ' + ((_a = entry.operator_name) !== null && _a !== void 0 ? _a : '1_555') : '');\r\n    };\r\n    ResidueSet.getEntryFromLocation = function (loc) {\r\n        var _a;\r\n        return {\r\n            label_asym_id: _asym_id(loc),\r\n            label_comp_id: _comp_id(loc),\r\n            label_seq_id: _seq_id(loc),\r\n            label_alt_id: _alt_id(loc),\r\n            ins_code: _ins_code(loc),\r\n            operator_name: (_a = _op_name(loc)) !== null && _a !== void 0 ? _a : '1_555'\r\n        };\r\n    };\r\n    ResidueSet.prototype._find = function (entry, xs) {\r\n        var _a, _b;\r\n        for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\r\n            var e = xs_1[_i];\r\n            if (e.label_comp_id !== entry.label_comp_id || e.label_alt_id !== entry.label_alt_id || e.ins_code !== entry.ins_code)\r\n                continue;\r\n            if (this.checkOperator && ((_a = e.operator_name) !== null && _a !== void 0 ? _a : '1_555') !== ((_b = entry.operator_name) !== null && _b !== void 0 ? _b : '1_555'))\r\n                continue;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return ResidueSet;\r\n}());\r\nexport { ResidueSet };\r\nvar _asym_id = StructureProperties.chain.label_asym_id;\r\nvar _seq_id = StructureProperties.residue.label_seq_id;\r\nvar _comp_id = StructureProperties.atom.label_comp_id;\r\nvar _alt_id = StructureProperties.atom.label_alt_id;\r\nvar _ins_code = StructureProperties.residue.pdbx_PDB_ins_code;\r\nvar _op_name = StructureProperties.unit.operator_name;\r\n//# sourceMappingURL=residue-set.js.map"]},"metadata":{},"sourceType":"module"}