{"ast":null,"code":"/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __awaiter, __generator } from \"tslib\";\nimport { Task } from '../task';\n\nfunction MultistepTask(name, steps, f, onAbort) {\n  var _this = this;\n\n  return function (params) {\n    return Task.create(name, function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2\n          /*return*/\n          , f(params, function (n) {\n            return ctx.update({\n              message: \"\" + steps[n],\n              current: n + 1,\n              max: steps.length\n            });\n          }, ctx)];\n        });\n      });\n    }, onAbort);\n  };\n}\n\nexport { MultistepTask };","map":{"version":3,"sources":["../../../src/mol-task/util/multistep.ts"],"names":[],"mappings":"AAAA;;;;AAIG;;AAEH,SAAS,IAAT,QAAqB,SAArB;;AAMA,SAAS,aAAT,CAA6B,IAA7B,EAA2C,KAA3C,EAA4D,CAA5D,EAAkF,OAAlF,EAAsG;AAAtG,MAAA,KAAA,GAAA,IAAA;;AACI,SAAO,UAAC,MAAD,EAAU;AAAK,WAAA,IAAI,CAAC,MAAL,CAAY,IAAZ,EAAkB,UAAM,GAAN,EAAS;AAAA,aAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;AAAA,eAAA,WAAA,CAAA,IAAA,EAAA,UAAA,EAAA,EAAA;AAAI,iBAAA,CAAA;AAAA;AAAA,YAAA,CAAC,CAAC,MAAD,EAAS,UAAA,CAAA,EAAC;AAAI,mBAAA,GAAG,CAAC,MAAJ,CAAW;AAAE,cAAA,OAAO,EAAE,KAAG,KAAK,CAAC,CAAD,CAAnB;AAA0B,cAAA,OAAO,EAAE,CAAC,GAAG,CAAvC;AAA0C,cAAA,GAAG,EAAE,KAAK,CAA/D;AAAW,aAAX,CAAA;AAAyE,WAAvF,EAAyF,GAAzF,CAAD,CAAA;SAAJ,CAAA;OAAA,CAAA;AAAkG,KAA7H,EAAA,OAAA,CAAA;AAAuI,GAA7J;AACH;;AAED,SAAS,aAAT","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { Task } from '../task';\r\nfunction MultistepTask(name, steps, f, onAbort) {\r\n    var _this = this;\r\n    return function (params) { return Task.create(name, function (ctx) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n        return [2 /*return*/, f(params, function (n) { return ctx.update({ message: \"\" + steps[n], current: n + 1, max: steps.length }); }, ctx)];\r\n    }); }); }, onAbort); };\r\n}\r\nexport { MultistepTask };\r\n//# sourceMappingURL=multistep.js.map"]},"metadata":{},"sourceType":"module"}