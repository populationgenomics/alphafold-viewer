{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Color, ColorMap } from '../../../mol-util/color';\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { InteractionsProvider } from '../interactions';\nimport { TableLegend } from '../../../mol-util/legend';\nimport { Interactions } from '../interactions/interactions';\nimport { hash2 } from '../../../mol-data/util';\nvar DefaultColor = Color(0xCCCCCC);\nvar Description = 'Assigns colors according the interaction type of a link.';\nvar InteractionTypeColors = ColorMap({\n  HydrogenBond: 0x2B83BA,\n  Hydrophobic: 0x808080,\n  HalogenBond: 0x40FFBF,\n  Ionic: 0xF0C814,\n  MetalCoordination: 0x8C4099,\n  CationPi: 0xFF8000,\n  PiStacking: 0x8CB366,\n  WeakHydrogenBond: 0xC5DDEC\n});\nvar InteractionTypeColorTable = [['Hydrogen Bond', InteractionTypeColors.HydrogenBond], ['Hydrophobic', InteractionTypeColors.Hydrophobic], ['Halogen Bond', InteractionTypeColors.HalogenBond], ['Ionic', InteractionTypeColors.Ionic], ['Metal Coordination', InteractionTypeColors.MetalCoordination], ['Cation Pi', InteractionTypeColors.CationPi], ['Pi Stacking', InteractionTypeColors.PiStacking], ['Weak HydrogenBond', InteractionTypeColors.WeakHydrogenBond]];\n\nfunction typeColor(type) {\n  switch (type) {\n    case 4\n    /* HydrogenBond */\n    :\n      return InteractionTypeColors.HydrogenBond;\n\n    case 6\n    /* Hydrophobic */\n    :\n      return InteractionTypeColors.Hydrophobic;\n\n    case 5\n    /* HalogenBond */\n    :\n      return InteractionTypeColors.HalogenBond;\n\n    case 1\n    /* Ionic */\n    :\n      return InteractionTypeColors.Ionic;\n\n    case 7\n    /* MetalCoordination */\n    :\n      return InteractionTypeColors.MetalCoordination;\n\n    case 2\n    /* CationPi */\n    :\n      return InteractionTypeColors.CationPi;\n\n    case 3\n    /* PiStacking */\n    :\n      return InteractionTypeColors.PiStacking;\n\n    case 8\n    /* WeakHydrogenBond */\n    :\n      return InteractionTypeColors.WeakHydrogenBond;\n\n    case 0\n    /* Unknown */\n    :\n      return DefaultColor;\n  }\n}\n\nexport var InteractionTypeColorThemeParams = {};\nexport function getInteractionTypeColorThemeParams(ctx) {\n  return InteractionTypeColorThemeParams; // TODO return copy\n}\nexport function InteractionTypeColorTheme(ctx, props) {\n  var color;\n  var interactions = ctx.structure ? InteractionsProvider.get(ctx.structure) : undefined;\n  var contextHash = interactions ? hash2(interactions.id, interactions.version) : -1;\n\n  if (interactions && interactions.value) {\n    color = function (location) {\n      if (Interactions.isLocation(location)) {\n        var _a = location.data.interactions,\n            unitsContacts = _a.unitsContacts,\n            contacts = _a.contacts;\n        var _b = location.element,\n            unitA = _b.unitA,\n            unitB = _b.unitB,\n            indexA = _b.indexA,\n            indexB = _b.indexB;\n\n        if (unitA === unitB) {\n          var links = unitsContacts.get(unitA.id);\n          var idx = links.getDirectedEdgeIndex(indexA, indexB);\n          return typeColor(links.edgeProps.type[idx]);\n        } else {\n          var idx = contacts.getEdgeIndex(indexA, unitA.id, indexB, unitB.id);\n          return typeColor(contacts.edges[idx].props.type);\n        }\n      }\n\n      return DefaultColor;\n    };\n  } else {\n    color = function () {\n      return DefaultColor;\n    };\n  }\n\n  return {\n    factory: InteractionTypeColorTheme,\n    granularity: 'group',\n    color: color,\n    props: props,\n    contextHash: contextHash,\n    description: Description,\n    legend: TableLegend(InteractionTypeColorTable)\n  };\n}\nexport var InteractionTypeColorThemeProvider = {\n  name: 'interaction-type',\n  label: 'Interaction Type',\n  category: \"Miscellaneous\"\n  /* Misc */\n  ,\n  factory: InteractionTypeColorTheme,\n  getParams: getInteractionTypeColorThemeParams,\n  defaultValues: PD.getDefaultValues(InteractionTypeColorThemeParams),\n  isApplicable: function (ctx) {\n    return !!ctx.structure;\n  },\n  ensureCustomProperties: {\n    attach: function (ctx, data) {\n      return data.structure ? InteractionsProvider.attach(ctx, data.structure, void 0, true) : Promise.resolve();\n    },\n    detach: function (data) {\n      return data.structure && InteractionsProvider.ref(data.structure, false);\n    }\n  }\n};","map":{"version":3,"sources":["../../../../src/mol-model-props/computed/themes/interaction-type.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Color, ColorMap } from '../../../mol-util/color';\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { InteractionsProvider } from '../interactions';\r\nimport { TableLegend } from '../../../mol-util/legend';\r\nimport { Interactions } from '../interactions/interactions';\r\nimport { hash2 } from '../../../mol-data/util';\r\nvar DefaultColor = Color(0xCCCCCC);\r\nvar Description = 'Assigns colors according the interaction type of a link.';\r\nvar InteractionTypeColors = ColorMap({\r\n    HydrogenBond: 0x2B83BA,\r\n    Hydrophobic: 0x808080,\r\n    HalogenBond: 0x40FFBF,\r\n    Ionic: 0xF0C814,\r\n    MetalCoordination: 0x8C4099,\r\n    CationPi: 0xFF8000,\r\n    PiStacking: 0x8CB366,\r\n    WeakHydrogenBond: 0xC5DDEC,\r\n});\r\nvar InteractionTypeColorTable = [\r\n    ['Hydrogen Bond', InteractionTypeColors.HydrogenBond],\r\n    ['Hydrophobic', InteractionTypeColors.Hydrophobic],\r\n    ['Halogen Bond', InteractionTypeColors.HalogenBond],\r\n    ['Ionic', InteractionTypeColors.Ionic],\r\n    ['Metal Coordination', InteractionTypeColors.MetalCoordination],\r\n    ['Cation Pi', InteractionTypeColors.CationPi],\r\n    ['Pi Stacking', InteractionTypeColors.PiStacking],\r\n    ['Weak HydrogenBond', InteractionTypeColors.WeakHydrogenBond],\r\n];\r\nfunction typeColor(type) {\r\n    switch (type) {\r\n        case 4 /* HydrogenBond */:\r\n            return InteractionTypeColors.HydrogenBond;\r\n        case 6 /* Hydrophobic */:\r\n            return InteractionTypeColors.Hydrophobic;\r\n        case 5 /* HalogenBond */:\r\n            return InteractionTypeColors.HalogenBond;\r\n        case 1 /* Ionic */:\r\n            return InteractionTypeColors.Ionic;\r\n        case 7 /* MetalCoordination */:\r\n            return InteractionTypeColors.MetalCoordination;\r\n        case 2 /* CationPi */:\r\n            return InteractionTypeColors.CationPi;\r\n        case 3 /* PiStacking */:\r\n            return InteractionTypeColors.PiStacking;\r\n        case 8 /* WeakHydrogenBond */:\r\n            return InteractionTypeColors.WeakHydrogenBond;\r\n        case 0 /* Unknown */:\r\n            return DefaultColor;\r\n    }\r\n}\r\nexport var InteractionTypeColorThemeParams = {};\r\nexport function getInteractionTypeColorThemeParams(ctx) {\r\n    return InteractionTypeColorThemeParams; // TODO return copy\r\n}\r\nexport function InteractionTypeColorTheme(ctx, props) {\r\n    var color;\r\n    var interactions = ctx.structure ? InteractionsProvider.get(ctx.structure) : undefined;\r\n    var contextHash = interactions ? hash2(interactions.id, interactions.version) : -1;\r\n    if (interactions && interactions.value) {\r\n        color = function (location) {\r\n            if (Interactions.isLocation(location)) {\r\n                var _a = location.data.interactions, unitsContacts = _a.unitsContacts, contacts = _a.contacts;\r\n                var _b = location.element, unitA = _b.unitA, unitB = _b.unitB, indexA = _b.indexA, indexB = _b.indexB;\r\n                if (unitA === unitB) {\r\n                    var links = unitsContacts.get(unitA.id);\r\n                    var idx = links.getDirectedEdgeIndex(indexA, indexB);\r\n                    return typeColor(links.edgeProps.type[idx]);\r\n                }\r\n                else {\r\n                    var idx = contacts.getEdgeIndex(indexA, unitA.id, indexB, unitB.id);\r\n                    return typeColor(contacts.edges[idx].props.type);\r\n                }\r\n            }\r\n            return DefaultColor;\r\n        };\r\n    }\r\n    else {\r\n        color = function () { return DefaultColor; };\r\n    }\r\n    return {\r\n        factory: InteractionTypeColorTheme,\r\n        granularity: 'group',\r\n        color: color,\r\n        props: props,\r\n        contextHash: contextHash,\r\n        description: Description,\r\n        legend: TableLegend(InteractionTypeColorTable)\r\n    };\r\n}\r\nexport var InteractionTypeColorThemeProvider = {\r\n    name: 'interaction-type',\r\n    label: 'Interaction Type',\r\n    category: \"Miscellaneous\" /* Misc */,\r\n    factory: InteractionTypeColorTheme,\r\n    getParams: getInteractionTypeColorThemeParams,\r\n    defaultValues: PD.getDefaultValues(InteractionTypeColorThemeParams),\r\n    isApplicable: function (ctx) { return !!ctx.structure; },\r\n    ensureCustomProperties: {\r\n        attach: function (ctx, data) { return data.structure ? InteractionsProvider.attach(ctx, data.structure, void 0, true) : Promise.resolve(); },\r\n        detach: function (data) { return data.structure && InteractionsProvider.ref(data.structure, false); }\r\n    }\r\n};\r\n//# sourceMappingURL=interaction-type.js.map"]},"metadata":{},"sourceType":"module"}