{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { PolymerTubeVisual, PolymerTubeParams } from '../visual/polymer-tube-mesh';\nimport { PolymerGapVisual, PolymerGapParams } from '../visual/polymer-gap-cylinder';\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { UnitsRepresentation } from '../units-representation';\nimport { StructureRepresentationProvider, StructureRepresentationStateBuilder } from '../representation';\nimport { Representation } from '../../../mol-repr/representation';\nimport { Unit } from '../../../mol-model/structure';\nvar PuttyVisuals = {\n  'polymer-tube': function (ctx, getParams) {\n    return UnitsRepresentation('Polymer tube mesh', ctx, getParams, PolymerTubeVisual);\n  },\n  'polymer-gap': function (ctx, getParams) {\n    return UnitsRepresentation('Polymer gap cylinder', ctx, getParams, PolymerGapVisual);\n  }\n};\nexport var PuttyParams = __assign(__assign(__assign({}, PolymerTubeParams), PolymerGapParams), {\n  sizeFactor: PD.Numeric(0.2, {\n    min: 0,\n    max: 10,\n    step: 0.01\n  }),\n  visuals: PD.MultiSelect(['polymer-tube', 'polymer-gap'], PD.objectToOptions(PuttyVisuals))\n});\nexport function getPuttyParams(ctx, structure) {\n  var params = PD.clone(PuttyParams);\n  var hasNucleotides = false;\n  var hasGaps = false;\n  structure.units.forEach(function (u) {\n    if (!hasNucleotides && Unit.isAtomic(u) && u.nucleotideElements.length) hasNucleotides = true;\n    if (!hasGaps && u.gapElements.length) hasGaps = true;\n  });\n  params.visuals.defaultValue = ['polymer-tube'];\n  if (hasGaps) params.visuals.defaultValue.push('polymer-gap');\n  return params;\n}\nexport function PuttyRepresentation(ctx, getParams) {\n  return Representation.createMulti('Putty', ctx, getParams, StructureRepresentationStateBuilder, PuttyVisuals);\n}\nexport var PuttyRepresentationProvider = StructureRepresentationProvider({\n  name: 'putty',\n  label: 'Putty',\n  description: 'Displays a tube smoothly following the trace atoms of polymers.',\n  factory: PuttyRepresentation,\n  getParams: getPuttyParams,\n  defaultValues: PD.getDefaultValues(PuttyParams),\n  defaultColorTheme: {\n    name: 'chain-id'\n  },\n  defaultSizeTheme: {\n    name: 'uncertainty'\n  },\n  isApplicable: function (structure) {\n    return structure.polymerResidueCount > 0;\n  }\n});","map":{"version":3,"sources":["../../../../src/mol-repr/structure/representation/putty.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { PolymerTubeVisual, PolymerTubeParams } from '../visual/polymer-tube-mesh';\r\nimport { PolymerGapVisual, PolymerGapParams } from '../visual/polymer-gap-cylinder';\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { UnitsRepresentation } from '../units-representation';\r\nimport { StructureRepresentationProvider, StructureRepresentationStateBuilder } from '../representation';\r\nimport { Representation } from '../../../mol-repr/representation';\r\nimport { Unit } from '../../../mol-model/structure';\r\nvar PuttyVisuals = {\r\n    'polymer-tube': function (ctx, getParams) { return UnitsRepresentation('Polymer tube mesh', ctx, getParams, PolymerTubeVisual); },\r\n    'polymer-gap': function (ctx, getParams) { return UnitsRepresentation('Polymer gap cylinder', ctx, getParams, PolymerGapVisual); },\r\n};\r\nexport var PuttyParams = __assign(__assign(__assign({}, PolymerTubeParams), PolymerGapParams), { sizeFactor: PD.Numeric(0.2, { min: 0, max: 10, step: 0.01 }), visuals: PD.MultiSelect(['polymer-tube', 'polymer-gap'], PD.objectToOptions(PuttyVisuals)) });\r\nexport function getPuttyParams(ctx, structure) {\r\n    var params = PD.clone(PuttyParams);\r\n    var hasNucleotides = false;\r\n    var hasGaps = false;\r\n    structure.units.forEach(function (u) {\r\n        if (!hasNucleotides && Unit.isAtomic(u) && u.nucleotideElements.length)\r\n            hasNucleotides = true;\r\n        if (!hasGaps && u.gapElements.length)\r\n            hasGaps = true;\r\n    });\r\n    params.visuals.defaultValue = ['polymer-tube'];\r\n    if (hasGaps)\r\n        params.visuals.defaultValue.push('polymer-gap');\r\n    return params;\r\n}\r\nexport function PuttyRepresentation(ctx, getParams) {\r\n    return Representation.createMulti('Putty', ctx, getParams, StructureRepresentationStateBuilder, PuttyVisuals);\r\n}\r\nexport var PuttyRepresentationProvider = StructureRepresentationProvider({\r\n    name: 'putty',\r\n    label: 'Putty',\r\n    description: 'Displays a tube smoothly following the trace atoms of polymers.',\r\n    factory: PuttyRepresentation,\r\n    getParams: getPuttyParams,\r\n    defaultValues: PD.getDefaultValues(PuttyParams),\r\n    defaultColorTheme: { name: 'chain-id' },\r\n    defaultSizeTheme: { name: 'uncertainty' },\r\n    isApplicable: function (structure) { return structure.polymerResidueCount > 0; },\r\n});\r\n//# sourceMappingURL=putty.js.map"]},"metadata":{},"sourceType":"module"}