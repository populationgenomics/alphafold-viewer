{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __awaiter, __generator } from \"tslib\";\nimport { Task } from '../../../mol-task';\nimport { ReaderResult } from '../result';\nimport { Tokenizer } from '../common/text/tokenizer';\nexport function parsePDB(data, id, isPdbqt) {\n  var _this = this;\n\n  if (isPdbqt === void 0) {\n    isPdbqt = false;\n  }\n\n  return Task.create('Parse PDB', function (ctx) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var _a, _b;\n\n      var _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _b = (_a = ReaderResult).success;\n            _c = {};\n            return [4\n            /*yield*/\n            , Tokenizer.readAllLinesAsync(data, ctx)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _b.apply(_a, [(_c.lines = _d.sent(), _c.id = id, _c.isPdbqt = isPdbqt, _c)])];\n        }\n      });\n    });\n  });\n}","map":{"version":3,"sources":["../../../../src/mol-io/reader/pdb/parser.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;;AAGH,SAAS,IAAT,QAAqB,mBAArB;AACA,SAAS,YAAT,QAA6B,WAA7B;AACA,SAAS,SAAT,QAA0B,0BAA1B;AAEA,OAAM,SAAU,QAAV,CAAmB,IAAnB,EAAiC,EAAjC,EAA8C,OAA9C,EAA6D;AAAnE,MAAA,KAAA,GAAA,IAAA;;AAAoD,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,KAAA;AAAe;;AAC/D,SAAO,IAAI,CAAC,MAAL,CAAY,WAAZ,EAAyB,UAAM,GAAN,EAAS;AAAA,WAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;;;AAAI,YAAA,EAAA,GAAA,CAAA,EAAA,GAAA,YAAA,EAAa,OAAb;;AAClC,mBAAA,CAAA;AAAA;AAAA,cAAM,SAAS,CAAC,iBAAV,CAA4B,IAA5B,EAAkC,GAAlC,CAAN,CAAA;;;AADkC,mBAAA,CAAA;AAAA;AAAA,cAAA,EAAA,CAAA,KAAA,CAAA,EAAA,EAAA,EACzC,EAAA,CAAA,KAAA,GAAO,EAAA,CAAA,IAAA,EAAP,EACA,EAAA,CAAA,EAAA,GAAE,EADF,EAEA,EAAA,CAAA,OAAA,GAAO,OAFP,EAGF,EAJ2C,EAAA,CAAA,CAAA;;;KAAJ,CAAA;AAIvC,GAJK,CAAP;AAKH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { Task } from '../../../mol-task';\r\nimport { ReaderResult } from '../result';\r\nimport { Tokenizer } from '../common/text/tokenizer';\r\nexport function parsePDB(data, id, isPdbqt) {\r\n    var _this = this;\r\n    if (isPdbqt === void 0) { isPdbqt = false; }\r\n    return Task.create('Parse PDB', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n        var _a, _b;\r\n        var _c;\r\n        return __generator(this, function (_d) {\r\n            switch (_d.label) {\r\n                case 0:\r\n                    _b = (_a = ReaderResult).success;\r\n                    _c = {};\r\n                    return [4 /*yield*/, Tokenizer.readAllLinesAsync(data, ctx)];\r\n                case 1: return [2 /*return*/, _b.apply(_a, [(_c.lines = _d.sent(),\r\n                            _c.id = id,\r\n                            _c.isPdbqt = isPdbqt,\r\n                            _c)])];\r\n            }\r\n        });\r\n    }); });\r\n}\r\n//# sourceMappingURL=parser.js.map"]},"metadata":{},"sourceType":"module"}