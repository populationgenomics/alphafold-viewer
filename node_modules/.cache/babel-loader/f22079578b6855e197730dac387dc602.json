{"ast":null,"code":"/**\r\n * Copyright (c) 2017 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { iterableToArray } from '../util';\nvar IntMap;\n\n(function (IntMap) {\n  IntMap.Empty = new Map();\n\n  function keyArray(map) {\n    return iterableToArray(map.keys());\n  }\n\n  IntMap.keyArray = keyArray;\n\n  function Mutable() {\n    return new Map();\n  }\n\n  IntMap.Mutable = Mutable;\n\n  function asImmutable(map) {\n    return map;\n  }\n\n  IntMap.asImmutable = asImmutable;\n\n  function copy(map) {\n    var ret = Mutable();\n    var it = map.keys();\n\n    while (true) {\n      var _a = it.next(),\n          done = _a.done,\n          value = _a.value;\n\n      if (done) break;\n      ret.set(value, map.get(value));\n    }\n\n    return ret;\n  }\n\n  IntMap.copy = copy;\n\n  function addFrom(map, src) {\n    var it = src.keys();\n\n    while (true) {\n      var _a = it.next(),\n          done = _a.done,\n          value = _a.value;\n\n      if (done) break;\n      map.set(value, src.get(value));\n    }\n\n    return map;\n  }\n\n  IntMap.addFrom = addFrom;\n})(IntMap || (IntMap = {}));\n\nexport { IntMap };","map":{"version":3,"sources":["../../../src/mol-data/int/map.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,SAAS,eAAT,QAAgC,SAAhC;AAaA,IAAU,MAAV;;AAAA,CAAA,UAAU,MAAV,EAAgB;AACC,EAAA,MAAA,CAAA,KAAA,GAAqB,IAAI,GAAJ,EAArB;;AAMb,WAAgB,QAAhB,CAA4B,GAA5B,EAA0C;AACtC,WAAO,eAAe,CAAC,GAAG,CAAC,IAAJ,EAAD,CAAtB;AACH;;AAFe,EAAA,MAAA,CAAA,QAAA,GAAQ,QAAR;;AAIhB,WAAgB,OAAhB,GAAuB;AACnB,WAAO,IAAI,GAAJ,EAAP;AACH;;AAFe,EAAA,MAAA,CAAA,OAAA,GAAO,OAAP;;AAIhB,WAAgB,WAAhB,CAA+B,GAA/B,EAA6C;AACzC,WAAO,GAAP;AACH;;AAFe,EAAA,MAAA,CAAA,WAAA,GAAW,WAAX;;AAIhB,WAAgB,IAAhB,CAAwB,GAAxB,EAAsC;AAClC,QAAM,GAAG,GAAG,OAAO,EAAnB;AACA,QAAM,EAAE,GAAG,GAAG,CAAC,IAAJ,EAAX;;AACA,WAAO,IAAP,EAAa;AACH,UAAA,EAAA,GAAkB,EAAE,CAAC,IAAH,EAAlB;AAAA,UAAE,IAAI,GAAA,EAAA,CAAA,IAAN;AAAA,UAAQ,KAAK,GAAA,EAAA,CAAA,KAAb;;AACN,UAAI,IAAJ,EAAU;AACV,MAAA,GAAG,CAAC,GAAJ,CAAQ,KAAR,EAAe,GAAG,CAAC,GAAJ,CAAQ,KAAR,CAAf;AACH;;AACD,WAAO,GAAP;AACH;;AATe,EAAA,MAAA,CAAA,IAAA,GAAI,IAAJ;;AAWhB,WAAgB,OAAhB,CAA2B,GAA3B,EAA4C,GAA5C,EAA0D;AACtD,QAAM,EAAE,GAAG,GAAG,CAAC,IAAJ,EAAX;;AACA,WAAO,IAAP,EAAa;AACH,UAAA,EAAA,GAAkB,EAAE,CAAC,IAAH,EAAlB;AAAA,UAAE,IAAI,GAAA,EAAA,CAAA,IAAN;AAAA,UAAQ,KAAK,GAAA,EAAA,CAAA,KAAb;;AACN,UAAI,IAAJ,EAAU;AACV,MAAA,GAAG,CAAC,GAAJ,CAAQ,KAAR,EAAe,GAAG,CAAC,GAAJ,CAAQ,KAAR,CAAf;AACH;;AACD,WAAO,GAAP;AACH;;AARe,EAAA,MAAA,CAAA,OAAA,GAAO,OAAP;AASnB,CAvCD,EAAU,MAAM,KAAN,MAAM,GAAA,EAAA,CAAhB;;AAyCA,SAAS,MAAT","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2017 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { iterableToArray } from '../util';\r\nvar IntMap;\r\n(function (IntMap) {\r\n    IntMap.Empty = new Map();\r\n    function keyArray(map) {\r\n        return iterableToArray(map.keys());\r\n    }\r\n    IntMap.keyArray = keyArray;\r\n    function Mutable() {\r\n        return new Map();\r\n    }\r\n    IntMap.Mutable = Mutable;\r\n    function asImmutable(map) {\r\n        return map;\r\n    }\r\n    IntMap.asImmutable = asImmutable;\r\n    function copy(map) {\r\n        var ret = Mutable();\r\n        var it = map.keys();\r\n        while (true) {\r\n            var _a = it.next(), done = _a.done, value = _a.value;\r\n            if (done)\r\n                break;\r\n            ret.set(value, map.get(value));\r\n        }\r\n        return ret;\r\n    }\r\n    IntMap.copy = copy;\r\n    function addFrom(map, src) {\r\n        var it = src.keys();\r\n        while (true) {\r\n            var _a = it.next(), done = _a.done, value = _a.value;\r\n            if (done)\r\n                break;\r\n            map.set(value, src.get(value));\r\n        }\r\n        return map;\r\n    }\r\n    IntMap.addFrom = addFrom;\r\n})(IntMap || (IntMap = {}));\r\nexport { IntMap };\r\n//# sourceMappingURL=map.js.map"]},"metadata":{},"sourceType":"module"}