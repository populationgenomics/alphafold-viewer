{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\n/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\n\nimport { PluginUIComponent } from '../base';\nimport { VolumeStreaming } from '../../mol-plugin/behavior/dynamic/volume-streaming/behavior';\nimport { ExpandableControlRow, IconButton } from '../controls/common';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { ParameterControls } from '../controls/parameters';\nimport { Slider } from '../controls/slider';\nimport { Volume } from '../../mol-model/volume';\nimport { Vec3 } from '../../mol-math/linear-algebra';\nimport { ColorNames } from '../../mol-util/color/names';\nimport { toPrecision } from '../../mol-util/number';\nimport { StateSelection } from '../../mol-state';\nimport { setSubtreeVisibility } from '../../mol-plugin/behavior/static/state';\nimport { VisibilityOutlinedSvg, VisibilityOffOutlinedSvg } from '../controls/icons';\nvar ChannelParams = {\n  color: PD.Color(ColorNames.black, {\n    description: 'Display color of the volume.'\n  }),\n  wireframe: PD.Boolean(false, {\n    description: 'Control display of the volume as a wireframe.'\n  }),\n  opacity: PD.Numeric(0.3, {\n    min: 0,\n    max: 1,\n    step: 0.01\n  }, {\n    description: 'Opacity of the volume.'\n  })\n};\nvar Bounds = new Map([['em', [-5, 5]], ['2fo-fc', [0, 3]], ['fo-fc(+ve)', [1, 5]], ['fo-fc(-ve)', [-5, -1]]]);\n\nvar Channel =\n/** @class */\nfunction (_super) {\n  __extends(Channel, _super);\n\n  function Channel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ref = StateSelection.findTagInSubtree(_this.plugin.state.data.tree, _this.props.bCell.transform.ref, _this.props.name);\n\n    _this.getVisible = function () {\n      var state = _this.plugin.state.data;\n      var ref = _this.ref;\n      if (!ref) return false;\n      return !state.cells.get(ref).state.isHidden;\n    };\n\n    _this.toggleVisible = function () {\n      var state = _this.plugin.state.data;\n      var ref = _this.ref;\n      if (!ref) return;\n      setSubtreeVisibility(state, ref, !state.cells.get(ref).state.isHidden);\n    };\n\n    return _this;\n  }\n\n  Channel.prototype.componentDidUpdate = function () {\n    this.ref = StateSelection.findTagInSubtree(this.plugin.state.data.tree, this.props.bCell.transform.ref, this.props.name);\n  };\n\n  Channel.prototype.componentDidMount = function () {\n    var _this = this;\n\n    this.subscribe(this.plugin.state.data.events.cell.stateUpdated, function (e) {\n      if (_this.ref === e.ref) _this.forceUpdate();\n    });\n  };\n\n  Channel.prototype.render = function () {\n    var props = this.props;\n    var isRelative = props.isRelative,\n        stats = props.stats;\n    var channel = props.channels[props.name];\n    var min = stats.min,\n        max = stats.max,\n        mean = stats.mean,\n        sigma = stats.sigma;\n    var value = Math.round(100 * (channel.isoValue.kind === 'relative' ? channel.isoValue.relativeValue : channel.isoValue.absoluteValue)) / 100;\n    var relMin = (min - mean) / sigma;\n    var relMax = (max - mean) / sigma;\n\n    if (!this.props.isUnbounded) {\n      var bounds = Bounds.get(this.props.name);\n\n      if (this.props.name === 'em') {\n        relMin = Math.max(bounds[0], relMin);\n        relMax = Math.min(bounds[1], relMax);\n      } else {\n        relMin = bounds[0];\n        relMax = bounds[1];\n      }\n    }\n\n    var vMin = mean + sigma * relMin,\n        vMax = mean + sigma * relMax;\n    var step = toPrecision(isRelative ? Math.round((vMax - vMin) / sigma) / 100 : sigma / 100, 2);\n    var ctrlMin = isRelative ? relMin : vMin;\n    var ctrlMax = isRelative ? relMax : vMax;\n    return _jsx(ExpandableControlRow, {\n      label: props.label + (props.isRelative ? ' \\u03C3' : ''),\n      colorStripe: channel.color,\n      pivot: _jsxs(\"div\", __assign({\n        className: 'msp-volume-channel-inline-controls'\n      }, {\n        children: [_jsx(Slider, {\n          value: value,\n          min: ctrlMin,\n          max: ctrlMax,\n          step: step,\n          onChange: function (v) {\n            return props.changeIso(props.name, v, isRelative);\n          },\n          disabled: props.params.isDisabled,\n          onEnter: props.params.events.onEnter\n        }, void 0), _jsx(IconButton, {\n          svg: this.getVisible() ? VisibilityOutlinedSvg : VisibilityOffOutlinedSvg,\n          onClick: this.toggleVisible,\n          toggleState: false,\n          disabled: props.params.isDisabled\n        }, void 0)]\n      }), void 0),\n      controls: _jsx(ParameterControls, {\n        onChange: function (_a) {\n          var name = _a.name,\n              value = _a.value;\n          return props.changeParams(props.name, name, value);\n        },\n        params: ChannelParams,\n        values: channel,\n        onEnter: props.params.events.onEnter,\n        isDisabled: props.params.isDisabled\n      }, void 0)\n    }, void 0);\n  };\n\n  return Channel;\n}(PluginUIComponent);\n\nvar VolumeStreamingCustomControls =\n/** @class */\nfunction (_super) {\n  __extends(VolumeStreamingCustomControls, _super);\n\n  function VolumeStreamingCustomControls() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.changeIso = function (name, value, isRelative) {\n      var _a;\n\n      var old = _this.props.params;\n\n      _this.newParams(__assign(__assign({}, old), {\n        entry: {\n          name: old.entry.name,\n          params: __assign(__assign({}, old.entry.params), {\n            channels: __assign(__assign({}, old.entry.params.channels), (_a = {}, _a[name] = __assign(__assign({}, old.entry.params.channels[name]), {\n              isoValue: isRelative ? Volume.IsoValue.relative(value) : Volume.IsoValue.absolute(value)\n            }), _a))\n          })\n        }\n      }));\n    };\n\n    _this.changeParams = function (name, param, value) {\n      var _a, _b;\n\n      var old = _this.props.params;\n\n      _this.newParams(__assign(__assign({}, old), {\n        entry: {\n          name: old.entry.name,\n          params: __assign(__assign({}, old.entry.params), {\n            channels: __assign(__assign({}, old.entry.params.channels), (_a = {}, _a[name] = __assign(__assign({}, old.entry.params.channels[name]), (_b = {}, _b[param] = value, _b)), _a))\n          })\n        }\n      }));\n    };\n\n    _this.changeOption = function (_a) {\n      var name = _a.name,\n          value = _a.value;\n      var old = _this.props.params;\n\n      if (name === 'entry') {\n        _this.newParams(__assign(__assign({}, old), {\n          entry: {\n            name: value,\n            params: old.entry.params\n          }\n        }));\n      } else {\n        var b = _this.props.b.data;\n        var isEM = b.info.kind === 'em';\n        var isRelative = value.params.isRelative;\n        var sampling = b.info.header.sampling[0];\n        var oldChannels = old.entry.params.channels;\n        var oldView = old.entry.params.view.name === value.name ? old.entry.params.view.params : _this.props.info.params.entry.map(old.entry.name).params.view.map(value.name).defaultValue;\n\n        var viewParams = __assign({}, oldView);\n\n        if (value.name === 'selection-box') {\n          viewParams.radius = value.params.radius;\n        } else if (value.name === 'box') {\n          viewParams.bottomLeft = value.params.bottomLeft;\n          viewParams.topRight = value.params.topRight;\n        } else if (value.name === 'auto') {\n          viewParams.radius = value.params.radius;\n          viewParams.selectionDetailLevel = value.params.selectionDetailLevel;\n        }\n\n        viewParams.isUnbounded = !!value.params.isUnbounded;\n\n        _this.newParams(__assign(__assign({}, old), {\n          entry: {\n            name: old.entry.name,\n            params: __assign(__assign({}, old.entry.params), {\n              view: {\n                name: value.name,\n                params: viewParams\n              },\n              detailLevel: value.params.detailLevel,\n              channels: isEM ? {\n                em: _this.convert(oldChannels.em, sampling.valuesInfo[0], isRelative)\n              } : {\n                '2fo-fc': _this.convert(oldChannels['2fo-fc'], sampling.valuesInfo[0], isRelative),\n                'fo-fc(+ve)': _this.convert(oldChannels['fo-fc(+ve)'], sampling.valuesInfo[1], isRelative),\n                'fo-fc(-ve)': _this.convert(oldChannels['fo-fc(-ve)'], sampling.valuesInfo[1], isRelative)\n              }\n            })\n          }\n        }));\n      }\n    };\n\n    return _this;\n  }\n\n  VolumeStreamingCustomControls.prototype.areInitial = function (params) {\n    return PD.areEqual(this.props.info.params, params, this.props.info.initialValues);\n  };\n\n  VolumeStreamingCustomControls.prototype.newParams = function (params) {\n    this.props.events.onChange(params, this.areInitial(params));\n  };\n\n  VolumeStreamingCustomControls.prototype.convert = function (channel, stats, isRelative) {\n    return __assign(__assign({}, channel), {\n      isoValue: isRelative ? Volume.IsoValue.toRelative(channel.isoValue, stats) : Volume.IsoValue.toAbsolute(channel.isoValue, stats)\n    });\n  };\n\n  VolumeStreamingCustomControls.prototype.render = function () {\n    if (!this.props.b) return null;\n    var b = this.props.b.data;\n    var isEM = b.info.kind === 'em';\n    var pivot = isEM ? 'em' : '2fo-fc';\n    var params = this.props.params;\n    var entry = this.props.info.params.entry.map(params.entry.name);\n    var detailLevel = entry.params.detailLevel;\n    var isRelative = params.entry.params.channels[pivot].isoValue.kind === 'relative';\n    var sampling = b.info.header.sampling[0];\n    var isRelativeParam = PD.Boolean(isRelative, {\n      description: 'Use normalized or absolute isocontour scale.',\n      label: 'Normalized'\n    });\n    var isUnbounded = !!params.entry.params.view.params.isUnbounded;\n    var isUnboundedParam = PD.Boolean(isUnbounded, {\n      description: 'Show full/limited range of iso-values for more fine-grained control.',\n      label: 'Unbounded'\n    });\n    var isOff = params.entry.params.view.name === 'off'; // TODO: factor common things out, cache\n\n    var OptionsParams = {\n      entry: PD.Select(params.entry.name, b.data.entries.map(function (info) {\n        return [info.dataId, info.dataId];\n      }), {\n        isHidden: isOff,\n        description: 'Which entry with volume data to display.'\n      }),\n      view: PD.MappedStatic(params.entry.params.view.name, {\n        'off': PD.Group({\n          isRelative: PD.Boolean(isRelative, {\n            isHidden: true\n          }),\n          isUnbounded: PD.Boolean(isUnbounded, {\n            isHidden: true\n          })\n        }, {\n          description: 'Display off.'\n        }),\n        'box': PD.Group({\n          bottomLeft: PD.Vec3(Vec3.zero()),\n          topRight: PD.Vec3(Vec3.zero()),\n          detailLevel: detailLevel,\n          isRelative: isRelativeParam,\n          isUnbounded: isUnboundedParam\n        }, {\n          description: 'Static box defined by cartesian coords.'\n        }),\n        'selection-box': PD.Group({\n          radius: PD.Numeric(5, {\n            min: 0,\n            max: 50,\n            step: 0.5\n          }, {\n            description: 'Radius in \\u212B within which the volume is shown.'\n          }),\n          detailLevel: detailLevel,\n          isRelative: isRelativeParam,\n          isUnbounded: isUnboundedParam\n        }, {\n          description: 'Box around focused element.'\n        }),\n        'cell': PD.Group({\n          detailLevel: detailLevel,\n          isRelative: isRelativeParam,\n          isUnbounded: isUnboundedParam\n        }, {\n          description: 'Box around the structure\\'s bounding box.'\n        }),\n        'auto': PD.Group({\n          radius: PD.Numeric(5, {\n            min: 0,\n            max: 50,\n            step: 0.5\n          }, {\n            description: 'Radius in \\u212B within which the volume is shown.'\n          }),\n          detailLevel: detailLevel,\n          selectionDetailLevel: __assign(__assign({}, detailLevel), {\n            label: 'Selection Detail'\n          }),\n          isRelative: isRelativeParam,\n          isUnbounded: isUnboundedParam\n        }, {\n          description: 'Box around focused element.'\n        }) // 'auto': PD.Group({  }), // TODO based on camera distance/active selection/whatever, show whole structure or slice.\n\n      }, {\n        options: VolumeStreaming.ViewTypeOptions,\n        description: 'Controls what of the volume is displayed. \"Off\" hides the volume alltogether. \"Bounded box\" shows the volume inside the given box. \"Around Focus\" shows the volume around the element/atom last interacted with. \"Whole Structure\" shows the volume for the whole structure.'\n      })\n    };\n    var options = {\n      entry: params.entry.name,\n      view: {\n        name: params.entry.params.view.name,\n        params: {\n          detailLevel: params.entry.params.detailLevel,\n          radius: params.entry.params.view.params.radius,\n          bottomLeft: params.entry.params.view.params.bottomLeft,\n          topRight: params.entry.params.view.params.topRight,\n          selectionDetailLevel: params.entry.params.view.params.selectionDetailLevel,\n          isRelative: isRelative,\n          isUnbounded: isUnbounded\n        }\n      }\n    };\n\n    if (isOff) {\n      return _jsx(ParameterControls, {\n        onChange: this.changeOption,\n        params: OptionsParams,\n        values: options,\n        onEnter: this.props.events.onEnter,\n        isDisabled: this.props.isDisabled\n      }, void 0);\n    }\n\n    return _jsxs(_Fragment, {\n      children: [!isEM && _jsx(Channel, {\n        label: '2Fo-Fc',\n        name: '2fo-fc',\n        bCell: this.props.bCell,\n        channels: params.entry.params.channels,\n        changeIso: this.changeIso,\n        changeParams: this.changeParams,\n        isRelative: isRelative,\n        params: this.props,\n        stats: sampling.valuesInfo[0],\n        isUnbounded: isUnbounded\n      }, void 0), !isEM && _jsx(Channel, {\n        label: 'Fo-Fc(+ve)',\n        name: 'fo-fc(+ve)',\n        bCell: this.props.bCell,\n        channels: params.entry.params.channels,\n        changeIso: this.changeIso,\n        changeParams: this.changeParams,\n        isRelative: isRelative,\n        params: this.props,\n        stats: sampling.valuesInfo[1],\n        isUnbounded: isUnbounded\n      }, void 0), !isEM && _jsx(Channel, {\n        label: 'Fo-Fc(-ve)',\n        name: 'fo-fc(-ve)',\n        bCell: this.props.bCell,\n        channels: params.entry.params.channels,\n        changeIso: this.changeIso,\n        changeParams: this.changeParams,\n        isRelative: isRelative,\n        params: this.props,\n        stats: sampling.valuesInfo[1],\n        isUnbounded: isUnbounded\n      }, void 0), isEM && _jsx(Channel, {\n        label: 'EM',\n        name: 'em',\n        bCell: this.props.bCell,\n        channels: params.entry.params.channels,\n        changeIso: this.changeIso,\n        changeParams: this.changeParams,\n        isRelative: isRelative,\n        params: this.props,\n        stats: sampling.valuesInfo[0],\n        isUnbounded: isUnbounded\n      }, void 0), _jsx(ParameterControls, {\n        onChange: this.changeOption,\n        params: OptionsParams,\n        values: options,\n        onEnter: this.props.events.onEnter,\n        isDisabled: this.props.isDisabled\n      }, void 0)]\n    }, void 0);\n  };\n\n  return VolumeStreamingCustomControls;\n}(PluginUIComponent);\n\nexport { VolumeStreamingCustomControls };","map":{"version":3,"sources":["../../../src/mol-plugin-ui/custom/volume.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\r\n/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { PluginUIComponent } from '../base';\r\nimport { VolumeStreaming } from '../../mol-plugin/behavior/dynamic/volume-streaming/behavior';\r\nimport { ExpandableControlRow, IconButton } from '../controls/common';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { ParameterControls } from '../controls/parameters';\r\nimport { Slider } from '../controls/slider';\r\nimport { Volume } from '../../mol-model/volume';\r\nimport { Vec3 } from '../../mol-math/linear-algebra';\r\nimport { ColorNames } from '../../mol-util/color/names';\r\nimport { toPrecision } from '../../mol-util/number';\r\nimport { StateSelection } from '../../mol-state';\r\nimport { setSubtreeVisibility } from '../../mol-plugin/behavior/static/state';\r\nimport { VisibilityOutlinedSvg, VisibilityOffOutlinedSvg } from '../controls/icons';\r\nvar ChannelParams = {\r\n    color: PD.Color(ColorNames.black, { description: 'Display color of the volume.' }),\r\n    wireframe: PD.Boolean(false, { description: 'Control display of the volume as a wireframe.' }),\r\n    opacity: PD.Numeric(0.3, { min: 0, max: 1, step: 0.01 }, { description: 'Opacity of the volume.' })\r\n};\r\nvar Bounds = new Map([\r\n    ['em', [-5, 5]],\r\n    ['2fo-fc', [0, 3]],\r\n    ['fo-fc(+ve)', [1, 5]],\r\n    ['fo-fc(-ve)', [-5, -1]],\r\n]);\r\nvar Channel = /** @class */ (function (_super) {\r\n    __extends(Channel, _super);\r\n    function Channel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.ref = StateSelection.findTagInSubtree(_this.plugin.state.data.tree, _this.props.bCell.transform.ref, _this.props.name);\r\n        _this.getVisible = function () {\r\n            var state = _this.plugin.state.data;\r\n            var ref = _this.ref;\r\n            if (!ref)\r\n                return false;\r\n            return !state.cells.get(ref).state.isHidden;\r\n        };\r\n        _this.toggleVisible = function () {\r\n            var state = _this.plugin.state.data;\r\n            var ref = _this.ref;\r\n            if (!ref)\r\n                return;\r\n            setSubtreeVisibility(state, ref, !state.cells.get(ref).state.isHidden);\r\n        };\r\n        return _this;\r\n    }\r\n    Channel.prototype.componentDidUpdate = function () {\r\n        this.ref = StateSelection.findTagInSubtree(this.plugin.state.data.tree, this.props.bCell.transform.ref, this.props.name);\r\n    };\r\n    Channel.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        this.subscribe(this.plugin.state.data.events.cell.stateUpdated, function (e) {\r\n            if (_this.ref === e.ref)\r\n                _this.forceUpdate();\r\n        });\r\n    };\r\n    Channel.prototype.render = function () {\r\n        var props = this.props;\r\n        var isRelative = props.isRelative, stats = props.stats;\r\n        var channel = props.channels[props.name];\r\n        var min = stats.min, max = stats.max, mean = stats.mean, sigma = stats.sigma;\r\n        var value = Math.round(100 * (channel.isoValue.kind === 'relative' ? channel.isoValue.relativeValue : channel.isoValue.absoluteValue)) / 100;\r\n        var relMin = (min - mean) / sigma;\r\n        var relMax = (max - mean) / sigma;\r\n        if (!this.props.isUnbounded) {\r\n            var bounds = Bounds.get(this.props.name);\r\n            if (this.props.name === 'em') {\r\n                relMin = Math.max(bounds[0], relMin);\r\n                relMax = Math.min(bounds[1], relMax);\r\n            }\r\n            else {\r\n                relMin = bounds[0];\r\n                relMax = bounds[1];\r\n            }\r\n        }\r\n        var vMin = mean + sigma * relMin, vMax = mean + sigma * relMax;\r\n        var step = toPrecision(isRelative ? Math.round(((vMax - vMin) / sigma)) / 100 : sigma / 100, 2);\r\n        var ctrlMin = isRelative ? relMin : vMin;\r\n        var ctrlMax = isRelative ? relMax : vMax;\r\n        return _jsx(ExpandableControlRow, { label: props.label + (props.isRelative ? ' \\u03C3' : ''), colorStripe: channel.color, pivot: _jsxs(\"div\", __assign({ className: 'msp-volume-channel-inline-controls' }, { children: [_jsx(Slider, { value: value, min: ctrlMin, max: ctrlMax, step: step, onChange: function (v) { return props.changeIso(props.name, v, isRelative); }, disabled: props.params.isDisabled, onEnter: props.params.events.onEnter }, void 0), _jsx(IconButton, { svg: this.getVisible() ? VisibilityOutlinedSvg : VisibilityOffOutlinedSvg, onClick: this.toggleVisible, toggleState: false, disabled: props.params.isDisabled }, void 0)] }), void 0), controls: _jsx(ParameterControls, { onChange: function (_a) {\r\n                    var name = _a.name, value = _a.value;\r\n                    return props.changeParams(props.name, name, value);\r\n                }, params: ChannelParams, values: channel, onEnter: props.params.events.onEnter, isDisabled: props.params.isDisabled }, void 0) }, void 0);\r\n    };\r\n    return Channel;\r\n}(PluginUIComponent));\r\nvar VolumeStreamingCustomControls = /** @class */ (function (_super) {\r\n    __extends(VolumeStreamingCustomControls, _super);\r\n    function VolumeStreamingCustomControls() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.changeIso = function (name, value, isRelative) {\r\n            var _a;\r\n            var old = _this.props.params;\r\n            _this.newParams(__assign(__assign({}, old), { entry: {\r\n                    name: old.entry.name,\r\n                    params: __assign(__assign({}, old.entry.params), { channels: __assign(__assign({}, old.entry.params.channels), (_a = {}, _a[name] = __assign(__assign({}, old.entry.params.channels[name]), { isoValue: isRelative ? Volume.IsoValue.relative(value) : Volume.IsoValue.absolute(value) }), _a)) })\r\n                } }));\r\n        };\r\n        _this.changeParams = function (name, param, value) {\r\n            var _a, _b;\r\n            var old = _this.props.params;\r\n            _this.newParams(__assign(__assign({}, old), { entry: {\r\n                    name: old.entry.name,\r\n                    params: __assign(__assign({}, old.entry.params), { channels: __assign(__assign({}, old.entry.params.channels), (_a = {}, _a[name] = __assign(__assign({}, old.entry.params.channels[name]), (_b = {}, _b[param] = value, _b)), _a)) })\r\n                } }));\r\n        };\r\n        _this.changeOption = function (_a) {\r\n            var name = _a.name, value = _a.value;\r\n            var old = _this.props.params;\r\n            if (name === 'entry') {\r\n                _this.newParams(__assign(__assign({}, old), { entry: {\r\n                        name: value,\r\n                        params: old.entry.params,\r\n                    } }));\r\n            }\r\n            else {\r\n                var b = _this.props.b.data;\r\n                var isEM = b.info.kind === 'em';\r\n                var isRelative = value.params.isRelative;\r\n                var sampling = b.info.header.sampling[0];\r\n                var oldChannels = old.entry.params.channels;\r\n                var oldView = old.entry.params.view.name === value.name\r\n                    ? old.entry.params.view.params\r\n                    : _this.props.info.params\r\n                        .entry.map(old.entry.name)\r\n                        .params\r\n                        .view.map(value.name).defaultValue;\r\n                var viewParams = __assign({}, oldView);\r\n                if (value.name === 'selection-box') {\r\n                    viewParams.radius = value.params.radius;\r\n                }\r\n                else if (value.name === 'box') {\r\n                    viewParams.bottomLeft = value.params.bottomLeft;\r\n                    viewParams.topRight = value.params.topRight;\r\n                }\r\n                else if (value.name === 'auto') {\r\n                    viewParams.radius = value.params.radius;\r\n                    viewParams.selectionDetailLevel = value.params.selectionDetailLevel;\r\n                }\r\n                viewParams.isUnbounded = !!value.params.isUnbounded;\r\n                _this.newParams(__assign(__assign({}, old), { entry: {\r\n                        name: old.entry.name,\r\n                        params: __assign(__assign({}, old.entry.params), { view: {\r\n                                name: value.name,\r\n                                params: viewParams\r\n                            }, detailLevel: value.params.detailLevel, channels: isEM\r\n                                ? { em: _this.convert(oldChannels.em, sampling.valuesInfo[0], isRelative) }\r\n                                : {\r\n                                    '2fo-fc': _this.convert(oldChannels['2fo-fc'], sampling.valuesInfo[0], isRelative),\r\n                                    'fo-fc(+ve)': _this.convert(oldChannels['fo-fc(+ve)'], sampling.valuesInfo[1], isRelative),\r\n                                    'fo-fc(-ve)': _this.convert(oldChannels['fo-fc(-ve)'], sampling.valuesInfo[1], isRelative)\r\n                                } })\r\n                    } }));\r\n            }\r\n        };\r\n        return _this;\r\n    }\r\n    VolumeStreamingCustomControls.prototype.areInitial = function (params) {\r\n        return PD.areEqual(this.props.info.params, params, this.props.info.initialValues);\r\n    };\r\n    VolumeStreamingCustomControls.prototype.newParams = function (params) {\r\n        this.props.events.onChange(params, this.areInitial(params));\r\n    };\r\n    VolumeStreamingCustomControls.prototype.convert = function (channel, stats, isRelative) {\r\n        return __assign(__assign({}, channel), { isoValue: isRelative\r\n                ? Volume.IsoValue.toRelative(channel.isoValue, stats)\r\n                : Volume.IsoValue.toAbsolute(channel.isoValue, stats) });\r\n    };\r\n    VolumeStreamingCustomControls.prototype.render = function () {\r\n        if (!this.props.b)\r\n            return null;\r\n        var b = this.props.b.data;\r\n        var isEM = b.info.kind === 'em';\r\n        var pivot = isEM ? 'em' : '2fo-fc';\r\n        var params = this.props.params;\r\n        var entry = this.props.info.params\r\n            .entry.map(params.entry.name);\r\n        var detailLevel = entry.params.detailLevel;\r\n        var isRelative = params.entry.params.channels[pivot].isoValue.kind === 'relative';\r\n        var sampling = b.info.header.sampling[0];\r\n        var isRelativeParam = PD.Boolean(isRelative, { description: 'Use normalized or absolute isocontour scale.', label: 'Normalized' });\r\n        var isUnbounded = !!params.entry.params.view.params.isUnbounded;\r\n        var isUnboundedParam = PD.Boolean(isUnbounded, { description: 'Show full/limited range of iso-values for more fine-grained control.', label: 'Unbounded' });\r\n        var isOff = params.entry.params.view.name === 'off';\r\n        // TODO: factor common things out, cache\r\n        var OptionsParams = {\r\n            entry: PD.Select(params.entry.name, b.data.entries.map(function (info) { return [info.dataId, info.dataId]; }), { isHidden: isOff, description: 'Which entry with volume data to display.' }),\r\n            view: PD.MappedStatic(params.entry.params.view.name, {\r\n                'off': PD.Group({\r\n                    isRelative: PD.Boolean(isRelative, { isHidden: true }),\r\n                    isUnbounded: PD.Boolean(isUnbounded, { isHidden: true }),\r\n                }, { description: 'Display off.' }),\r\n                'box': PD.Group({\r\n                    bottomLeft: PD.Vec3(Vec3.zero()),\r\n                    topRight: PD.Vec3(Vec3.zero()),\r\n                    detailLevel: detailLevel,\r\n                    isRelative: isRelativeParam,\r\n                    isUnbounded: isUnboundedParam,\r\n                }, { description: 'Static box defined by cartesian coords.' }),\r\n                'selection-box': PD.Group({\r\n                    radius: PD.Numeric(5, { min: 0, max: 50, step: 0.5 }, { description: 'Radius in \\u212B within which the volume is shown.' }),\r\n                    detailLevel: detailLevel,\r\n                    isRelative: isRelativeParam,\r\n                    isUnbounded: isUnboundedParam,\r\n                }, { description: 'Box around focused element.' }),\r\n                'cell': PD.Group({\r\n                    detailLevel: detailLevel,\r\n                    isRelative: isRelativeParam,\r\n                    isUnbounded: isUnboundedParam,\r\n                }, { description: 'Box around the structure\\'s bounding box.' }),\r\n                'auto': PD.Group({\r\n                    radius: PD.Numeric(5, { min: 0, max: 50, step: 0.5 }, { description: 'Radius in \\u212B within which the volume is shown.' }),\r\n                    detailLevel: detailLevel,\r\n                    selectionDetailLevel: __assign(__assign({}, detailLevel), { label: 'Selection Detail' }),\r\n                    isRelative: isRelativeParam,\r\n                    isUnbounded: isUnboundedParam,\r\n                }, { description: 'Box around focused element.' }),\r\n                // 'auto': PD.Group({  }), // TODO based on camera distance/active selection/whatever, show whole structure or slice.\r\n            }, { options: VolumeStreaming.ViewTypeOptions, description: 'Controls what of the volume is displayed. \"Off\" hides the volume alltogether. \"Bounded box\" shows the volume inside the given box. \"Around Focus\" shows the volume around the element/atom last interacted with. \"Whole Structure\" shows the volume for the whole structure.' })\r\n        };\r\n        var options = {\r\n            entry: params.entry.name,\r\n            view: {\r\n                name: params.entry.params.view.name,\r\n                params: {\r\n                    detailLevel: params.entry.params.detailLevel,\r\n                    radius: params.entry.params.view.params.radius,\r\n                    bottomLeft: params.entry.params.view.params.bottomLeft,\r\n                    topRight: params.entry.params.view.params.topRight,\r\n                    selectionDetailLevel: params.entry.params.view.params.selectionDetailLevel,\r\n                    isRelative: isRelative,\r\n                    isUnbounded: isUnbounded\r\n                }\r\n            }\r\n        };\r\n        if (isOff) {\r\n            return _jsx(ParameterControls, { onChange: this.changeOption, params: OptionsParams, values: options, onEnter: this.props.events.onEnter, isDisabled: this.props.isDisabled }, void 0);\r\n        }\r\n        return _jsxs(_Fragment, { children: [!isEM && _jsx(Channel, { label: '2Fo-Fc', name: '2fo-fc', bCell: this.props.bCell, channels: params.entry.params.channels, changeIso: this.changeIso, changeParams: this.changeParams, isRelative: isRelative, params: this.props, stats: sampling.valuesInfo[0], isUnbounded: isUnbounded }, void 0), !isEM && _jsx(Channel, { label: 'Fo-Fc(+ve)', name: 'fo-fc(+ve)', bCell: this.props.bCell, channels: params.entry.params.channels, changeIso: this.changeIso, changeParams: this.changeParams, isRelative: isRelative, params: this.props, stats: sampling.valuesInfo[1], isUnbounded: isUnbounded }, void 0), !isEM && _jsx(Channel, { label: 'Fo-Fc(-ve)', name: 'fo-fc(-ve)', bCell: this.props.bCell, channels: params.entry.params.channels, changeIso: this.changeIso, changeParams: this.changeParams, isRelative: isRelative, params: this.props, stats: sampling.valuesInfo[1], isUnbounded: isUnbounded }, void 0), isEM && _jsx(Channel, { label: 'EM', name: 'em', bCell: this.props.bCell, channels: params.entry.params.channels, changeIso: this.changeIso, changeParams: this.changeParams, isRelative: isRelative, params: this.props, stats: sampling.valuesInfo[0], isUnbounded: isUnbounded }, void 0), _jsx(ParameterControls, { onChange: this.changeOption, params: OptionsParams, values: options, onEnter: this.props.events.onEnter, isDisabled: this.props.isDisabled }, void 0)] }, void 0);\r\n    };\r\n    return VolumeStreamingCustomControls;\r\n}(PluginUIComponent));\r\nexport { VolumeStreamingCustomControls };\r\n//# sourceMappingURL=volume.js.map"]},"metadata":{},"sourceType":"module"}