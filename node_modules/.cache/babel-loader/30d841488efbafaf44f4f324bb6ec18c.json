{"ast":null,"code":"/**\r\n * Copyright (c) 2017-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Unit } from './unit';\nimport { VdwRadius } from '../model/properties/atomic';\nimport { SecondaryStructureProvider } from '../../../mol-model-props/computed/secondary-structure';\nimport { SymmetryOperator } from '../../../mol-math/geometry';\n\nfunction p(p) {\n  return p;\n}\n\nvar constant = {\n  true: p(function (l) {\n    return true;\n  }),\n  false: p(function (l) {\n    return false;\n  }),\n  zero: p(function (l) {\n    return 0;\n  })\n};\n\nfunction notAtomic() {\n  throw new Error('Property only available for atomic models.');\n}\n\nfunction notCoarse(kind) {\n  if (!!kind) throw new Error(\"Property only available for coarse models (\" + kind + \").\");\n  throw new Error('Property only available for coarse models.');\n} // TODO: remove the type checks?\n\n\nvar atom = {\n  key: p(function (l) {\n    return l.element;\n  }),\n  // Conformation\n  x: p(function (l) {\n    return l.unit.conformation.x(l.element);\n  }),\n  y: p(function (l) {\n    return l.unit.conformation.y(l.element);\n  }),\n  z: p(function (l) {\n    return l.unit.conformation.z(l.element);\n  }),\n  id: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicConformation.atomId.value(l.element);\n  }),\n  occupancy: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicConformation.occupancy.value(l.element);\n  }),\n  B_iso_or_equiv: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicConformation.B_iso_or_equiv.value(l.element);\n  }),\n  sourceIndex: p(function (l) {\n    return Unit.isAtomic(l.unit) ? l.unit.model.atomicHierarchy.atomSourceIndex.value(l.element) // TODO: when implemented, this should map to the source index.\n    : l.element;\n  }),\n  // Hierarchy\n  type_symbol: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.atoms.type_symbol.value(l.element);\n  }),\n  label_atom_id: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.atoms.label_atom_id.value(l.element);\n  }),\n  auth_atom_id: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.atoms.auth_atom_id.value(l.element);\n  }),\n  label_alt_id: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.atoms.label_alt_id.value(l.element);\n  }),\n  label_comp_id: p(compId),\n  auth_comp_id: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.atoms.auth_comp_id.value(l.element);\n  }),\n  pdbx_formal_charge: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.atoms.pdbx_formal_charge.value(l.element);\n  }),\n  // Derived\n  vdw_radius: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : VdwRadius(l.unit.model.atomicHierarchy.atoms.type_symbol.value(l.element));\n  })\n};\n\nfunction compId(l) {\n  if (!Unit.isAtomic(l.unit)) notAtomic();\n  return l.unit.model.atomicHierarchy.atoms.label_comp_id.value(l.element);\n}\n\nfunction seqId(l) {\n  return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.residues.label_seq_id.value(l.unit.residueIndex[l.element]);\n}\n\nfunction hasMicroheterogeneity(l) {\n  if (!Unit.isAtomic(l.unit)) notAtomic();\n  var entitySeq = l.unit.model.sequence.byEntityKey[eK(l)];\n  return entitySeq && entitySeq.sequence.microHet.has(seqId(l));\n}\n\nfunction microheterogeneityCompIds(l) {\n  if (!Unit.isAtomic(l.unit)) notAtomic();\n  var entitySeq = l.unit.model.sequence.byEntityKey[eK(l)];\n\n  if (entitySeq) {\n    return entitySeq.sequence.microHet.get(seqId(l)) || [compId(l)];\n  } else {\n    return [compId(l)];\n  }\n}\n\nvar residue = {\n  key: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.residueIndex[l.element];\n  }),\n  group_PDB: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.residues.group_PDB.value(l.unit.residueIndex[l.element]);\n  }),\n  label_seq_id: p(seqId),\n  auth_seq_id: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.residues.auth_seq_id.value(l.unit.residueIndex[l.element]);\n  }),\n  pdbx_PDB_ins_code: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.residues.pdbx_PDB_ins_code.value(l.unit.residueIndex[l.element]);\n  }),\n  // Properties\n  isNonStandard: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : microheterogeneityCompIds(l).some(function (c) {\n      return l.unit.model.properties.chemicalComponentMap.get(c).mon_nstd_flag[0] === 'n';\n    });\n  }),\n  hasMicroheterogeneity: p(hasMicroheterogeneity),\n  microheterogeneityCompIds: p(microheterogeneityCompIds),\n  secondary_structure_type: p(function (l) {\n    var _a, _b;\n\n    if (!Unit.isAtomic(l.unit)) notAtomic();\n    var secStruc = (_a = SecondaryStructureProvider.get(l.structure).value) === null || _a === void 0 ? void 0 : _a.get(l.unit.invariantId);\n    return (_b = secStruc === null || secStruc === void 0 ? void 0 : secStruc.type[l.unit.residueIndex[l.element]]) !== null && _b !== void 0 ? _b : 536870912\n    /* NA */\n    ;\n  }),\n  secondary_structure_key: p(function (l) {\n    var _a, _b;\n\n    if (!Unit.isAtomic(l.unit)) notAtomic();\n    var secStruc = (_a = SecondaryStructureProvider.get(l.structure).value) === null || _a === void 0 ? void 0 : _a.get(l.unit.invariantId);\n    return (_b = secStruc === null || secStruc === void 0 ? void 0 : secStruc.key[l.unit.residueIndex[l.element]]) !== null && _b !== void 0 ? _b : -1;\n  }),\n  chem_comp_type: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.properties.chemicalComponentMap.get(compId(l)).type;\n  })\n};\nvar chain = {\n  key: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.chainIndex[l.element];\n  }),\n  label_asym_id: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.chains.label_asym_id.value(l.unit.chainIndex[l.element]);\n  }),\n  auth_asym_id: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.chains.auth_asym_id.value(l.unit.chainIndex[l.element]);\n  }),\n  label_entity_id: p(function (l) {\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.chains.label_entity_id.value(l.unit.chainIndex[l.element]);\n  })\n};\nvar coarse = {\n  key: atom.key,\n  entityKey: p(function (l) {\n    return !Unit.isCoarse(l.unit) ? notCoarse() : l.unit.coarseElements.entityKey[l.element];\n  }),\n  x: atom.x,\n  y: atom.y,\n  z: atom.z,\n  asym_id: p(function (l) {\n    return !Unit.isCoarse(l.unit) ? notCoarse() : l.unit.coarseElements.asym_id.value(l.element);\n  }),\n  seq_id_begin: p(function (l) {\n    return !Unit.isCoarse(l.unit) ? notCoarse() : l.unit.coarseElements.seq_id_begin.value(l.element);\n  }),\n  seq_id_end: p(function (l) {\n    return !Unit.isCoarse(l.unit) ? notCoarse() : l.unit.coarseElements.seq_id_end.value(l.element);\n  }),\n  sphere_radius: p(function (l) {\n    return !Unit.isSpheres(l.unit) ? notCoarse('spheres') : l.unit.coarseConformation.radius[l.element];\n  }),\n  sphere_rmsf: p(function (l) {\n    return !Unit.isSpheres(l.unit) ? notCoarse('spheres') : l.unit.coarseConformation.rmsf[l.element];\n  }),\n  gaussian_weight: p(function (l) {\n    return !Unit.isGaussians(l.unit) ? notCoarse('gaussians') : l.unit.coarseConformation.weight[l.element];\n  }),\n  gaussian_covariance_matrix: p(function (l) {\n    return !Unit.isGaussians(l.unit) ? notCoarse('gaussians') : l.unit.coarseConformation.covariance_matrix[l.element];\n  })\n};\n\nfunction eK(l) {\n  switch (l.unit.kind) {\n    case 0\n    /* Atomic */\n    :\n      return l.unit.model.atomicHierarchy.index.getEntityFromChain(l.unit.chainIndex[l.element]);\n\n    case 1\n    /* Spheres */\n    :\n      return l.unit.model.coarseHierarchy.spheres.entityKey[l.element];\n\n    case 2\n    /* Gaussians */\n    :\n      return l.unit.model.coarseHierarchy.gaussians.entityKey[l.element];\n  }\n}\n\nvar entity = {\n  key: p(eK),\n  id: p(function (l) {\n    return l.unit.model.entities.data.id.value(eK(l));\n  }),\n  type: p(function (l) {\n    return l.unit.model.entities.data.type.value(eK(l));\n  }),\n  src_method: p(function (l) {\n    return l.unit.model.entities.data.src_method.value(eK(l));\n  }),\n  pdbx_description: p(function (l) {\n    return l.unit.model.entities.data.pdbx_description.value(eK(l));\n  }),\n  formula_weight: p(function (l) {\n    return l.unit.model.entities.data.formula_weight.value(eK(l));\n  }),\n  pdbx_number_of_molecules: p(function (l) {\n    return l.unit.model.entities.data.pdbx_number_of_molecules.value(eK(l));\n  }),\n  details: p(function (l) {\n    return l.unit.model.entities.data.details.value(eK(l));\n  }),\n  pdbx_mutation: p(function (l) {\n    return l.unit.model.entities.data.pdbx_mutation.value(eK(l));\n  }),\n  pdbx_fragment: p(function (l) {\n    return l.unit.model.entities.data.pdbx_fragment.value(eK(l));\n  }),\n  pdbx_ec: p(function (l) {\n    return l.unit.model.entities.data.pdbx_ec.value(eK(l));\n  }),\n  subtype: p(function (l) {\n    return l.unit.model.entities.subtype.value(eK(l));\n  }),\n  prd_id: p(function (l) {\n    return l.unit.model.entities.prd_id.value(eK(l));\n  })\n};\nvar _emptyList = [];\nvar unit = {\n  id: p(function (l) {\n    return l.unit.id;\n  }),\n  chainGroupId: p(function (l) {\n    return l.unit.chainGroupId;\n  }),\n  multiChain: p(function (l) {\n    return Unit.Traits.is(l.unit.traits, 1\n    /* MultiChain */\n    );\n  }),\n  object_primitive: p(function (l) {\n    return l.unit.objectPrimitive;\n  }),\n  operator_name: p(function (l) {\n    return l.unit.conformation.operator.name;\n  }),\n  model_index: p(function (l) {\n    return l.unit.model.modelNum;\n  }),\n  model_label: p(function (l) {\n    return l.unit.model.label;\n  }),\n  model_entry_id: p(function (l) {\n    return l.unit.model.entryId;\n  }),\n  hkl: p(function (l) {\n    return l.unit.conformation.operator.hkl;\n  }),\n  spgrOp: p(function (l) {\n    return l.unit.conformation.operator.spgrOp;\n  }),\n  model_num: p(function (l) {\n    return l.unit.model.modelNum;\n  }),\n  pdbx_struct_assembly_id: p(function (l) {\n    var _a;\n\n    return ((_a = l.unit.conformation.operator.assembly) === null || _a === void 0 ? void 0 : _a.id) || SymmetryOperator.DefaultName;\n  }),\n  pdbx_struct_oper_list_ids: p(function (l) {\n    var _a;\n\n    return ((_a = l.unit.conformation.operator.assembly) === null || _a === void 0 ? void 0 : _a.operList) || _emptyList;\n  }),\n  struct_ncs_oper_id: p(function (l) {\n    return l.unit.conformation.operator.ncsId;\n  })\n};\nvar StructureProperties = {\n  constant: constant,\n  atom: atom,\n  residue: residue,\n  chain: chain,\n  entity: entity,\n  unit: unit,\n  coarse: coarse\n};\nexport { StructureProperties };","map":{"version":3,"sources":["../../../../src/mol-model/structure/structure/properties.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2017-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Unit } from './unit';\r\nimport { VdwRadius } from '../model/properties/atomic';\r\nimport { SecondaryStructureProvider } from '../../../mol-model-props/computed/secondary-structure';\r\nimport { SymmetryOperator } from '../../../mol-math/geometry';\r\nfunction p(p) { return p; }\r\nvar constant = {\r\n    true: p(function (l) { return true; }),\r\n    false: p(function (l) { return false; }),\r\n    zero: p(function (l) { return 0; })\r\n};\r\nfunction notAtomic() {\r\n    throw new Error('Property only available for atomic models.');\r\n}\r\nfunction notCoarse(kind) {\r\n    if (!!kind)\r\n        throw new Error(\"Property only available for coarse models (\" + kind + \").\");\r\n    throw new Error('Property only available for coarse models.');\r\n}\r\n// TODO: remove the type checks?\r\nvar atom = {\r\n    key: p(function (l) { return l.element; }),\r\n    // Conformation\r\n    x: p(function (l) { return l.unit.conformation.x(l.element); }),\r\n    y: p(function (l) { return l.unit.conformation.y(l.element); }),\r\n    z: p(function (l) { return l.unit.conformation.z(l.element); }),\r\n    id: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicConformation.atomId.value(l.element); }),\r\n    occupancy: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicConformation.occupancy.value(l.element); }),\r\n    B_iso_or_equiv: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicConformation.B_iso_or_equiv.value(l.element); }),\r\n    sourceIndex: p(function (l) { return Unit.isAtomic(l.unit)\r\n        ? l.unit.model.atomicHierarchy.atomSourceIndex.value(l.element)\r\n        // TODO: when implemented, this should map to the source index.\r\n        : l.element; }),\r\n    // Hierarchy\r\n    type_symbol: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.atoms.type_symbol.value(l.element); }),\r\n    label_atom_id: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.atoms.label_atom_id.value(l.element); }),\r\n    auth_atom_id: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.atoms.auth_atom_id.value(l.element); }),\r\n    label_alt_id: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.atoms.label_alt_id.value(l.element); }),\r\n    label_comp_id: p(compId),\r\n    auth_comp_id: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.atoms.auth_comp_id.value(l.element); }),\r\n    pdbx_formal_charge: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.atoms.pdbx_formal_charge.value(l.element); }),\r\n    // Derived\r\n    vdw_radius: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : VdwRadius(l.unit.model.atomicHierarchy.atoms.type_symbol.value(l.element)); }),\r\n};\r\nfunction compId(l) {\r\n    if (!Unit.isAtomic(l.unit))\r\n        notAtomic();\r\n    return l.unit.model.atomicHierarchy.atoms.label_comp_id.value(l.element);\r\n}\r\nfunction seqId(l) {\r\n    return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.residues.label_seq_id.value(l.unit.residueIndex[l.element]);\r\n}\r\nfunction hasMicroheterogeneity(l) {\r\n    if (!Unit.isAtomic(l.unit))\r\n        notAtomic();\r\n    var entitySeq = l.unit.model.sequence.byEntityKey[eK(l)];\r\n    return entitySeq && entitySeq.sequence.microHet.has(seqId(l));\r\n}\r\nfunction microheterogeneityCompIds(l) {\r\n    if (!Unit.isAtomic(l.unit))\r\n        notAtomic();\r\n    var entitySeq = l.unit.model.sequence.byEntityKey[eK(l)];\r\n    if (entitySeq) {\r\n        return entitySeq.sequence.microHet.get(seqId(l)) || [compId(l)];\r\n    }\r\n    else {\r\n        return [compId(l)];\r\n    }\r\n}\r\nvar residue = {\r\n    key: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.residueIndex[l.element]; }),\r\n    group_PDB: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.residues.group_PDB.value(l.unit.residueIndex[l.element]); }),\r\n    label_seq_id: p(seqId),\r\n    auth_seq_id: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.residues.auth_seq_id.value(l.unit.residueIndex[l.element]); }),\r\n    pdbx_PDB_ins_code: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.residues.pdbx_PDB_ins_code.value(l.unit.residueIndex[l.element]); }),\r\n    // Properties\r\n    isNonStandard: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : microheterogeneityCompIds(l).some(function (c) { return l.unit.model.properties.chemicalComponentMap.get(c).mon_nstd_flag[0] === 'n'; }); }),\r\n    hasMicroheterogeneity: p(hasMicroheterogeneity),\r\n    microheterogeneityCompIds: p(microheterogeneityCompIds),\r\n    secondary_structure_type: p(function (l) {\r\n        var _a, _b;\r\n        if (!Unit.isAtomic(l.unit))\r\n            notAtomic();\r\n        var secStruc = (_a = SecondaryStructureProvider.get(l.structure).value) === null || _a === void 0 ? void 0 : _a.get(l.unit.invariantId);\r\n        return (_b = secStruc === null || secStruc === void 0 ? void 0 : secStruc.type[l.unit.residueIndex[l.element]]) !== null && _b !== void 0 ? _b : 536870912 /* NA */;\r\n    }),\r\n    secondary_structure_key: p(function (l) {\r\n        var _a, _b;\r\n        if (!Unit.isAtomic(l.unit))\r\n            notAtomic();\r\n        var secStruc = (_a = SecondaryStructureProvider.get(l.structure).value) === null || _a === void 0 ? void 0 : _a.get(l.unit.invariantId);\r\n        return (_b = secStruc === null || secStruc === void 0 ? void 0 : secStruc.key[l.unit.residueIndex[l.element]]) !== null && _b !== void 0 ? _b : -1;\r\n    }),\r\n    chem_comp_type: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.properties.chemicalComponentMap.get(compId(l)).type; }),\r\n};\r\nvar chain = {\r\n    key: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.chainIndex[l.element]; }),\r\n    label_asym_id: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.chains.label_asym_id.value(l.unit.chainIndex[l.element]); }),\r\n    auth_asym_id: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.chains.auth_asym_id.value(l.unit.chainIndex[l.element]); }),\r\n    label_entity_id: p(function (l) { return !Unit.isAtomic(l.unit) ? notAtomic() : l.unit.model.atomicHierarchy.chains.label_entity_id.value(l.unit.chainIndex[l.element]); })\r\n};\r\nvar coarse = {\r\n    key: atom.key,\r\n    entityKey: p(function (l) { return !Unit.isCoarse(l.unit) ? notCoarse() : l.unit.coarseElements.entityKey[l.element]; }),\r\n    x: atom.x,\r\n    y: atom.y,\r\n    z: atom.z,\r\n    asym_id: p(function (l) { return !Unit.isCoarse(l.unit) ? notCoarse() : l.unit.coarseElements.asym_id.value(l.element); }),\r\n    seq_id_begin: p(function (l) { return !Unit.isCoarse(l.unit) ? notCoarse() : l.unit.coarseElements.seq_id_begin.value(l.element); }),\r\n    seq_id_end: p(function (l) { return !Unit.isCoarse(l.unit) ? notCoarse() : l.unit.coarseElements.seq_id_end.value(l.element); }),\r\n    sphere_radius: p(function (l) { return !Unit.isSpheres(l.unit) ? notCoarse('spheres') : l.unit.coarseConformation.radius[l.element]; }),\r\n    sphere_rmsf: p(function (l) { return !Unit.isSpheres(l.unit) ? notCoarse('spheres') : l.unit.coarseConformation.rmsf[l.element]; }),\r\n    gaussian_weight: p(function (l) { return !Unit.isGaussians(l.unit) ? notCoarse('gaussians') : l.unit.coarseConformation.weight[l.element]; }),\r\n    gaussian_covariance_matrix: p(function (l) { return !Unit.isGaussians(l.unit) ? notCoarse('gaussians') : l.unit.coarseConformation.covariance_matrix[l.element]; })\r\n};\r\nfunction eK(l) {\r\n    switch (l.unit.kind) {\r\n        case 0 /* Atomic */:\r\n            return l.unit.model.atomicHierarchy.index.getEntityFromChain(l.unit.chainIndex[l.element]);\r\n        case 1 /* Spheres */:\r\n            return l.unit.model.coarseHierarchy.spheres.entityKey[l.element];\r\n        case 2 /* Gaussians */:\r\n            return l.unit.model.coarseHierarchy.gaussians.entityKey[l.element];\r\n    }\r\n}\r\nvar entity = {\r\n    key: p(eK),\r\n    id: p(function (l) { return l.unit.model.entities.data.id.value(eK(l)); }),\r\n    type: p(function (l) { return l.unit.model.entities.data.type.value(eK(l)); }),\r\n    src_method: p(function (l) { return l.unit.model.entities.data.src_method.value(eK(l)); }),\r\n    pdbx_description: p(function (l) { return l.unit.model.entities.data.pdbx_description.value(eK(l)); }),\r\n    formula_weight: p(function (l) { return l.unit.model.entities.data.formula_weight.value(eK(l)); }),\r\n    pdbx_number_of_molecules: p(function (l) { return l.unit.model.entities.data.pdbx_number_of_molecules.value(eK(l)); }),\r\n    details: p(function (l) { return l.unit.model.entities.data.details.value(eK(l)); }),\r\n    pdbx_mutation: p(function (l) { return l.unit.model.entities.data.pdbx_mutation.value(eK(l)); }),\r\n    pdbx_fragment: p(function (l) { return l.unit.model.entities.data.pdbx_fragment.value(eK(l)); }),\r\n    pdbx_ec: p(function (l) { return l.unit.model.entities.data.pdbx_ec.value(eK(l)); }),\r\n    subtype: p(function (l) { return l.unit.model.entities.subtype.value(eK(l)); }),\r\n    prd_id: p(function (l) { return l.unit.model.entities.prd_id.value(eK(l)); }),\r\n};\r\nvar _emptyList = [];\r\nvar unit = {\r\n    id: p(function (l) { return l.unit.id; }),\r\n    chainGroupId: p(function (l) { return l.unit.chainGroupId; }),\r\n    multiChain: p(function (l) { return Unit.Traits.is(l.unit.traits, 1 /* MultiChain */); }),\r\n    object_primitive: p(function (l) { return l.unit.objectPrimitive; }),\r\n    operator_name: p(function (l) { return l.unit.conformation.operator.name; }),\r\n    model_index: p(function (l) { return l.unit.model.modelNum; }),\r\n    model_label: p(function (l) { return l.unit.model.label; }),\r\n    model_entry_id: p(function (l) { return l.unit.model.entryId; }),\r\n    hkl: p(function (l) { return l.unit.conformation.operator.hkl; }),\r\n    spgrOp: p(function (l) { return l.unit.conformation.operator.spgrOp; }),\r\n    model_num: p(function (l) { return l.unit.model.modelNum; }),\r\n    pdbx_struct_assembly_id: p(function (l) { var _a; return ((_a = l.unit.conformation.operator.assembly) === null || _a === void 0 ? void 0 : _a.id) || SymmetryOperator.DefaultName; }),\r\n    pdbx_struct_oper_list_ids: p(function (l) { var _a; return ((_a = l.unit.conformation.operator.assembly) === null || _a === void 0 ? void 0 : _a.operList) || _emptyList; }),\r\n    struct_ncs_oper_id: p(function (l) { return l.unit.conformation.operator.ncsId; }),\r\n};\r\nvar StructureProperties = {\r\n    constant: constant,\r\n    atom: atom,\r\n    residue: residue,\r\n    chain: chain,\r\n    entity: entity,\r\n    unit: unit,\r\n    coarse: coarse\r\n};\r\nexport { StructureProperties };\r\n//# sourceMappingURL=properties.js.map"]},"metadata":{},"sourceType":"module"}