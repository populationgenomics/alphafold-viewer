{"ast":null,"code":"/**\r\n * Copyright (c) 2017-2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __awaiter, __generator } from \"tslib\";\nimport { ExecuteObservable, ExecuteObservableChild, ExecuteInContext } from './execution/observable';\nimport { SyncRuntimeContext } from './execution/synchronous';\nimport { idFactory } from '../mol-util/id-factory';\nvar Task;\n\n(function (Task) {\n  var Impl =\n  /** @class */\n  function () {\n    function Impl(name, f, onAbort) {\n      this.name = name;\n      this.f = f;\n      this.onAbort = onAbort;\n      this.id = getNextId();\n    }\n\n    Impl.prototype.run = function (observer, updateRateMs) {\n      if (updateRateMs === void 0) {\n        updateRateMs = 250;\n      }\n\n      if (observer) return ExecuteObservable(this, observer, updateRateMs);\n      return this.f(SyncRuntimeContext);\n    };\n\n    Impl.prototype.runAsChild = function (ctx, progress) {\n      if (ctx.isSynchronous) return this.f(SyncRuntimeContext);\n      return ExecuteObservableChild(ctx, this, progress);\n    };\n\n    Impl.prototype.runInContext = function (ctx) {\n      if (ctx.isSynchronous) return this.f(SyncRuntimeContext);\n      return ExecuteInContext(ctx, this);\n    };\n\n    return Impl;\n  }();\n\n  function is(t) {\n    var _t = t;\n    return !!t && typeof _t.id === 'number' && typeof _t.name === 'string' && !!_t.run;\n  }\n\n  Task.is = is;\n\n  function isAbort(e) {\n    return !!e && !!e.isAborted;\n  }\n\n  Task.isAbort = isAbort;\n\n  function Aborted(reason) {\n    return {\n      isAborted: true,\n      reason: reason,\n      toString: function () {\n        return \"Aborted\" + (reason ? ': ' + reason : '');\n      }\n    };\n  }\n\n  Task.Aborted = Aborted;\n\n  function create(name, f, onAbort) {\n    return new Impl(name, f, onAbort);\n  }\n\n  Task.create = create;\n\n  function constant(name, value) {\n    var _this = this;\n\n    return create(name, function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2\n          /*return*/\n          , value];\n        });\n      });\n    });\n  }\n\n  Task.constant = constant;\n\n  function empty() {\n    var _this = this;\n\n    return create('', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    });\n  }\n\n  Task.empty = empty;\n\n  function fail(name, reason) {\n    var _this = this;\n\n    return create(name, function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          throw new Error(reason);\n        });\n      });\n    });\n  }\n\n  Task.fail = fail;\n\n  function resolveInContext(object, ctx) {\n    if (is(object)) return ctx ? object.runInContext(ctx) : object.run();\n    return object;\n  }\n\n  Task.resolveInContext = resolveInContext;\n  var getNextId = idFactory(0, 0x3fffffff);\n})(Task || (Task = {}));\n\nexport { Task };","map":{"version":3,"sources":["../../src/mol-task/task.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2017-2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { ExecuteObservable, ExecuteObservableChild, ExecuteInContext } from './execution/observable';\r\nimport { SyncRuntimeContext } from './execution/synchronous';\r\nimport { idFactory } from '../mol-util/id-factory';\r\nvar Task;\r\n(function (Task) {\r\n    var Impl = /** @class */ (function () {\r\n        function Impl(name, f, onAbort) {\r\n            this.name = name;\r\n            this.f = f;\r\n            this.onAbort = onAbort;\r\n            this.id = getNextId();\r\n        }\r\n        Impl.prototype.run = function (observer, updateRateMs) {\r\n            if (updateRateMs === void 0) { updateRateMs = 250; }\r\n            if (observer)\r\n                return ExecuteObservable(this, observer, updateRateMs);\r\n            return this.f(SyncRuntimeContext);\r\n        };\r\n        Impl.prototype.runAsChild = function (ctx, progress) {\r\n            if (ctx.isSynchronous)\r\n                return this.f(SyncRuntimeContext);\r\n            return ExecuteObservableChild(ctx, this, progress);\r\n        };\r\n        Impl.prototype.runInContext = function (ctx) {\r\n            if (ctx.isSynchronous)\r\n                return this.f(SyncRuntimeContext);\r\n            return ExecuteInContext(ctx, this);\r\n        };\r\n        return Impl;\r\n    }());\r\n    function is(t) {\r\n        var _t = t;\r\n        return !!t && typeof _t.id === 'number' && typeof _t.name === 'string' && !!_t.run;\r\n    }\r\n    Task.is = is;\r\n    function isAbort(e) { return !!e && !!e.isAborted; }\r\n    Task.isAbort = isAbort;\r\n    function Aborted(reason) { return { isAborted: true, reason: reason, toString: function () { return \"Aborted\" + (reason ? ': ' + reason : ''); } }; }\r\n    Task.Aborted = Aborted;\r\n    function create(name, f, onAbort) {\r\n        return new Impl(name, f, onAbort);\r\n    }\r\n    Task.create = create;\r\n    function constant(name, value) {\r\n        var _this = this;\r\n        return create(name, function (ctx) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n            return [2 /*return*/, value];\r\n        }); }); });\r\n    }\r\n    Task.constant = constant;\r\n    function empty() {\r\n        var _this = this;\r\n        return create('', function (ctx) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n            return [2 /*return*/];\r\n        }); }); });\r\n    }\r\n    Task.empty = empty;\r\n    function fail(name, reason) {\r\n        var _this = this;\r\n        return create(name, function (ctx) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n            throw new Error(reason);\r\n        }); }); });\r\n    }\r\n    Task.fail = fail;\r\n    function resolveInContext(object, ctx) {\r\n        if (is(object))\r\n            return ctx ? object.runInContext(ctx) : object.run();\r\n        return object;\r\n    }\r\n    Task.resolveInContext = resolveInContext;\r\n    var getNextId = idFactory(0, 0x3fffffff);\r\n})(Task || (Task = {}));\r\nexport { Task };\r\n//# sourceMappingURL=task.js.map"]},"metadata":{},"sourceType":"module"}