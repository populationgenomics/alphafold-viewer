{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { Color, ColorMap } from '../../mol-util/color';\nimport { StructureElement, Unit, Bond } from '../../mol-model/structure';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { TableLegend } from '../../mol-util/legend';\nimport { getAdjustedColorMap } from '../../mol-util/color/color';\nimport { ChainIdColorTheme, ChainIdColorThemeParams } from './chain-id';\nimport { OperatorNameColorThemeParams, OperatorNameColorTheme } from './operator-name'; // from Jmol http://jmol.sourceforge.net/jscolors/ (or 0xFFFFFF)\n\nexport var ElementSymbolColors = ColorMap({\n  'H': 0xFFFFFF,\n  'D': 0xFFFFC0,\n  'T': 0xFFFFA0,\n  'HE': 0xD9FFFF,\n  'LI': 0xCC80FF,\n  'BE': 0xC2FF00,\n  'B': 0xFFB5B5,\n  'C': 0x909090,\n  'N': 0x3050F8,\n  'O': 0xFF0D0D,\n  'F': 0x90E050,\n  'NE': 0xB3E3F5,\n  'NA': 0xAB5CF2,\n  'MG': 0x8AFF00,\n  'AL': 0xBFA6A6,\n  'SI': 0xF0C8A0,\n  'P': 0xFF8000,\n  'S': 0xFFFF30,\n  'CL': 0x1FF01F,\n  'AR': 0x80D1E3,\n  'K': 0x8F40D4,\n  'CA': 0x3DFF00,\n  'SC': 0xE6E6E6,\n  'TI': 0xBFC2C7,\n  'V': 0xA6A6AB,\n  'CR': 0x8A99C7,\n  'MN': 0x9C7AC7,\n  'FE': 0xE06633,\n  'CO': 0xF090A0,\n  'NI': 0x50D050,\n  'CU': 0xC88033,\n  'ZN': 0x7D80B0,\n  'GA': 0xC28F8F,\n  'GE': 0x668F8F,\n  'AS': 0xBD80E3,\n  'SE': 0xFFA100,\n  'BR': 0xA62929,\n  'KR': 0x5CB8D1,\n  'RB': 0x702EB0,\n  'SR': 0x00FF00,\n  'Y': 0x94FFFF,\n  'ZR': 0x94E0E0,\n  'NB': 0x73C2C9,\n  'MO': 0x54B5B5,\n  'TC': 0x3B9E9E,\n  'RU': 0x248F8F,\n  'RH': 0x0A7D8C,\n  'PD': 0x006985,\n  'AG': 0xC0C0C0,\n  'CD': 0xFFD98F,\n  'IN': 0xA67573,\n  'SN': 0x668080,\n  'SB': 0x9E63B5,\n  'TE': 0xD47A00,\n  'I': 0x940094,\n  'XE': 0x940094,\n  'CS': 0x57178F,\n  'BA': 0x00C900,\n  'LA': 0x70D4FF,\n  'CE': 0xFFFFC7,\n  'PR': 0xD9FFC7,\n  'ND': 0xC7FFC7,\n  'PM': 0xA3FFC7,\n  'SM': 0x8FFFC7,\n  'EU': 0x61FFC7,\n  'GD': 0x45FFC7,\n  'TB': 0x30FFC7,\n  'DY': 0x1FFFC7,\n  'HO': 0x00FF9C,\n  'ER': 0x00E675,\n  'TM': 0x00D452,\n  'YB': 0x00BF38,\n  'LU': 0x00AB24,\n  'HF': 0x4DC2FF,\n  'TA': 0x4DA6FF,\n  'W': 0x2194D6,\n  'RE': 0x267DAB,\n  'OS': 0x266696,\n  'IR': 0x175487,\n  'PT': 0xD0D0E0,\n  'AU': 0xFFD123,\n  'HG': 0xB8B8D0,\n  'TL': 0xA6544D,\n  'PB': 0x575961,\n  'BI': 0x9E4FB5,\n  'PO': 0xAB5C00,\n  'AT': 0x754F45,\n  'RN': 0x428296,\n  'FR': 0x420066,\n  'RA': 0x007D00,\n  'AC': 0x70ABFA,\n  'TH': 0x00BAFF,\n  'PA': 0x00A1FF,\n  'U': 0x008FFF,\n  'NP': 0x0080FF,\n  'PU': 0x006BFF,\n  'AM': 0x545CF2,\n  'CM': 0x785CE3,\n  'BK': 0x8A4FE3,\n  'CF': 0xA136D4,\n  'ES': 0xB31FD4,\n  'FM': 0xB31FBA,\n  'MD': 0xB30DA6,\n  'NO': 0xBD0D87,\n  'LR': 0xC70066,\n  'RF': 0xCC0059,\n  'DB': 0xD1004F,\n  'SG': 0xD90045,\n  'BH': 0xE00038,\n  'HS': 0xE6002E,\n  'MT': 0xEB0026,\n  'DS': 0xFFFFFF,\n  'RG': 0xFFFFFF,\n  'CN': 0xFFFFFF,\n  'UUT': 0xFFFFFF,\n  'FL': 0xFFFFFF,\n  'UUP': 0xFFFFFF,\n  'LV': 0xFFFFFF,\n  'UUH': 0xFFFFFF\n});\nvar DefaultElementSymbolColor = Color(0xFFFFFF);\nvar Description = 'Assigns a color to every atom according to its chemical element.'; // TODO generalise `carbonColor` param to all themes?\n\nexport var ElementSymbolColorThemeParams = {\n  carbonColor: PD.MappedStatic('chain-id', {\n    'chain-id': PD.Group(__assign({}, ChainIdColorThemeParams)),\n    'operator-name': PD.Group(__assign({}, OperatorNameColorThemeParams)),\n    'element-symbol': PD.Group({})\n  }, {\n    description: 'Use chain-id coloring for carbon atoms.'\n  }),\n  saturation: PD.Numeric(0, {\n    min: -6,\n    max: 6,\n    step: 0.1\n  }),\n  lightness: PD.Numeric(0.2, {\n    min: -6,\n    max: 6,\n    step: 0.1\n  })\n};\nexport function getElementSymbolColorThemeParams(ctx) {\n  return ElementSymbolColorThemeParams; // TODO return copy\n}\nexport function elementSymbolColor(colorMap, element) {\n  var c = colorMap[element];\n  return c === undefined ? DefaultElementSymbolColor : c;\n}\nexport function ElementSymbolColorTheme(ctx, props) {\n  var colorMap = getAdjustedColorMap(ElementSymbolColors, props.saturation, props.lightness);\n  var carbonColor = props.carbonColor.name === 'chain-id' ? ChainIdColorTheme(ctx, props.carbonColor.params).color : props.carbonColor.name === 'operator-name' ? OperatorNameColorTheme(ctx, props.carbonColor.params).color : undefined;\n\n  function elementColor(element, location) {\n    return carbonColor && element === 'C' ? carbonColor(location, false) : elementSymbolColor(colorMap, element);\n  }\n\n  function color(location) {\n    if (StructureElement.Location.is(location)) {\n      if (Unit.isAtomic(location.unit)) {\n        var type_symbol = location.unit.model.atomicHierarchy.atoms.type_symbol;\n        return elementColor(type_symbol.value(location.element), location);\n      }\n    } else if (Bond.isLocation(location)) {\n      if (Unit.isAtomic(location.aUnit)) {\n        var type_symbol = location.aUnit.model.atomicHierarchy.atoms.type_symbol;\n        var element = type_symbol.value(location.aUnit.elements[location.aIndex]);\n        return elementColor(element, location);\n      }\n    }\n\n    return DefaultElementSymbolColor;\n  }\n\n  var granularity = props.carbonColor.name === 'operator-name' ? 'groupInstance' : 'group';\n  return {\n    factory: ElementSymbolColorTheme,\n    granularity: granularity,\n    preferSmoothing: true,\n    color: color,\n    props: props,\n    description: Description,\n    legend: TableLegend(Object.keys(ElementSymbolColors).map(function (name) {\n      return [name, ElementSymbolColors[name]];\n    }))\n  };\n}\nexport var ElementSymbolColorThemeProvider = {\n  name: 'element-symbol',\n  label: 'Element Symbol',\n  category: \"Atom Property\"\n  /* Atom */\n  ,\n  factory: ElementSymbolColorTheme,\n  getParams: getElementSymbolColorThemeParams,\n  defaultValues: PD.getDefaultValues(ElementSymbolColorThemeParams),\n  isApplicable: function (ctx) {\n    return !!ctx.structure;\n  }\n};","map":{"version":3,"sources":["../../../src/mol-theme/color/element-symbol.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { Color, ColorMap } from '../../mol-util/color';\r\nimport { StructureElement, Unit, Bond } from '../../mol-model/structure';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { TableLegend } from '../../mol-util/legend';\r\nimport { getAdjustedColorMap } from '../../mol-util/color/color';\r\nimport { ChainIdColorTheme, ChainIdColorThemeParams } from './chain-id';\r\nimport { OperatorNameColorThemeParams, OperatorNameColorTheme } from './operator-name';\r\n// from Jmol http://jmol.sourceforge.net/jscolors/ (or 0xFFFFFF)\r\nexport var ElementSymbolColors = ColorMap({\r\n    'H': 0xFFFFFF, 'D': 0xFFFFC0, 'T': 0xFFFFA0, 'HE': 0xD9FFFF, 'LI': 0xCC80FF, 'BE': 0xC2FF00, 'B': 0xFFB5B5, 'C': 0x909090, 'N': 0x3050F8, 'O': 0xFF0D0D, 'F': 0x90E050, 'NE': 0xB3E3F5, 'NA': 0xAB5CF2, 'MG': 0x8AFF00, 'AL': 0xBFA6A6, 'SI': 0xF0C8A0, 'P': 0xFF8000, 'S': 0xFFFF30, 'CL': 0x1FF01F, 'AR': 0x80D1E3, 'K': 0x8F40D4, 'CA': 0x3DFF00, 'SC': 0xE6E6E6, 'TI': 0xBFC2C7, 'V': 0xA6A6AB, 'CR': 0x8A99C7, 'MN': 0x9C7AC7, 'FE': 0xE06633, 'CO': 0xF090A0, 'NI': 0x50D050, 'CU': 0xC88033, 'ZN': 0x7D80B0, 'GA': 0xC28F8F, 'GE': 0x668F8F, 'AS': 0xBD80E3, 'SE': 0xFFA100, 'BR': 0xA62929, 'KR': 0x5CB8D1, 'RB': 0x702EB0, 'SR': 0x00FF00, 'Y': 0x94FFFF, 'ZR': 0x94E0E0, 'NB': 0x73C2C9, 'MO': 0x54B5B5, 'TC': 0x3B9E9E, 'RU': 0x248F8F, 'RH': 0x0A7D8C, 'PD': 0x006985, 'AG': 0xC0C0C0, 'CD': 0xFFD98F, 'IN': 0xA67573, 'SN': 0x668080, 'SB': 0x9E63B5, 'TE': 0xD47A00, 'I': 0x940094, 'XE': 0x940094, 'CS': 0x57178F, 'BA': 0x00C900, 'LA': 0x70D4FF, 'CE': 0xFFFFC7, 'PR': 0xD9FFC7, 'ND': 0xC7FFC7, 'PM': 0xA3FFC7, 'SM': 0x8FFFC7, 'EU': 0x61FFC7, 'GD': 0x45FFC7, 'TB': 0x30FFC7, 'DY': 0x1FFFC7, 'HO': 0x00FF9C, 'ER': 0x00E675, 'TM': 0x00D452, 'YB': 0x00BF38, 'LU': 0x00AB24, 'HF': 0x4DC2FF, 'TA': 0x4DA6FF, 'W': 0x2194D6, 'RE': 0x267DAB, 'OS': 0x266696, 'IR': 0x175487, 'PT': 0xD0D0E0, 'AU': 0xFFD123, 'HG': 0xB8B8D0, 'TL': 0xA6544D, 'PB': 0x575961, 'BI': 0x9E4FB5, 'PO': 0xAB5C00, 'AT': 0x754F45, 'RN': 0x428296, 'FR': 0x420066, 'RA': 0x007D00, 'AC': 0x70ABFA, 'TH': 0x00BAFF, 'PA': 0x00A1FF, 'U': 0x008FFF, 'NP': 0x0080FF, 'PU': 0x006BFF, 'AM': 0x545CF2, 'CM': 0x785CE3, 'BK': 0x8A4FE3, 'CF': 0xA136D4, 'ES': 0xB31FD4, 'FM': 0xB31FBA, 'MD': 0xB30DA6, 'NO': 0xBD0D87, 'LR': 0xC70066, 'RF': 0xCC0059, 'DB': 0xD1004F, 'SG': 0xD90045, 'BH': 0xE00038, 'HS': 0xE6002E, 'MT': 0xEB0026, 'DS': 0xFFFFFF, 'RG': 0xFFFFFF, 'CN': 0xFFFFFF, 'UUT': 0xFFFFFF, 'FL': 0xFFFFFF, 'UUP': 0xFFFFFF, 'LV': 0xFFFFFF, 'UUH': 0xFFFFFF\r\n});\r\nvar DefaultElementSymbolColor = Color(0xFFFFFF);\r\nvar Description = 'Assigns a color to every atom according to its chemical element.';\r\n// TODO generalise `carbonColor` param to all themes?\r\nexport var ElementSymbolColorThemeParams = {\r\n    carbonColor: PD.MappedStatic('chain-id', {\r\n        'chain-id': PD.Group(__assign({}, ChainIdColorThemeParams)),\r\n        'operator-name': PD.Group(__assign({}, OperatorNameColorThemeParams)),\r\n        'element-symbol': PD.Group({})\r\n    }, { description: 'Use chain-id coloring for carbon atoms.' }),\r\n    saturation: PD.Numeric(0, { min: -6, max: 6, step: 0.1 }),\r\n    lightness: PD.Numeric(0.2, { min: -6, max: 6, step: 0.1 })\r\n};\r\nexport function getElementSymbolColorThemeParams(ctx) {\r\n    return ElementSymbolColorThemeParams; // TODO return copy\r\n}\r\nexport function elementSymbolColor(colorMap, element) {\r\n    var c = colorMap[element];\r\n    return c === undefined ? DefaultElementSymbolColor : c;\r\n}\r\nexport function ElementSymbolColorTheme(ctx, props) {\r\n    var colorMap = getAdjustedColorMap(ElementSymbolColors, props.saturation, props.lightness);\r\n    var carbonColor = props.carbonColor.name === 'chain-id'\r\n        ? ChainIdColorTheme(ctx, props.carbonColor.params).color\r\n        : props.carbonColor.name === 'operator-name'\r\n            ? OperatorNameColorTheme(ctx, props.carbonColor.params).color\r\n            : undefined;\r\n    function elementColor(element, location) {\r\n        return (carbonColor && element === 'C')\r\n            ? carbonColor(location, false)\r\n            : elementSymbolColor(colorMap, element);\r\n    }\r\n    function color(location) {\r\n        if (StructureElement.Location.is(location)) {\r\n            if (Unit.isAtomic(location.unit)) {\r\n                var type_symbol = location.unit.model.atomicHierarchy.atoms.type_symbol;\r\n                return elementColor(type_symbol.value(location.element), location);\r\n            }\r\n        }\r\n        else if (Bond.isLocation(location)) {\r\n            if (Unit.isAtomic(location.aUnit)) {\r\n                var type_symbol = location.aUnit.model.atomicHierarchy.atoms.type_symbol;\r\n                var element = type_symbol.value(location.aUnit.elements[location.aIndex]);\r\n                return elementColor(element, location);\r\n            }\r\n        }\r\n        return DefaultElementSymbolColor;\r\n    }\r\n    var granularity = props.carbonColor.name === 'operator-name' ? 'groupInstance' : 'group';\r\n    return {\r\n        factory: ElementSymbolColorTheme,\r\n        granularity: granularity,\r\n        preferSmoothing: true,\r\n        color: color,\r\n        props: props,\r\n        description: Description,\r\n        legend: TableLegend(Object.keys(ElementSymbolColors).map(function (name) {\r\n            return [name, ElementSymbolColors[name]];\r\n        }))\r\n    };\r\n}\r\nexport var ElementSymbolColorThemeProvider = {\r\n    name: 'element-symbol',\r\n    label: 'Element Symbol',\r\n    category: \"Atom Property\" /* Atom */,\r\n    factory: ElementSymbolColorTheme,\r\n    getParams: getElementSymbolColorThemeParams,\r\n    defaultValues: PD.getDefaultValues(ElementSymbolColorThemeParams),\r\n    isApplicable: function (ctx) { return !!ctx.structure; }\r\n};\r\n//# sourceMappingURL=element-symbol.js.map"]},"metadata":{},"sourceType":"module"}