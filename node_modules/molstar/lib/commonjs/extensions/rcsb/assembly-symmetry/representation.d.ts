/**
 * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 */
import { ParamDefinition as PD } from '../../../mol-util/param-definition';
import { Color } from '../../../mol-util/color';
import { Representation, RepresentationContext, RepresentationParamsGetter } from '../../../mol-repr/representation';
import { Structure } from '../../../mol-model/structure';
export declare const AssemblySymmetryParams: {
    visuals: PD.MultiSelect<"axes" | "cage">;
    cageColor: PD.Color;
    scale: PD.Numeric;
    doubleSided: PD.BooleanParam;
    flipSided: PD.BooleanParam;
    flatShaded: PD.BooleanParam;
    ignoreLight: PD.BooleanParam;
    xrayShaded: PD.BooleanParam;
    alpha: PD.Numeric;
    quality: PD.Select<"custom" | "auto" | "highest" | "higher" | "high" | "medium" | "low" | "lower" | "lowest">;
    axesColor: PD.Mapped<PD.NamedParams<PD.Normalize<unknown>, "byOrder"> | PD.NamedParams<PD.Normalize<{
        colorValue: Color;
    }>, "uniform">>;
};
export declare type AssemblySymmetryParams = typeof AssemblySymmetryParams;
export declare type AssemblySymmetryProps = PD.Values<AssemblySymmetryParams>;
export declare type AssemblySymmetryRepresentation = Representation<Structure, AssemblySymmetryParams>;
export declare function AssemblySymmetryRepresentation(ctx: RepresentationContext, getParams: RepresentationParamsGetter<Structure, AssemblySymmetryParams>): AssemblySymmetryRepresentation;
