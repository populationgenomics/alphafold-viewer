{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nexport var halfPI = Math.PI / 2;\nexport var PiDiv180 = Math.PI / 180;\nexport function degToRad(deg) {\n  return deg * PiDiv180; // deg * Math.PI / 180\n}\nexport function radToDeg(rad) {\n  return rad / PiDiv180; // rad * 180 / Math.PI\n}\nexport function isPowerOfTwo(x) {\n  return x !== 0 && (x & x - 1) === 0;\n}\n/** return the value that has the largest absolute value */\n\nexport function absMax() {\n  var values = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    values[_i] = arguments[_i];\n  }\n\n  var max = 0;\n  var absMax = 0;\n\n  for (var i = 0, il = values.length; i < il; ++i) {\n    var value = values[i];\n    var abs = Math.abs(value);\n\n    if (abs > absMax) {\n      max = value;\n      absMax = abs;\n    }\n  }\n\n  return max;\n}\n/** Length of an arc with angle in radians */\n\nexport function arcLength(angle, radius) {\n  return angle * radius;\n}\n/** Create an outward spiral of given `radius` on a 2d grid */\n\nexport function spiral2d(radius) {\n  var _a;\n\n  var x = 0;\n  var y = 0;\n  var delta = [0, -1];\n  var size = radius * 2 + 1;\n  var halfSize = size / 2;\n  var out = [];\n\n  for (var i = Math.pow(size, 2); i > 0; --i) {\n    if (-halfSize < x && x <= halfSize && -halfSize < y && y <= halfSize) {\n      out.push([x, y]);\n    }\n\n    if (x === y || x < 0 && x === -y || x > 0 && x === 1 - y) {\n      _a = [-delta[1], delta[0]], delta[0] = _a[0], delta[1] = _a[1]; // change direction\n    }\n\n    x += delta[0];\n    y += delta[1];\n  }\n\n  return out;\n}","map":{"version":3,"sources":["../../src/mol-math/misc.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,OAAO,IAAM,MAAM,GAAG,IAAI,CAAC,EAAL,GAAU,CAAzB;AACP,OAAO,IAAM,QAAQ,GAAG,IAAI,CAAC,EAAL,GAAU,GAA3B;AAEP,OAAM,SAAU,QAAV,CAAmB,GAAnB,EAA8B;AAChC,SAAO,GAAG,GAAG,QAAb,CADgC,CACT;AAC1B;AAED,OAAM,SAAU,QAAV,CAAmB,GAAnB,EAA8B;AAChC,SAAO,GAAG,GAAG,QAAb,CADgC,CACT;AAC1B;AAED,OAAM,SAAU,YAAV,CAAuB,CAAvB,EAAgC;AAClC,SAAQ,CAAC,KAAK,CAAP,IAAa,CAAC,CAAC,GAAI,CAAC,GAAG,CAAV,MAAkB,CAAtC;AACH;AAED;;AACA,OAAM,SAAU,MAAV,GAAgB;AAAC,MAAA,MAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAmB;AAAnB,IAAA,MAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACnB,MAAI,GAAG,GAAG,CAAV;AACA,MAAI,MAAM,GAAG,CAAb;;AACA,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,MAAM,CAAC,MAA5B,EAAoC,CAAC,GAAG,EAAxC,EAA4C,EAAE,CAA9C,EAAiD;AAC7C,QAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,QAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,KAAT,CAAZ;;AACA,QAAI,GAAG,GAAG,MAAV,EAAkB;AACd,MAAA,GAAG,GAAG,KAAN;AACA,MAAA,MAAM,GAAG,GAAT;AACH;AACJ;;AACD,SAAO,GAAP;AACH;AAED;;AACA,OAAM,SAAU,SAAV,CAAoB,KAApB,EAAmC,MAAnC,EAAiD;AACnD,SAAO,KAAK,GAAG,MAAf;AACH;AAED;;AACA,OAAM,SAAU,QAAV,CAAmB,MAAnB,EAAiC;;;AACnC,MAAI,CAAC,GAAG,CAAR;AACA,MAAI,CAAC,GAAG,CAAR;AACA,MAAM,KAAK,GAAG,CAAC,CAAD,EAAI,CAAC,CAAL,CAAd;AACA,MAAM,IAAI,GAAG,MAAM,GAAG,CAAT,GAAa,CAA1B;AACA,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAxB;AACA,MAAM,GAAG,GAAuB,EAAhC;;AAEA,OAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAb,EAAgC,CAAC,GAAG,CAApC,EAAuC,EAAE,CAAzC,EAA4C;AACxC,QAAK,CAAC,QAAD,GAAY,CAAZ,IAAiB,CAAC,IAAI,QAAvB,IAAqC,CAAC,QAAD,GAAY,CAAZ,IAAiB,CAAC,IAAI,QAA/D,EAA0E;AACtE,MAAA,GAAG,CAAC,IAAJ,CAAS,CAAC,CAAD,EAAI,CAAJ,CAAT;AACH;;AAED,QAAI,CAAC,KAAK,CAAN,IAAY,CAAC,GAAG,CAAJ,IAAS,CAAC,KAAK,CAAC,CAA5B,IAAmC,CAAC,GAAG,CAAJ,IAAS,CAAC,KAAK,IAAI,CAA1D,EAA8D;AAC1D,MAAA,EAAA,GAAuB,CAAC,CAAC,KAAK,CAAC,CAAD,CAAP,EAAY,KAAK,CAAC,CAAD,CAAjB,CAAvB,EAAC,KAAK,CAAC,CAAD,CAAL,GAAQ,EAAA,CAAA,CAAA,CAAT,EAAW,KAAK,CAAC,CAAD,CAAL,GAAQ,EAAA,CAAA,CAAA,CAAnB,CAD0D,CACZ;AACjD;;AAED,IAAA,CAAC,IAAI,KAAK,CAAC,CAAD,CAAV;AACA,IAAA,CAAC,IAAI,KAAK,CAAC,CAAD,CAAV;AACH;;AACD,SAAO,GAAP;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nexport var halfPI = Math.PI / 2;\r\nexport var PiDiv180 = Math.PI / 180;\r\nexport function degToRad(deg) {\r\n    return deg * PiDiv180; // deg * Math.PI / 180\r\n}\r\nexport function radToDeg(rad) {\r\n    return rad / PiDiv180; // rad * 180 / Math.PI\r\n}\r\nexport function isPowerOfTwo(x) {\r\n    return (x !== 0) && (x & (x - 1)) === 0;\r\n}\r\n/** return the value that has the largest absolute value */\r\nexport function absMax() {\r\n    var values = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        values[_i] = arguments[_i];\r\n    }\r\n    var max = 0;\r\n    var absMax = 0;\r\n    for (var i = 0, il = values.length; i < il; ++i) {\r\n        var value = values[i];\r\n        var abs = Math.abs(value);\r\n        if (abs > absMax) {\r\n            max = value;\r\n            absMax = abs;\r\n        }\r\n    }\r\n    return max;\r\n}\r\n/** Length of an arc with angle in radians */\r\nexport function arcLength(angle, radius) {\r\n    return angle * radius;\r\n}\r\n/** Create an outward spiral of given `radius` on a 2d grid */\r\nexport function spiral2d(radius) {\r\n    var _a;\r\n    var x = 0;\r\n    var y = 0;\r\n    var delta = [0, -1];\r\n    var size = radius * 2 + 1;\r\n    var halfSize = size / 2;\r\n    var out = [];\r\n    for (var i = Math.pow(size, 2); i > 0; --i) {\r\n        if ((-halfSize < x && x <= halfSize) && (-halfSize < y && y <= halfSize)) {\r\n            out.push([x, y]);\r\n        }\r\n        if (x === y || (x < 0 && x === -y) || (x > 0 && x === 1 - y)) {\r\n            _a = [-delta[1], delta[0]], delta[0] = _a[0], delta[1] = _a[1]; // change direction\r\n        }\r\n        x += delta[0];\r\n        y += delta[1];\r\n    }\r\n    return out;\r\n}\r\n//# sourceMappingURL=misc.js.map"]},"metadata":{},"sourceType":"module"}