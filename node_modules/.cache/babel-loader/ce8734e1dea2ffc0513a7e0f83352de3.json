{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { idFactory } from '../../mol-util/id-factory';\nvar getNextBufferId = idFactory();\nexport function getUsageHint(gl, usageHint) {\n  switch (usageHint) {\n    case 'static':\n      return gl.STATIC_DRAW;\n\n    case 'dynamic':\n      return gl.DYNAMIC_DRAW;\n\n    case 'stream':\n      return gl.STREAM_DRAW;\n  }\n}\nexport function getDataType(gl, dataType) {\n  switch (dataType) {\n    case 'uint8':\n      return gl.UNSIGNED_BYTE;\n\n    case 'int8':\n      return gl.BYTE;\n\n    case 'uint16':\n      return gl.UNSIGNED_SHORT;\n\n    case 'int16':\n      return gl.SHORT;\n\n    case 'uint32':\n      return gl.UNSIGNED_INT;\n\n    case 'int32':\n      return gl.INT;\n\n    case 'float32':\n      return gl.FLOAT;\n  }\n}\n\nfunction dataTypeFromArray(gl, array) {\n  if (array instanceof Uint8Array) {\n    return gl.UNSIGNED_BYTE;\n  } else if (array instanceof Int8Array) {\n    return gl.BYTE;\n  } else if (array instanceof Uint16Array) {\n    return gl.UNSIGNED_SHORT;\n  } else if (array instanceof Int16Array) {\n    return gl.SHORT;\n  } else if (array instanceof Uint32Array) {\n    return gl.UNSIGNED_INT;\n  } else if (array instanceof Int32Array) {\n    return gl.INT;\n  } else if (array instanceof Float32Array) {\n    return gl.FLOAT;\n  } else {\n    throw new Error('Should nevver happen');\n  }\n}\n\nexport function getBufferType(gl, bufferType) {\n  switch (bufferType) {\n    case 'attribute':\n      return gl.ARRAY_BUFFER;\n\n    case 'elements':\n      return gl.ELEMENT_ARRAY_BUFFER;\n\n    case 'uniform':\n      return gl.UNIFORM_BUFFER;\n  }\n}\n\nfunction getBuffer(gl) {\n  var buffer = gl.createBuffer();\n\n  if (buffer === null) {\n    throw new Error('Could not create WebGL buffer');\n  }\n\n  return buffer;\n}\n\nfunction createBuffer(gl, array, usageHint, bufferType) {\n  var _buffer = getBuffer(gl);\n\n  var _usageHint = getUsageHint(gl, usageHint);\n\n  var _bufferType = getBufferType(gl, bufferType);\n\n  var _dataType = dataTypeFromArray(gl, array);\n\n  var _bpe = array.BYTES_PER_ELEMENT;\n  var _length = array.length;\n\n  function updateData(array) {\n    gl.bindBuffer(_bufferType, _buffer);\n    gl.bufferData(_bufferType, array, _usageHint);\n  }\n\n  updateData(array);\n  var destroyed = false;\n  return {\n    id: getNextBufferId(),\n    _usageHint: _usageHint,\n    _bufferType: _bufferType,\n    _dataType: _dataType,\n    _bpe: _bpe,\n    length: _length,\n    getBuffer: function () {\n      return _buffer;\n    },\n    updateData: updateData,\n    updateSubData: function (array, offset, count) {\n      gl.bindBuffer(_bufferType, _buffer);\n\n      if (count - offset === array.length) {\n        gl.bufferSubData(_bufferType, 0, array);\n      } else {\n        gl.bufferSubData(_bufferType, offset * _bpe, array.subarray(offset, offset + count));\n      }\n    },\n    reset: function () {\n      _buffer = getBuffer(gl);\n      updateData(array);\n    },\n    destroy: function () {\n      if (destroyed) return;\n      gl.deleteBuffer(_buffer);\n      destroyed = true;\n    }\n  };\n}\n\nexport function getAttribType(gl, kind, itemSize) {\n  switch (kind) {\n    case 'int32':\n      switch (itemSize) {\n        case 1:\n          return gl.INT;\n\n        case 2:\n          return gl.INT_VEC2;\n\n        case 3:\n          return gl.INT_VEC3;\n\n        case 4:\n          return gl.INT_VEC4;\n      }\n\n      break;\n\n    case 'float32':\n      switch (itemSize) {\n        case 1:\n          return gl.FLOAT;\n\n        case 2:\n          return gl.FLOAT_VEC2;\n\n        case 3:\n          return gl.FLOAT_VEC3;\n\n        case 4:\n          return gl.FLOAT_VEC4;\n\n        case 16:\n          return gl.FLOAT_MAT4;\n      }\n\n      break;\n  }\n\n  throw new Error(\"unknown attribute type for kind '\" + kind + \"' and itemSize '\" + itemSize + \"'\");\n}\nexport function createAttributeBuffer(gl, extensions, array, itemSize, divisor, usageHint) {\n  if (usageHint === void 0) {\n    usageHint = 'dynamic';\n  }\n\n  var instancedArrays = extensions.instancedArrays;\n  var buffer = createBuffer(gl, array, usageHint, 'attribute');\n  var _bufferType = buffer._bufferType,\n      _dataType = buffer._dataType,\n      _bpe = buffer._bpe;\n  return __assign(__assign({}, buffer), {\n    bind: function (location) {\n      gl.bindBuffer(_bufferType, buffer.getBuffer());\n\n      if (itemSize === 16) {\n        for (var i = 0; i < 4; ++i) {\n          gl.enableVertexAttribArray(location + i);\n          gl.vertexAttribPointer(location + i, 4, _dataType, false, 4 * 4 * _bpe, i * 4 * _bpe);\n          instancedArrays.vertexAttribDivisor(location + i, divisor);\n        }\n      } else {\n        gl.enableVertexAttribArray(location);\n        gl.vertexAttribPointer(location, itemSize, _dataType, false, 0, 0);\n        instancedArrays.vertexAttribDivisor(location, divisor);\n      }\n    }\n  });\n}\nexport function createAttributeBuffers(ctx, schema, values) {\n  var buffers = [];\n  Object.keys(schema).forEach(function (k) {\n    var spec = schema[k];\n\n    if (spec.type === 'attribute') {\n      buffers[buffers.length] = [k, ctx.resources.attribute(values[k].ref.value, spec.itemSize, spec.divisor)];\n    }\n  });\n  return buffers;\n}\nexport function createElementsBuffer(gl, array, usageHint) {\n  if (usageHint === void 0) {\n    usageHint = 'static';\n  }\n\n  var buffer = createBuffer(gl, array, usageHint, 'elements');\n  return __assign(__assign({}, buffer), {\n    bind: function () {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.getBuffer());\n    }\n  });\n}","map":{"version":3,"sources":["../../../src/mol-gl/webgl/buffer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { idFactory } from '../../mol-util/id-factory';\r\nvar getNextBufferId = idFactory();\r\nexport function getUsageHint(gl, usageHint) {\r\n    switch (usageHint) {\r\n        case 'static': return gl.STATIC_DRAW;\r\n        case 'dynamic': return gl.DYNAMIC_DRAW;\r\n        case 'stream': return gl.STREAM_DRAW;\r\n    }\r\n}\r\nexport function getDataType(gl, dataType) {\r\n    switch (dataType) {\r\n        case 'uint8': return gl.UNSIGNED_BYTE;\r\n        case 'int8': return gl.BYTE;\r\n        case 'uint16': return gl.UNSIGNED_SHORT;\r\n        case 'int16': return gl.SHORT;\r\n        case 'uint32': return gl.UNSIGNED_INT;\r\n        case 'int32': return gl.INT;\r\n        case 'float32': return gl.FLOAT;\r\n    }\r\n}\r\nfunction dataTypeFromArray(gl, array) {\r\n    if (array instanceof Uint8Array) {\r\n        return gl.UNSIGNED_BYTE;\r\n    }\r\n    else if (array instanceof Int8Array) {\r\n        return gl.BYTE;\r\n    }\r\n    else if (array instanceof Uint16Array) {\r\n        return gl.UNSIGNED_SHORT;\r\n    }\r\n    else if (array instanceof Int16Array) {\r\n        return gl.SHORT;\r\n    }\r\n    else if (array instanceof Uint32Array) {\r\n        return gl.UNSIGNED_INT;\r\n    }\r\n    else if (array instanceof Int32Array) {\r\n        return gl.INT;\r\n    }\r\n    else if (array instanceof Float32Array) {\r\n        return gl.FLOAT;\r\n    }\r\n    else {\r\n        throw new Error('Should nevver happen');\r\n    }\r\n}\r\nexport function getBufferType(gl, bufferType) {\r\n    switch (bufferType) {\r\n        case 'attribute': return gl.ARRAY_BUFFER;\r\n        case 'elements': return gl.ELEMENT_ARRAY_BUFFER;\r\n        case 'uniform': return gl.UNIFORM_BUFFER;\r\n    }\r\n}\r\nfunction getBuffer(gl) {\r\n    var buffer = gl.createBuffer();\r\n    if (buffer === null) {\r\n        throw new Error('Could not create WebGL buffer');\r\n    }\r\n    return buffer;\r\n}\r\nfunction createBuffer(gl, array, usageHint, bufferType) {\r\n    var _buffer = getBuffer(gl);\r\n    var _usageHint = getUsageHint(gl, usageHint);\r\n    var _bufferType = getBufferType(gl, bufferType);\r\n    var _dataType = dataTypeFromArray(gl, array);\r\n    var _bpe = array.BYTES_PER_ELEMENT;\r\n    var _length = array.length;\r\n    function updateData(array) {\r\n        gl.bindBuffer(_bufferType, _buffer);\r\n        gl.bufferData(_bufferType, array, _usageHint);\r\n    }\r\n    updateData(array);\r\n    var destroyed = false;\r\n    return {\r\n        id: getNextBufferId(),\r\n        _usageHint: _usageHint,\r\n        _bufferType: _bufferType,\r\n        _dataType: _dataType,\r\n        _bpe: _bpe,\r\n        length: _length,\r\n        getBuffer: function () { return _buffer; },\r\n        updateData: updateData,\r\n        updateSubData: function (array, offset, count) {\r\n            gl.bindBuffer(_bufferType, _buffer);\r\n            if (count - offset === array.length) {\r\n                gl.bufferSubData(_bufferType, 0, array);\r\n            }\r\n            else {\r\n                gl.bufferSubData(_bufferType, offset * _bpe, array.subarray(offset, offset + count));\r\n            }\r\n        },\r\n        reset: function () {\r\n            _buffer = getBuffer(gl);\r\n            updateData(array);\r\n        },\r\n        destroy: function () {\r\n            if (destroyed)\r\n                return;\r\n            gl.deleteBuffer(_buffer);\r\n            destroyed = true;\r\n        }\r\n    };\r\n}\r\nexport function getAttribType(gl, kind, itemSize) {\r\n    switch (kind) {\r\n        case 'int32':\r\n            switch (itemSize) {\r\n                case 1: return gl.INT;\r\n                case 2: return gl.INT_VEC2;\r\n                case 3: return gl.INT_VEC3;\r\n                case 4: return gl.INT_VEC4;\r\n            }\r\n            break;\r\n        case 'float32':\r\n            switch (itemSize) {\r\n                case 1: return gl.FLOAT;\r\n                case 2: return gl.FLOAT_VEC2;\r\n                case 3: return gl.FLOAT_VEC3;\r\n                case 4: return gl.FLOAT_VEC4;\r\n                case 16: return gl.FLOAT_MAT4;\r\n            }\r\n            break;\r\n    }\r\n    throw new Error(\"unknown attribute type for kind '\" + kind + \"' and itemSize '\" + itemSize + \"'\");\r\n}\r\nexport function createAttributeBuffer(gl, extensions, array, itemSize, divisor, usageHint) {\r\n    if (usageHint === void 0) { usageHint = 'dynamic'; }\r\n    var instancedArrays = extensions.instancedArrays;\r\n    var buffer = createBuffer(gl, array, usageHint, 'attribute');\r\n    var _bufferType = buffer._bufferType, _dataType = buffer._dataType, _bpe = buffer._bpe;\r\n    return __assign(__assign({}, buffer), { bind: function (location) {\r\n            gl.bindBuffer(_bufferType, buffer.getBuffer());\r\n            if (itemSize === 16) {\r\n                for (var i = 0; i < 4; ++i) {\r\n                    gl.enableVertexAttribArray(location + i);\r\n                    gl.vertexAttribPointer(location + i, 4, _dataType, false, 4 * 4 * _bpe, i * 4 * _bpe);\r\n                    instancedArrays.vertexAttribDivisor(location + i, divisor);\r\n                }\r\n            }\r\n            else {\r\n                gl.enableVertexAttribArray(location);\r\n                gl.vertexAttribPointer(location, itemSize, _dataType, false, 0, 0);\r\n                instancedArrays.vertexAttribDivisor(location, divisor);\r\n            }\r\n        } });\r\n}\r\nexport function createAttributeBuffers(ctx, schema, values) {\r\n    var buffers = [];\r\n    Object.keys(schema).forEach(function (k) {\r\n        var spec = schema[k];\r\n        if (spec.type === 'attribute') {\r\n            buffers[buffers.length] = [k, ctx.resources.attribute(values[k].ref.value, spec.itemSize, spec.divisor)];\r\n        }\r\n    });\r\n    return buffers;\r\n}\r\nexport function createElementsBuffer(gl, array, usageHint) {\r\n    if (usageHint === void 0) { usageHint = 'static'; }\r\n    var buffer = createBuffer(gl, array, usageHint, 'elements');\r\n    return __assign(__assign({}, buffer), { bind: function () {\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.getBuffer());\r\n        } });\r\n}\r\n//# sourceMappingURL=buffer.js.map"]},"metadata":{},"sourceType":"module"}