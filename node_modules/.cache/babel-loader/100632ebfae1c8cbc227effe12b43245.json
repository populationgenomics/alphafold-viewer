{"ast":null,"code":"/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { PluginStateAnimation } from '../model';\n\nfunction setPartialSnapshot(plugin, entry, first) {\n  var _a;\n\n  if (first === void 0) {\n    first = false;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (!entry.snapshot.data) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , plugin.runTask(plugin.state.data.setSnapshot(entry.snapshot.data))];\n\n        case 1:\n          _b.sent();\n\n          _b.label = 2;\n\n        case 2:\n          if (entry.snapshot.camera) {\n            (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.requestCameraReset({\n              snapshot: entry.snapshot.camera.current,\n              durationMs: first || entry.snapshot.camera.transitionStyle === 'instant' ? 0 : entry.snapshot.camera.transitionDurationInMs\n            });\n          }\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexport var AnimateStateSnapshots = PluginStateAnimation.create({\n  name: 'built-in.animate-state-snapshots',\n  display: {\n    name: 'State Snapshots'\n  },\n  isExportable: true,\n  params: function () {\n    return {};\n  },\n  canApply: function (plugin) {\n    var entries = plugin.managers.snapshot.state.entries;\n\n    if (entries.size < 2) {\n      return {\n        canApply: false,\n        reason: 'At least 2 states required.'\n      };\n    }\n\n    if (entries.some(function (e) {\n      return !!(e === null || e === void 0 ? void 0 : e.snapshot.startAnimation);\n    })) {\n      return {\n        canApply: false,\n        reason: 'Nested animations not supported.'\n      };\n    }\n\n    return {\n      canApply: plugin.managers.snapshot.state.entries.size > 1\n    };\n  },\n  setup: function (_, __, plugin) {\n    var pivot = plugin.managers.snapshot.state.entries.get(0);\n    setPartialSnapshot(plugin, pivot, true);\n  },\n  getDuration: function (_, plugin) {\n    return {\n      kind: 'fixed',\n      durationMs: plugin.managers.snapshot.state.entries.toArray().reduce(function (a, b) {\n        var _a;\n\n        return a + ((_a = b.snapshot.durationInMs) !== null && _a !== void 0 ? _a : 0);\n      }, 0)\n    };\n  },\n  initialState: function (_, plugin) {\n    var snapshots = plugin.managers.snapshot.state.entries.toArray();\n    return {\n      totalDuration: snapshots.reduce(function (a, b) {\n        var _a;\n\n        return a + ((_a = b.snapshot.durationInMs) !== null && _a !== void 0 ? _a : 0);\n      }, 0),\n      snapshots: snapshots,\n      currentIndex: 0\n    };\n  },\n  apply: function (animState, t, ctx) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var ctime, i, _i, _b, s;\n\n      return __generator(this, function (_c) {\n        if (t.current >= animState.totalDuration) {\n          return [2\n          /*return*/\n          , {\n            kind: 'finished'\n          }];\n        }\n\n        ctime = 0, i = 0;\n\n        for (_i = 0, _b = animState.snapshots; _i < _b.length; _i++) {\n          s = _b[_i];\n          ctime += (_a = s.snapshot.durationInMs) !== null && _a !== void 0 ? _a : 0;\n\n          if (t.current < ctime) {\n            break;\n          }\n\n          i++;\n        }\n\n        if (i >= animState.snapshots.length) return [2\n        /*return*/\n        , {\n          kind: 'finished'\n        }];\n\n        if (i === animState.currentIndex) {\n          return [2\n          /*return*/\n          , {\n            kind: 'skip'\n          }];\n        }\n\n        setPartialSnapshot(ctx.plugin, animState.snapshots[i]);\n        return [2\n        /*return*/\n        , {\n          kind: 'next',\n          state: __assign(__assign({}, animState), {\n            currentIndex: i\n          })\n        }];\n      });\n    });\n  }\n});","map":{"version":3,"sources":["../../../../src/mol-plugin-state/animation/built-in/state-snapshots.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { PluginStateAnimation } from '../model';\r\nfunction setPartialSnapshot(plugin, entry, first) {\r\n    var _a;\r\n    if (first === void 0) { first = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    if (!entry.snapshot.data) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, plugin.runTask(plugin.state.data.setSnapshot(entry.snapshot.data))];\r\n                case 1:\r\n                    _b.sent();\r\n                    _b.label = 2;\r\n                case 2:\r\n                    if (entry.snapshot.camera) {\r\n                        (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.requestCameraReset({\r\n                            snapshot: entry.snapshot.camera.current,\r\n                            durationMs: first || entry.snapshot.camera.transitionStyle === 'instant'\r\n                                ? 0 : entry.snapshot.camera.transitionDurationInMs\r\n                        });\r\n                    }\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport var AnimateStateSnapshots = PluginStateAnimation.create({\r\n    name: 'built-in.animate-state-snapshots',\r\n    display: { name: 'State Snapshots' },\r\n    isExportable: true,\r\n    params: function () { return ({}); },\r\n    canApply: function (plugin) {\r\n        var entries = plugin.managers.snapshot.state.entries;\r\n        if (entries.size < 2) {\r\n            return { canApply: false, reason: 'At least 2 states required.' };\r\n        }\r\n        if (entries.some(function (e) { return !!(e === null || e === void 0 ? void 0 : e.snapshot.startAnimation); })) {\r\n            return { canApply: false, reason: 'Nested animations not supported.' };\r\n        }\r\n        return { canApply: plugin.managers.snapshot.state.entries.size > 1 };\r\n    },\r\n    setup: function (_, __, plugin) {\r\n        var pivot = plugin.managers.snapshot.state.entries.get(0);\r\n        setPartialSnapshot(plugin, pivot, true);\r\n    },\r\n    getDuration: function (_, plugin) {\r\n        return {\r\n            kind: 'fixed',\r\n            durationMs: plugin.managers.snapshot.state.entries.toArray().reduce(function (a, b) { var _a; return a + ((_a = b.snapshot.durationInMs) !== null && _a !== void 0 ? _a : 0); }, 0)\r\n        };\r\n    },\r\n    initialState: function (_, plugin) {\r\n        var snapshots = plugin.managers.snapshot.state.entries.toArray();\r\n        return {\r\n            totalDuration: snapshots.reduce(function (a, b) { var _a; return a + ((_a = b.snapshot.durationInMs) !== null && _a !== void 0 ? _a : 0); }, 0),\r\n            snapshots: snapshots,\r\n            currentIndex: 0\r\n        };\r\n    },\r\n    apply: function (animState, t, ctx) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var ctime, i, _i, _b, s;\r\n            return __generator(this, function (_c) {\r\n                if (t.current >= animState.totalDuration) {\r\n                    return [2 /*return*/, { kind: 'finished' }];\r\n                }\r\n                ctime = 0, i = 0;\r\n                for (_i = 0, _b = animState.snapshots; _i < _b.length; _i++) {\r\n                    s = _b[_i];\r\n                    ctime += (_a = s.snapshot.durationInMs) !== null && _a !== void 0 ? _a : 0;\r\n                    if (t.current < ctime) {\r\n                        break;\r\n                    }\r\n                    i++;\r\n                }\r\n                if (i >= animState.snapshots.length)\r\n                    return [2 /*return*/, { kind: 'finished' }];\r\n                if (i === animState.currentIndex) {\r\n                    return [2 /*return*/, { kind: 'skip' }];\r\n                }\r\n                setPartialSnapshot(ctx.plugin, animState.snapshots[i]);\r\n                return [2 /*return*/, { kind: 'next', state: __assign(__assign({}, animState), { currentIndex: i }) }];\r\n            });\r\n        });\r\n    }\r\n});\r\n//# sourceMappingURL=state-snapshots.js.map"]},"metadata":{},"sourceType":"module"}