{"ast":null,"code":"/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { createRenderable } from '../renderable';\nimport { createGraphicsRenderItem } from '../webgl/render-item';\nimport { AttributeSpec, GlobalUniformSchema, InternalSchema, TextureSpec, ElementsSpec, DefineSpec, BaseSchema, UniformSpec, GlobalTextureSchema } from './schema';\nimport { ImageShaderCode } from '../shader-code';\nimport { ValueCell } from '../../mol-util';\nimport { InterpolationTypeNames } from '../../mol-geo/geometry/image/image';\nexport var ImageSchema = __assign(__assign({}, BaseSchema), {\n  aGroup: AttributeSpec('float32', 1, 0),\n  aPosition: AttributeSpec('float32', 3, 0),\n  aUv: AttributeSpec('float32', 2, 0),\n  elements: ElementsSpec('uint32'),\n  uImageTexDim: UniformSpec('v2'),\n  tImageTex: TextureSpec('image-uint8', 'rgba', 'ubyte', 'nearest'),\n  tGroupTex: TextureSpec('image-uint8', 'rgba', 'ubyte', 'nearest'),\n  dInterpolation: DefineSpec('string', InterpolationTypeNames)\n});\nexport function ImageRenderable(ctx, id, values, state, materialId) {\n  var schema = __assign(__assign(__assign(__assign({}, GlobalUniformSchema), GlobalTextureSchema), InternalSchema), ImageSchema);\n\n  var internalValues = {\n    uObjectId: ValueCell.create(id)\n  };\n  var shaderCode = ImageShaderCode;\n  var renderItem = createGraphicsRenderItem(ctx, 'triangles', shaderCode, schema, __assign(__assign({}, values), internalValues), materialId);\n  return createRenderable(renderItem, values, state);\n}","map":{"version":3,"sources":["../../../src/mol-gl/renderable/image.ts"],"names":[],"mappings":"AAAA;;;;AAIG;;AAEH,SAAsC,gBAAtC,QAA8D,eAA9D;AAEA,SAAS,wBAAT,QAAyC,sBAAzC;AACA,SAAS,aAAT,EAAgC,mBAAhC,EAAqD,cAArD,EAAqE,WAArE,EAAkF,YAAlF,EAAgG,UAAhG,EAA4H,UAA5H,EAAwI,WAAxI,EAAqJ,mBAArJ,QAAgL,UAAhL;AACA,SAAS,eAAT,QAAgC,gBAAhC;AACA,SAAS,SAAT,QAA0B,gBAA1B;AACA,SAAS,sBAAT,QAAuC,oCAAvC;AAEA,OAAO,IAAM,WAAW,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACjB,UADiB,CAAA,EACP;AAEb,EAAA,MAAM,EAAE,aAAa,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CAFR;AAGb,EAAA,SAAS,EAAE,aAAa,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CAHX;AAIb,EAAA,GAAG,EAAE,aAAa,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CAJL;AAKb,EAAA,QAAQ,EAAE,YAAY,CAAC,QAAD,CALT;AAOb,EAAA,YAAY,EAAE,WAAW,CAAC,IAAD,CAPZ;AAQb,EAAA,SAAS,EAAE,WAAW,CAAC,aAAD,EAAgB,MAAhB,EAAwB,OAAxB,EAAiC,SAAjC,CART;AASb,EAAA,SAAS,EAAE,WAAW,CAAC,aAAD,EAAgB,MAAhB,EAAwB,OAAxB,EAAiC,SAAjC,CATT;AAWb,EAAA,cAAc,EAAE,UAAU,CAAC,QAAD,EAAW,sBAAX;AAXb,CADO,CAAjB;AAiBP,OAAM,SAAU,eAAV,CAA0B,GAA1B,EAA6C,EAA7C,EAAyD,MAAzD,EAA8E,KAA9E,EAAsG,UAAtG,EAAwH;AAC1H,MAAM,MAAM,GAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,mBAAR,CAAA,EAAgC,mBAAhC,CAAA,EAAwD,cAAxD,CAAA,EAA2E,WAA3E,CAAZ;;AACA,MAAM,cAAc,GAAmB;AACnC,IAAA,SAAS,EAAE,SAAS,CAAC,MAAV,CAAiB,EAAjB;AADwB,GAAvC;AAGA,MAAM,UAAU,GAAG,eAAnB;AACA,MAAM,UAAU,GAAG,wBAAwB,CAAC,GAAD,EAAM,WAAN,EAAmB,UAAnB,EAA+B,MAA/B,EAAqC,QAAA,CAAA,QAAA,CAAA,EAAA,EAAO,MAAP,CAAA,EAAkB,cAAlB,CAArC,EAAyE,UAAzE,CAA3C;AACA,SAAO,gBAAgB,CAAC,UAAD,EAAa,MAAb,EAAqB,KAArB,CAAvB;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { createRenderable } from '../renderable';\r\nimport { createGraphicsRenderItem } from '../webgl/render-item';\r\nimport { AttributeSpec, GlobalUniformSchema, InternalSchema, TextureSpec, ElementsSpec, DefineSpec, BaseSchema, UniformSpec, GlobalTextureSchema } from './schema';\r\nimport { ImageShaderCode } from '../shader-code';\r\nimport { ValueCell } from '../../mol-util';\r\nimport { InterpolationTypeNames } from '../../mol-geo/geometry/image/image';\r\nexport var ImageSchema = __assign(__assign({}, BaseSchema), { aGroup: AttributeSpec('float32', 1, 0), aPosition: AttributeSpec('float32', 3, 0), aUv: AttributeSpec('float32', 2, 0), elements: ElementsSpec('uint32'), uImageTexDim: UniformSpec('v2'), tImageTex: TextureSpec('image-uint8', 'rgba', 'ubyte', 'nearest'), tGroupTex: TextureSpec('image-uint8', 'rgba', 'ubyte', 'nearest'), dInterpolation: DefineSpec('string', InterpolationTypeNames) });\r\nexport function ImageRenderable(ctx, id, values, state, materialId) {\r\n    var schema = __assign(__assign(__assign(__assign({}, GlobalUniformSchema), GlobalTextureSchema), InternalSchema), ImageSchema);\r\n    var internalValues = {\r\n        uObjectId: ValueCell.create(id),\r\n    };\r\n    var shaderCode = ImageShaderCode;\r\n    var renderItem = createGraphicsRenderItem(ctx, 'triangles', shaderCode, schema, __assign(__assign({}, values), internalValues), materialId);\r\n    return createRenderable(renderItem, values, state);\r\n}\r\n//# sourceMappingURL=image.js.map"]},"metadata":{},"sourceType":"module"}