{"ast":null,"code":"/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __assign, __awaiter, __extends, __generator } from \"tslib\";\nimport { StatefulPluginComponent } from '../component';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nexport { PluginAnimationManager }; // TODO: pause functionality (this needs to reset if the state tree changes)\n// TODO: handle unregistered animations on state restore\n// TODO: better API\n\nvar PluginAnimationManager =\n/** @class */\nfunction (_super) {\n  __extends(PluginAnimationManager, _super);\n\n  function PluginAnimationManager(context) {\n    var _this = _super.call(this, {\n      params: {\n        current: ''\n      },\n      animationState: 'stopped'\n    }) || this;\n\n    _this.context = context;\n    _this.map = new Map();\n    _this._animations = [];\n    _this.currentTime = 0;\n    _this._params = void 0;\n    _this.events = {\n      updated: _this.ev(),\n      applied: _this.ev()\n    };\n    _this.isStopped = true;\n    _this.isApplying = false;\n    return _this;\n  }\n\n  Object.defineProperty(PluginAnimationManager.prototype, \"isEmpty\", {\n    get: function () {\n      return this._animations.length === 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PluginAnimationManager.prototype, \"current\", {\n    get: function () {\n      return this._current;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PluginAnimationManager.prototype, \"animations\", {\n    get: function () {\n      return this._animations;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  PluginAnimationManager.prototype.triggerUpdate = function () {\n    this.events.updated.next(void 0);\n  };\n\n  PluginAnimationManager.prototype.triggerApply = function () {\n    this.events.applied.next(void 0);\n  };\n\n  PluginAnimationManager.prototype.getParams = function () {\n    if (!this._params) {\n      this._params = {\n        current: PD.Select(this._animations[0] && this._animations[0].name, this._animations.map(function (a) {\n          return [a.name, a.display.name];\n        }), {\n          label: 'Animation'\n        })\n      };\n    }\n\n    return this._params;\n  };\n\n  PluginAnimationManager.prototype.updateParams = function (newParams) {\n    if (this.isEmpty) return;\n    this.updateState({\n      params: __assign(__assign({}, this.state.params), newParams)\n    });\n    var anim = this.map.get(this.state.params.current);\n    var params = anim.params(this.context);\n    this._current = {\n      anim: anim,\n      params: params,\n      paramValues: PD.getDefaultValues(params),\n      state: {},\n      startedTime: -1,\n      lastTime: 0\n    };\n    this.triggerUpdate();\n  };\n\n  PluginAnimationManager.prototype.updateCurrentParams = function (values) {\n    if (this.isEmpty) return;\n    this._current.paramValues = __assign(__assign({}, this._current.paramValues), values);\n    this.triggerUpdate();\n  };\n\n  PluginAnimationManager.prototype.register = function (animation) {\n    if (this.map.has(animation.name)) {\n      this.context.log.error(\"Animation '\" + animation.name + \"' is already registered.\");\n      return;\n    }\n\n    this._params = void 0;\n    this.map.set(animation.name, animation);\n\n    this._animations.push(animation);\n\n    if (this._animations.length === 1) {\n      this.updateParams({\n        current: animation.name\n      });\n    } else {\n      this.triggerUpdate();\n    }\n  };\n\n  PluginAnimationManager.prototype.play = function (animation, params) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.stop()];\n\n          case 1:\n            _a.sent();\n\n            if (!this.map.has(animation.name)) {\n              this.register(animation);\n            }\n\n            this.updateParams({\n              current: animation.name\n            });\n            this.updateCurrentParams(params);\n            return [4\n            /*yield*/\n            , this.start()];\n\n          case 2:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  PluginAnimationManager.prototype.tick = function (t, isSynchronous) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.currentTime = t;\n            if (this.isStopped) return [2\n            /*return*/\n            ];\n            if (!isSynchronous) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.applyFrame()];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            this.applyAsync();\n            _a.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  PluginAnimationManager.prototype.start = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var anim, initialState, state;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.updateState({\n              animationState: 'playing'\n            });\n\n            if (!this.context.behaviors.state.isAnimating.value) {\n              this.context.behaviors.state.isAnimating.next(true);\n            }\n\n            this.triggerUpdate();\n            anim = this._current.anim;\n            initialState = this._current.anim.initialState(this._current.paramValues, this.context);\n            if (!anim.setup) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , anim.setup(this._current.paramValues, initialState, this.context)];\n\n          case 1:\n            state = _a.sent();\n            if (state) initialState = state;\n            _a.label = 2;\n\n          case 2:\n            this._current.lastTime = 0;\n            this._current.startedTime = -1;\n            this._current.state = initialState;\n            this.isStopped = false;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  PluginAnimationManager.prototype.stop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var anim;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.isStopped = true;\n            if (!(this.state.animationState !== 'stopped')) return [3\n            /*break*/\n            , 3];\n            anim = this._current.anim;\n            if (!anim.teardown) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , anim.teardown(this._current.paramValues, this._current.state, this.context)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            this.updateState({\n              animationState: 'stopped'\n            });\n            this.triggerUpdate();\n            _a.label = 3;\n\n          case 3:\n            if (this.context.behaviors.state.isAnimating.value) {\n              this.context.behaviors.state.isAnimating.next(false);\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(PluginAnimationManager.prototype, \"isAnimating\", {\n    get: function () {\n      return this.state.animationState === 'playing';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  PluginAnimationManager.prototype.applyAsync = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.isApplying) return [2\n            /*return*/\n            ];\n            this.isApplying = true;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1,, 3, 4]);\n\n            return [4\n            /*yield*/\n            , this.applyFrame()];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            this.isApplying = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  PluginAnimationManager.prototype.applyFrame = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var t, newState;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            t = this.currentTime;\n            if (this._current.startedTime < 0) this._current.startedTime = t;\n            return [4\n            /*yield*/\n            , this._current.anim.apply(this._current.state, {\n              lastApplied: this._current.lastTime,\n              current: t - this._current.startedTime\n            }, {\n              params: this._current.paramValues,\n              plugin: this.context\n            })];\n\n          case 1:\n            newState = _a.sent();\n\n            if (newState.kind === 'finished') {\n              this.stop();\n            } else if (newState.kind === 'next') {\n              this._current.state = newState.state;\n              this._current.lastTime = t - this._current.startedTime;\n            }\n\n            this.triggerApply();\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  PluginAnimationManager.prototype.getSnapshot = function () {\n    if (!this.current) return {\n      state: this.state\n    };\n    return {\n      state: this.state,\n      current: {\n        paramValues: this._current.paramValues,\n        state: this._current.anim.stateSerialization ? this._current.anim.stateSerialization.toJSON(this._current.state) : this._current.state\n      }\n    };\n  };\n\n  PluginAnimationManager.prototype.setSnapshot = function (snapshot) {\n    if (this.isEmpty) return;\n    this.updateState({\n      animationState: snapshot.state.animationState\n    });\n    this.updateParams(snapshot.state.params);\n\n    if (snapshot.current) {\n      this.current.paramValues = snapshot.current.paramValues;\n      this.current.state = this._current.anim.stateSerialization ? this._current.anim.stateSerialization.fromJSON(snapshot.current.state) : snapshot.current.state;\n      this.triggerUpdate();\n      if (this.state.animationState === 'playing') this.resume();\n    }\n  };\n\n  PluginAnimationManager.prototype.resume = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var anim;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this._current.lastTime = 0;\n            this._current.startedTime = -1;\n            anim = this._current.anim;\n\n            if (!this.context.behaviors.state.isAnimating.value) {\n              this.context.behaviors.state.isAnimating.next(true);\n            }\n\n            if (!anim.setup) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , anim.setup(this._current.paramValues, this._current.state, this.context)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            this.isStopped = false;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return PluginAnimationManager;\n}(StatefulPluginComponent);","map":{"version":3,"sources":["../../../src/mol-plugin-state/manager/animation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __assign, __awaiter, __extends, __generator } from \"tslib\";\r\nimport { StatefulPluginComponent } from '../component';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nexport { PluginAnimationManager };\r\n// TODO: pause functionality (this needs to reset if the state tree changes)\r\n// TODO: handle unregistered animations on state restore\r\n// TODO: better API\r\nvar PluginAnimationManager = /** @class */ (function (_super) {\r\n    __extends(PluginAnimationManager, _super);\r\n    function PluginAnimationManager(context) {\r\n        var _this = _super.call(this, { params: { current: '' }, animationState: 'stopped' }) || this;\r\n        _this.context = context;\r\n        _this.map = new Map();\r\n        _this._animations = [];\r\n        _this.currentTime = 0;\r\n        _this._params = void 0;\r\n        _this.events = {\r\n            updated: _this.ev(),\r\n            applied: _this.ev(),\r\n        };\r\n        _this.isStopped = true;\r\n        _this.isApplying = false;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PluginAnimationManager.prototype, \"isEmpty\", {\r\n        get: function () { return this._animations.length === 0; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PluginAnimationManager.prototype, \"current\", {\r\n        get: function () { return this._current; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PluginAnimationManager.prototype, \"animations\", {\r\n        get: function () { return this._animations; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    PluginAnimationManager.prototype.triggerUpdate = function () {\r\n        this.events.updated.next(void 0);\r\n    };\r\n    PluginAnimationManager.prototype.triggerApply = function () {\r\n        this.events.applied.next(void 0);\r\n    };\r\n    PluginAnimationManager.prototype.getParams = function () {\r\n        if (!this._params) {\r\n            this._params = {\r\n                current: PD.Select(this._animations[0] && this._animations[0].name, this._animations.map(function (a) { return [a.name, a.display.name]; }), { label: 'Animation' })\r\n            };\r\n        }\r\n        return this._params;\r\n    };\r\n    PluginAnimationManager.prototype.updateParams = function (newParams) {\r\n        if (this.isEmpty)\r\n            return;\r\n        this.updateState({ params: __assign(__assign({}, this.state.params), newParams) });\r\n        var anim = this.map.get(this.state.params.current);\r\n        var params = anim.params(this.context);\r\n        this._current = {\r\n            anim: anim,\r\n            params: params,\r\n            paramValues: PD.getDefaultValues(params),\r\n            state: {},\r\n            startedTime: -1,\r\n            lastTime: 0\r\n        };\r\n        this.triggerUpdate();\r\n    };\r\n    PluginAnimationManager.prototype.updateCurrentParams = function (values) {\r\n        if (this.isEmpty)\r\n            return;\r\n        this._current.paramValues = __assign(__assign({}, this._current.paramValues), values);\r\n        this.triggerUpdate();\r\n    };\r\n    PluginAnimationManager.prototype.register = function (animation) {\r\n        if (this.map.has(animation.name)) {\r\n            this.context.log.error(\"Animation '\" + animation.name + \"' is already registered.\");\r\n            return;\r\n        }\r\n        this._params = void 0;\r\n        this.map.set(animation.name, animation);\r\n        this._animations.push(animation);\r\n        if (this._animations.length === 1) {\r\n            this.updateParams({ current: animation.name });\r\n        }\r\n        else {\r\n            this.triggerUpdate();\r\n        }\r\n    };\r\n    PluginAnimationManager.prototype.play = function (animation, params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.stop()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (!this.map.has(animation.name)) {\r\n                            this.register(animation);\r\n                        }\r\n                        this.updateParams({ current: animation.name });\r\n                        this.updateCurrentParams(params);\r\n                        return [4 /*yield*/, this.start()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PluginAnimationManager.prototype.tick = function (t, isSynchronous) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.currentTime = t;\r\n                        if (this.isStopped)\r\n                            return [2 /*return*/];\r\n                        if (!isSynchronous) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.applyFrame()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        this.applyAsync();\r\n                        _a.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PluginAnimationManager.prototype.start = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var anim, initialState, state;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.updateState({ animationState: 'playing' });\r\n                        if (!this.context.behaviors.state.isAnimating.value) {\r\n                            this.context.behaviors.state.isAnimating.next(true);\r\n                        }\r\n                        this.triggerUpdate();\r\n                        anim = this._current.anim;\r\n                        initialState = this._current.anim.initialState(this._current.paramValues, this.context);\r\n                        if (!anim.setup) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, anim.setup(this._current.paramValues, initialState, this.context)];\r\n                    case 1:\r\n                        state = _a.sent();\r\n                        if (state)\r\n                            initialState = state;\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        this._current.lastTime = 0;\r\n                        this._current.startedTime = -1;\r\n                        this._current.state = initialState;\r\n                        this.isStopped = false;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PluginAnimationManager.prototype.stop = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var anim;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.isStopped = true;\r\n                        if (!(this.state.animationState !== 'stopped')) return [3 /*break*/, 3];\r\n                        anim = this._current.anim;\r\n                        if (!anim.teardown) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, anim.teardown(this._current.paramValues, this._current.state, this.context)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        this.updateState({ animationState: 'stopped' });\r\n                        this.triggerUpdate();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (this.context.behaviors.state.isAnimating.value) {\r\n                            this.context.behaviors.state.isAnimating.next(false);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(PluginAnimationManager.prototype, \"isAnimating\", {\r\n        get: function () {\r\n            return this.state.animationState === 'playing';\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    PluginAnimationManager.prototype.applyAsync = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.isApplying)\r\n                            return [2 /*return*/];\r\n                        this.isApplying = true;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, , 3, 4]);\r\n                        return [4 /*yield*/, this.applyFrame()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        this.isApplying = false;\r\n                        return [7 /*endfinally*/];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PluginAnimationManager.prototype.applyFrame = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var t, newState;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        t = this.currentTime;\r\n                        if (this._current.startedTime < 0)\r\n                            this._current.startedTime = t;\r\n                        return [4 /*yield*/, this._current.anim.apply(this._current.state, { lastApplied: this._current.lastTime, current: t - this._current.startedTime }, { params: this._current.paramValues, plugin: this.context })];\r\n                    case 1:\r\n                        newState = _a.sent();\r\n                        if (newState.kind === 'finished') {\r\n                            this.stop();\r\n                        }\r\n                        else if (newState.kind === 'next') {\r\n                            this._current.state = newState.state;\r\n                            this._current.lastTime = t - this._current.startedTime;\r\n                        }\r\n                        this.triggerApply();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PluginAnimationManager.prototype.getSnapshot = function () {\r\n        if (!this.current)\r\n            return { state: this.state };\r\n        return {\r\n            state: this.state,\r\n            current: {\r\n                paramValues: this._current.paramValues,\r\n                state: this._current.anim.stateSerialization ? this._current.anim.stateSerialization.toJSON(this._current.state) : this._current.state\r\n            }\r\n        };\r\n    };\r\n    PluginAnimationManager.prototype.setSnapshot = function (snapshot) {\r\n        if (this.isEmpty)\r\n            return;\r\n        this.updateState({ animationState: snapshot.state.animationState });\r\n        this.updateParams(snapshot.state.params);\r\n        if (snapshot.current) {\r\n            this.current.paramValues = snapshot.current.paramValues;\r\n            this.current.state = this._current.anim.stateSerialization\r\n                ? this._current.anim.stateSerialization.fromJSON(snapshot.current.state)\r\n                : snapshot.current.state;\r\n            this.triggerUpdate();\r\n            if (this.state.animationState === 'playing')\r\n                this.resume();\r\n        }\r\n    };\r\n    PluginAnimationManager.prototype.resume = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var anim;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this._current.lastTime = 0;\r\n                        this._current.startedTime = -1;\r\n                        anim = this._current.anim;\r\n                        if (!this.context.behaviors.state.isAnimating.value) {\r\n                            this.context.behaviors.state.isAnimating.next(true);\r\n                        }\r\n                        if (!anim.setup) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, anim.setup(this._current.paramValues, this._current.state, this.context)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        this.isStopped = false;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return PluginAnimationManager;\r\n}(StatefulPluginComponent));\r\n//# sourceMappingURL=animation.js.map"]},"metadata":{},"sourceType":"module"}