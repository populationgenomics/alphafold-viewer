{"ast":null,"code":"/**\r\n * Copyright (c) 2020-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n *\r\n * ported from https://github.com/photopea/UZIP.js/blob/master/UZIP.js\r\n * MIT License, Copyright (c) 2018 Photopea\r\n */\nimport { __awaiter, __generator } from \"tslib\";\nimport { _hufTree } from './huffman';\nimport { U, revCodes, makeCodes } from './util';\n\nfunction DeflateContext(data, out, opos, lvl) {\n  var lits = U.lits,\n      strt = U.strt,\n      prev = U.prev;\n  return {\n    data: data,\n    out: out,\n    opt: Opts[lvl],\n    i: 0,\n    pos: opos << 3,\n    cvrd: 0,\n    dlen: data.length,\n    li: 0,\n    lc: 0,\n    bs: 0,\n    ebits: 0,\n    c: 0,\n    nc: 0,\n    lits: lits,\n    strt: strt,\n    prev: prev\n  };\n}\n\nfunction deflateChunk(ctx, count) {\n  var data = ctx.data,\n      dlen = ctx.dlen,\n      out = ctx.out,\n      opt = ctx.opt;\n  var i = ctx.i,\n      pos = ctx.pos,\n      cvrd = ctx.cvrd,\n      li = ctx.li,\n      lc = ctx.lc,\n      bs = ctx.bs,\n      ebits = ctx.ebits,\n      c = ctx.c,\n      nc = ctx.nc;\n  var lits = U.lits,\n      strt = U.strt,\n      prev = U.prev;\n  var end = Math.min(i + count, dlen);\n\n  for (; i < end; i++) {\n    c = nc;\n\n    if (i + 1 < dlen - 2) {\n      nc = _hash(data, i + 1);\n      var ii = i + 1 & 0x7fff;\n      prev[ii] = strt[nc];\n      strt[nc] = ii;\n    }\n\n    if (cvrd <= i) {\n      if ((li > 14000 || lc > 26697) && dlen - i > 100) {\n        if (cvrd < i) {\n          lits[li] = i - cvrd;\n          li += 2;\n          cvrd = i;\n        }\n\n        pos = _writeBlock(i === dlen - 1 || cvrd === dlen ? 1 : 0, lits, li, ebits, data, bs, i - bs, out, pos);\n        li = lc = ebits = 0;\n        bs = i;\n      }\n\n      var mch = 0;\n\n      if (i < dlen - 2) {\n        mch = _bestMatch(data, i, prev, c, Math.min(opt[2], dlen - i), opt[3]);\n      }\n\n      if (mch !== 0) {\n        var len = mch >>> 16,\n            dst = mch & 0xffff;\n\n        var lgi = _goodIndex(len, U.of0);\n\n        U.lhst[257 + lgi]++;\n\n        var dgi = _goodIndex(dst, U.df0);\n\n        U.dhst[dgi]++;\n        ebits += U.exb[lgi] + U.dxb[dgi];\n        lits[li] = len << 23 | i - cvrd;\n        lits[li + 1] = dst << 16 | lgi << 8 | dgi;\n        li += 2;\n        cvrd = i + len;\n      } else {\n        U.lhst[data[i]]++;\n      }\n\n      lc++;\n    }\n  }\n\n  ctx.i = i;\n  ctx.pos = pos;\n  ctx.cvrd = cvrd;\n  ctx.li = li;\n  ctx.lc = lc;\n  ctx.bs = bs;\n  ctx.ebits = ebits;\n  ctx.c = c;\n  ctx.nc = nc;\n}\n/**\r\n * - good_length: reduce lazy search above this match length;\r\n * - max_lazy: do not perform lazy search above this match length;\r\n * - nice_length: quit search above this match length;\r\n */\n\n\nvar Opts = [\n/*      good lazy nice chain */\n\n/* 0 */\n[0, 0, 0, 0, 0],\n/* 1 */\n[4, 4, 8, 4, 0],\n/* 2 */\n[4, 5, 16, 8, 0],\n/* 3 */\n[4, 6, 16, 16, 0],\n/* 4 */\n[4, 10, 16, 32, 0],\n/* 5 */\n[8, 16, 32, 32, 0],\n/* 6 */\n[8, 16, 128, 128, 0],\n/* 7 */\n[8, 32, 128, 256, 0],\n/* 8 */\n[32, 128, 258, 1024, 1],\n/* 9 */\n[32, 258, 258, 4096, 1]\n/* max compression */\n];\nexport function _deflateRaw(runtime, data, out, opos, lvl) {\n  return __awaiter(this, void 0, void 0, function () {\n    var ctx, dlen, i_1, pos_1, len, li, cvrd, pos, i, lits, bs, ebits;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ctx = DeflateContext(data, out, opos, lvl);\n          dlen = ctx.dlen;\n\n          if (lvl === 0) {\n            i_1 = ctx.i, pos_1 = ctx.pos;\n\n            while (i_1 < dlen) {\n              len = Math.min(0xffff, dlen - i_1);\n\n              _putsE(out, pos_1, i_1 + len === dlen ? 1 : 0);\n\n              pos_1 = _copyExact(data, i_1, len, out, pos_1 + 8);\n              i_1 += len;\n            }\n\n            return [2\n            /*return*/\n            , pos_1 >>> 3];\n          }\n\n          if (dlen > 2) {\n            ctx.nc = _hash(data, 0);\n            ctx.strt[ctx.nc] = 0;\n          }\n\n          _a.label = 1;\n\n        case 1:\n          if (!(ctx.i < dlen)) return [3\n          /*break*/\n          , 4];\n          if (!runtime.shouldUpdate) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , runtime.update({\n            message: 'Deflating...',\n            current: ctx.i,\n            max: dlen\n          })];\n\n        case 2:\n          _a.sent();\n\n          _a.label = 3;\n\n        case 3:\n          deflateChunk(ctx, 1024 * 1024);\n          return [3\n          /*break*/\n          , 1];\n\n        case 4:\n          li = ctx.li, cvrd = ctx.cvrd, pos = ctx.pos;\n          i = ctx.i, lits = ctx.lits, bs = ctx.bs, ebits = ctx.ebits;\n\n          if (bs !== i || data.length === 0) {\n            if (cvrd < i) {\n              lits[li] = i - cvrd;\n              li += 2;\n              cvrd = i;\n            }\n\n            pos = _writeBlock(1, lits, li, ebits, data, bs, i - bs, out, pos);\n          }\n\n          while ((pos & 7) !== 0) pos++;\n\n          return [2\n          /*return*/\n          , pos >>> 3];\n      }\n    });\n  });\n}\n\nfunction _bestMatch(data, i, prev, c, nice, chain) {\n  var ci = i & 0x7fff,\n      pi = prev[ci]; // console.log(\"----\", i);\n\n  var dif = ci - pi + (1 << 15) & 0x7fff;\n  if (pi === ci || c !== _hash(data, i - dif)) return 0;\n  var tl = 0,\n      td = 0; // top length, top distance\n\n  var dlim = Math.min(0x7fff, i);\n\n  while (dif <= dlim && --chain !== 0 && pi !== ci\n  /* && c==UZIP.F._hash(data,i-dif)*/\n  ) {\n    if (tl === 0 || data[i + tl] === data[i + tl - dif]) {\n      var cl = _howLong(data, i, dif);\n\n      if (cl > tl) {\n        tl = cl;\n        td = dif;\n        if (tl >= nice) break; //*\n\n        if (dif + 2 < cl) cl = dif + 2;\n        var maxd = 0; // pi does not point to the start of the word\n\n        for (var j = 0; j < cl - 2; j++) {\n          var ei = i - dif + j + (1 << 15) & 0x7fff;\n          var li = prev[ei];\n          var curd = ei - li + (1 << 15) & 0x7fff;\n\n          if (curd > maxd) {\n            maxd = curd;\n            pi = ei;\n          }\n        }\n      }\n    }\n\n    ci = pi;\n    pi = prev[ci];\n    dif += ci - pi + (1 << 15) & 0x7fff;\n  }\n\n  return tl << 16 | td;\n}\n\nfunction _howLong(data, i, dif) {\n  if (data[i] !== data[i - dif] || data[i + 1] !== data[i + 1 - dif] || data[i + 2] !== data[i + 2 - dif]) return 0;\n  var oi = i,\n      l = Math.min(data.length, i + 258);\n  i += 3; // while(i+4<l && data[i]==data[i-dif] && data[i+1]==data[i+1-dif] && data[i+2]==data[i+2-dif] && data[i+3]==data[i+3-dif]) i+=4;\n\n  while (i < l && data[i] === data[i - dif]) i++;\n\n  return i - oi;\n}\n\nfunction _hash(data, i) {\n  return (data[i] << 8 | data[i + 1]) + (data[i + 2] << 4) & 0xffff; // var hash_shift = 0, hash_mask = 255;\n  // var h = data[i+1] % 251;\n  // h = (((h << 8) + data[i+2]) % 251);\n  // h = (((h << 8) + data[i+2]) % 251);\n  // h = ((h<<hash_shift) ^ (c) ) & hash_mask;\n  // return h | (data[i]<<8);\n  // return (data[i] | (data[i+1]<<8));\n}\n\nfunction _writeBlock(BFINAL, lits, li, ebits, data, o0, l0, out, pos) {\n  U.lhst[256]++;\n\n  var _a = getTrees(),\n      ML = _a[0],\n      MD = _a[1],\n      MH = _a[2],\n      numl = _a[3],\n      numd = _a[4],\n      numh = _a[5],\n      lset = _a[6],\n      dset = _a[7];\n\n  var cstSize = ((pos + 3 & 7) === 0 ? 0 : 8 - (pos + 3 & 7)) + 32 + (l0 << 3);\n  var fxdSize = ebits + contSize(U.fltree, U.lhst) + contSize(U.fdtree, U.dhst);\n  var dynSize = ebits + contSize(U.ltree, U.lhst) + contSize(U.dtree, U.dhst);\n  dynSize += 14 + 3 * numh + contSize(U.itree, U.ihst) + (U.ihst[16] * 2 + U.ihst[17] * 3 + U.ihst[18] * 7);\n\n  for (var j = 0; j < 286; j++) U.lhst[j] = 0;\n\n  for (var j = 0; j < 30; j++) U.dhst[j] = 0;\n\n  for (var j = 0; j < 19; j++) U.ihst[j] = 0;\n\n  var BTYPE = cstSize < fxdSize && cstSize < dynSize ? 0 : fxdSize < dynSize ? 1 : 2;\n\n  _putsF(out, pos, BFINAL);\n\n  _putsF(out, pos + 1, BTYPE);\n\n  pos += 3; // let opos = pos;\n\n  if (BTYPE === 0) {\n    while ((pos & 7) !== 0) pos++;\n\n    pos = _copyExact(data, o0, l0, out, pos);\n  } else {\n    var ltree = void 0,\n        dtree = void 0;\n\n    if (BTYPE === 1) {\n      ltree = U.fltree;\n      dtree = U.fdtree;\n    } else if (BTYPE === 2) {\n      makeCodes(U.ltree, ML);\n      revCodes(U.ltree, ML);\n      makeCodes(U.dtree, MD);\n      revCodes(U.dtree, MD);\n      makeCodes(U.itree, MH);\n      revCodes(U.itree, MH);\n      ltree = U.ltree;\n      dtree = U.dtree;\n\n      _putsE(out, pos, numl - 257);\n\n      pos += 5; // 286\n\n      _putsE(out, pos, numd - 1);\n\n      pos += 5; // 30\n\n      _putsE(out, pos, numh - 4);\n\n      pos += 4; // 19\n\n      for (var i = 0; i < numh; i++) _putsE(out, pos + i * 3, U.itree[(U.ordr[i] << 1) + 1]);\n\n      pos += 3 * numh;\n      pos = _codeTiny(lset, U.itree, out, pos);\n      pos = _codeTiny(dset, U.itree, out, pos);\n    } else {\n      throw new Error(\"unknown BTYPE \" + BTYPE);\n    }\n\n    var off = o0;\n\n    for (var si = 0; si < li; si += 2) {\n      var qb = lits[si],\n          len = qb >>> 23,\n          end = off + (qb & (1 << 23) - 1);\n\n      while (off < end) pos = _writeLit(data[off++], ltree, out, pos);\n\n      if (len !== 0) {\n        var qc = lits[si + 1],\n            dst = qc >> 16,\n            lgi = qc >> 8 & 255,\n            dgi = qc & 255;\n        pos = _writeLit(257 + lgi, ltree, out, pos);\n\n        _putsE(out, pos, len - U.of0[lgi]);\n\n        pos += U.exb[lgi];\n        pos = _writeLit(dgi, dtree, out, pos);\n\n        _putsF(out, pos, dst - U.df0[dgi]);\n\n        pos += U.dxb[dgi];\n        off += len;\n      }\n    }\n\n    pos = _writeLit(256, ltree, out, pos);\n  } // console.log(pos-opos, fxdSize, dynSize, cstSize);\n\n\n  return pos;\n}\n\nfunction _copyExact(data, off, len, out, pos) {\n  var p8 = pos >>> 3;\n  out[p8] = len;\n  out[p8 + 1] = len >>> 8;\n  out[p8 + 2] = 255 - out[p8];\n  out[p8 + 3] = 255 - out[p8 + 1];\n  p8 += 4;\n  out.set(new Uint8Array(data.buffer, off, len), p8); // for(var i=0; i<len; i++) out[p8+i]=data[off+i];\n\n  return pos + (len + 4 << 3);\n}\n/*\r\n    Interesting facts:\r\n    - decompressed block can have bytes, which do not occur in a Huffman tree (copied from the previous block by reference)\r\n*/\n\n\nfunction getTrees() {\n  var ML = _hufTree(U.lhst, U.ltree, 15);\n\n  var MD = _hufTree(U.dhst, U.dtree, 15);\n\n  var lset = [];\n\n  var numl = _lenCodes(U.ltree, lset);\n\n  var dset = [];\n\n  var numd = _lenCodes(U.dtree, dset);\n\n  for (var i = 0; i < lset.length; i += 2) U.ihst[lset[i]]++;\n\n  for (var i = 0; i < dset.length; i += 2) U.ihst[dset[i]]++;\n\n  var MH = _hufTree(U.ihst, U.itree, 7);\n\n  var numh = 19;\n\n  while (numh > 4 && U.itree[(U.ordr[numh - 1] << 1) + 1] === 0) numh--;\n\n  return [ML, MD, MH, numl, numd, numh, lset, dset];\n}\n\nfunction contSize(tree, hst) {\n  var s = 0;\n\n  for (var i = 0; i < hst.length; i++) s += hst[i] * tree[(i << 1) + 1];\n\n  return s;\n}\n\nfunction _codeTiny(set, tree, out, pos) {\n  for (var i = 0; i < set.length; i += 2) {\n    var l = set[i],\n        rst = set[i + 1]; // console.log(l, pos, tree[(l<<1)+1]);\n\n    pos = _writeLit(l, tree, out, pos);\n    var rsl = l === 16 ? 2 : l === 17 ? 3 : 7;\n\n    if (l > 15) {\n      _putsE(out, pos, rst);\n\n      pos += rsl;\n    }\n  }\n\n  return pos;\n}\n\nfunction _lenCodes(tree, set) {\n  var len = tree.length;\n\n  while (len !== 2 && tree[len - 1] === 0) len -= 2; // when no distances, keep one code with length 0\n\n\n  for (var i = 0; i < len; i += 2) {\n    var l = tree[i + 1],\n        nxt = i + 3 < len ? tree[i + 3] : -1,\n        nnxt = i + 5 < len ? tree[i + 5] : -1,\n        prv = i === 0 ? -1 : tree[i - 1];\n\n    if (l === 0 && nxt === l && nnxt === l) {\n      var lz = i + 5;\n\n      while (lz + 2 < len && tree[lz + 2] === l) lz += 2;\n\n      var zc = Math.min(lz + 1 - i >>> 1, 138);\n      if (zc < 11) set.push(17, zc - 3);else set.push(18, zc - 11);\n      i += zc * 2 - 2;\n    } else if (l === prv && nxt === l && nnxt === l) {\n      var lz = i + 5;\n\n      while (lz + 2 < len && tree[lz + 2] === l) lz += 2;\n\n      var zc = Math.min(lz + 1 - i >>> 1, 6);\n      set.push(16, zc - 3);\n      i += zc * 2 - 2;\n    } else {\n      set.push(l, 0);\n    }\n  }\n\n  return len >>> 1;\n}\n\nfunction _goodIndex(v, arr) {\n  var i = 0;\n  if (arr[i | 16] <= v) i |= 16;\n  if (arr[i | 8] <= v) i |= 8;\n  if (arr[i | 4] <= v) i |= 4;\n  if (arr[i | 2] <= v) i |= 2;\n  if (arr[i | 1] <= v) i |= 1;\n  return i;\n}\n\nfunction _writeLit(ch, ltree, out, pos) {\n  _putsF(out, pos, ltree[ch << 1]);\n\n  return pos + ltree[(ch << 1) + 1];\n}\n\nfunction _putsE(dt, pos, val) {\n  val = val << (pos & 7);\n  var o = pos >>> 3;\n  dt[o] |= val;\n  dt[o + 1] |= val >>> 8;\n}\n\nfunction _putsF(dt, pos, val) {\n  val = val << (pos & 7);\n  var o = pos >>> 3;\n  dt[o] |= val;\n  dt[o + 1] |= val >>> 8;\n  dt[o + 2] |= val >>> 16;\n}","map":{"version":3,"sources":["../../../src/mol-util/zip/deflate.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n *\r\n * ported from https://github.com/photopea/UZIP.js/blob/master/UZIP.js\r\n * MIT License, Copyright (c) 2018 Photopea\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { _hufTree } from './huffman';\r\nimport { U, revCodes, makeCodes } from './util';\r\nfunction DeflateContext(data, out, opos, lvl) {\r\n    var lits = U.lits, strt = U.strt, prev = U.prev;\r\n    return {\r\n        data: data,\r\n        out: out,\r\n        opt: Opts[lvl],\r\n        i: 0,\r\n        pos: opos << 3,\r\n        cvrd: 0,\r\n        dlen: data.length,\r\n        li: 0,\r\n        lc: 0,\r\n        bs: 0,\r\n        ebits: 0,\r\n        c: 0,\r\n        nc: 0,\r\n        lits: lits,\r\n        strt: strt,\r\n        prev: prev\r\n    };\r\n}\r\nfunction deflateChunk(ctx, count) {\r\n    var data = ctx.data, dlen = ctx.dlen, out = ctx.out, opt = ctx.opt;\r\n    var i = ctx.i, pos = ctx.pos, cvrd = ctx.cvrd, li = ctx.li, lc = ctx.lc, bs = ctx.bs, ebits = ctx.ebits, c = ctx.c, nc = ctx.nc;\r\n    var lits = U.lits, strt = U.strt, prev = U.prev;\r\n    var end = Math.min(i + count, dlen);\r\n    for (; i < end; i++) {\r\n        c = nc;\r\n        if (i + 1 < dlen - 2) {\r\n            nc = _hash(data, i + 1);\r\n            var ii = ((i + 1) & 0x7fff);\r\n            prev[ii] = strt[nc];\r\n            strt[nc] = ii;\r\n        }\r\n        if (cvrd <= i) {\r\n            if ((li > 14000 || lc > 26697) && (dlen - i) > 100) {\r\n                if (cvrd < i) {\r\n                    lits[li] = i - cvrd;\r\n                    li += 2;\r\n                    cvrd = i;\r\n                }\r\n                pos = _writeBlock(((i === dlen - 1) || (cvrd === dlen)) ? 1 : 0, lits, li, ebits, data, bs, i - bs, out, pos);\r\n                li = lc = ebits = 0;\r\n                bs = i;\r\n            }\r\n            var mch = 0;\r\n            if (i < dlen - 2) {\r\n                mch = _bestMatch(data, i, prev, c, Math.min(opt[2], dlen - i), opt[3]);\r\n            }\r\n            if (mch !== 0) {\r\n                var len = mch >>> 16, dst = mch & 0xffff;\r\n                var lgi = _goodIndex(len, U.of0);\r\n                U.lhst[257 + lgi]++;\r\n                var dgi = _goodIndex(dst, U.df0);\r\n                U.dhst[dgi]++;\r\n                ebits += U.exb[lgi] + U.dxb[dgi];\r\n                lits[li] = (len << 23) | (i - cvrd);\r\n                lits[li + 1] = (dst << 16) | (lgi << 8) | dgi;\r\n                li += 2;\r\n                cvrd = i + len;\r\n            }\r\n            else {\r\n                U.lhst[data[i]]++;\r\n            }\r\n            lc++;\r\n        }\r\n    }\r\n    ctx.i = i;\r\n    ctx.pos = pos;\r\n    ctx.cvrd = cvrd;\r\n    ctx.li = li;\r\n    ctx.lc = lc;\r\n    ctx.bs = bs;\r\n    ctx.ebits = ebits;\r\n    ctx.c = c;\r\n    ctx.nc = nc;\r\n}\r\n/**\r\n * - good_length: reduce lazy search above this match length;\r\n * - max_lazy: do not perform lazy search above this match length;\r\n * - nice_length: quit search above this match length;\r\n */\r\nvar Opts = [\r\n    /*      good lazy nice chain */\r\n    /* 0 */ [0, 0, 0, 0, 0],\r\n    /* 1 */ [4, 4, 8, 4, 0],\r\n    /* 2 */ [4, 5, 16, 8, 0],\r\n    /* 3 */ [4, 6, 16, 16, 0],\r\n    /* 4 */ [4, 10, 16, 32, 0],\r\n    /* 5 */ [8, 16, 32, 32, 0],\r\n    /* 6 */ [8, 16, 128, 128, 0],\r\n    /* 7 */ [8, 32, 128, 256, 0],\r\n    /* 8 */ [32, 128, 258, 1024, 1],\r\n    /* 9 */ [32, 258, 258, 4096, 1] /* max compression */\r\n];\r\nexport function _deflateRaw(runtime, data, out, opos, lvl) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var ctx, dlen, i_1, pos_1, len, li, cvrd, pos, i, lits, bs, ebits;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ctx = DeflateContext(data, out, opos, lvl);\r\n                    dlen = ctx.dlen;\r\n                    if (lvl === 0) {\r\n                        i_1 = ctx.i, pos_1 = ctx.pos;\r\n                        while (i_1 < dlen) {\r\n                            len = Math.min(0xffff, dlen - i_1);\r\n                            _putsE(out, pos_1, (i_1 + len === dlen ? 1 : 0));\r\n                            pos_1 = _copyExact(data, i_1, len, out, pos_1 + 8);\r\n                            i_1 += len;\r\n                        }\r\n                        return [2 /*return*/, pos_1 >>> 3];\r\n                    }\r\n                    if (dlen > 2) {\r\n                        ctx.nc = _hash(data, 0);\r\n                        ctx.strt[ctx.nc] = 0;\r\n                    }\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!(ctx.i < dlen)) return [3 /*break*/, 4];\r\n                    if (!runtime.shouldUpdate) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, runtime.update({ message: 'Deflating...', current: ctx.i, max: dlen })];\r\n                case 2:\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3:\r\n                    deflateChunk(ctx, 1024 * 1024);\r\n                    return [3 /*break*/, 1];\r\n                case 4:\r\n                    li = ctx.li, cvrd = ctx.cvrd, pos = ctx.pos;\r\n                    i = ctx.i, lits = ctx.lits, bs = ctx.bs, ebits = ctx.ebits;\r\n                    if (bs !== i || data.length === 0) {\r\n                        if (cvrd < i) {\r\n                            lits[li] = i - cvrd;\r\n                            li += 2;\r\n                            cvrd = i;\r\n                        }\r\n                        pos = _writeBlock(1, lits, li, ebits, data, bs, i - bs, out, pos);\r\n                    }\r\n                    while ((pos & 7) !== 0)\r\n                        pos++;\r\n                    return [2 /*return*/, pos >>> 3];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction _bestMatch(data, i, prev, c, nice, chain) {\r\n    var ci = (i & 0x7fff), pi = prev[ci];\r\n    // console.log(\"----\", i);\r\n    var dif = ((ci - pi + (1 << 15)) & 0x7fff);\r\n    if (pi === ci || c !== _hash(data, i - dif))\r\n        return 0;\r\n    var tl = 0, td = 0; // top length, top distance\r\n    var dlim = Math.min(0x7fff, i);\r\n    while (dif <= dlim && --chain !== 0 && pi !== ci /* && c==UZIP.F._hash(data,i-dif)*/) {\r\n        if (tl === 0 || (data[i + tl] === data[i + tl - dif])) {\r\n            var cl = _howLong(data, i, dif);\r\n            if (cl > tl) {\r\n                tl = cl;\r\n                td = dif;\r\n                if (tl >= nice)\r\n                    break; //*\r\n                if (dif + 2 < cl)\r\n                    cl = dif + 2;\r\n                var maxd = 0; // pi does not point to the start of the word\r\n                for (var j = 0; j < cl - 2; j++) {\r\n                    var ei = (i - dif + j + (1 << 15)) & 0x7fff;\r\n                    var li = prev[ei];\r\n                    var curd = (ei - li + (1 << 15)) & 0x7fff;\r\n                    if (curd > maxd) {\r\n                        maxd = curd;\r\n                        pi = ei;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        ci = pi;\r\n        pi = prev[ci];\r\n        dif += ((ci - pi + (1 << 15)) & 0x7fff);\r\n    }\r\n    return (tl << 16) | td;\r\n}\r\nfunction _howLong(data, i, dif) {\r\n    if (data[i] !== data[i - dif] || data[i + 1] !== data[i + 1 - dif] || data[i + 2] !== data[i + 2 - dif])\r\n        return 0;\r\n    var oi = i, l = Math.min(data.length, i + 258);\r\n    i += 3;\r\n    // while(i+4<l && data[i]==data[i-dif] && data[i+1]==data[i+1-dif] && data[i+2]==data[i+2-dif] && data[i+3]==data[i+3-dif]) i+=4;\r\n    while (i < l && data[i] === data[i - dif])\r\n        i++;\r\n    return i - oi;\r\n}\r\nfunction _hash(data, i) {\r\n    return (((data[i] << 8) | data[i + 1]) + (data[i + 2] << 4)) & 0xffff;\r\n    // var hash_shift = 0, hash_mask = 255;\r\n    // var h = data[i+1] % 251;\r\n    // h = (((h << 8) + data[i+2]) % 251);\r\n    // h = (((h << 8) + data[i+2]) % 251);\r\n    // h = ((h<<hash_shift) ^ (c) ) & hash_mask;\r\n    // return h | (data[i]<<8);\r\n    // return (data[i] | (data[i+1]<<8));\r\n}\r\nfunction _writeBlock(BFINAL, lits, li, ebits, data, o0, l0, out, pos) {\r\n    U.lhst[256]++;\r\n    var _a = getTrees(), ML = _a[0], MD = _a[1], MH = _a[2], numl = _a[3], numd = _a[4], numh = _a[5], lset = _a[6], dset = _a[7];\r\n    var cstSize = (((pos + 3) & 7) === 0 ? 0 : 8 - ((pos + 3) & 7)) + 32 + (l0 << 3);\r\n    var fxdSize = ebits + contSize(U.fltree, U.lhst) + contSize(U.fdtree, U.dhst);\r\n    var dynSize = ebits + contSize(U.ltree, U.lhst) + contSize(U.dtree, U.dhst);\r\n    dynSize += 14 + 3 * numh + contSize(U.itree, U.ihst) + (U.ihst[16] * 2 + U.ihst[17] * 3 + U.ihst[18] * 7);\r\n    for (var j = 0; j < 286; j++)\r\n        U.lhst[j] = 0;\r\n    for (var j = 0; j < 30; j++)\r\n        U.dhst[j] = 0;\r\n    for (var j = 0; j < 19; j++)\r\n        U.ihst[j] = 0;\r\n    var BTYPE = (cstSize < fxdSize && cstSize < dynSize) ? 0 : (fxdSize < dynSize ? 1 : 2);\r\n    _putsF(out, pos, BFINAL);\r\n    _putsF(out, pos + 1, BTYPE);\r\n    pos += 3;\r\n    // let opos = pos;\r\n    if (BTYPE === 0) {\r\n        while ((pos & 7) !== 0)\r\n            pos++;\r\n        pos = _copyExact(data, o0, l0, out, pos);\r\n    }\r\n    else {\r\n        var ltree = void 0, dtree = void 0;\r\n        if (BTYPE === 1) {\r\n            ltree = U.fltree;\r\n            dtree = U.fdtree;\r\n        }\r\n        else if (BTYPE === 2) {\r\n            makeCodes(U.ltree, ML);\r\n            revCodes(U.ltree, ML);\r\n            makeCodes(U.dtree, MD);\r\n            revCodes(U.dtree, MD);\r\n            makeCodes(U.itree, MH);\r\n            revCodes(U.itree, MH);\r\n            ltree = U.ltree;\r\n            dtree = U.dtree;\r\n            _putsE(out, pos, numl - 257);\r\n            pos += 5; // 286\r\n            _putsE(out, pos, numd - 1);\r\n            pos += 5; // 30\r\n            _putsE(out, pos, numh - 4);\r\n            pos += 4; // 19\r\n            for (var i = 0; i < numh; i++)\r\n                _putsE(out, pos + i * 3, U.itree[(U.ordr[i] << 1) + 1]);\r\n            pos += 3 * numh;\r\n            pos = _codeTiny(lset, U.itree, out, pos);\r\n            pos = _codeTiny(dset, U.itree, out, pos);\r\n        }\r\n        else {\r\n            throw new Error(\"unknown BTYPE \" + BTYPE);\r\n        }\r\n        var off = o0;\r\n        for (var si = 0; si < li; si += 2) {\r\n            var qb = lits[si], len = (qb >>> 23), end = off + (qb & ((1 << 23) - 1));\r\n            while (off < end)\r\n                pos = _writeLit(data[off++], ltree, out, pos);\r\n            if (len !== 0) {\r\n                var qc = lits[si + 1], dst = (qc >> 16), lgi = (qc >> 8) & 255, dgi = (qc & 255);\r\n                pos = _writeLit(257 + lgi, ltree, out, pos);\r\n                _putsE(out, pos, len - U.of0[lgi]);\r\n                pos += U.exb[lgi];\r\n                pos = _writeLit(dgi, dtree, out, pos);\r\n                _putsF(out, pos, dst - U.df0[dgi]);\r\n                pos += U.dxb[dgi];\r\n                off += len;\r\n            }\r\n        }\r\n        pos = _writeLit(256, ltree, out, pos);\r\n    }\r\n    // console.log(pos-opos, fxdSize, dynSize, cstSize);\r\n    return pos;\r\n}\r\nfunction _copyExact(data, off, len, out, pos) {\r\n    var p8 = (pos >>> 3);\r\n    out[p8] = (len);\r\n    out[p8 + 1] = (len >>> 8);\r\n    out[p8 + 2] = 255 - out[p8];\r\n    out[p8 + 3] = 255 - out[p8 + 1];\r\n    p8 += 4;\r\n    out.set(new Uint8Array(data.buffer, off, len), p8);\r\n    // for(var i=0; i<len; i++) out[p8+i]=data[off+i];\r\n    return pos + ((len + 4) << 3);\r\n}\r\n/*\r\n    Interesting facts:\r\n    - decompressed block can have bytes, which do not occur in a Huffman tree (copied from the previous block by reference)\r\n*/\r\nfunction getTrees() {\r\n    var ML = _hufTree(U.lhst, U.ltree, 15);\r\n    var MD = _hufTree(U.dhst, U.dtree, 15);\r\n    var lset = [];\r\n    var numl = _lenCodes(U.ltree, lset);\r\n    var dset = [];\r\n    var numd = _lenCodes(U.dtree, dset);\r\n    for (var i = 0; i < lset.length; i += 2)\r\n        U.ihst[lset[i]]++;\r\n    for (var i = 0; i < dset.length; i += 2)\r\n        U.ihst[dset[i]]++;\r\n    var MH = _hufTree(U.ihst, U.itree, 7);\r\n    var numh = 19;\r\n    while (numh > 4 && U.itree[(U.ordr[numh - 1] << 1) + 1] === 0)\r\n        numh--;\r\n    return [ML, MD, MH, numl, numd, numh, lset, dset];\r\n}\r\nfunction contSize(tree, hst) {\r\n    var s = 0;\r\n    for (var i = 0; i < hst.length; i++)\r\n        s += hst[i] * tree[(i << 1) + 1];\r\n    return s;\r\n}\r\nfunction _codeTiny(set, tree, out, pos) {\r\n    for (var i = 0; i < set.length; i += 2) {\r\n        var l = set[i], rst = set[i + 1]; // console.log(l, pos, tree[(l<<1)+1]);\r\n        pos = _writeLit(l, tree, out, pos);\r\n        var rsl = l === 16 ? 2 : (l === 17 ? 3 : 7);\r\n        if (l > 15) {\r\n            _putsE(out, pos, rst);\r\n            pos += rsl;\r\n        }\r\n    }\r\n    return pos;\r\n}\r\nfunction _lenCodes(tree, set) {\r\n    var len = tree.length;\r\n    while (len !== 2 && tree[len - 1] === 0)\r\n        len -= 2; // when no distances, keep one code with length 0\r\n    for (var i = 0; i < len; i += 2) {\r\n        var l = tree[i + 1], nxt = (i + 3 < len ? tree[i + 3] : -1), nnxt = (i + 5 < len ? tree[i + 5] : -1), prv = (i === 0 ? -1 : tree[i - 1]);\r\n        if (l === 0 && nxt === l && nnxt === l) {\r\n            var lz = i + 5;\r\n            while (lz + 2 < len && tree[lz + 2] === l)\r\n                lz += 2;\r\n            var zc = Math.min((lz + 1 - i) >>> 1, 138);\r\n            if (zc < 11)\r\n                set.push(17, zc - 3);\r\n            else\r\n                set.push(18, zc - 11);\r\n            i += zc * 2 - 2;\r\n        }\r\n        else if (l === prv && nxt === l && nnxt === l) {\r\n            var lz = i + 5;\r\n            while (lz + 2 < len && tree[lz + 2] === l)\r\n                lz += 2;\r\n            var zc = Math.min((lz + 1 - i) >>> 1, 6);\r\n            set.push(16, zc - 3);\r\n            i += zc * 2 - 2;\r\n        }\r\n        else {\r\n            set.push(l, 0);\r\n        }\r\n    }\r\n    return len >>> 1;\r\n}\r\nfunction _goodIndex(v, arr) {\r\n    var i = 0;\r\n    if (arr[i | 16] <= v)\r\n        i |= 16;\r\n    if (arr[i | 8] <= v)\r\n        i |= 8;\r\n    if (arr[i | 4] <= v)\r\n        i |= 4;\r\n    if (arr[i | 2] <= v)\r\n        i |= 2;\r\n    if (arr[i | 1] <= v)\r\n        i |= 1;\r\n    return i;\r\n}\r\nfunction _writeLit(ch, ltree, out, pos) {\r\n    _putsF(out, pos, ltree[ch << 1]);\r\n    return pos + ltree[(ch << 1) + 1];\r\n}\r\nfunction _putsE(dt, pos, val) {\r\n    val = val << (pos & 7);\r\n    var o = (pos >>> 3);\r\n    dt[o] |= val;\r\n    dt[o + 1] |= (val >>> 8);\r\n}\r\nfunction _putsF(dt, pos, val) {\r\n    val = val << (pos & 7);\r\n    var o = (pos >>> 3);\r\n    dt[o] |= val;\r\n    dt[o + 1] |= (val >>> 8);\r\n    dt[o + 2] |= (val >>> 16);\r\n}\r\n//# sourceMappingURL=deflate.js.map"]},"metadata":{},"sourceType":"module"}