{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/Projects/AlphaFoldVisualisation/alphafold-viewer/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport Viewer from \"./viewer\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [url, setUrl] = useState(\"\");\n  const [searchResults, setSearchResults] = useState(null);\n\n  const updateViewer = event => {\n    const form = event.currentTarget;\n    const formElements = form.elements;\n    setUrl(formElements.url.value);\n  };\n\n  useEffect(() => {\n    console.log(url);\n  }, [url]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    updateViewer(event);\n  };\n\n  const handleSearch = async event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const formElements = form.elements;\n    const response = await fetch(`https://mygene.info/v3/query?q=${formElements.searchTerm.value}&fields=symbol%2C%20name%2C%20entrezgene&species=human&entrezonly=true`);\n    const data = await response.json();\n    setSearchResults(data.hits);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AlphaFold Protein Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Submit Alphafold URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"url\",\n          style: {\n            width: 600\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Search protein or gene:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"searchTerm\",\n          style: {\n            width: 600\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchResults && searchResults.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: [item.name, \" \", item.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: url && /*#__PURE__*/_jsxDEV(Viewer, {\n        left: 250,\n        top: 250,\n        url: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"oFmSxpy4mJ2mYzxOdW7Fe37xW2Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/daniel/Documents/Projects/AlphaFoldVisualisation/alphafold-viewer/src/App.tsx"],"names":["Viewer","useEffect","useState","App","url","setUrl","searchResults","setSearchResults","updateViewer","event","form","currentTarget","formElements","elements","value","console","log","handleSubmit","preventDefault","handleSearch","response","fetch","searchTerm","data","json","hits","width","map","item","name","symbol"],"mappings":"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","sourcesContent":["import Viewer from \"./viewer\";\nimport { useEffect, useState } from \"react\";\n\ninterface searchResultsHits {\n    entrezgeneID: string;\n    symbol: string;\n    score: number;\n    _id: string;\n    name: string;\n}\n\nfunction App() {\n    const [url, setUrl] = useState(\"\");\n    const [searchResults, setSearchResults] = useState<\n        searchResultsHits[] | null\n    >(null);\n\n    const updateViewer = (event: React.SyntheticEvent<HTMLFormElement>) => {\n        const form = event.currentTarget;\n        const formElements = form.elements as typeof form.elements & {\n            url: { value: string };\n        };\n        setUrl(formElements.url.value);\n    };\n\n    useEffect(() => {\n        console.log(url);\n    }, [url]);\n\n    const handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        updateViewer(event);\n    };\n\n    const handleSearch = async (\n        event: React.SyntheticEvent<HTMLFormElement>\n    ) => {\n        event.preventDefault();\n        const form = event.currentTarget;\n        const formElements = form.elements as typeof form.elements & {\n            searchTerm: { value: string };\n        };\n        const response = await fetch(\n            `https://mygene.info/v3/query?q=${formElements.searchTerm.value}&fields=symbol%2C%20name%2C%20entrezgene&species=human&entrezonly=true`\n        );\n        const data = await response.json();\n        setSearchResults(data.hits);\n    };\n\n    return (\n        <>\n            <h1>AlphaFold Protein Viewer</h1>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Submit Alphafold URL:\n                    <input type=\"text\" id=\"url\" style={{ width: 600 }} />\n                </label>\n                <input type=\"submit\" />\n            </form>\n            <form onSubmit={handleSearch}>\n                <label>\n                    Search protein or gene:\n                    <input type=\"text\" id=\"searchTerm\" style={{ width: 600 }} />\n                </label>\n                <input type=\"submit\" />\n            </form>\n            <br />\n            <div>\n                {searchResults &&\n                    searchResults.map((item) => (\n                        <>\n                            <button>\n                                {item.name} {item.symbol}\n                            </button>\n                            <br />\n                        </>\n                    ))}\n            </div>\n            <div>{url && <Viewer left={250} top={250} url={url}></Viewer>}</div>\n        </>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}