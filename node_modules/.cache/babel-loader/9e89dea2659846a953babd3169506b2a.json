{"ast":null,"code":"/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Vec3, Mat4 } from '../../../../mol-math/linear-algebra';\nimport { MeshBuilder } from '../mesh-builder';\nimport { Axes3D } from '../../../../mol-math/geometry';\nimport { createCage } from '../../../primitive/cage';\nvar tmpVec = Vec3();\nvar tmpMatrix = Mat4.identity();\nvar tmpVertices = new Float32Array(6 * 3);\nvar tmpEdges = new Uint8Array([0, 1, 2, 3, 4, 5]);\nexport function addAxes(state, axes, radiusScale, detail, radialSegments) {\n  var origin = axes.origin,\n      dirA = axes.dirA,\n      dirB = axes.dirB,\n      dirC = axes.dirC;\n  Vec3.add(tmpVec, origin, dirA);\n  Vec3.toArray(Vec3.add(tmpVec, origin, dirA), tmpVertices, 0);\n  Vec3.toArray(Vec3.sub(tmpVec, origin, dirA), tmpVertices, 3);\n  Vec3.toArray(Vec3.add(tmpVec, origin, dirB), tmpVertices, 6);\n  Vec3.toArray(Vec3.sub(tmpVec, origin, dirB), tmpVertices, 9);\n  Vec3.toArray(Vec3.add(tmpVec, origin, dirC), tmpVertices, 12);\n  Vec3.toArray(Vec3.sub(tmpVec, origin, dirC), tmpVertices, 15);\n  var cage = createCage(tmpVertices, tmpEdges);\n  var volume = Axes3D.volume(axes);\n  var radius = Math.cbrt(volume) / 300 * radiusScale;\n  MeshBuilder.addCage(state, tmpMatrix, cage, radius, detail, radialSegments);\n}","map":{"version":3,"sources":["../../../../../src/mol-geo/geometry/mesh/builder/axes.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,SAAS,IAAT,EAAe,IAAf,QAA2B,qCAA3B;AACA,SAAS,WAAT,QAA4B,iBAA5B;AACA,SAAS,MAAT,QAAuB,+BAAvB;AACA,SAAS,UAAT,QAA2B,yBAA3B;AAEA,IAAM,MAAM,GAAG,IAAI,EAAnB;AACA,IAAM,SAAS,GAAG,IAAI,CAAC,QAAL,EAAlB;AAEA,IAAM,WAAW,GAAG,IAAI,YAAJ,CAAiB,IAAI,CAArB,CAApB;AACA,IAAM,QAAQ,GAAG,IAAI,UAAJ,CAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAf,CAAjB;AAEA,OAAM,SAAU,OAAV,CAAkB,KAAlB,EAA4C,IAA5C,EAA0D,WAA1D,EAA+E,MAA/E,EAA+F,cAA/F,EAAqH;AAC/G,MAAA,MAAM,GAAuB,IAAI,CAA3B,MAAN;AAAA,MAAQ,IAAI,GAAiB,IAAI,CAArB,IAAZ;AAAA,MAAc,IAAI,GAAW,IAAI,CAAf,IAAlB;AAAA,MAAoB,IAAI,GAAK,IAAI,CAAT,IAAxB;AAER,EAAA,IAAI,CAAC,GAAL,CAAS,MAAT,EAAiB,MAAjB,EAAyB,IAAzB;AACA,EAAA,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,GAAL,CAAS,MAAT,EAAiB,MAAjB,EAAyB,IAAzB,CAAb,EAA6C,WAA7C,EAA0D,CAA1D;AACA,EAAA,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,GAAL,CAAS,MAAT,EAAiB,MAAjB,EAAyB,IAAzB,CAAb,EAA6C,WAA7C,EAA0D,CAA1D;AACA,EAAA,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,GAAL,CAAS,MAAT,EAAiB,MAAjB,EAAyB,IAAzB,CAAb,EAA6C,WAA7C,EAA0D,CAA1D;AACA,EAAA,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,GAAL,CAAS,MAAT,EAAiB,MAAjB,EAAyB,IAAzB,CAAb,EAA6C,WAA7C,EAA0D,CAA1D;AACA,EAAA,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,GAAL,CAAS,MAAT,EAAiB,MAAjB,EAAyB,IAAzB,CAAb,EAA6C,WAA7C,EAA0D,EAA1D;AACA,EAAA,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,GAAL,CAAS,MAAT,EAAiB,MAAjB,EAAyB,IAAzB,CAAb,EAA6C,WAA7C,EAA0D,EAA1D;AAEA,MAAM,IAAI,GAAG,UAAU,CAAC,WAAD,EAAc,QAAd,CAAvB;AACA,MAAM,MAAM,GAAG,MAAM,CAAC,MAAP,CAAc,IAAd,CAAf;AACA,MAAM,MAAM,GAAI,IAAI,CAAC,IAAL,CAAU,MAAV,IAAoB,GAArB,GAA4B,WAA3C;AAEA,EAAA,WAAW,CAAC,OAAZ,CAAoB,KAApB,EAA2B,SAA3B,EAAsC,IAAtC,EAA4C,MAA5C,EAAoD,MAApD,EAA4D,cAA5D;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Vec3, Mat4 } from '../../../../mol-math/linear-algebra';\r\nimport { MeshBuilder } from '../mesh-builder';\r\nimport { Axes3D } from '../../../../mol-math/geometry';\r\nimport { createCage } from '../../../primitive/cage';\r\nvar tmpVec = Vec3();\r\nvar tmpMatrix = Mat4.identity();\r\nvar tmpVertices = new Float32Array(6 * 3);\r\nvar tmpEdges = new Uint8Array([0, 1, 2, 3, 4, 5]);\r\nexport function addAxes(state, axes, radiusScale, detail, radialSegments) {\r\n    var origin = axes.origin, dirA = axes.dirA, dirB = axes.dirB, dirC = axes.dirC;\r\n    Vec3.add(tmpVec, origin, dirA);\r\n    Vec3.toArray(Vec3.add(tmpVec, origin, dirA), tmpVertices, 0);\r\n    Vec3.toArray(Vec3.sub(tmpVec, origin, dirA), tmpVertices, 3);\r\n    Vec3.toArray(Vec3.add(tmpVec, origin, dirB), tmpVertices, 6);\r\n    Vec3.toArray(Vec3.sub(tmpVec, origin, dirB), tmpVertices, 9);\r\n    Vec3.toArray(Vec3.add(tmpVec, origin, dirC), tmpVertices, 12);\r\n    Vec3.toArray(Vec3.sub(tmpVec, origin, dirC), tmpVertices, 15);\r\n    var cage = createCage(tmpVertices, tmpEdges);\r\n    var volume = Axes3D.volume(axes);\r\n    var radius = (Math.cbrt(volume) / 300) * radiusScale;\r\n    MeshBuilder.addCage(state, tmpMatrix, cage, radius, detail, radialSegments);\r\n}\r\n//# sourceMappingURL=axes.js.map"]},"metadata":{},"sourceType":"module"}