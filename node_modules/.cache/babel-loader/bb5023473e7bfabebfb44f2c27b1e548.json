{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/Projects/AlphaFoldVisualisation/alphafold-viewer/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport Viewer from './viewer';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [url, setUrl] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const formElements = form.elements;\n    setUrl(formElements.url.value);\n  };\n\n  const handleSearch = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const formElements = form.elements;\n    fetch(`https://mygene.info/v3/query?q=${formElements.searchTerm.value}&species=human`).then(response => response.json()).then(data => setSearchResults(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AlphaFold Protein Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Submit Alphafold URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"url\",\n          style: {\n            width: 600\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Search protein or gene:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"searchTerm\",\n          style: {\n            width: 600\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchResults && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: searchResults.map(item => /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 61\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: url && /*#__PURE__*/_jsxDEV(Viewer, {\n        top: 250,\n        url: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"4zEnwaAWkHVbtjvow1Mq4LlNuXE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/daniel/Documents/Projects/AlphaFoldVisualisation/alphafold-viewer/src/App.tsx"],"names":["Viewer","useState","App","url","setUrl","searchResults","setSearchResults","handleSubmit","event","preventDefault","form","currentTarget","formElements","elements","value","handleSearch","fetch","searchTerm","then","response","json","data","width","map","item"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAwB,OAAxB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBH,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAK,EAAL,CAAlD;;AAEA,QAAMM,YAAY,GAAIC,KAAD,IAAkD;AACnEA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,aAAnB;AACA,UAAMC,YAAY,GAAGF,IAAI,CAACG,QAA1B;AAGAT,IAAAA,MAAM,CAACQ,YAAY,CAACT,GAAb,CAAiBW,KAAlB,CAAN;AACH,GAPD;;AASA,QAAMC,YAAY,GAAIP,KAAD,IAAkD;AACnEA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,aAAnB;AACA,UAAMC,YAAY,GAAGF,IAAI,CAACG,QAA1B;AAGAG,IAAAA,KAAK,CAAE,kCAAiCJ,YAAY,CAACK,UAAb,CAAwBH,KAAM,gBAAjE,CAAL,CACCI,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIf,gBAAgB,CAACe,IAAD,CAF9B;AAGH,GATD;;AAWA,sBAAO;AAAA,4BACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,eAEP;AAAM,MAAA,QAAQ,EAAEd,YAAhB;AAAA,8BACE;AAAA,yDACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,KAFL;AAGE,UAAA,KAAK,EAAE;AAAEe,YAAAA,KAAK,EAAE;AAAT;AAHT;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFO,eAYP;AAAM,MAAA,QAAQ,EAAEP,YAAhB;AAAA,8BACE;AAAA,2DACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,YAFL;AAGE,UAAA,KAAK,EAAE;AAAEO,YAAAA,KAAK,EAAE;AAAT;AAHT;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZO,eAsBP;AAAA;AAAA;AAAA;AAAA,YAtBO,eAuBP;AAAA,gBACMjB,aAAa,iBAAI;AAAA,kBAAKA,aAAa,CAACkB,GAAd,CAAmBC,IAAD,iBAAU;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAA5B;AAAL;AAAA;AAAA;AAAA;AAAA;AADvB;AAAA;AAAA;AAAA;AAAA,YAvBO,eA0BP;AAAA,gBACKrB,GAAG,iBAAI,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAE,GAAb;AAAkB,QAAA,GAAG,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,YA1BO;AAAA,kBAAP;AA8BH;;GAtDQD,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import Viewer from './viewer'\nimport { useState} from 'react'\n\nfunction App() {    \n    const [url, setUrl] = useState('')\n    const [searchResults, setSearchResults] = useState<[]>([])\n\n    const handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const form = event.currentTarget\n        const formElements = form.elements as typeof form.elements & {\n            url: {value: string}\n          }        \n        setUrl(formElements.url.value)\n    }\n\n    const handleSearch = (event: React.SyntheticEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const form = event.currentTarget\n        const formElements = form.elements as typeof form.elements & {\n            searchTerm: {value: string}\n          }        \n        fetch(`https://mygene.info/v3/query?q=${formElements.searchTerm.value}&species=human`)\n        .then(response => response.json())\n        .then(data => setSearchResults(data));\n    }\n\n    return <>\n    <h1>AlphaFold Protein Viewer</h1>\n    <form onSubmit={handleSubmit}>\n      <label>Submit Alphafold URL:\n        <input \n          type=\"text\"\n          id=\"url\"\n          style={{ width: 600 }}\n        />\n      </label>\n      <input type=\"submit\" />\n    </form>\n    <form onSubmit={handleSearch}>\n      <label>Search protein or gene:\n        <input \n          type=\"text\"\n          id=\"searchTerm\"\n          style={{ width: 600 }}\n        />\n      </label>\n      <input type=\"submit\" />\n    </form>\n    <br/>\n    <div>\n        { searchResults && <h1>{searchResults.map((item) => <h2>{item}</h2>)}</h1> }\n    </div>\n    <div>\n        {url && <Viewer top={250} url={url} ></Viewer>}\n    </div>\n    </>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}