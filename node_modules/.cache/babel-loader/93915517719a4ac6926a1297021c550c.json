{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { IntAdjacencyGraph } from '../../../mol-math/graph';\nimport { InteractionsIntraContacts, InteractionsInterContacts } from './common';\nimport { InterUnitGraph } from '../../../mol-math/graph/inter-unit-graph';\nexport { IntraContactsBuilder };\nvar IntraContactsBuilder;\n\n(function (IntraContactsBuilder) {\n  function create(features, elementsCount) {\n    var aIndices = [];\n    var bIndices = [];\n    var types = [];\n    return {\n      add: function (indexA, indexB, type) {\n        aIndices[aIndices.length] = indexA;\n        bIndices[bIndices.length] = indexB;\n        types[types.length] = type;\n      },\n      getContacts: function () {\n        var builder = new IntAdjacencyGraph.EdgeBuilder(features.count, aIndices, bIndices);\n        var type = new Int8Array(builder.slotCount);\n        var flag = new Int8Array(builder.slotCount);\n\n        for (var i = 0, _i = builder.edgeCount; i < _i; i++) {\n          builder.addNextEdge();\n          builder.assignProperty(type, types[i]);\n        }\n\n        var graph = builder.createGraph({\n          type: type,\n          flag: flag\n        });\n        var elementsIndex;\n        var contacts = Object.defineProperty(graph, 'elementsIndex', {\n          get: function () {\n            return elementsIndex || (elementsIndex = InteractionsIntraContacts.createElementsIndex(graph, features, elementsCount));\n          }\n        });\n        return contacts;\n      }\n    };\n  }\n\n  IntraContactsBuilder.create = create;\n})(IntraContactsBuilder || (IntraContactsBuilder = {}));\n\nexport { InterContactsBuilder };\nvar InterContactsBuilder;\n\n(function (InterContactsBuilder) {\n  function create() {\n    var builder = new InterUnitGraph.Builder();\n    return {\n      startUnitPair: function (unitA, unitB) {\n        builder.startUnitPair(unitA.id, unitB.id);\n      },\n      finishUnitPair: function () {\n        builder.finishUnitPair();\n      },\n      add: function (indexA, indexB, type) {\n        builder.add(indexA, indexB, {\n          type: type,\n          flag: 0\n          /* None */\n\n        });\n      },\n      getContacts: function (unitsFeatures) {\n        return new InteractionsInterContacts(builder.getMap(), unitsFeatures);\n      }\n    };\n  }\n\n  InterContactsBuilder.create = create;\n})(InterContactsBuilder || (InterContactsBuilder = {}));","map":{"version":3,"sources":["../../../../src/mol-model-props/computed/interactions/contacts-builder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { IntAdjacencyGraph } from '../../../mol-math/graph';\r\nimport { InteractionsIntraContacts, InteractionsInterContacts } from './common';\r\nimport { InterUnitGraph } from '../../../mol-math/graph/inter-unit-graph';\r\nexport { IntraContactsBuilder };\r\nvar IntraContactsBuilder;\r\n(function (IntraContactsBuilder) {\r\n    function create(features, elementsCount) {\r\n        var aIndices = [];\r\n        var bIndices = [];\r\n        var types = [];\r\n        return {\r\n            add: function (indexA, indexB, type) {\r\n                aIndices[aIndices.length] = indexA;\r\n                bIndices[bIndices.length] = indexB;\r\n                types[types.length] = type;\r\n            },\r\n            getContacts: function () {\r\n                var builder = new IntAdjacencyGraph.EdgeBuilder(features.count, aIndices, bIndices);\r\n                var type = new Int8Array(builder.slotCount);\r\n                var flag = new Int8Array(builder.slotCount);\r\n                for (var i = 0, _i = builder.edgeCount; i < _i; i++) {\r\n                    builder.addNextEdge();\r\n                    builder.assignProperty(type, types[i]);\r\n                }\r\n                var graph = builder.createGraph({ type: type, flag: flag });\r\n                var elementsIndex;\r\n                var contacts = Object.defineProperty(graph, 'elementsIndex', {\r\n                    get: function () {\r\n                        return elementsIndex || (elementsIndex = InteractionsIntraContacts.createElementsIndex(graph, features, elementsCount));\r\n                    }\r\n                });\r\n                return contacts;\r\n            }\r\n        };\r\n    }\r\n    IntraContactsBuilder.create = create;\r\n})(IntraContactsBuilder || (IntraContactsBuilder = {}));\r\nexport { InterContactsBuilder };\r\nvar InterContactsBuilder;\r\n(function (InterContactsBuilder) {\r\n    function create() {\r\n        var builder = new InterUnitGraph.Builder();\r\n        return {\r\n            startUnitPair: function (unitA, unitB) {\r\n                builder.startUnitPair(unitA.id, unitB.id);\r\n            },\r\n            finishUnitPair: function () {\r\n                builder.finishUnitPair();\r\n            },\r\n            add: function (indexA, indexB, type) {\r\n                builder.add(indexA, indexB, { type: type, flag: 0 /* None */ });\r\n            },\r\n            getContacts: function (unitsFeatures) {\r\n                return new InteractionsInterContacts(builder.getMap(), unitsFeatures);\r\n            }\r\n        };\r\n    }\r\n    InterContactsBuilder.create = create;\r\n})(InterContactsBuilder || (InterContactsBuilder = {}));\r\n//# sourceMappingURL=contacts-builder.js.map"]},"metadata":{},"sourceType":"module"}