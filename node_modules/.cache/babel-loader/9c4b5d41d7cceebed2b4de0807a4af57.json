{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { createRenderable } from '../renderable';\nimport { createGraphicsRenderItem } from '../webgl/render-item';\nimport { GlobalUniformSchema, BaseSchema, DefineSpec, InternalSchema, UniformSpec, TextureSpec, GlobalTextureSchema } from './schema';\nimport { MeshShaderCode } from '../shader-code';\nimport { ValueCell } from '../../mol-util';\nexport var TextureMeshSchema = __assign(__assign({}, BaseSchema), {\n  uGeoTexDim: UniformSpec('v2', 'buffered'),\n  tPosition: TextureSpec('texture', 'rgb', 'float', 'nearest'),\n  tGroup: TextureSpec('texture', 'alpha', 'float', 'nearest'),\n  tNormal: TextureSpec('texture', 'rgb', 'float', 'nearest'),\n  dFlatShaded: DefineSpec('boolean'),\n  dDoubleSided: DefineSpec('boolean'),\n  dFlipSided: DefineSpec('boolean'),\n  dIgnoreLight: DefineSpec('boolean'),\n  dXrayShaded: DefineSpec('boolean'),\n  dGeoTexture: DefineSpec('boolean')\n});\nexport function TextureMeshRenderable(ctx, id, values, state, materialId) {\n  var schema = __assign(__assign(__assign(__assign({}, GlobalUniformSchema), GlobalTextureSchema), InternalSchema), TextureMeshSchema);\n\n  var internalValues = {\n    uObjectId: ValueCell.create(id)\n  };\n  var shaderCode = MeshShaderCode;\n  var renderItem = createGraphicsRenderItem(ctx, 'triangles', shaderCode, schema, __assign(__assign({}, values), internalValues), materialId);\n  return createRenderable(renderItem, values, state);\n}","map":{"version":3,"sources":["../../../src/mol-gl/renderable/texture-mesh.ts"],"names":[],"mappings":"AAAA;;;;AAIG;;AAEH,SAAsC,gBAAtC,QAA8D,eAA9D;AAEA,SAAS,wBAAT,QAAyC,sBAAzC;AACA,SAAS,mBAAT,EAA8B,UAA9B,EAA0C,UAA1C,EAA8D,cAA9D,EAA8F,WAA9F,EAA2G,WAA3G,EAAwH,mBAAxH,QAAmJ,UAAnJ;AACA,SAAS,cAAT,QAA+B,gBAA/B;AACA,SAAS,SAAT,QAA0B,gBAA1B;AAEA,OAAO,IAAM,iBAAiB,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACvB,UADuB,CAAA,EACb;AACb,EAAA,UAAU,EAAE,WAAW,CAAC,IAAD,EAAO,UAAP,CADV;AAEb,EAAA,SAAS,EAAE,WAAW,CAAC,SAAD,EAAY,KAAZ,EAAmB,OAAnB,EAA4B,SAA5B,CAFT;AAGb,EAAA,MAAM,EAAE,WAAW,CAAC,SAAD,EAAY,OAAZ,EAAqB,OAArB,EAA8B,SAA9B,CAHN;AAIb,EAAA,OAAO,EAAE,WAAW,CAAC,SAAD,EAAY,KAAZ,EAAmB,OAAnB,EAA4B,SAA5B,CAJP;AAMb,EAAA,WAAW,EAAE,UAAU,CAAC,SAAD,CANV;AAOb,EAAA,YAAY,EAAE,UAAU,CAAC,SAAD,CAPX;AAQb,EAAA,UAAU,EAAE,UAAU,CAAC,SAAD,CART;AASb,EAAA,YAAY,EAAE,UAAU,CAAC,SAAD,CATX;AAUb,EAAA,WAAW,EAAE,UAAU,CAAC,SAAD,CAVV;AAWb,EAAA,WAAW,EAAE,UAAU,CAAC,SAAD;AAXV,CADa,CAAvB;AAiBP,OAAM,SAAU,qBAAV,CAAgC,GAAhC,EAAmD,EAAnD,EAA+D,MAA/D,EAA0F,KAA1F,EAAkH,UAAlH,EAAoI;AACtI,MAAM,MAAM,GAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,mBAAR,CAAA,EAAgC,mBAAhC,CAAA,EAAwD,cAAxD,CAAA,EAA2E,iBAA3E,CAAZ;;AACA,MAAM,cAAc,GAAmB;AACnC,IAAA,SAAS,EAAE,SAAS,CAAC,MAAV,CAAiB,EAAjB;AADwB,GAAvC;AAGA,MAAM,UAAU,GAAG,cAAnB;AACA,MAAM,UAAU,GAAG,wBAAwB,CAAC,GAAD,EAAM,WAAN,EAAmB,UAAnB,EAA+B,MAA/B,EAAqC,QAAA,CAAA,QAAA,CAAA,EAAA,EAAO,MAAP,CAAA,EAAkB,cAAlB,CAArC,EAAyE,UAAzE,CAA3C;AAEA,SAAO,gBAAgB,CAAC,UAAD,EAAa,MAAb,EAAqB,KAArB,CAAvB;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { createRenderable } from '../renderable';\r\nimport { createGraphicsRenderItem } from '../webgl/render-item';\r\nimport { GlobalUniformSchema, BaseSchema, DefineSpec, InternalSchema, UniformSpec, TextureSpec, GlobalTextureSchema } from './schema';\r\nimport { MeshShaderCode } from '../shader-code';\r\nimport { ValueCell } from '../../mol-util';\r\nexport var TextureMeshSchema = __assign(__assign({}, BaseSchema), { uGeoTexDim: UniformSpec('v2', 'buffered'), tPosition: TextureSpec('texture', 'rgb', 'float', 'nearest'), tGroup: TextureSpec('texture', 'alpha', 'float', 'nearest'), tNormal: TextureSpec('texture', 'rgb', 'float', 'nearest'), dFlatShaded: DefineSpec('boolean'), dDoubleSided: DefineSpec('boolean'), dFlipSided: DefineSpec('boolean'), dIgnoreLight: DefineSpec('boolean'), dXrayShaded: DefineSpec('boolean'), dGeoTexture: DefineSpec('boolean') });\r\nexport function TextureMeshRenderable(ctx, id, values, state, materialId) {\r\n    var schema = __assign(__assign(__assign(__assign({}, GlobalUniformSchema), GlobalTextureSchema), InternalSchema), TextureMeshSchema);\r\n    var internalValues = {\r\n        uObjectId: ValueCell.create(id),\r\n    };\r\n    var shaderCode = MeshShaderCode;\r\n    var renderItem = createGraphicsRenderItem(ctx, 'triangles', shaderCode, schema, __assign(__assign({}, values), internalValues), materialId);\r\n    return createRenderable(renderItem, values, state);\r\n}\r\n//# sourceMappingURL=texture-mesh.js.map"]},"metadata":{},"sourceType":"module"}