{"ast":null,"code":"/**\r\n * Copyright (c) 2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { UnitsLinesParams, UnitsLinesVisual } from '../units-visual';\nimport { Unit } from '../../../mol-model/structure';\nimport { Vec3 } from '../../../mol-math/linear-algebra';\nimport { ElementIterator, getElementLoci, eachElement, makeElementIgnoreTest } from './util/element';\nimport { Sphere3D } from '../../../mol-math/geometry';\nimport { Lines } from '../../../mol-geo/geometry/lines/lines';\nimport { LinesBuilder } from '../../../mol-geo/geometry/lines/lines-builder';\nimport { bondCount } from '../../../mol-model-props/computed/chemistry/util'; // avoiding namespace lookup improved performance in Chrome (Aug 2020)\n\nvar v3scaleAndAdd = Vec3.scaleAndAdd;\nvar v3unitX = Vec3.unitX;\nvar v3unitY = Vec3.unitY;\nvar v3unitZ = Vec3.unitZ;\nexport var ElementCrossParams = __assign(__assign({}, UnitsLinesParams), {\n  lineSizeAttenuation: PD.Boolean(false),\n  ignoreHydrogens: PD.Boolean(false),\n  traceOnly: PD.Boolean(false),\n  crosses: PD.Select('lone', PD.arrayToOptions(['lone', 'all'])),\n  crossSize: PD.Numeric(0.35, {\n    min: 0,\n    max: 2,\n    step: 0.01\n  })\n});\nexport function createElementCross(ctx, unit, structure, theme, props, lines) {\n  var child = structure.child;\n  if (child && !child.unitMap.get(unit.id)) return Lines.createEmpty(lines);\n  var elements = unit.elements;\n  var n = elements.length;\n  var builder = LinesBuilder.create(n, n / 10, lines);\n  var p = Vec3();\n  var s = Vec3();\n  var e = Vec3();\n  var pos = unit.conformation.invariantPosition;\n  var ignore = makeElementIgnoreTest(structure, unit, props);\n  var r = props.crossSize / 2;\n  var lone = props.crosses === 'lone';\n\n  for (var i = 0; i < n; ++i) {\n    if (ignore && ignore(elements[i])) continue;\n    if (lone && Unit.isAtomic(unit) && bondCount(structure, unit, i) !== 0) continue;\n    pos(elements[i], p);\n    v3scaleAndAdd(s, p, v3unitX, r);\n    v3scaleAndAdd(e, p, v3unitX, -r);\n    builder.add(s[0], s[1], s[2], e[0], e[1], e[2], i);\n    v3scaleAndAdd(s, p, v3unitY, r);\n    v3scaleAndAdd(e, p, v3unitY, -r);\n    builder.add(s[0], s[1], s[2], e[0], e[1], e[2], i);\n    v3scaleAndAdd(s, p, v3unitZ, r);\n    v3scaleAndAdd(e, p, v3unitZ, -r);\n    builder.add(s[0], s[1], s[2], e[0], e[1], e[2], i);\n  }\n\n  var l = builder.getLines();\n  var sphere = Sphere3D.expand(Sphere3D(), unit.boundary.sphere, 1 * props.sizeFactor);\n  l.setBoundingSphere(sphere);\n  return l;\n}\nexport function ElementCrossVisual(materialId) {\n  return UnitsLinesVisual({\n    defaultProps: PD.getDefaultValues(ElementCrossParams),\n    createGeometry: createElementCross,\n    createLocationIterator: ElementIterator.fromGroup,\n    getLoci: getElementLoci,\n    eachLocation: eachElement,\n    setUpdateState: function (state, newProps, currentProps) {\n      state.createGeometry = newProps.ignoreHydrogens !== currentProps.ignoreHydrogens || newProps.traceOnly !== currentProps.traceOnly || newProps.crosses !== currentProps.crosses || newProps.crossSize !== currentProps.crossSize;\n    }\n  }, materialId);\n}","map":{"version":3,"sources":["../../../../src/mol-repr/structure/visual/element-cross.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { UnitsLinesParams, UnitsLinesVisual } from '../units-visual';\r\nimport { Unit } from '../../../mol-model/structure';\r\nimport { Vec3 } from '../../../mol-math/linear-algebra';\r\nimport { ElementIterator, getElementLoci, eachElement, makeElementIgnoreTest } from './util/element';\r\nimport { Sphere3D } from '../../../mol-math/geometry';\r\nimport { Lines } from '../../../mol-geo/geometry/lines/lines';\r\nimport { LinesBuilder } from '../../../mol-geo/geometry/lines/lines-builder';\r\nimport { bondCount } from '../../../mol-model-props/computed/chemistry/util';\r\n// avoiding namespace lookup improved performance in Chrome (Aug 2020)\r\nvar v3scaleAndAdd = Vec3.scaleAndAdd;\r\nvar v3unitX = Vec3.unitX;\r\nvar v3unitY = Vec3.unitY;\r\nvar v3unitZ = Vec3.unitZ;\r\nexport var ElementCrossParams = __assign(__assign({}, UnitsLinesParams), { lineSizeAttenuation: PD.Boolean(false), ignoreHydrogens: PD.Boolean(false), traceOnly: PD.Boolean(false), crosses: PD.Select('lone', PD.arrayToOptions(['lone', 'all'])), crossSize: PD.Numeric(0.35, { min: 0, max: 2, step: 0.01 }) });\r\nexport function createElementCross(ctx, unit, structure, theme, props, lines) {\r\n    var child = structure.child;\r\n    if (child && !child.unitMap.get(unit.id))\r\n        return Lines.createEmpty(lines);\r\n    var elements = unit.elements;\r\n    var n = elements.length;\r\n    var builder = LinesBuilder.create(n, n / 10, lines);\r\n    var p = Vec3();\r\n    var s = Vec3();\r\n    var e = Vec3();\r\n    var pos = unit.conformation.invariantPosition;\r\n    var ignore = makeElementIgnoreTest(structure, unit, props);\r\n    var r = props.crossSize / 2;\r\n    var lone = props.crosses === 'lone';\r\n    for (var i = 0; i < n; ++i) {\r\n        if (ignore && ignore(elements[i]))\r\n            continue;\r\n        if (lone && Unit.isAtomic(unit) && bondCount(structure, unit, i) !== 0)\r\n            continue;\r\n        pos(elements[i], p);\r\n        v3scaleAndAdd(s, p, v3unitX, r);\r\n        v3scaleAndAdd(e, p, v3unitX, -r);\r\n        builder.add(s[0], s[1], s[2], e[0], e[1], e[2], i);\r\n        v3scaleAndAdd(s, p, v3unitY, r);\r\n        v3scaleAndAdd(e, p, v3unitY, -r);\r\n        builder.add(s[0], s[1], s[2], e[0], e[1], e[2], i);\r\n        v3scaleAndAdd(s, p, v3unitZ, r);\r\n        v3scaleAndAdd(e, p, v3unitZ, -r);\r\n        builder.add(s[0], s[1], s[2], e[0], e[1], e[2], i);\r\n    }\r\n    var l = builder.getLines();\r\n    var sphere = Sphere3D.expand(Sphere3D(), unit.boundary.sphere, 1 * props.sizeFactor);\r\n    l.setBoundingSphere(sphere);\r\n    return l;\r\n}\r\nexport function ElementCrossVisual(materialId) {\r\n    return UnitsLinesVisual({\r\n        defaultProps: PD.getDefaultValues(ElementCrossParams),\r\n        createGeometry: createElementCross,\r\n        createLocationIterator: ElementIterator.fromGroup,\r\n        getLoci: getElementLoci,\r\n        eachLocation: eachElement,\r\n        setUpdateState: function (state, newProps, currentProps) {\r\n            state.createGeometry = (newProps.ignoreHydrogens !== currentProps.ignoreHydrogens ||\r\n                newProps.traceOnly !== currentProps.traceOnly ||\r\n                newProps.crosses !== currentProps.crosses ||\r\n                newProps.crossSize !== currentProps.crossSize);\r\n        }\r\n    }, materialId);\r\n}\r\n//# sourceMappingURL=element-cross.js.map"]},"metadata":{},"sourceType":"module"}