{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { isDebugMode } from '../../mol-util/debug';\nimport { getErrorDescription } from './context';\nimport { getProgram } from './program';\nimport { getShader } from './shader';\nexport function isWebGL(gl) {\n  return typeof WebGLRenderingContext !== 'undefined' && gl instanceof WebGLRenderingContext;\n}\nexport function isWebGL2(gl) {\n  return typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n}\nexport function getInstancedArrays(gl) {\n  if (isWebGL2(gl)) {\n    return {\n      drawArraysInstanced: gl.drawArraysInstanced.bind(gl),\n      drawElementsInstanced: gl.drawElementsInstanced.bind(gl),\n      vertexAttribDivisor: gl.vertexAttribDivisor.bind(gl),\n      VERTEX_ATTRIB_ARRAY_DIVISOR: gl.VERTEX_ATTRIB_ARRAY_DIVISOR\n    };\n  } else {\n    var ext = gl.getExtension('ANGLE_instanced_arrays');\n    if (ext === null) return null;\n    return {\n      drawArraysInstanced: ext.drawArraysInstancedANGLE.bind(ext),\n      drawElementsInstanced: ext.drawElementsInstancedANGLE.bind(ext),\n      vertexAttribDivisor: ext.vertexAttribDivisorANGLE.bind(ext),\n      VERTEX_ATTRIB_ARRAY_DIVISOR: ext.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE\n    };\n  }\n}\nexport function getStandardDerivatives(gl) {\n  if (isWebGL2(gl)) {\n    return {\n      FRAGMENT_SHADER_DERIVATIVE_HINT: gl.FRAGMENT_SHADER_DERIVATIVE_HINT\n    };\n  } else {\n    var ext = gl.getExtension('OES_standard_derivatives');\n    if (ext === null) return null;\n    return {\n      FRAGMENT_SHADER_DERIVATIVE_HINT: ext.FRAGMENT_SHADER_DERIVATIVE_HINT_OES\n    };\n  }\n}\nexport function getElementIndexUint(gl) {\n  return isWebGL2(gl) ? {} : gl.getExtension('OES_element_index_uint');\n}\nexport function getVertexArrayObject(gl) {\n  if (isWebGL2(gl)) {\n    return {\n      VERTEX_ARRAY_BINDING: gl.VERTEX_ARRAY_BINDING,\n      bindVertexArray: gl.bindVertexArray.bind(gl),\n      createVertexArray: gl.createVertexArray.bind(gl),\n      deleteVertexArray: gl.deleteVertexArray.bind(gl),\n      isVertexArray: gl.isVertexArray.bind(gl)\n    };\n  } else {\n    var ext = gl.getExtension('OES_vertex_array_object');\n    if (ext === null) return null;\n    return {\n      VERTEX_ARRAY_BINDING: ext.VERTEX_ARRAY_BINDING_OES,\n      bindVertexArray: ext.bindVertexArrayOES.bind(ext),\n      createVertexArray: ext.createVertexArrayOES.bind(ext),\n      deleteVertexArray: ext.deleteVertexArrayOES.bind(ext),\n      isVertexArray: ext.isVertexArrayOES.bind(ext)\n    };\n  }\n}\nexport function getTextureFloat(gl) {\n  return isWebGL2(gl) ? {} : gl.getExtension('OES_texture_float');\n}\nexport function getTextureFloatLinear(gl) {\n  return gl.getExtension('OES_texture_float_linear');\n}\nexport function getTextureHalfFloat(gl) {\n  if (isWebGL2(gl)) {\n    return {\n      HALF_FLOAT: gl.HALF_FLOAT\n    };\n  } else {\n    var ext = gl.getExtension('OES_texture_half_float');\n    if (ext === null) return null;\n    return {\n      HALF_FLOAT: ext.HALF_FLOAT_OES\n    };\n  }\n}\nexport function getTextureHalfFloatLinear(gl) {\n  return gl.getExtension('OES_texture_half_float_linear');\n}\nexport function getBlendMinMax(gl) {\n  if (isWebGL2(gl)) {\n    return {\n      MIN: gl.MIN,\n      MAX: gl.MAX\n    };\n  } else {\n    var ext = gl.getExtension('EXT_blend_minmax');\n    if (ext === null) return null;\n    return {\n      MIN: ext.MIN_EXT,\n      MAX: ext.MAX_EXT\n    };\n  }\n}\nexport function getFragDepth(gl) {\n  return isWebGL2(gl) ? {} : gl.getExtension('EXT_frag_depth');\n}\nexport function getColorBufferFloat(gl) {\n  if (isWebGL2(gl)) {\n    if (gl.getExtension('EXT_color_buffer_float') === null) return null;\n    gl.getExtension('EXT_float_blend');\n    return {\n      RGBA32F: gl.RGBA32F\n    };\n  } else {\n    var ext = gl.getExtension('WEBGL_color_buffer_float');\n\n    if (ext === null) {\n      // test as support may not be advertised by browsers\n      gl.getExtension('OES_texture_float');\n      return testColorBuffer(gl, gl.FLOAT) ? {\n        RGBA32F: 0x8814\n      } : null;\n    }\n\n    gl.getExtension('EXT_float_blend');\n    return {\n      RGBA32F: ext.RGBA32F_EXT\n    };\n  }\n}\nexport function getColorBufferHalfFloat(gl) {\n  if (isWebGL2(gl)) {\n    if (gl.getExtension('EXT_color_buffer_half_float') === null) return null;\n    gl.getExtension('EXT_float_blend');\n    return {\n      RGBA16F: gl.RGBA16F\n    };\n  } else {\n    var ext = gl.getExtension('EXT_color_buffer_half_float');\n\n    if (ext === null) {\n      // test as support may not be advertised by browsers\n      gl.getExtension('OES_texture_half_float');\n      return testColorBuffer(gl, 0x8D61) ? {\n        RGBA16F: 0x881A\n      } : null;\n    }\n\n    gl.getExtension('EXT_float_blend');\n    return {\n      RGBA16F: ext.RGBA16F_EXT\n    };\n  }\n}\nexport function getDrawBuffers(gl) {\n  if (isWebGL2(gl)) {\n    return {\n      drawBuffers: gl.drawBuffers.bind(gl),\n      COLOR_ATTACHMENT0: gl.COLOR_ATTACHMENT0,\n      COLOR_ATTACHMENT1: gl.COLOR_ATTACHMENT1,\n      COLOR_ATTACHMENT2: gl.COLOR_ATTACHMENT2,\n      COLOR_ATTACHMENT3: gl.COLOR_ATTACHMENT3,\n      COLOR_ATTACHMENT4: gl.COLOR_ATTACHMENT4,\n      COLOR_ATTACHMENT5: gl.COLOR_ATTACHMENT5,\n      COLOR_ATTACHMENT6: gl.COLOR_ATTACHMENT6,\n      COLOR_ATTACHMENT7: gl.COLOR_ATTACHMENT7,\n      DRAW_BUFFER0: gl.DRAW_BUFFER0,\n      DRAW_BUFFER1: gl.DRAW_BUFFER1,\n      DRAW_BUFFER2: gl.DRAW_BUFFER2,\n      DRAW_BUFFER3: gl.DRAW_BUFFER3,\n      DRAW_BUFFER4: gl.DRAW_BUFFER4,\n      DRAW_BUFFER5: gl.DRAW_BUFFER5,\n      DRAW_BUFFER6: gl.DRAW_BUFFER6,\n      DRAW_BUFFER7: gl.DRAW_BUFFER7,\n      MAX_COLOR_ATTACHMENTS: gl.MAX_COLOR_ATTACHMENTS,\n      MAX_DRAW_BUFFERS: gl.MAX_DRAW_BUFFERS\n    };\n  } else {\n    var ext = gl.getExtension('WEBGL_draw_buffers');\n    if (ext === null) return null;\n    return {\n      drawBuffers: ext.drawBuffersWEBGL.bind(ext),\n      COLOR_ATTACHMENT0: ext.COLOR_ATTACHMENT0_WEBGL,\n      COLOR_ATTACHMENT1: ext.COLOR_ATTACHMENT1_WEBGL,\n      COLOR_ATTACHMENT2: ext.COLOR_ATTACHMENT2_WEBGL,\n      COLOR_ATTACHMENT3: ext.COLOR_ATTACHMENT3_WEBGL,\n      COLOR_ATTACHMENT4: ext.COLOR_ATTACHMENT4_WEBGL,\n      COLOR_ATTACHMENT5: ext.COLOR_ATTACHMENT5_WEBGL,\n      COLOR_ATTACHMENT6: ext.COLOR_ATTACHMENT6_WEBGL,\n      COLOR_ATTACHMENT7: ext.COLOR_ATTACHMENT7_WEBGL,\n      DRAW_BUFFER0: ext.DRAW_BUFFER0_WEBGL,\n      DRAW_BUFFER1: ext.DRAW_BUFFER1_WEBGL,\n      DRAW_BUFFER2: ext.DRAW_BUFFER2_WEBGL,\n      DRAW_BUFFER3: ext.DRAW_BUFFER3_WEBGL,\n      DRAW_BUFFER4: ext.DRAW_BUFFER4_WEBGL,\n      DRAW_BUFFER5: ext.DRAW_BUFFER5_WEBGL,\n      DRAW_BUFFER6: ext.DRAW_BUFFER6_WEBGL,\n      DRAW_BUFFER7: ext.DRAW_BUFFER7_WEBGL,\n      MAX_COLOR_ATTACHMENTS: ext.MAX_COLOR_ATTACHMENTS_WEBGL,\n      MAX_DRAW_BUFFERS: ext.MAX_DRAW_BUFFERS_WEBGL\n    };\n  }\n}\nexport function getShaderTextureLod(gl) {\n  return isWebGL2(gl) ? {} : gl.getExtension('EXT_shader_texture_lod');\n}\nexport function getDepthTexture(gl) {\n  if (isWebGL2(gl)) {\n    return {\n      UNSIGNED_INT_24_8: gl.UNSIGNED_INT_24_8\n    };\n  } else {\n    var ext = gl.getExtension('WEBGL_depth_texture');\n    if (ext === null) return null;\n    return {\n      UNSIGNED_INT_24_8: ext.UNSIGNED_INT_24_8_WEBGL\n    };\n  }\n}\nexport function getSRGB(gl) {\n  if (isWebGL2(gl)) {\n    return {\n      FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: gl.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING,\n      SRGB8_ALPHA8: gl.SRGB8_ALPHA8,\n      SRGB8: gl.SRGB8,\n      SRGB: gl.SRGB\n    };\n  } else {\n    var ext = gl.getExtension('EXT_sRGB');\n    if (ext === null) return null;\n    return {\n      FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: ext.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT,\n      SRGB8_ALPHA8: ext.SRGB8_ALPHA8_EXT,\n      SRGB8: ext.SRGB_ALPHA_EXT,\n      SRGB: ext.SRGB_EXT\n    };\n  }\n} //\n\nvar TextureTestVertShader = \"\\nattribute vec4 aPosition;\\n\\nvoid main() {\\n    gl_Position = aPosition;\\n}\";\nvar TextureTestFragShader = \"\\nprecision mediump float;\\nuniform vec4 uColor;\\nuniform sampler2D uTexture;\\n\\nvoid main() {\\n    gl_FragColor = texture2D(uTexture, vec2(0.5, 0.5)) * uColor;\\n}\";\nvar TextureTestTexCoords = new Float32Array([-1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0]); // adapted from https://stackoverflow.com/questions/28827511/\n\nexport function testColorBuffer(gl, type) {\n  // setup shaders\n  var vertShader = getShader(gl, {\n    type: 'vert',\n    source: TextureTestVertShader\n  });\n  var fragShader = getShader(gl, {\n    type: 'frag',\n    source: TextureTestFragShader\n  });\n  if (!vertShader || !fragShader) return false; // setup program\n\n  var program = getProgram(gl);\n  gl.attachShader(program, vertShader);\n  gl.attachShader(program, fragShader);\n  gl.linkProgram(program);\n  gl.useProgram(program); // look up where the vertex data needs to go.\n\n  var positionLocation = gl.getAttribLocation(program, 'aPosition');\n  var colorLoc = gl.getUniformLocation(program, 'uColor');\n\n  if (!colorLoc) {\n    if (isDebugMode) {\n      console.log(\"error getting 'uColor' uniform location\");\n    }\n\n    return false;\n  } // provide texture coordinates for the rectangle.\n\n\n  var positionBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n  gl.bufferData(gl.ARRAY_BUFFER, TextureTestTexCoords, gl.STATIC_DRAW);\n  gl.enableVertexAttribArray(positionLocation);\n  gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n  var whiteTex = gl.createTexture();\n  var whiteData = new Uint8Array([255, 255, 255, 255]);\n  gl.bindTexture(gl.TEXTURE_2D, whiteTex);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, whiteData);\n  var tex = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, tex);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, type, null);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  var fb = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tex, 0);\n  var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n  if (status !== gl.FRAMEBUFFER_COMPLETE) {\n    if (isDebugMode) {\n      console.log(\"error creating framebuffer for '\" + type + \"'\");\n    }\n\n    return false;\n  } // Draw the rectangle.\n\n\n  gl.bindTexture(gl.TEXTURE_2D, whiteTex);\n  gl.uniform4fv(colorLoc, [0, 10, 20, 1]);\n  gl.drawArrays(gl.TRIANGLES, 0, 6);\n  gl.bindTexture(gl.TEXTURE_2D, tex);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.clearColor(1, 0, 0, 1);\n  gl.clear(gl.COLOR_BUFFER_BIT);\n  gl.uniform4fv(colorLoc, [0, 1 / 10, 1 / 20, 1]);\n  gl.drawArrays(gl.TRIANGLES, 0, 6); // Check if rendered correctly\n\n  var pixel = new Uint8Array(4);\n  gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\n\n  if (pixel[0] !== 0 || pixel[1] < 248 || pixel[2] < 248 || pixel[3] < 254) {\n    if (isDebugMode) {\n      console.log(\"not able to actually render to '\" + type + \"' texture\");\n    }\n\n    return false;\n  } // Check reading from float texture\n\n\n  if (type === gl.FLOAT) {\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n    var floatPixel = new Float32Array(4);\n    gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, floatPixel);\n    var error = gl.getError();\n\n    if (error) {\n      if (isDebugMode) {\n        console.log(\"error reading float pixels: '\" + getErrorDescription(gl, error) + \"'\");\n      }\n\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["../../../src/mol-gl/webgl/compat.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { isDebugMode } from '../../mol-util/debug';\r\nimport { getErrorDescription } from './context';\r\nimport { getProgram } from './program';\r\nimport { getShader } from './shader';\r\nexport function isWebGL(gl) {\r\n    return typeof WebGLRenderingContext !== 'undefined' && gl instanceof WebGLRenderingContext;\r\n}\r\nexport function isWebGL2(gl) {\r\n    return typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\r\n}\r\nexport function getInstancedArrays(gl) {\r\n    if (isWebGL2(gl)) {\r\n        return {\r\n            drawArraysInstanced: gl.drawArraysInstanced.bind(gl),\r\n            drawElementsInstanced: gl.drawElementsInstanced.bind(gl),\r\n            vertexAttribDivisor: gl.vertexAttribDivisor.bind(gl),\r\n            VERTEX_ATTRIB_ARRAY_DIVISOR: gl.VERTEX_ATTRIB_ARRAY_DIVISOR\r\n        };\r\n    }\r\n    else {\r\n        var ext = gl.getExtension('ANGLE_instanced_arrays');\r\n        if (ext === null)\r\n            return null;\r\n        return {\r\n            drawArraysInstanced: ext.drawArraysInstancedANGLE.bind(ext),\r\n            drawElementsInstanced: ext.drawElementsInstancedANGLE.bind(ext),\r\n            vertexAttribDivisor: ext.vertexAttribDivisorANGLE.bind(ext),\r\n            VERTEX_ATTRIB_ARRAY_DIVISOR: ext.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE\r\n        };\r\n    }\r\n}\r\nexport function getStandardDerivatives(gl) {\r\n    if (isWebGL2(gl)) {\r\n        return { FRAGMENT_SHADER_DERIVATIVE_HINT: gl.FRAGMENT_SHADER_DERIVATIVE_HINT };\r\n    }\r\n    else {\r\n        var ext = gl.getExtension('OES_standard_derivatives');\r\n        if (ext === null)\r\n            return null;\r\n        return { FRAGMENT_SHADER_DERIVATIVE_HINT: ext.FRAGMENT_SHADER_DERIVATIVE_HINT_OES };\r\n    }\r\n}\r\nexport function getElementIndexUint(gl) {\r\n    return isWebGL2(gl) ? {} : gl.getExtension('OES_element_index_uint');\r\n}\r\nexport function getVertexArrayObject(gl) {\r\n    if (isWebGL2(gl)) {\r\n        return {\r\n            VERTEX_ARRAY_BINDING: gl.VERTEX_ARRAY_BINDING,\r\n            bindVertexArray: gl.bindVertexArray.bind(gl),\r\n            createVertexArray: gl.createVertexArray.bind(gl),\r\n            deleteVertexArray: gl.deleteVertexArray.bind(gl),\r\n            isVertexArray: gl.isVertexArray.bind(gl)\r\n        };\r\n    }\r\n    else {\r\n        var ext = gl.getExtension('OES_vertex_array_object');\r\n        if (ext === null)\r\n            return null;\r\n        return {\r\n            VERTEX_ARRAY_BINDING: ext.VERTEX_ARRAY_BINDING_OES,\r\n            bindVertexArray: ext.bindVertexArrayOES.bind(ext),\r\n            createVertexArray: ext.createVertexArrayOES.bind(ext),\r\n            deleteVertexArray: ext.deleteVertexArrayOES.bind(ext),\r\n            isVertexArray: ext.isVertexArrayOES.bind(ext)\r\n        };\r\n    }\r\n}\r\nexport function getTextureFloat(gl) {\r\n    return isWebGL2(gl) ? {} : gl.getExtension('OES_texture_float');\r\n}\r\nexport function getTextureFloatLinear(gl) {\r\n    return gl.getExtension('OES_texture_float_linear');\r\n}\r\nexport function getTextureHalfFloat(gl) {\r\n    if (isWebGL2(gl)) {\r\n        return { HALF_FLOAT: gl.HALF_FLOAT };\r\n    }\r\n    else {\r\n        var ext = gl.getExtension('OES_texture_half_float');\r\n        if (ext === null)\r\n            return null;\r\n        return { HALF_FLOAT: ext.HALF_FLOAT_OES };\r\n    }\r\n}\r\nexport function getTextureHalfFloatLinear(gl) {\r\n    return gl.getExtension('OES_texture_half_float_linear');\r\n}\r\nexport function getBlendMinMax(gl) {\r\n    if (isWebGL2(gl)) {\r\n        return { MIN: gl.MIN, MAX: gl.MAX };\r\n    }\r\n    else {\r\n        var ext = gl.getExtension('EXT_blend_minmax');\r\n        if (ext === null)\r\n            return null;\r\n        return { MIN: ext.MIN_EXT, MAX: ext.MAX_EXT };\r\n    }\r\n}\r\nexport function getFragDepth(gl) {\r\n    return isWebGL2(gl) ? {} : gl.getExtension('EXT_frag_depth');\r\n}\r\nexport function getColorBufferFloat(gl) {\r\n    if (isWebGL2(gl)) {\r\n        if (gl.getExtension('EXT_color_buffer_float') === null)\r\n            return null;\r\n        gl.getExtension('EXT_float_blend');\r\n        return { RGBA32F: gl.RGBA32F };\r\n    }\r\n    else {\r\n        var ext = gl.getExtension('WEBGL_color_buffer_float');\r\n        if (ext === null) {\r\n            // test as support may not be advertised by browsers\r\n            gl.getExtension('OES_texture_float');\r\n            return testColorBuffer(gl, gl.FLOAT) ? { RGBA32F: 0x8814 } : null;\r\n        }\r\n        gl.getExtension('EXT_float_blend');\r\n        return { RGBA32F: ext.RGBA32F_EXT };\r\n    }\r\n}\r\nexport function getColorBufferHalfFloat(gl) {\r\n    if (isWebGL2(gl)) {\r\n        if (gl.getExtension('EXT_color_buffer_half_float') === null)\r\n            return null;\r\n        gl.getExtension('EXT_float_blend');\r\n        return { RGBA16F: gl.RGBA16F };\r\n    }\r\n    else {\r\n        var ext = gl.getExtension('EXT_color_buffer_half_float');\r\n        if (ext === null) {\r\n            // test as support may not be advertised by browsers\r\n            gl.getExtension('OES_texture_half_float');\r\n            return testColorBuffer(gl, 0x8D61) ? { RGBA16F: 0x881A } : null;\r\n        }\r\n        gl.getExtension('EXT_float_blend');\r\n        return { RGBA16F: ext.RGBA16F_EXT };\r\n    }\r\n}\r\nexport function getDrawBuffers(gl) {\r\n    if (isWebGL2(gl)) {\r\n        return {\r\n            drawBuffers: gl.drawBuffers.bind(gl),\r\n            COLOR_ATTACHMENT0: gl.COLOR_ATTACHMENT0,\r\n            COLOR_ATTACHMENT1: gl.COLOR_ATTACHMENT1,\r\n            COLOR_ATTACHMENT2: gl.COLOR_ATTACHMENT2,\r\n            COLOR_ATTACHMENT3: gl.COLOR_ATTACHMENT3,\r\n            COLOR_ATTACHMENT4: gl.COLOR_ATTACHMENT4,\r\n            COLOR_ATTACHMENT5: gl.COLOR_ATTACHMENT5,\r\n            COLOR_ATTACHMENT6: gl.COLOR_ATTACHMENT6,\r\n            COLOR_ATTACHMENT7: gl.COLOR_ATTACHMENT7,\r\n            DRAW_BUFFER0: gl.DRAW_BUFFER0,\r\n            DRAW_BUFFER1: gl.DRAW_BUFFER1,\r\n            DRAW_BUFFER2: gl.DRAW_BUFFER2,\r\n            DRAW_BUFFER3: gl.DRAW_BUFFER3,\r\n            DRAW_BUFFER4: gl.DRAW_BUFFER4,\r\n            DRAW_BUFFER5: gl.DRAW_BUFFER5,\r\n            DRAW_BUFFER6: gl.DRAW_BUFFER6,\r\n            DRAW_BUFFER7: gl.DRAW_BUFFER7,\r\n            MAX_COLOR_ATTACHMENTS: gl.MAX_COLOR_ATTACHMENTS,\r\n            MAX_DRAW_BUFFERS: gl.MAX_DRAW_BUFFERS,\r\n        };\r\n    }\r\n    else {\r\n        var ext = gl.getExtension('WEBGL_draw_buffers');\r\n        if (ext === null)\r\n            return null;\r\n        return {\r\n            drawBuffers: ext.drawBuffersWEBGL.bind(ext),\r\n            COLOR_ATTACHMENT0: ext.COLOR_ATTACHMENT0_WEBGL,\r\n            COLOR_ATTACHMENT1: ext.COLOR_ATTACHMENT1_WEBGL,\r\n            COLOR_ATTACHMENT2: ext.COLOR_ATTACHMENT2_WEBGL,\r\n            COLOR_ATTACHMENT3: ext.COLOR_ATTACHMENT3_WEBGL,\r\n            COLOR_ATTACHMENT4: ext.COLOR_ATTACHMENT4_WEBGL,\r\n            COLOR_ATTACHMENT5: ext.COLOR_ATTACHMENT5_WEBGL,\r\n            COLOR_ATTACHMENT6: ext.COLOR_ATTACHMENT6_WEBGL,\r\n            COLOR_ATTACHMENT7: ext.COLOR_ATTACHMENT7_WEBGL,\r\n            DRAW_BUFFER0: ext.DRAW_BUFFER0_WEBGL,\r\n            DRAW_BUFFER1: ext.DRAW_BUFFER1_WEBGL,\r\n            DRAW_BUFFER2: ext.DRAW_BUFFER2_WEBGL,\r\n            DRAW_BUFFER3: ext.DRAW_BUFFER3_WEBGL,\r\n            DRAW_BUFFER4: ext.DRAW_BUFFER4_WEBGL,\r\n            DRAW_BUFFER5: ext.DRAW_BUFFER5_WEBGL,\r\n            DRAW_BUFFER6: ext.DRAW_BUFFER6_WEBGL,\r\n            DRAW_BUFFER7: ext.DRAW_BUFFER7_WEBGL,\r\n            MAX_COLOR_ATTACHMENTS: ext.MAX_COLOR_ATTACHMENTS_WEBGL,\r\n            MAX_DRAW_BUFFERS: ext.MAX_DRAW_BUFFERS_WEBGL,\r\n        };\r\n    }\r\n}\r\nexport function getShaderTextureLod(gl) {\r\n    return isWebGL2(gl) ? {} : gl.getExtension('EXT_shader_texture_lod');\r\n}\r\nexport function getDepthTexture(gl) {\r\n    if (isWebGL2(gl)) {\r\n        return {\r\n            UNSIGNED_INT_24_8: gl.UNSIGNED_INT_24_8\r\n        };\r\n    }\r\n    else {\r\n        var ext = gl.getExtension('WEBGL_depth_texture');\r\n        if (ext === null)\r\n            return null;\r\n        return {\r\n            UNSIGNED_INT_24_8: ext.UNSIGNED_INT_24_8_WEBGL\r\n        };\r\n    }\r\n}\r\nexport function getSRGB(gl) {\r\n    if (isWebGL2(gl)) {\r\n        return {\r\n            FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: gl.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING,\r\n            SRGB8_ALPHA8: gl.SRGB8_ALPHA8,\r\n            SRGB8: gl.SRGB8,\r\n            SRGB: gl.SRGB\r\n        };\r\n    }\r\n    else {\r\n        var ext = gl.getExtension('EXT_sRGB');\r\n        if (ext === null)\r\n            return null;\r\n        return {\r\n            FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: ext.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT,\r\n            SRGB8_ALPHA8: ext.SRGB8_ALPHA8_EXT,\r\n            SRGB8: ext.SRGB_ALPHA_EXT,\r\n            SRGB: ext.SRGB_EXT\r\n        };\r\n    }\r\n}\r\n//\r\nvar TextureTestVertShader = \"\\nattribute vec4 aPosition;\\n\\nvoid main() {\\n    gl_Position = aPosition;\\n}\";\r\nvar TextureTestFragShader = \"\\nprecision mediump float;\\nuniform vec4 uColor;\\nuniform sampler2D uTexture;\\n\\nvoid main() {\\n    gl_FragColor = texture2D(uTexture, vec2(0.5, 0.5)) * uColor;\\n}\";\r\nvar TextureTestTexCoords = new Float32Array([\r\n    -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0\r\n]);\r\n// adapted from https://stackoverflow.com/questions/28827511/\r\nexport function testColorBuffer(gl, type) {\r\n    // setup shaders\r\n    var vertShader = getShader(gl, { type: 'vert', source: TextureTestVertShader });\r\n    var fragShader = getShader(gl, { type: 'frag', source: TextureTestFragShader });\r\n    if (!vertShader || !fragShader)\r\n        return false;\r\n    // setup program\r\n    var program = getProgram(gl);\r\n    gl.attachShader(program, vertShader);\r\n    gl.attachShader(program, fragShader);\r\n    gl.linkProgram(program);\r\n    gl.useProgram(program);\r\n    // look up where the vertex data needs to go.\r\n    var positionLocation = gl.getAttribLocation(program, 'aPosition');\r\n    var colorLoc = gl.getUniformLocation(program, 'uColor');\r\n    if (!colorLoc) {\r\n        if (isDebugMode) {\r\n            console.log(\"error getting 'uColor' uniform location\");\r\n        }\r\n        return false;\r\n    }\r\n    // provide texture coordinates for the rectangle.\r\n    var positionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, TextureTestTexCoords, gl.STATIC_DRAW);\r\n    gl.enableVertexAttribArray(positionLocation);\r\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\r\n    var whiteTex = gl.createTexture();\r\n    var whiteData = new Uint8Array([255, 255, 255, 255]);\r\n    gl.bindTexture(gl.TEXTURE_2D, whiteTex);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, whiteData);\r\n    var tex = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, tex);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, type, null);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n    var fb = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tex, 0);\r\n    var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\r\n        if (isDebugMode) {\r\n            console.log(\"error creating framebuffer for '\" + type + \"'\");\r\n        }\r\n        return false;\r\n    }\r\n    // Draw the rectangle.\r\n    gl.bindTexture(gl.TEXTURE_2D, whiteTex);\r\n    gl.uniform4fv(colorLoc, [0, 10, 20, 1]);\r\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n    gl.bindTexture(gl.TEXTURE_2D, tex);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    gl.clearColor(1, 0, 0, 1);\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    gl.uniform4fv(colorLoc, [0, 1 / 10, 1 / 20, 1]);\r\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n    // Check if rendered correctly\r\n    var pixel = new Uint8Array(4);\r\n    gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\r\n    if (pixel[0] !== 0 || pixel[1] < 248 || pixel[2] < 248 || pixel[3] < 254) {\r\n        if (isDebugMode) {\r\n            console.log(\"not able to actually render to '\" + type + \"' texture\");\r\n        }\r\n        return false;\r\n    }\r\n    // Check reading from float texture\r\n    if (type === gl.FLOAT) {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n        var floatPixel = new Float32Array(4);\r\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, floatPixel);\r\n        var error = gl.getError();\r\n        if (error) {\r\n            if (isDebugMode) {\r\n                console.log(\"error reading float pixels: '\" + getErrorDescription(gl, error) + \"'\");\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n//# sourceMappingURL=compat.js.map"]},"metadata":{},"sourceType":"module"}