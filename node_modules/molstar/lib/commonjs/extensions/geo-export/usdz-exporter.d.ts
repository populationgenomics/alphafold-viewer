/**
 * Copyright (c) 2021 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Sukolsak Sakshuwong <sukolsak@stanford.edu>
 */
import { Style } from '../../mol-gl/renderer';
import { Box3D } from '../../mol-math/geometry';
import { RuntimeContext } from '../../mol-task';
import { MeshExporter, AddMeshInput } from './mesh-exporter';
export declare type UsdzData = {
    usdz: ArrayBuffer;
};
export declare class UsdzExporter extends MeshExporter<UsdzData> {
    private style;
    readonly fileExtension = "usdz";
    private meshes;
    private materials;
    private materialSet;
    private centerTransform;
    private static getMaterialKey;
    private addMaterial;
    protected addMeshWithColors(input: AddMeshInput): Promise<void>;
    getData(ctx: RuntimeContext): Promise<{
        usdz: ArrayBufferLike;
    }>;
    getBlob(ctx: RuntimeContext): Promise<Blob>;
    constructor(style: Style, boundingBox: Box3D, radius: number);
}
