{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __extends } from \"tslib\";\nimport { RepresentationRegistry } from '../representation';\nimport { IsosurfaceRepresentationProvider } from './isosurface';\nimport { objectForEach } from '../../mol-util/object';\nimport { SliceRepresentationProvider } from './slice';\nimport { DirectVolumeRepresentationProvider } from './direct-volume';\n\nvar VolumeRepresentationRegistry =\n/** @class */\nfunction (_super) {\n  __extends(VolumeRepresentationRegistry, _super);\n\n  function VolumeRepresentationRegistry() {\n    var _this = _super.call(this) || this;\n\n    objectForEach(VolumeRepresentationRegistry.BuiltIn, function (p, k) {\n      if (p.name !== k) throw new Error(\"Fix BuiltInVolumeRepresentations to have matching names. \" + p.name + \" \" + k);\n\n      _this.add(p);\n    });\n    return _this;\n  }\n\n  return VolumeRepresentationRegistry;\n}(RepresentationRegistry);\n\nexport { VolumeRepresentationRegistry };\n\n(function (VolumeRepresentationRegistry) {\n  VolumeRepresentationRegistry.BuiltIn = {\n    'isosurface': IsosurfaceRepresentationProvider,\n    'slice': SliceRepresentationProvider,\n    'direct-volume': DirectVolumeRepresentationProvider\n  };\n})(VolumeRepresentationRegistry || (VolumeRepresentationRegistry = {}));","map":{"version":3,"sources":["../../../src/mol-repr/volume/registry.ts"],"names":[],"mappings":"AAAA;;;;AAIG;;AAEH,SAAS,sBAAT,QAA+E,mBAA/E;AAEA,SAAS,gCAAT,QAAiD,cAAjD;AACA,SAAS,aAAT,QAA8B,uBAA9B;AACA,SAAS,2BAAT,QAA4C,SAA5C;AACA,SAAS,kCAAT,QAAmD,iBAAnD;;AAEA,IAAA,4BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkD,EAAA,SAAA,CAAA,4BAAA,EAAA,MAAA,CAAA;;AAC9C,WAAA,4BAAA,GAAA;AAAA,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADX;;AAEI,IAAA,aAAa,CAAC,4BAA4B,CAAC,OAA9B,EAAuC,UAAC,CAAD,EAAI,CAAJ,EAAK;AACrD,UAAI,CAAC,CAAC,IAAF,KAAW,CAAf,EAAkB,MAAM,IAAI,KAAJ,CAAU,8DAA4D,CAAC,CAAC,IAA9D,GAAkE,GAAlE,GAAsE,CAAhF,CAAN;;AAClB,MAAA,KAAI,CAAC,GAAL,CAAS,CAAT;AACH,KAHY,CAAb;;AAIH;;AACL,SAAA,4BAAA;AAAC,CARD,CAAkD,sBAAlD,CAAA;;;;AAUA,CAAA,UAAiB,4BAAjB,EAA6C;AAC5B,EAAA,4BAAA,CAAA,OAAA,GAAU;AACnB,kBAAc,gCADK;AAEnB,aAAS,2BAFU;AAGnB,qBAAiB;AAHE,GAAV;AAShB,CAVD,EAAiB,4BAA4B,KAA5B,4BAA4B,GAAA,EAAA,CAA7C","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { RepresentationRegistry } from '../representation';\r\nimport { IsosurfaceRepresentationProvider } from './isosurface';\r\nimport { objectForEach } from '../../mol-util/object';\r\nimport { SliceRepresentationProvider } from './slice';\r\nimport { DirectVolumeRepresentationProvider } from './direct-volume';\r\nvar VolumeRepresentationRegistry = /** @class */ (function (_super) {\r\n    __extends(VolumeRepresentationRegistry, _super);\r\n    function VolumeRepresentationRegistry() {\r\n        var _this = _super.call(this) || this;\r\n        objectForEach(VolumeRepresentationRegistry.BuiltIn, function (p, k) {\r\n            if (p.name !== k)\r\n                throw new Error(\"Fix BuiltInVolumeRepresentations to have matching names. \" + p.name + \" \" + k);\r\n            _this.add(p);\r\n        });\r\n        return _this;\r\n    }\r\n    return VolumeRepresentationRegistry;\r\n}(RepresentationRegistry));\r\nexport { VolumeRepresentationRegistry };\r\n(function (VolumeRepresentationRegistry) {\r\n    VolumeRepresentationRegistry.BuiltIn = {\r\n        'isosurface': IsosurfaceRepresentationProvider,\r\n        'slice': SliceRepresentationProvider,\r\n        'direct-volume': DirectVolumeRepresentationProvider,\r\n    };\r\n})(VolumeRepresentationRegistry || (VolumeRepresentationRegistry = {}));\r\n//# sourceMappingURL=registry.js.map"]},"metadata":{},"sourceType":"module"}