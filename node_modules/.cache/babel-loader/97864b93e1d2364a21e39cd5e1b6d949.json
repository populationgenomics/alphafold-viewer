{"ast":null,"code":"/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n *\r\n * Color conversion code adapted from chroma.js (https://github.com/gka/chroma.js)\r\n * Copyright (c) 2011-2018, Gregor Aisch, BSD license\r\n */\nimport { Color } from '../color';\nimport { Hcl } from './hcl';\nimport { radToDeg } from '../../../mol-math/misc';\nimport { clamp } from '../../../mol-math/interpolate';\nexport { Lab };\n/**\r\n * CIE LAB color\r\n *\r\n * - L* [0..100] - lightness from black to white\r\n * - a [-100..100] - green (-) to red (+)\r\n * - b [-100..100] - blue (-) to yellow (+)\r\n *\r\n * see https://en.wikipedia.org/wiki/CIELAB_color_space\r\n */\n\nfunction Lab() {\n  return Lab.zero();\n}\n\n(function (Lab) {\n  function zero() {\n    var out = [0.1, 0.0, 0.0];\n    out[0] = 0;\n    return out;\n  }\n\n  Lab.zero = zero;\n\n  function create(l, a, b) {\n    var out = zero();\n    out[0] = l;\n    out[1] = a;\n    out[2] = b;\n    return out;\n  }\n\n  Lab.create = create;\n\n  function fromColor(out, color) {\n    var _a = Color.toRgb(color),\n        r = _a[0],\n        g = _a[1],\n        b = _a[2];\n\n    var _b = rgbToXyz(r, g, b),\n        x = _b[0],\n        y = _b[1],\n        z = _b[2];\n\n    var l = 116 * y - 16;\n    out[0] = l < 0 ? 0 : l;\n    out[1] = 500 * (x - y);\n    out[2] = 200 * (y - z);\n    return out;\n  }\n\n  Lab.fromColor = fromColor;\n\n  function fromHcl(out, hcl) {\n    return Hcl.toLab(out, hcl);\n  }\n\n  Lab.fromHcl = fromHcl;\n\n  function toColor(lab) {\n    var y = (lab[0] + 16) / 116;\n    var x = isNaN(lab[1]) ? y : y + lab[1] / 500;\n    var z = isNaN(lab[2]) ? y : y - lab[2] / 200;\n    y = Yn * lab_xyz(y);\n    x = Xn * lab_xyz(x);\n    z = Zn * lab_xyz(z);\n    var r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z); // D65 -> sRGB\n\n    var g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    var b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return Color.fromRgb(Math.round(clamp(r, 0, 255)), Math.round(clamp(g, 0, 255)), Math.round(clamp(b, 0, 255)));\n  }\n\n  Lab.toColor = toColor;\n\n  function toHcl(out, lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2];\n    var c = Math.sqrt(a * a + b * b);\n    var h = (radToDeg(Math.atan2(b, a)) + 360) % 360;\n    if (Math.round(c * 10000) === 0) h = Number.NaN;\n    out[0] = h;\n    out[1] = c;\n    out[2] = l;\n    return out;\n  }\n\n  Lab.toHcl = toHcl;\n\n  function copy(out, c) {\n    out[0] = c[0];\n    out[1] = c[1];\n    out[2] = c[2];\n    return out;\n  }\n\n  Lab.copy = copy;\n\n  function darken(out, c, amount) {\n    out[0] = c[0] - Kn * amount;\n    out[1] = c[1];\n    out[2] = c[2];\n    return out;\n  }\n\n  Lab.darken = darken;\n\n  function lighten(out, c, amount) {\n    return darken(out, c, -amount);\n  }\n\n  Lab.lighten = lighten;\n  var tmpSaturateHcl = [0, 0, 0];\n\n  function saturate(out, c, amount) {\n    toHcl(tmpSaturateHcl, c);\n    return Hcl.toLab(out, Hcl.saturate(tmpSaturateHcl, tmpSaturateHcl, amount));\n  }\n\n  Lab.saturate = saturate;\n\n  function desaturate(out, c, amount) {\n    return saturate(out, c, -amount);\n  }\n\n  Lab.desaturate = desaturate; // Corresponds roughly to RGB brighter/darker\n\n  var Kn = 18;\n  /** D65 standard referent */\n\n  var Xn = 0.950470;\n  var Yn = 1;\n  var Zn = 1.088830;\n  var T0 = 0.137931034; // 4 / 29\n\n  var T1 = 0.206896552; // 6 / 29\n\n  var T2 = 0.12841855; // 3 * t1 * t1\n\n  var T3 = 0.008856452; // t1 * t1 * t1\n\n  /** convert component from xyz to rgb */\n\n  function xyz_rgb(c) {\n    return 255 * (c <= 0.00304 ? 12.92 * c : 1.055 * Math.pow(c, 1 / 2.4) - 0.055);\n  }\n  /** convert component from lab to xyz */\n\n\n  function lab_xyz(t) {\n    return t > T1 ? t * t * t : T2 * (t - T0);\n  }\n  /** convert component from rgb to xyz */\n\n\n  function rgb_xyz(c) {\n    if ((c /= 255) <= 0.04045) return c / 12.92;\n    return Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n  /** convert component from xyz to lab */\n\n\n  function xyz_lab(t) {\n    if (t > T3) return Math.pow(t, 1 / 3);\n    return t / T2 + T0;\n  }\n\n  function rgbToXyz(r, g, b) {\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / Xn);\n    var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / Yn);\n    var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / Zn);\n    return [x, y, z];\n  }\n})(Lab || (Lab = {}));","map":{"version":3,"sources":["../../../../src/mol-util/color/spaces/lab.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n *\r\n * Color conversion code adapted from chroma.js (https://github.com/gka/chroma.js)\r\n * Copyright (c) 2011-2018, Gregor Aisch, BSD license\r\n */\r\nimport { Color } from '../color';\r\nimport { Hcl } from './hcl';\r\nimport { radToDeg } from '../../../mol-math/misc';\r\nimport { clamp } from '../../../mol-math/interpolate';\r\nexport { Lab };\r\n/**\r\n * CIE LAB color\r\n *\r\n * - L* [0..100] - lightness from black to white\r\n * - a [-100..100] - green (-) to red (+)\r\n * - b [-100..100] - blue (-) to yellow (+)\r\n *\r\n * see https://en.wikipedia.org/wiki/CIELAB_color_space\r\n */\r\nfunction Lab() {\r\n    return Lab.zero();\r\n}\r\n(function (Lab) {\r\n    function zero() {\r\n        var out = [0.1, 0.0, 0.0];\r\n        out[0] = 0;\r\n        return out;\r\n    }\r\n    Lab.zero = zero;\r\n    function create(l, a, b) {\r\n        var out = zero();\r\n        out[0] = l;\r\n        out[1] = a;\r\n        out[2] = b;\r\n        return out;\r\n    }\r\n    Lab.create = create;\r\n    function fromColor(out, color) {\r\n        var _a = Color.toRgb(color), r = _a[0], g = _a[1], b = _a[2];\r\n        var _b = rgbToXyz(r, g, b), x = _b[0], y = _b[1], z = _b[2];\r\n        var l = 116 * y - 16;\r\n        out[0] = l < 0 ? 0 : l;\r\n        out[1] = 500 * (x - y);\r\n        out[2] = 200 * (y - z);\r\n        return out;\r\n    }\r\n    Lab.fromColor = fromColor;\r\n    function fromHcl(out, hcl) {\r\n        return Hcl.toLab(out, hcl);\r\n    }\r\n    Lab.fromHcl = fromHcl;\r\n    function toColor(lab) {\r\n        var y = (lab[0] + 16) / 116;\r\n        var x = isNaN(lab[1]) ? y : y + lab[1] / 500;\r\n        var z = isNaN(lab[2]) ? y : y - lab[2] / 200;\r\n        y = Yn * lab_xyz(y);\r\n        x = Xn * lab_xyz(x);\r\n        z = Zn * lab_xyz(z);\r\n        var r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z); // D65 -> sRGB\r\n        var g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\r\n        var b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\r\n        return Color.fromRgb(Math.round(clamp(r, 0, 255)), Math.round(clamp(g, 0, 255)), Math.round(clamp(b, 0, 255)));\r\n    }\r\n    Lab.toColor = toColor;\r\n    function toHcl(out, lab) {\r\n        var l = lab[0], a = lab[1], b = lab[2];\r\n        var c = Math.sqrt(a * a + b * b);\r\n        var h = (radToDeg(Math.atan2(b, a)) + 360) % 360;\r\n        if (Math.round(c * 10000) === 0)\r\n            h = Number.NaN;\r\n        out[0] = h;\r\n        out[1] = c;\r\n        out[2] = l;\r\n        return out;\r\n    }\r\n    Lab.toHcl = toHcl;\r\n    function copy(out, c) {\r\n        out[0] = c[0];\r\n        out[1] = c[1];\r\n        out[2] = c[2];\r\n        return out;\r\n    }\r\n    Lab.copy = copy;\r\n    function darken(out, c, amount) {\r\n        out[0] = c[0] - Kn * amount;\r\n        out[1] = c[1];\r\n        out[2] = c[2];\r\n        return out;\r\n    }\r\n    Lab.darken = darken;\r\n    function lighten(out, c, amount) {\r\n        return darken(out, c, -amount);\r\n    }\r\n    Lab.lighten = lighten;\r\n    var tmpSaturateHcl = [0, 0, 0];\r\n    function saturate(out, c, amount) {\r\n        toHcl(tmpSaturateHcl, c);\r\n        return Hcl.toLab(out, Hcl.saturate(tmpSaturateHcl, tmpSaturateHcl, amount));\r\n    }\r\n    Lab.saturate = saturate;\r\n    function desaturate(out, c, amount) {\r\n        return saturate(out, c, -amount);\r\n    }\r\n    Lab.desaturate = desaturate;\r\n    // Corresponds roughly to RGB brighter/darker\r\n    var Kn = 18;\r\n    /** D65 standard referent */\r\n    var Xn = 0.950470;\r\n    var Yn = 1;\r\n    var Zn = 1.088830;\r\n    var T0 = 0.137931034; // 4 / 29\r\n    var T1 = 0.206896552; // 6 / 29\r\n    var T2 = 0.12841855; // 3 * t1 * t1\r\n    var T3 = 0.008856452; // t1 * t1 * t1\r\n    /** convert component from xyz to rgb */\r\n    function xyz_rgb(c) {\r\n        return 255 * (c <= 0.00304 ? 12.92 * c : 1.055 * Math.pow(c, 1 / 2.4) - 0.055);\r\n    }\r\n    /** convert component from lab to xyz */\r\n    function lab_xyz(t) {\r\n        return t > T1 ? t * t * t : T2 * (t - T0);\r\n    }\r\n    /** convert component from rgb to xyz */\r\n    function rgb_xyz(c) {\r\n        if ((c /= 255) <= 0.04045)\r\n            return c / 12.92;\r\n        return Math.pow((c + 0.055) / 1.055, 2.4);\r\n    }\r\n    /** convert component from xyz to lab */\r\n    function xyz_lab(t) {\r\n        if (t > T3)\r\n            return Math.pow(t, 1 / 3);\r\n        return t / T2 + T0;\r\n    }\r\n    function rgbToXyz(r, g, b) {\r\n        r = rgb_xyz(r);\r\n        g = rgb_xyz(g);\r\n        b = rgb_xyz(b);\r\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / Xn);\r\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / Yn);\r\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / Zn);\r\n        return [x, y, z];\r\n    }\r\n})(Lab || (Lab = {}));\r\n//# sourceMappingURL=lab.js.map"]},"metadata":{},"sourceType":"module"}