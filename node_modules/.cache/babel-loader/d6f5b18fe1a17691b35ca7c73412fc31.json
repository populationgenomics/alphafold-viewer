{"ast":null,"code":"/**\r\n * Copyright (c) 2017-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nvar _a;\n\nimport { BitFlags } from '../../../mol-util/bit-flags';\nimport { SaccharideCompIdMap } from '../structure/carbohydrates/constants';\nimport { SetUtils } from '../../../mol-util/set';\nimport { LipidNames } from './types/lipids';\nimport { IonNames } from './types/ions';\n\nvar _esCache = function () {\n  var cache = Object.create(null);\n  var letters = [];\n\n  for (var i = 'A'.charCodeAt(0); i <= 'Z'.charCodeAt(0); i++) letters[letters.length] = String.fromCharCode(i);\n\n  for (var i = 'a'.charCodeAt(0); i <= 'z'.charCodeAt(0); i++) letters[letters.length] = String.fromCharCode(i);\n\n  for (var i = '0'.charCodeAt(0); i <= '9'.charCodeAt(0); i++) letters[letters.length] = String.fromCharCode(i);\n\n  for (var _i = 0, letters_1 = letters; _i < letters_1.length; _i++) {\n    var k = letters_1[_i];\n    cache[k] = k.toUpperCase();\n\n    for (var _a = 0, letters_2 = letters; _a < letters_2.length; _a++) {\n      var l = letters_2[_a];\n      cache[k + l] = (k + l).toUpperCase();\n\n      for (var _b = 0, letters_3 = letters; _b < letters_3.length; _b++) {\n        var m = letters_3[_b];\n        cache[k + l + m] = (k + l + m).toUpperCase();\n      }\n    }\n  }\n\n  return cache;\n}();\n\nexport function ElementSymbol(s) {\n  return _esCache[s] || s.toUpperCase();\n}\n\nvar _elementByAtomicNumber = new Map([[1, 'H'], [2, 'He'], [3, 'Li'], [4, 'Be'], [5, 'B'], [6, 'C'], [7, 'N'], [8, 'O'], [9, 'F'], [10, 'Ne'], [11, 'Na'], [12, 'Mg'], [13, 'Al'], [14, 'Si'], [15, 'P'], [16, 'S'], [17, 'Cl'], [18, 'Ar'], [19, 'K'], [20, 'Ca'], [21, 'Sc'], [22, 'Ti'], [23, 'V'], [24, 'Cr'], [25, 'Mn'], [26, 'Fe'], [27, 'Co'], [28, 'Ni'], [29, 'Cu'], [30, 'Zn'], [31, 'Ga'], [32, 'Ge'], [33, 'As'], [34, 'Se'], [35, 'Br'], [36, 'Kr'], [37, 'Rb'], [38, 'Sr'], [39, 'Y'], [40, 'Zr'], [41, 'Nb'], [42, 'Mo'], [43, 'Tc'], [44, 'Ru'], [45, 'Rh'], [46, 'Pd'], [47, 'Ag'], [48, 'Cd'], [49, 'In'], [50, 'Sn'], [51, 'Sb'], [52, 'Te'], [53, 'I'], [54, 'Xe'], [55, 'Cs'], [56, 'Ba'], [57, 'La'], [58, 'Ce'], [59, 'Pr'], [60, 'Nd'], [61, 'Pm'], [62, 'Sm'], [63, 'Eu'], [64, 'Gd'], [65, 'Tb'], [66, 'Dy'], [67, 'Ho'], [68, 'Er'], [69, 'Tm'], [70, 'Yb'], [71, 'Lu'], [72, 'Hf'], [73, 'Ta'], [74, 'W'], [75, 'Re'], [76, 'Os'], [77, 'Ir'], [78, 'Pt'], [79, 'Au'], [80, 'Hg'], [81, 'Tl'], [82, 'Pb'], [83, 'Bi'], [84, 'Po'], [85, 'At'], [86, 'Rn'], [87, 'Fr'], [88, 'Ra'], [89, 'Ac'], [90, 'Th'], [91, 'Pa'], [92, 'U'], [93, 'Np'], [94, 'Pu'], [95, 'Am'], [96, 'Cm'], [97, 'Bk'], [98, 'Cf'], [99, 'Es'], [100, 'Fm'], [101, 'Md'], [102, 'No'], [103, 'Lr'], [104, 'Rf'], [105, 'Db'], [106, 'Sg'], [107, 'Bh'], [108, 'Hs'], [109, 'Mt'], [110, 'Ds'], [111, 'Rg'], [112, 'Cn'], [113, 'Uut'], [114, 'Fl'], [115, 'Uup'], [116, 'Lv'], [117, 'Uus'], [118, 'Uuo']].map(function (e) {\n  return [e[0], ElementSymbol(e[1])];\n}));\n\nexport function getElementFromAtomicNumber(n) {\n  if (_elementByAtomicNumber.has(n)) return _elementByAtomicNumber.get(n);\n  return ElementSymbol('H');\n}\nexport var PolymerTypeAtomRoleId = (_a = {}, _a[0\n/* NA */\n] = {\n  trace: new Set(),\n  directionFrom: new Set(),\n  directionTo: new Set(),\n  backboneStart: new Set(),\n  backboneEnd: new Set(),\n  coarseBackbone: new Set()\n}, _a[1\n/* Protein */\n] = {\n  trace: new Set(['CA']),\n  directionFrom: new Set(['C']),\n  directionTo: new Set(['O', 'OC1', 'O1', 'OX1', 'OXT', 'OT1']),\n  backboneStart: new Set(['N']),\n  backboneEnd: new Set(['C']),\n  // CA1 is used e.g. in GFP chromophores\n  // BB is often used for coarse grained models\n  coarseBackbone: new Set(['CA', 'BB', 'CA1'])\n}, _a[2\n/* GammaProtein */\n] = {\n  trace: new Set(['CA']),\n  directionFrom: new Set(['C']),\n  directionTo: new Set(['O']),\n  backboneStart: new Set(['N']),\n  backboneEnd: new Set(['CD']),\n  coarseBackbone: new Set(['CA'])\n}, _a[3\n/* BetaProtein */\n] = {\n  trace: new Set(['CA']),\n  directionFrom: new Set(['C']),\n  directionTo: new Set(['O']),\n  backboneStart: new Set(['N']),\n  backboneEnd: new Set(['CG']),\n  coarseBackbone: new Set(['CA'])\n}, _a[4\n/* RNA */\n] = {\n  trace: new Set(['O3\\'', 'O3*']),\n  directionFrom: new Set(['C4\\'', 'C4*']),\n  directionTo: new Set(['C3\\'', 'C3*']),\n  backboneStart: new Set(['P']),\n  backboneEnd: new Set(['O3\\'', 'O3*']),\n  coarseBackbone: new Set(['P'])\n}, _a[5\n/* DNA */\n] = {\n  trace: new Set(['O3\\'', 'O3*']),\n  directionFrom: new Set(['C3\\'', 'C3*']),\n  directionTo: new Set(['C1\\'', 'C1*']),\n  backboneStart: new Set(['P']),\n  backboneEnd: new Set(['O3\\'', 'O3*']),\n  coarseBackbone: new Set(['P'])\n}, _a[6\n/* PNA */\n] = {\n  trace: new Set(['N4\\'', 'N4*']),\n  directionFrom: new Set(['N4\\'', 'N4*']),\n  directionTo: new Set(['C7\\'', 'C7*']),\n  backboneStart: new Set(['N1\\'', 'N1*']),\n  backboneEnd: new Set(['C\\'', 'C*']),\n  coarseBackbone: new Set(['P'])\n}, _a);\nexport var ProteinBackboneAtoms = new Set(['CA', 'C', 'N', 'O', 'O1', 'O2', 'OC1', 'OC2', 'OT1', 'OT2', 'OX1', 'OXT', 'H', 'H1', 'H2', 'H3', 'HA', 'HN', 'HXT', 'BB']);\nexport var NucleicBackboneAtoms = new Set(['P', 'OP1', 'OP2', 'HOP2', 'HOP3', 'O2\\'', 'O3\\'', 'O4\\'', 'O5\\'', 'C1\\'', 'C2\\'', 'C3\\'', 'C4\\'', 'C5\\'', 'H1\\'', 'H2\\'', 'H2\\'\\'', 'HO2\\'', 'H3\\'', 'H4\\'', 'H5\\'', 'H5\\'\\'', 'HO3\\'', 'HO5\\'', 'O2*', 'O3*', 'O4*', 'O5*', 'C1*', 'C2*', 'C3*', 'C4*', 'C5*']);\n/** Chemical component type names for D-linked protein */\n\nexport var DProteinComponentTypeNames = new Set(['D-PEPTIDE LINKING', 'D-PEPTIDE NH3 AMINO TERMINUS', 'D-PEPTIDE COOH CARBOXY TERMINUS', 'D-GAMMA-PEPTIDE, C-DELTA LINKING', 'D-BETA-PEPTIDE, C-GAMMA LINKING']);\n/** Chemical component type names for L-linked protein */\n\nexport var LProteinComponentTypeNames = new Set(['L-PEPTIDE LINKING', 'L-PEPTIDE NH3 AMINO TERMINUS', 'L-PEPTIDE COOH CARBOXY TERMINUS', 'L-GAMMA-PEPTIDE, C-DELTA LINKING', 'L-BETA-PEPTIDE, C-GAMMA LINKING']);\n/** Chemical component type names for gamma protein, overlaps with D/L-linked */\n\nexport var GammaProteinComponentTypeNames = new Set(['D-GAMMA-PEPTIDE, C-DELTA LINKING', 'L-GAMMA-PEPTIDE, C-DELTA LINKING']);\n/** Chemical component type names for beta protein, overlaps with D/L-linked */\n\nexport var BetaProteinComponentTypeNames = new Set(['D-BETA-PEPTIDE, C-GAMMA LINKING', 'L-BETA-PEPTIDE, C-GAMMA LINKING']);\n/** Chemical component type names for protein termini, overlaps with D/L-linked */\n\nexport var ProteinTerminusComponentTypeNames = new Set(['D-PEPTIDE NH3 AMINO TERMINUS', 'D-PEPTIDE COOH CARBOXY TERMINUS', 'L-PEPTIDE NH3 AMINO TERMINUS', 'L-PEPTIDE COOH CARBOXY TERMINUS']);\n/** Chemical component type names for peptide-like protein */\n\nexport var OtherProteinComponentTypeNames = new Set(['PEPTIDE LINKING', 'PEPTIDE-LIKE']);\n/** Chemical component type names for protein */\n\nexport var ProteinComponentTypeNames = SetUtils.unionMany(DProteinComponentTypeNames, LProteinComponentTypeNames, OtherProteinComponentTypeNames);\n/** Chemical component type names for DNA */\n\nexport var DNAComponentTypeNames = new Set(['DNA LINKING', 'L-DNA LINKING', 'DNA OH 5 PRIME TERMINUS', 'DNA OH 3 PRIME TERMINUS']);\n/** Chemical component type names for RNA */\n\nexport var RNAComponentTypeNames = new Set(['RNA LINKING', 'L-RNA LINKING', 'RNA OH 5 PRIME TERMINUS', 'RNA OH 3 PRIME TERMINUS']);\n/** Chemical component type names for saccharide */\n\nexport var SaccharideComponentTypeNames = new Set(['D-SACCHARIDE, BETA LINKING', 'L-SACCHARIDE, BETA LINKING', 'D-SACCHARIDE, ALPHA LINKING', 'L-SACCHARIDE, ALPHA LINKING', 'L-SACCHARIDE', 'D-SACCHARIDE', 'SACCHARIDE', // the following four are marked to be deprecated in the mmCIF dictionary\n'D-SACCHARIDE 1,4 AND 1,4 LINKING', 'L-SACCHARIDE 1,4 AND 1,4 LINKING', 'D-SACCHARIDE 1,4 AND 1,6 LINKING', 'L-SACCHARIDE 1,4 AND 1,6 LINKING']);\n/** Chemical component type names for other */\n\nexport var OtherComponentTypeNames = new Set(['NON-POLYMER', 'OTHER']);\n/** Chemical component type names for ion (extension to mmcif) */\n\nexport var IonComponentTypeNames = new Set(['ION']);\n/** Chemical component type names for lipid (extension to mmcif) */\n\nexport var LipidComponentTypeNames = new Set(['LIPID']);\n/** Common names for water molecules */\n\nexport var WaterNames = new Set(['SOL', 'WAT', 'HOH', 'H2O', 'W', 'DOD', 'D3O', 'TIP', 'TIP3', 'TIP4', 'SPC']);\nexport var AminoAcidNamesL = new Set(['HIS', 'ARG', 'LYS', 'ILE', 'PHE', 'LEU', 'TRP', 'ALA', 'MET', 'PRO', 'CYS', 'ASN', 'VAL', 'GLY', 'SER', 'GLN', 'TYR', 'ASP', 'GLU', 'THR', 'SEC', 'PYL', 'UNK', 'MSE', 'SEP', 'TPO', 'PTR', 'PCA', // charmm ff\n'HSD', 'HSE', 'HSP', 'LSN', 'ASPP', 'GLUP', // amber ff\n'HID', 'HIE', 'HIP', 'LYN', 'ASH', 'GLH']);\nexport var AminoAcidNamesD = new Set(['DAL', 'DAR', 'DSG', 'DAS', 'DCY', 'DGL', 'DGN', 'DHI', 'DIL', 'DLE', 'DLY', 'MED', 'DPN', 'DPR', 'DSN', 'DTH', 'DTR', 'DTY', 'DVA', 'DNE' // D-NORLEUCINE\n// ???  // D-SELENOCYSTEINE\n]);\nexport var AminoAcidNames = SetUtils.unionMany(AminoAcidNamesL, AminoAcidNamesD);\nexport var RnaBaseNames = new Set(['A', 'C', 'T', 'G', 'I', 'U', 'N' // unknown RNA base from CCD\n]);\nexport var DnaBaseNames = new Set(['DA', 'DC', 'DT', 'DG', 'DI', 'DU', 'DN' // unknown DNA base from CCD\n]);\nexport var PeptideBaseNames = new Set(['APN', 'CPN', 'TPN', 'GPN']);\nexport var PurineBaseNames = new Set(['A', 'G', 'I', 'DA', 'DG', 'DI', 'APN', 'GPN']);\nexport var PyrimidineBaseNames = new Set(['C', 'T', 'U', 'DC', 'DT', 'DU', 'CPN', 'TPN']);\nexport var BaseNames = SetUtils.unionMany(RnaBaseNames, DnaBaseNames, PeptideBaseNames);\nexport var isPurineBase = function (compId) {\n  return PurineBaseNames.has(compId.toUpperCase());\n};\nexport var isPyrimidineBase = function (compId) {\n  return PyrimidineBaseNames.has(compId.toUpperCase());\n};\nexport var PolymerNames = SetUtils.unionMany(AminoAcidNames, BaseNames);\n/** get the molecule type from component type and id */\n\nexport function getMoleculeType(compType, compId) {\n  compType = compType.toUpperCase();\n  compId = compId.toUpperCase();\n\n  if (PeptideBaseNames.has(compId)) {\n    return 8\n    /* PNA */\n    ;\n  } else if (ProteinComponentTypeNames.has(compType)) {\n    return 5\n    /* Protein */\n    ;\n  } else if (RNAComponentTypeNames.has(compType)) {\n    return 6\n    /* RNA */\n    ;\n  } else if (DNAComponentTypeNames.has(compType)) {\n    return 7\n    /* DNA */\n    ;\n  } else if (SaccharideComponentTypeNames.has(compType)) {\n    return 9\n    /* Saccharide */\n    ;\n  } else if (WaterNames.has(compId)) {\n    return 2\n    /* Water */\n    ;\n  } else if (IonNames.has(compId)) {\n    return 3\n    /* Ion */\n    ;\n  } else if (LipidNames.has(compId)) {\n    return 4\n    /* Lipid */\n    ;\n  } else if (OtherComponentTypeNames.has(compType)) {\n    if (SaccharideCompIdMap.has(compId)) {\n      // trust our saccharide table more than given 'non-polymer' or 'other' component type\n      return 9\n      /* Saccharide */\n      ;\n    } else {\n      return 1\n      /* Other */\n      ;\n    }\n  } else {\n    return 0\n    /* Unknown */\n    ;\n  }\n}\nexport function getPolymerType(compType, molType) {\n  compType = compType.toUpperCase();\n\n  if (molType === 5\n  /* Protein */\n  ) {\n    if (GammaProteinComponentTypeNames.has(compType)) {\n      return 2\n      /* GammaProtein */\n      ;\n    } else if (BetaProteinComponentTypeNames.has(compType)) {\n      return 3\n      /* BetaProtein */\n      ;\n    } else if (ProteinTerminusComponentTypeNames.has(compType)) {\n      return 0\n      /* NA */\n      ;\n    } else {\n      return 1\n      /* Protein */\n      ;\n    }\n  } else if (molType === 6\n  /* RNA */\n  ) {\n    return 4\n    /* RNA */\n    ;\n  } else if (molType === 7\n  /* DNA */\n  ) {\n    return 5\n    /* DNA */\n    ;\n  } else if (molType === 8\n  /* PNA */\n  ) {\n    return 6\n    /* PNA */\n    ;\n  } else {\n    return 0\n    /* NA */\n    ;\n  }\n}\nexport function getComponentType(compId) {\n  compId = compId.toUpperCase();\n\n  if (AminoAcidNames.has(compId)) {\n    return 'peptide linking';\n  } else if (RnaBaseNames.has(compId)) {\n    return 'RNA linking';\n  } else if (DnaBaseNames.has(compId)) {\n    return 'DNA linking';\n  } else if (SaccharideCompIdMap.has(compId)) {\n    return 'saccharide';\n  } else {\n    return 'other';\n  }\n}\nexport function getDefaultChemicalComponent(compId) {\n  // TODO: this is to make the chem_comp_type property work if chem_comp category is not present.\n  // should we try to set the formula etc better?\n  return {\n    formula: '',\n    formula_weight: 0,\n    id: compId,\n    name: compId,\n    mon_nstd_flag: PolymerNames.has(compId) ? 'y' : 'n',\n    pdbx_synonyms: [],\n    type: getComponentType(compId)\n  };\n}\nexport function getEntityType(compId) {\n  compId = compId.toUpperCase();\n\n  if (WaterNames.has(compId)) {\n    return 'water';\n  } else if (PolymerNames.has(compId)) {\n    return 'polymer';\n  } else if (SaccharideCompIdMap.has(compId)) {\n    return 'branched';\n  } else {\n    return 'non-polymer';\n  }\n}\nexport function getEntitySubtype(compId, compType) {\n  compId = compId.toUpperCase();\n  compType = compType.toUpperCase();\n\n  if (LProteinComponentTypeNames.has(compType)) {\n    return 'polypeptide(L)';\n  } else if (DProteinComponentTypeNames.has(compType)) {\n    return 'polypeptide(D)';\n  } else if (RNAComponentTypeNames.has(compType)) {\n    return 'polyribonucleotide';\n  } else if (DNAComponentTypeNames.has(compType)) {\n    return 'polydeoxyribonucleotide';\n  } else if (SaccharideComponentTypeNames.has(compType)) {\n    return 'oligosaccharide';\n  } else if (SaccharideCompIdMap.has(compId)) {\n    return 'oligosaccharide';\n  } else if (PeptideBaseNames.has(compId)) {\n    return 'peptide nucleic acid';\n  } else if (AminoAcidNamesL.has(compId)) {\n    return 'polypeptide(L)';\n  } else if (AminoAcidNamesD.has(compId)) {\n    return 'polypeptide(D)';\n  } else if (RnaBaseNames.has(compId)) {\n    return 'polyribonucleotide';\n  } else if (DnaBaseNames.has(compId)) {\n    return 'polydeoxyribonucleotide';\n  } else if (IonComponentTypeNames.has(compType) || IonNames.has(compId)) {\n    return 'ion';\n  } else if (LipidComponentTypeNames.has(compType) || LipidNames.has(compId)) {\n    return 'lipid';\n  } else if (OtherProteinComponentTypeNames.has(compType)) {\n    return 'peptide-like';\n  } else {\n    return 'other';\n  }\n}\nexport function isPolymer(moleculeType) {\n  return isNucleic(moleculeType) || isProtein(moleculeType);\n}\nexport function isNucleic(moleculeType) {\n  return moleculeType === 7\n  /* DNA */\n  || moleculeType === 6\n  /* RNA */\n  || moleculeType === 8\n  /* PNA */\n  ;\n}\nexport function isProtein(moleculeType) {\n  return moleculeType === 5\n  /* Protein */\n  ;\n}\nexport var SecondaryStructureType;\n\n(function (SecondaryStructureType) {\n  SecondaryStructureType.is = BitFlags.has;\n  SecondaryStructureType.create = BitFlags.create;\n  SecondaryStructureType.SecondaryStructureMmcif = {\n    HELX_LH_27_P: 2\n    /* Helix */\n    | 32\n    /* LeftHanded */\n    | 1024\n    /* Helix27 */\n    ,\n    HELX_LH_3T_P: 2\n    /* Helix */\n    | 32\n    /* LeftHanded */\n    | 2048\n    /* Helix3Ten */\n    ,\n    HELX_LH_AL_P: 2\n    /* Helix */\n    | 32\n    /* LeftHanded */\n    | 4096\n    /* HelixAlpha */\n    ,\n    HELX_LH_A_N: 1\n    /* DoubleHelix */\n    | 32\n    /* LeftHanded */\n    | 524288\n    /* DoubleHelixA */\n    ,\n    HELX_LH_B_N: 1\n    /* DoubleHelix */\n    | 32\n    /* LeftHanded */\n    | 1048576\n    /* DoubleHelixB */\n    ,\n    HELX_LH_GA_P: 2\n    /* Helix */\n    | 32\n    /* LeftHanded */\n    | 8192\n    /* HelixGamma */\n    ,\n    HELX_LH_N: 1\n    /* DoubleHelix */\n    | 32\n    /* LeftHanded */\n    ,\n    HELX_LH_OM_P: 2\n    /* Helix */\n    | 32\n    /* LeftHanded */\n    | 16384\n    /* HelixOmega */\n    ,\n    HELX_LH_OT_N: 1\n    /* DoubleHelix */\n    | 32\n    /* LeftHanded */\n    | 131072\n    /* DoubleHelixOther */\n    ,\n    HELX_LH_OT_P: 2\n    /* Helix */\n    | 32\n    /* LeftHanded */\n    | 512\n    /* HelixOther */\n    ,\n    HELX_LH_P: 2\n    /* Helix */\n    | 32\n    /* LeftHanded */\n    ,\n    HELX_LH_PI_P: 2\n    /* Helix */\n    | 32\n    /* LeftHanded */\n    | 32768\n    /* HelixPi */\n    ,\n    HELX_LH_PP_P: 2\n    /* Helix */\n    | 32\n    /* LeftHanded */\n    | 65536\n    /* HelixPolyproline */\n    ,\n    HELX_LH_Z_N: 1\n    /* DoubleHelix */\n    | 32\n    /* LeftHanded */\n    | 262144\n    /* DoubleHelixZ */\n    ,\n    HELX_N: 1\n    /* DoubleHelix */\n    ,\n    HELX_OT_N: 1\n    /* DoubleHelix */\n    ,\n    HELX_OT_P: 2\n    /* Helix */\n    ,\n    HELX_P: 2\n    /* Helix */\n    ,\n    HELX_RH_27_P: 2\n    /* Helix */\n    | 64\n    /* RightHanded */\n    | 1024\n    /* Helix27 */\n    ,\n    HELX_RH_3T_P: 2\n    /* Helix */\n    | 64\n    /* RightHanded */\n    | 2048\n    /* Helix3Ten */\n    ,\n    HELX_RH_AL_P: 2\n    /* Helix */\n    | 64\n    /* RightHanded */\n    | 4096\n    /* HelixAlpha */\n    ,\n    HELX_RH_A_N: 1\n    /* DoubleHelix */\n    | 64\n    /* RightHanded */\n    | 524288\n    /* DoubleHelixA */\n    ,\n    HELX_RH_B_N: 1\n    /* DoubleHelix */\n    | 64\n    /* RightHanded */\n    | 1048576\n    /* DoubleHelixB */\n    ,\n    HELX_RH_GA_P: 2\n    /* Helix */\n    | 64\n    /* RightHanded */\n    | 8192\n    /* HelixGamma */\n    ,\n    HELX_RH_N: 1\n    /* DoubleHelix */\n    | 64\n    /* RightHanded */\n    ,\n    HELX_RH_OM_P: 2\n    /* Helix */\n    | 64\n    /* RightHanded */\n    | 16384\n    /* HelixOmega */\n    ,\n    HELX_RH_OT_N: 1\n    /* DoubleHelix */\n    | 64\n    /* RightHanded */\n    | 131072\n    /* DoubleHelixOther */\n    ,\n    HELX_RH_OT_P: 2\n    /* Helix */\n    | 64\n    /* RightHanded */\n    | 512\n    /* HelixOther */\n    ,\n    HELX_RH_P: 2\n    /* Helix */\n    | 64\n    /* RightHanded */\n    ,\n    HELX_RH_PI_P: 2\n    /* Helix */\n    | 64\n    /* RightHanded */\n    | 32768\n    /* HelixPi */\n    ,\n    HELX_RH_PP_P: 2\n    /* Helix */\n    | 64\n    /* RightHanded */\n    | 65536\n    /* HelixPolyproline */\n    ,\n    HELX_RH_Z_N: 1\n    /* DoubleHelix */\n    | 64\n    /* RightHanded */\n    | 262144\n    /* DoubleHelixZ */\n    ,\n    STRN: 4\n    /* Beta */\n    | 4194304\n    /* BetaStrand */\n    ,\n    TURN_OT_P: 16\n    /* Turn */\n    | 33554432\n    /* TurnOther */\n    ,\n    TURN_P: 16\n    /* Turn */\n    ,\n    TURN_TY1P_P: 16\n    /* Turn */\n    | 256\n    /* InverseTurn */\n    | 67108864\n    /* Turn1 */\n    ,\n    TURN_TY1_P: 16\n    /* Turn */\n    | 128\n    /* ClassicTurn */\n    | 67108864\n    /* Turn1 */\n    ,\n    TURN_TY2P_P: 16\n    /* Turn */\n    | 256\n    /* InverseTurn */\n    | 134217728\n    /* Turn2 */\n    ,\n    TURN_TY2_P: 16\n    /* Turn */\n    | 128\n    /* ClassicTurn */\n    | 134217728\n    /* Turn2 */\n    ,\n    TURN_TY3P_P: 16\n    /* Turn */\n    | 256\n    /* InverseTurn */\n    | 268435456\n    /* Turn3 */\n    ,\n    TURN_TY3_P: 16\n    /* Turn */\n    | 128\n    /* ClassicTurn */\n    | 268435456\n    /* Turn3 */\n    // type III turn (protein)\n\n  };\n  SecondaryStructureType.SecondaryStructurePdb = {\n    1: 2\n    /* Helix */\n    | 64\n    /* RightHanded */\n    | 4096\n    /* HelixAlpha */\n    ,\n    2: 2\n    /* Helix */\n    | 64\n    /* RightHanded */\n    | 16384\n    /* HelixOmega */\n    ,\n    3: 2\n    /* Helix */\n    | 64\n    /* RightHanded */\n    | 32768\n    /* HelixPi */\n    ,\n    4: 2\n    /* Helix */\n    | 64\n    /* RightHanded */\n    | 8192\n    /* HelixGamma */\n    ,\n    5: 2\n    /* Helix */\n    | 64\n    /* RightHanded */\n    | 2048\n    /* Helix3Ten */\n    ,\n    6: 2\n    /* Helix */\n    | 32\n    /* LeftHanded */\n    | 4096\n    /* HelixAlpha */\n    ,\n    7: 2\n    /* Helix */\n    | 32\n    /* LeftHanded */\n    | 16384\n    /* HelixOmega */\n    ,\n    8: 2\n    /* Helix */\n    | 32\n    /* LeftHanded */\n    | 8192\n    /* HelixGamma */\n    ,\n    9: 2\n    /* Helix */\n    | 1024\n    /* Helix27 */\n    ,\n    10: 2\n    /* Helix */\n    | 65536\n    /* HelixPolyproline */\n    // Polyproline\n\n  };\n  SecondaryStructureType.SecondaryStructureStride = {\n    H: 2\n    /* Helix */\n    | 4096\n    /* HelixAlpha */\n    ,\n    G: 2\n    /* Helix */\n    | 2048\n    /* Helix3Ten */\n    ,\n    I: 2\n    /* Helix */\n    | 32768\n    /* HelixPi */\n    ,\n    E: 4\n    /* Beta */\n    | 8388608\n    /* BetaSheet */\n    ,\n    B: 4\n    /* Beta */\n    | 4194304\n    /* BetaStrand */\n    ,\n    T: 16\n    /* Turn */\n    ,\n    C: 536870912\n    /* NA */\n    // Coil (none of the above)\n\n  };\n  SecondaryStructureType.SecondaryStructureDssp = {\n    H: 2\n    /* Helix */\n    | 4096\n    /* HelixAlpha */\n    ,\n    B: 4\n    /* Beta */\n    | 4194304\n    /* BetaStrand */\n    ,\n    E: 4\n    /* Beta */\n    | 8388608\n    /* BetaSheet */\n    ,\n    G: 2\n    /* Helix */\n    | 2048\n    /* Helix3Ten */\n    ,\n    I: 2\n    /* Helix */\n    | 32768\n    /* HelixPi */\n    ,\n    T: 16\n    /* Turn */\n    ,\n    S: 8\n    /* Bend */\n    // bend\n\n  };\n})(SecondaryStructureType || (SecondaryStructureType = {}));\n/** Maximum accessible surface area observed for amino acids. Taken from: http://dx.doi.org/10.1371/journal.pone.0080635 */\n\n\nexport var MaxAsa = {\n  'ALA': 121.0,\n  'ARG': 265.0,\n  'ASN': 187.0,\n  'ASP': 187.0,\n  'CYS': 148.0,\n  'GLU': 214.0,\n  'GLN': 214.0,\n  'GLY': 97.0,\n  'HIS': 216.0,\n  'ILE': 195.0,\n  'LEU': 191.0,\n  'LYS': 230.0,\n  'MET': 203.0,\n  'PHE': 228.0,\n  'PRO': 154.0,\n  'SER': 143.0,\n  'THR': 163.0,\n  'TRP': 264.0,\n  'TYR': 255.0,\n  'VAL': 165.0,\n  // charmm ff\n  'HSD': 216.0,\n  'HSE': 216.0,\n  'HSP': 216.0,\n  // amber ff\n  'HID': 216.0,\n  'HIE': 216.0,\n  'HIP': 216.0,\n  'ASH': 187.0,\n  'GLH': 214.0\n};\nexport var DefaultMaxAsa = 121.0;\nexport var BondType;\n\n(function (BondType) {\n  BondType.is = BitFlags.has;\n\n  function create(flags) {\n    return BitFlags.create(flags);\n  }\n\n  BondType.create = create;\n\n  function isCovalent(flags) {\n    return (flags & 1\n    /* Covalent */\n    ) !== 0;\n  }\n\n  BondType.isCovalent = isCovalent;\n\n  function isAll(flags) {\n    return flags === Math.pow(2, 6) - 1;\n  }\n\n  BondType.isAll = isAll;\n  BondType.Names = {\n    'covalent': 1\n    /* Covalent */\n    ,\n    'metal-coordination': 2\n    /* MetallicCoordination */\n    ,\n    'hydrogen-bond': 4\n    /* HydrogenBond */\n    ,\n    'disulfide': 8\n    /* Disulfide */\n    ,\n    'aromatic': 16\n    /* Aromatic */\n    ,\n    'computed': 32\n    /* Computed */\n\n  };\n\n  function isName(name) {\n    return name in BondType.Names;\n  }\n\n  BondType.isName = isName;\n\n  function fromName(name) {\n    switch (name) {\n      case 'covalent':\n        return 1\n        /* Covalent */\n        ;\n\n      case 'metal-coordination':\n        return 2\n        /* MetallicCoordination */\n        ;\n\n      case 'hydrogen-bond':\n        return 4\n        /* HydrogenBond */\n        ;\n\n      case 'disulfide':\n        return 8\n        /* Disulfide */\n        ;\n\n      case 'aromatic':\n        return 16\n        /* Aromatic */\n        ;\n\n      case 'computed':\n        return 32\n        /* Computed */\n        ;\n    }\n  }\n\n  BondType.fromName = fromName;\n\n  function fromNames(names) {\n    var f = 0\n    /* None */\n    ;\n\n    for (var i = 0, il = names.length; i < il; ++i) {\n      f |= fromName(names[i]);\n    }\n\n    return f;\n  }\n\n  BondType.fromNames = fromNames;\n})(BondType || (BondType = {}));\n/**\r\n * \"Experimentally determined hydrophobicity scale for proteins at membrane interfaces\"\r\n * by Wimely and White (doi:10.1038/nsb1096-842)\r\n * http://blanco.biomol.uci.edu/Whole_residue_HFscales.txt\r\n * https://www.nature.com/articles/nsb1096-842\r\n */\n\n\nexport var ResidueHydrophobicity = {\n  // AA  DGwif   DGwoct  Oct-IF\n  'ALA': [0.17, 0.50, 0.33],\n  'ARG': [0.81, 1.81, 1.00],\n  'ASN': [0.42, 0.85, 0.43],\n  'ASP': [1.23, 3.64, 2.41],\n  'ASH': [-0.07, 0.43, 0.50],\n  'CYS': [-0.24, -0.02, 0.22],\n  'GLN': [0.58, 0.77, 0.19],\n  'GLU': [2.02, 3.63, 1.61],\n  'GLH': [-0.01, 0.11, 0.12],\n  'GLY': [0.01, 1.15, 1.14],\n  // \"His+\": [  0.96,  2.33,  1.37 ],\n  'HIS': [0.17, 0.11, -0.06],\n  'ILE': [-0.31, -1.12, -0.81],\n  'LEU': [-0.56, -1.25, -0.69],\n  'LYS': [0.99, 2.80, 1.81],\n  'MET': [-0.23, -0.67, -0.44],\n  'PHE': [-1.13, -1.71, -0.58],\n  'PRO': [0.45, 0.14, -0.31],\n  'SER': [0.13, 0.46, 0.33],\n  'THR': [0.14, 0.25, 0.11],\n  'TRP': [-1.85, -2.09, -0.24],\n  'TYR': [-0.94, -0.71, 0.23],\n  'VAL': [0.07, -0.46, -0.53],\n  // charmm ff\n  'HSD': [0.17, 0.11, -0.06],\n  'HSE': [0.17, 0.11, -0.06],\n  'HSP': [0.96, 2.33, 1.37],\n  // amber ff\n  'HID': [0.17, 0.11, -0.06],\n  'HIE': [0.17, 0.11, -0.06],\n  'HIP': [0.96, 2.33, 1.37]\n};\nexport var DefaultResidueHydrophobicity = [0.00, 0.00, 0.00];","map":{"version":3,"sources":["../../../../src/mol-model/structure/model/types.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2017-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nvar _a;\r\nimport { BitFlags } from '../../../mol-util/bit-flags';\r\nimport { SaccharideCompIdMap } from '../structure/carbohydrates/constants';\r\nimport { SetUtils } from '../../../mol-util/set';\r\nimport { LipidNames } from './types/lipids';\r\nimport { IonNames } from './types/ions';\r\nvar _esCache = (function () {\r\n    var cache = Object.create(null);\r\n    var letters = [];\r\n    for (var i = 'A'.charCodeAt(0); i <= 'Z'.charCodeAt(0); i++)\r\n        letters[letters.length] = String.fromCharCode(i);\r\n    for (var i = 'a'.charCodeAt(0); i <= 'z'.charCodeAt(0); i++)\r\n        letters[letters.length] = String.fromCharCode(i);\r\n    for (var i = '0'.charCodeAt(0); i <= '9'.charCodeAt(0); i++)\r\n        letters[letters.length] = String.fromCharCode(i);\r\n    for (var _i = 0, letters_1 = letters; _i < letters_1.length; _i++) {\r\n        var k = letters_1[_i];\r\n        cache[k] = k.toUpperCase();\r\n        for (var _a = 0, letters_2 = letters; _a < letters_2.length; _a++) {\r\n            var l = letters_2[_a];\r\n            cache[k + l] = (k + l).toUpperCase();\r\n            for (var _b = 0, letters_3 = letters; _b < letters_3.length; _b++) {\r\n                var m = letters_3[_b];\r\n                cache[k + l + m] = (k + l + m).toUpperCase();\r\n            }\r\n        }\r\n    }\r\n    return cache;\r\n}());\r\nexport function ElementSymbol(s) {\r\n    return _esCache[s] || s.toUpperCase();\r\n}\r\nvar _elementByAtomicNumber = new Map([[1, 'H'], [2, 'He'], [3, 'Li'], [4, 'Be'], [5, 'B'], [6, 'C'], [7, 'N'], [8, 'O'], [9, 'F'], [10, 'Ne'], [11, 'Na'], [12, 'Mg'], [13, 'Al'], [14, 'Si'], [15, 'P'], [16, 'S'], [17, 'Cl'], [18, 'Ar'], [19, 'K'], [20, 'Ca'], [21, 'Sc'], [22, 'Ti'], [23, 'V'], [24, 'Cr'], [25, 'Mn'], [26, 'Fe'], [27, 'Co'], [28, 'Ni'], [29, 'Cu'], [30, 'Zn'], [31, 'Ga'], [32, 'Ge'], [33, 'As'], [34, 'Se'], [35, 'Br'], [36, 'Kr'], [37, 'Rb'], [38, 'Sr'], [39, 'Y'], [40, 'Zr'], [41, 'Nb'], [42, 'Mo'], [43, 'Tc'], [44, 'Ru'], [45, 'Rh'], [46, 'Pd'], [47, 'Ag'], [48, 'Cd'], [49, 'In'], [50, 'Sn'], [51, 'Sb'], [52, 'Te'], [53, 'I'], [54, 'Xe'], [55, 'Cs'], [56, 'Ba'], [57, 'La'], [58, 'Ce'], [59, 'Pr'], [60, 'Nd'], [61, 'Pm'], [62, 'Sm'], [63, 'Eu'], [64, 'Gd'], [65, 'Tb'], [66, 'Dy'], [67, 'Ho'], [68, 'Er'], [69, 'Tm'], [70, 'Yb'], [71, 'Lu'], [72, 'Hf'], [73, 'Ta'], [74, 'W'], [75, 'Re'], [76, 'Os'], [77, 'Ir'], [78, 'Pt'], [79, 'Au'], [80, 'Hg'], [81, 'Tl'], [82, 'Pb'], [83, 'Bi'], [84, 'Po'], [85, 'At'], [86, 'Rn'], [87, 'Fr'], [88, 'Ra'], [89, 'Ac'], [90, 'Th'], [91, 'Pa'], [92, 'U'], [93, 'Np'], [94, 'Pu'], [95, 'Am'], [96, 'Cm'], [97, 'Bk'], [98, 'Cf'], [99, 'Es'], [100, 'Fm'], [101, 'Md'], [102, 'No'], [103, 'Lr'], [104, 'Rf'], [105, 'Db'], [106, 'Sg'], [107, 'Bh'], [108, 'Hs'], [109, 'Mt'], [110, 'Ds'], [111, 'Rg'], [112, 'Cn'], [113, 'Uut'], [114, 'Fl'], [115, 'Uup'], [116, 'Lv'], [117, 'Uus'], [118, 'Uuo']]\r\n    .map(function (e) { return [e[0], ElementSymbol(e[1])]; }));\r\nexport function getElementFromAtomicNumber(n) {\r\n    if (_elementByAtomicNumber.has(n))\r\n        return _elementByAtomicNumber.get(n);\r\n    return ElementSymbol('H');\r\n}\r\nexport var PolymerTypeAtomRoleId = (_a = {},\r\n    _a[0 /* NA */] = {\r\n        trace: new Set(),\r\n        directionFrom: new Set(),\r\n        directionTo: new Set(),\r\n        backboneStart: new Set(),\r\n        backboneEnd: new Set(),\r\n        coarseBackbone: new Set()\r\n    },\r\n    _a[1 /* Protein */] = {\r\n        trace: new Set(['CA']),\r\n        directionFrom: new Set(['C']),\r\n        directionTo: new Set(['O', 'OC1', 'O1', 'OX1', 'OXT', 'OT1']),\r\n        backboneStart: new Set(['N']),\r\n        backboneEnd: new Set(['C']),\r\n        // CA1 is used e.g. in GFP chromophores\r\n        // BB is often used for coarse grained models\r\n        coarseBackbone: new Set(['CA', 'BB', 'CA1'])\r\n    },\r\n    _a[2 /* GammaProtein */] = {\r\n        trace: new Set(['CA']),\r\n        directionFrom: new Set(['C']),\r\n        directionTo: new Set(['O']),\r\n        backboneStart: new Set(['N']),\r\n        backboneEnd: new Set(['CD']),\r\n        coarseBackbone: new Set(['CA'])\r\n    },\r\n    _a[3 /* BetaProtein */] = {\r\n        trace: new Set(['CA']),\r\n        directionFrom: new Set(['C']),\r\n        directionTo: new Set(['O']),\r\n        backboneStart: new Set(['N']),\r\n        backboneEnd: new Set(['CG']),\r\n        coarseBackbone: new Set(['CA'])\r\n    },\r\n    _a[4 /* RNA */] = {\r\n        trace: new Set(['O3\\'', 'O3*']),\r\n        directionFrom: new Set(['C4\\'', 'C4*']),\r\n        directionTo: new Set(['C3\\'', 'C3*']),\r\n        backboneStart: new Set(['P']),\r\n        backboneEnd: new Set(['O3\\'', 'O3*']),\r\n        coarseBackbone: new Set(['P'])\r\n    },\r\n    _a[5 /* DNA */] = {\r\n        trace: new Set(['O3\\'', 'O3*']),\r\n        directionFrom: new Set(['C3\\'', 'C3*']),\r\n        directionTo: new Set(['C1\\'', 'C1*']),\r\n        backboneStart: new Set(['P']),\r\n        backboneEnd: new Set(['O3\\'', 'O3*']),\r\n        coarseBackbone: new Set(['P'])\r\n    },\r\n    _a[6 /* PNA */] = {\r\n        trace: new Set(['N4\\'', 'N4*']),\r\n        directionFrom: new Set(['N4\\'', 'N4*']),\r\n        directionTo: new Set(['C7\\'', 'C7*']),\r\n        backboneStart: new Set(['N1\\'', 'N1*']),\r\n        backboneEnd: new Set(['C\\'', 'C*']),\r\n        coarseBackbone: new Set(['P'])\r\n    },\r\n    _a);\r\nexport var ProteinBackboneAtoms = new Set([\r\n    'CA', 'C', 'N', 'O',\r\n    'O1', 'O2', 'OC1', 'OC2', 'OT1', 'OT2', 'OX1', 'OXT',\r\n    'H', 'H1', 'H2', 'H3', 'HA', 'HN', 'HXT',\r\n    'BB'\r\n]);\r\nexport var NucleicBackboneAtoms = new Set([\r\n    'P', 'OP1', 'OP2', 'HOP2', 'HOP3',\r\n    'O2\\'', 'O3\\'', 'O4\\'', 'O5\\'', 'C1\\'', 'C2\\'', 'C3\\'', 'C4\\'', 'C5\\'',\r\n    'H1\\'', 'H2\\'', 'H2\\'\\'', 'HO2\\'', 'H3\\'', 'H4\\'', 'H5\\'', 'H5\\'\\'', 'HO3\\'', 'HO5\\'',\r\n    'O2*', 'O3*', 'O4*', 'O5*', 'C1*', 'C2*', 'C3*', 'C4*', 'C5*'\r\n]);\r\n/** Chemical component type names for D-linked protein */\r\nexport var DProteinComponentTypeNames = new Set([\r\n    'D-PEPTIDE LINKING', 'D-PEPTIDE NH3 AMINO TERMINUS',\r\n    'D-PEPTIDE COOH CARBOXY TERMINUS', 'D-GAMMA-PEPTIDE, C-DELTA LINKING',\r\n    'D-BETA-PEPTIDE, C-GAMMA LINKING'\r\n]);\r\n/** Chemical component type names for L-linked protein */\r\nexport var LProteinComponentTypeNames = new Set([\r\n    'L-PEPTIDE LINKING', 'L-PEPTIDE NH3 AMINO TERMINUS',\r\n    'L-PEPTIDE COOH CARBOXY TERMINUS', 'L-GAMMA-PEPTIDE, C-DELTA LINKING',\r\n    'L-BETA-PEPTIDE, C-GAMMA LINKING'\r\n]);\r\n/** Chemical component type names for gamma protein, overlaps with D/L-linked */\r\nexport var GammaProteinComponentTypeNames = new Set([\r\n    'D-GAMMA-PEPTIDE, C-DELTA LINKING', 'L-GAMMA-PEPTIDE, C-DELTA LINKING'\r\n]);\r\n/** Chemical component type names for beta protein, overlaps with D/L-linked */\r\nexport var BetaProteinComponentTypeNames = new Set([\r\n    'D-BETA-PEPTIDE, C-GAMMA LINKING', 'L-BETA-PEPTIDE, C-GAMMA LINKING'\r\n]);\r\n/** Chemical component type names for protein termini, overlaps with D/L-linked */\r\nexport var ProteinTerminusComponentTypeNames = new Set([\r\n    'D-PEPTIDE NH3 AMINO TERMINUS', 'D-PEPTIDE COOH CARBOXY TERMINUS',\r\n    'L-PEPTIDE NH3 AMINO TERMINUS', 'L-PEPTIDE COOH CARBOXY TERMINUS'\r\n]);\r\n/** Chemical component type names for peptide-like protein */\r\nexport var OtherProteinComponentTypeNames = new Set([\r\n    'PEPTIDE LINKING', 'PEPTIDE-LIKE',\r\n]);\r\n/** Chemical component type names for protein */\r\nexport var ProteinComponentTypeNames = SetUtils.unionMany(DProteinComponentTypeNames, LProteinComponentTypeNames, OtherProteinComponentTypeNames);\r\n/** Chemical component type names for DNA */\r\nexport var DNAComponentTypeNames = new Set([\r\n    'DNA LINKING', 'L-DNA LINKING', 'DNA OH 5 PRIME TERMINUS', 'DNA OH 3 PRIME TERMINUS',\r\n]);\r\n/** Chemical component type names for RNA */\r\nexport var RNAComponentTypeNames = new Set([\r\n    'RNA LINKING', 'L-RNA LINKING', 'RNA OH 5 PRIME TERMINUS', 'RNA OH 3 PRIME TERMINUS',\r\n]);\r\n/** Chemical component type names for saccharide */\r\nexport var SaccharideComponentTypeNames = new Set([\r\n    'D-SACCHARIDE, BETA LINKING', 'L-SACCHARIDE, BETA LINKING',\r\n    'D-SACCHARIDE, ALPHA LINKING', 'L-SACCHARIDE, ALPHA LINKING',\r\n    'L-SACCHARIDE', 'D-SACCHARIDE', 'SACCHARIDE',\r\n    // the following four are marked to be deprecated in the mmCIF dictionary\r\n    'D-SACCHARIDE 1,4 AND 1,4 LINKING', 'L-SACCHARIDE 1,4 AND 1,4 LINKING',\r\n    'D-SACCHARIDE 1,4 AND 1,6 LINKING', 'L-SACCHARIDE 1,4 AND 1,6 LINKING',\r\n]);\r\n/** Chemical component type names for other */\r\nexport var OtherComponentTypeNames = new Set([\r\n    'NON-POLYMER', 'OTHER'\r\n]);\r\n/** Chemical component type names for ion (extension to mmcif) */\r\nexport var IonComponentTypeNames = new Set([\r\n    'ION'\r\n]);\r\n/** Chemical component type names for lipid (extension to mmcif) */\r\nexport var LipidComponentTypeNames = new Set([\r\n    'LIPID'\r\n]);\r\n/** Common names for water molecules */\r\nexport var WaterNames = new Set([\r\n    'SOL', 'WAT', 'HOH', 'H2O', 'W', 'DOD', 'D3O', 'TIP', 'TIP3', 'TIP4', 'SPC'\r\n]);\r\nexport var AminoAcidNamesL = new Set([\r\n    'HIS', 'ARG', 'LYS', 'ILE', 'PHE', 'LEU', 'TRP', 'ALA', 'MET', 'PRO', 'CYS',\r\n    'ASN', 'VAL', 'GLY', 'SER', 'GLN', 'TYR', 'ASP', 'GLU', 'THR', 'SEC', 'PYL',\r\n    'UNK',\r\n    'MSE', 'SEP', 'TPO', 'PTR', 'PCA',\r\n    // charmm ff\r\n    'HSD', 'HSE', 'HSP', 'LSN', 'ASPP', 'GLUP',\r\n    // amber ff\r\n    'HID', 'HIE', 'HIP', 'LYN', 'ASH', 'GLH',\r\n]);\r\nexport var AminoAcidNamesD = new Set([\r\n    'DAL',\r\n    'DAR',\r\n    'DSG',\r\n    'DAS',\r\n    'DCY',\r\n    'DGL',\r\n    'DGN',\r\n    'DHI',\r\n    'DIL',\r\n    'DLE',\r\n    'DLY',\r\n    'MED',\r\n    'DPN',\r\n    'DPR',\r\n    'DSN',\r\n    'DTH',\r\n    'DTR',\r\n    'DTY',\r\n    'DVA',\r\n    'DNE' // D-NORLEUCINE\r\n    // ???  // D-SELENOCYSTEINE\r\n]);\r\nexport var AminoAcidNames = SetUtils.unionMany(AminoAcidNamesL, AminoAcidNamesD);\r\nexport var RnaBaseNames = new Set([\r\n    'A', 'C', 'T', 'G', 'I', 'U',\r\n    'N' // unknown RNA base from CCD\r\n]);\r\nexport var DnaBaseNames = new Set([\r\n    'DA', 'DC', 'DT', 'DG', 'DI', 'DU',\r\n    'DN' // unknown DNA base from CCD\r\n]);\r\nexport var PeptideBaseNames = new Set(['APN', 'CPN', 'TPN', 'GPN']);\r\nexport var PurineBaseNames = new Set(['A', 'G', 'I', 'DA', 'DG', 'DI', 'APN', 'GPN']);\r\nexport var PyrimidineBaseNames = new Set(['C', 'T', 'U', 'DC', 'DT', 'DU', 'CPN', 'TPN']);\r\nexport var BaseNames = SetUtils.unionMany(RnaBaseNames, DnaBaseNames, PeptideBaseNames);\r\nexport var isPurineBase = function (compId) { return PurineBaseNames.has(compId.toUpperCase()); };\r\nexport var isPyrimidineBase = function (compId) { return PyrimidineBaseNames.has(compId.toUpperCase()); };\r\nexport var PolymerNames = SetUtils.unionMany(AminoAcidNames, BaseNames);\r\n/** get the molecule type from component type and id */\r\nexport function getMoleculeType(compType, compId) {\r\n    compType = compType.toUpperCase();\r\n    compId = compId.toUpperCase();\r\n    if (PeptideBaseNames.has(compId)) {\r\n        return 8 /* PNA */;\r\n    }\r\n    else if (ProteinComponentTypeNames.has(compType)) {\r\n        return 5 /* Protein */;\r\n    }\r\n    else if (RNAComponentTypeNames.has(compType)) {\r\n        return 6 /* RNA */;\r\n    }\r\n    else if (DNAComponentTypeNames.has(compType)) {\r\n        return 7 /* DNA */;\r\n    }\r\n    else if (SaccharideComponentTypeNames.has(compType)) {\r\n        return 9 /* Saccharide */;\r\n    }\r\n    else if (WaterNames.has(compId)) {\r\n        return 2 /* Water */;\r\n    }\r\n    else if (IonNames.has(compId)) {\r\n        return 3 /* Ion */;\r\n    }\r\n    else if (LipidNames.has(compId)) {\r\n        return 4 /* Lipid */;\r\n    }\r\n    else if (OtherComponentTypeNames.has(compType)) {\r\n        if (SaccharideCompIdMap.has(compId)) {\r\n            // trust our saccharide table more than given 'non-polymer' or 'other' component type\r\n            return 9 /* Saccharide */;\r\n        }\r\n        else {\r\n            return 1 /* Other */;\r\n        }\r\n    }\r\n    else {\r\n        return 0 /* Unknown */;\r\n    }\r\n}\r\nexport function getPolymerType(compType, molType) {\r\n    compType = compType.toUpperCase();\r\n    if (molType === 5 /* Protein */) {\r\n        if (GammaProteinComponentTypeNames.has(compType)) {\r\n            return 2 /* GammaProtein */;\r\n        }\r\n        else if (BetaProteinComponentTypeNames.has(compType)) {\r\n            return 3 /* BetaProtein */;\r\n        }\r\n        else if (ProteinTerminusComponentTypeNames.has(compType)) {\r\n            return 0 /* NA */;\r\n        }\r\n        else {\r\n            return 1 /* Protein */;\r\n        }\r\n    }\r\n    else if (molType === 6 /* RNA */) {\r\n        return 4 /* RNA */;\r\n    }\r\n    else if (molType === 7 /* DNA */) {\r\n        return 5 /* DNA */;\r\n    }\r\n    else if (molType === 8 /* PNA */) {\r\n        return 6 /* PNA */;\r\n    }\r\n    else {\r\n        return 0 /* NA */;\r\n    }\r\n}\r\nexport function getComponentType(compId) {\r\n    compId = compId.toUpperCase();\r\n    if (AminoAcidNames.has(compId)) {\r\n        return 'peptide linking';\r\n    }\r\n    else if (RnaBaseNames.has(compId)) {\r\n        return 'RNA linking';\r\n    }\r\n    else if (DnaBaseNames.has(compId)) {\r\n        return 'DNA linking';\r\n    }\r\n    else if (SaccharideCompIdMap.has(compId)) {\r\n        return 'saccharide';\r\n    }\r\n    else {\r\n        return 'other';\r\n    }\r\n}\r\nexport function getDefaultChemicalComponent(compId) {\r\n    // TODO: this is to make the chem_comp_type property work if chem_comp category is not present.\r\n    // should we try to set the formula etc better?\r\n    return {\r\n        formula: '',\r\n        formula_weight: 0,\r\n        id: compId,\r\n        name: compId,\r\n        mon_nstd_flag: PolymerNames.has(compId) ? 'y' : 'n',\r\n        pdbx_synonyms: [],\r\n        type: getComponentType(compId)\r\n    };\r\n}\r\nexport function getEntityType(compId) {\r\n    compId = compId.toUpperCase();\r\n    if (WaterNames.has(compId)) {\r\n        return 'water';\r\n    }\r\n    else if (PolymerNames.has(compId)) {\r\n        return 'polymer';\r\n    }\r\n    else if (SaccharideCompIdMap.has(compId)) {\r\n        return 'branched';\r\n    }\r\n    else {\r\n        return 'non-polymer';\r\n    }\r\n}\r\nexport function getEntitySubtype(compId, compType) {\r\n    compId = compId.toUpperCase();\r\n    compType = compType.toUpperCase();\r\n    if (LProteinComponentTypeNames.has(compType)) {\r\n        return 'polypeptide(L)';\r\n    }\r\n    else if (DProteinComponentTypeNames.has(compType)) {\r\n        return 'polypeptide(D)';\r\n    }\r\n    else if (RNAComponentTypeNames.has(compType)) {\r\n        return 'polyribonucleotide';\r\n    }\r\n    else if (DNAComponentTypeNames.has(compType)) {\r\n        return 'polydeoxyribonucleotide';\r\n    }\r\n    else if (SaccharideComponentTypeNames.has(compType)) {\r\n        return 'oligosaccharide';\r\n    }\r\n    else if (SaccharideCompIdMap.has(compId)) {\r\n        return 'oligosaccharide';\r\n    }\r\n    else if (PeptideBaseNames.has(compId)) {\r\n        return 'peptide nucleic acid';\r\n    }\r\n    else if (AminoAcidNamesL.has(compId)) {\r\n        return 'polypeptide(L)';\r\n    }\r\n    else if (AminoAcidNamesD.has(compId)) {\r\n        return 'polypeptide(D)';\r\n    }\r\n    else if (RnaBaseNames.has(compId)) {\r\n        return 'polyribonucleotide';\r\n    }\r\n    else if (DnaBaseNames.has(compId)) {\r\n        return 'polydeoxyribonucleotide';\r\n    }\r\n    else if (IonComponentTypeNames.has(compType) || IonNames.has(compId)) {\r\n        return 'ion';\r\n    }\r\n    else if (LipidComponentTypeNames.has(compType) || LipidNames.has(compId)) {\r\n        return 'lipid';\r\n    }\r\n    else if (OtherProteinComponentTypeNames.has(compType)) {\r\n        return 'peptide-like';\r\n    }\r\n    else {\r\n        return 'other';\r\n    }\r\n}\r\nexport function isPolymer(moleculeType) {\r\n    return isNucleic(moleculeType) || isProtein(moleculeType);\r\n}\r\nexport function isNucleic(moleculeType) {\r\n    return moleculeType === 7 /* DNA */ || moleculeType === 6 /* RNA */ || moleculeType === 8 /* PNA */;\r\n}\r\nexport function isProtein(moleculeType) {\r\n    return moleculeType === 5 /* Protein */;\r\n}\r\nexport var SecondaryStructureType;\r\n(function (SecondaryStructureType) {\r\n    SecondaryStructureType.is = BitFlags.has;\r\n    SecondaryStructureType.create = BitFlags.create;\r\n    SecondaryStructureType.SecondaryStructureMmcif = {\r\n        HELX_LH_27_P: 2 /* Helix */ | 32 /* LeftHanded */ | 1024 /* Helix27 */,\r\n        HELX_LH_3T_P: 2 /* Helix */ | 32 /* LeftHanded */ | 2048 /* Helix3Ten */,\r\n        HELX_LH_AL_P: 2 /* Helix */ | 32 /* LeftHanded */ | 4096 /* HelixAlpha */,\r\n        HELX_LH_A_N: 1 /* DoubleHelix */ | 32 /* LeftHanded */ | 524288 /* DoubleHelixA */,\r\n        HELX_LH_B_N: 1 /* DoubleHelix */ | 32 /* LeftHanded */ | 1048576 /* DoubleHelixB */,\r\n        HELX_LH_GA_P: 2 /* Helix */ | 32 /* LeftHanded */ | 8192 /* HelixGamma */,\r\n        HELX_LH_N: 1 /* DoubleHelix */ | 32 /* LeftHanded */,\r\n        HELX_LH_OM_P: 2 /* Helix */ | 32 /* LeftHanded */ | 16384 /* HelixOmega */,\r\n        HELX_LH_OT_N: 1 /* DoubleHelix */ | 32 /* LeftHanded */ | 131072 /* DoubleHelixOther */,\r\n        HELX_LH_OT_P: 2 /* Helix */ | 32 /* LeftHanded */ | 512 /* HelixOther */,\r\n        HELX_LH_P: 2 /* Helix */ | 32 /* LeftHanded */,\r\n        HELX_LH_PI_P: 2 /* Helix */ | 32 /* LeftHanded */ | 32768 /* HelixPi */,\r\n        HELX_LH_PP_P: 2 /* Helix */ | 32 /* LeftHanded */ | 65536 /* HelixPolyproline */,\r\n        HELX_LH_Z_N: 1 /* DoubleHelix */ | 32 /* LeftHanded */ | 262144 /* DoubleHelixZ */,\r\n        HELX_N: 1 /* DoubleHelix */,\r\n        HELX_OT_N: 1 /* DoubleHelix */,\r\n        HELX_OT_P: 2 /* Helix */,\r\n        HELX_P: 2 /* Helix */,\r\n        HELX_RH_27_P: 2 /* Helix */ | 64 /* RightHanded */ | 1024 /* Helix27 */,\r\n        HELX_RH_3T_P: 2 /* Helix */ | 64 /* RightHanded */ | 2048 /* Helix3Ten */,\r\n        HELX_RH_AL_P: 2 /* Helix */ | 64 /* RightHanded */ | 4096 /* HelixAlpha */,\r\n        HELX_RH_A_N: 1 /* DoubleHelix */ | 64 /* RightHanded */ | 524288 /* DoubleHelixA */,\r\n        HELX_RH_B_N: 1 /* DoubleHelix */ | 64 /* RightHanded */ | 1048576 /* DoubleHelixB */,\r\n        HELX_RH_GA_P: 2 /* Helix */ | 64 /* RightHanded */ | 8192 /* HelixGamma */,\r\n        HELX_RH_N: 1 /* DoubleHelix */ | 64 /* RightHanded */,\r\n        HELX_RH_OM_P: 2 /* Helix */ | 64 /* RightHanded */ | 16384 /* HelixOmega */,\r\n        HELX_RH_OT_N: 1 /* DoubleHelix */ | 64 /* RightHanded */ | 131072 /* DoubleHelixOther */,\r\n        HELX_RH_OT_P: 2 /* Helix */ | 64 /* RightHanded */ | 512 /* HelixOther */,\r\n        HELX_RH_P: 2 /* Helix */ | 64 /* RightHanded */,\r\n        HELX_RH_PI_P: 2 /* Helix */ | 64 /* RightHanded */ | 32768 /* HelixPi */,\r\n        HELX_RH_PP_P: 2 /* Helix */ | 64 /* RightHanded */ | 65536 /* HelixPolyproline */,\r\n        HELX_RH_Z_N: 1 /* DoubleHelix */ | 64 /* RightHanded */ | 262144 /* DoubleHelixZ */,\r\n        STRN: 4 /* Beta */ | 4194304 /* BetaStrand */,\r\n        TURN_OT_P: 16 /* Turn */ | 33554432 /* TurnOther */,\r\n        TURN_P: 16 /* Turn */,\r\n        TURN_TY1P_P: 16 /* Turn */ | 256 /* InverseTurn */ | 67108864 /* Turn1 */,\r\n        TURN_TY1_P: 16 /* Turn */ | 128 /* ClassicTurn */ | 67108864 /* Turn1 */,\r\n        TURN_TY2P_P: 16 /* Turn */ | 256 /* InverseTurn */ | 134217728 /* Turn2 */,\r\n        TURN_TY2_P: 16 /* Turn */ | 128 /* ClassicTurn */ | 134217728 /* Turn2 */,\r\n        TURN_TY3P_P: 16 /* Turn */ | 256 /* InverseTurn */ | 268435456 /* Turn3 */,\r\n        TURN_TY3_P: 16 /* Turn */ | 128 /* ClassicTurn */ | 268435456 /* Turn3 */, // type III turn (protein)\r\n    };\r\n    SecondaryStructureType.SecondaryStructurePdb = {\r\n        1: 2 /* Helix */ | 64 /* RightHanded */ | 4096 /* HelixAlpha */,\r\n        2: 2 /* Helix */ | 64 /* RightHanded */ | 16384 /* HelixOmega */,\r\n        3: 2 /* Helix */ | 64 /* RightHanded */ | 32768 /* HelixPi */,\r\n        4: 2 /* Helix */ | 64 /* RightHanded */ | 8192 /* HelixGamma */,\r\n        5: 2 /* Helix */ | 64 /* RightHanded */ | 2048 /* Helix3Ten */,\r\n        6: 2 /* Helix */ | 32 /* LeftHanded */ | 4096 /* HelixAlpha */,\r\n        7: 2 /* Helix */ | 32 /* LeftHanded */ | 16384 /* HelixOmega */,\r\n        8: 2 /* Helix */ | 32 /* LeftHanded */ | 8192 /* HelixGamma */,\r\n        9: 2 /* Helix */ | 1024 /* Helix27 */,\r\n        10: 2 /* Helix */ | 65536 /* HelixPolyproline */, // Polyproline\r\n    };\r\n    SecondaryStructureType.SecondaryStructureStride = {\r\n        H: 2 /* Helix */ | 4096 /* HelixAlpha */,\r\n        G: 2 /* Helix */ | 2048 /* Helix3Ten */,\r\n        I: 2 /* Helix */ | 32768 /* HelixPi */,\r\n        E: 4 /* Beta */ | 8388608 /* BetaSheet */,\r\n        B: 4 /* Beta */ | 4194304 /* BetaStrand */,\r\n        T: 16 /* Turn */,\r\n        C: 536870912 /* NA */, // Coil (none of the above)\r\n    };\r\n    SecondaryStructureType.SecondaryStructureDssp = {\r\n        H: 2 /* Helix */ | 4096 /* HelixAlpha */,\r\n        B: 4 /* Beta */ | 4194304 /* BetaStrand */,\r\n        E: 4 /* Beta */ | 8388608 /* BetaSheet */,\r\n        G: 2 /* Helix */ | 2048 /* Helix3Ten */,\r\n        I: 2 /* Helix */ | 32768 /* HelixPi */,\r\n        T: 16 /* Turn */,\r\n        S: 8 /* Bend */, // bend\r\n    };\r\n})(SecondaryStructureType || (SecondaryStructureType = {}));\r\n/** Maximum accessible surface area observed for amino acids. Taken from: http://dx.doi.org/10.1371/journal.pone.0080635 */\r\nexport var MaxAsa = {\r\n    'ALA': 121.0,\r\n    'ARG': 265.0,\r\n    'ASN': 187.0,\r\n    'ASP': 187.0,\r\n    'CYS': 148.0,\r\n    'GLU': 214.0,\r\n    'GLN': 214.0,\r\n    'GLY': 97.0,\r\n    'HIS': 216.0,\r\n    'ILE': 195.0,\r\n    'LEU': 191.0,\r\n    'LYS': 230.0,\r\n    'MET': 203.0,\r\n    'PHE': 228.0,\r\n    'PRO': 154.0,\r\n    'SER': 143.0,\r\n    'THR': 163.0,\r\n    'TRP': 264.0,\r\n    'TYR': 255.0,\r\n    'VAL': 165.0,\r\n    // charmm ff\r\n    'HSD': 216.0, 'HSE': 216.0, 'HSP': 216.0,\r\n    // amber ff\r\n    'HID': 216.0, 'HIE': 216.0, 'HIP': 216.0, 'ASH': 187.0, 'GLH': 214.0,\r\n};\r\nexport var DefaultMaxAsa = 121.0;\r\nexport var BondType;\r\n(function (BondType) {\r\n    BondType.is = BitFlags.has;\r\n    function create(flags) {\r\n        return BitFlags.create(flags);\r\n    }\r\n    BondType.create = create;\r\n    function isCovalent(flags) {\r\n        return (flags & 1 /* Covalent */) !== 0;\r\n    }\r\n    BondType.isCovalent = isCovalent;\r\n    function isAll(flags) {\r\n        return flags === Math.pow(2, 6) - 1;\r\n    }\r\n    BondType.isAll = isAll;\r\n    BondType.Names = {\r\n        'covalent': 1 /* Covalent */,\r\n        'metal-coordination': 2 /* MetallicCoordination */,\r\n        'hydrogen-bond': 4 /* HydrogenBond */,\r\n        'disulfide': 8 /* Disulfide */,\r\n        'aromatic': 16 /* Aromatic */,\r\n        'computed': 32 /* Computed */,\r\n    };\r\n    function isName(name) {\r\n        return name in BondType.Names;\r\n    }\r\n    BondType.isName = isName;\r\n    function fromName(name) {\r\n        switch (name) {\r\n            case 'covalent': return 1 /* Covalent */;\r\n            case 'metal-coordination': return 2 /* MetallicCoordination */;\r\n            case 'hydrogen-bond': return 4 /* HydrogenBond */;\r\n            case 'disulfide': return 8 /* Disulfide */;\r\n            case 'aromatic': return 16 /* Aromatic */;\r\n            case 'computed': return 32 /* Computed */;\r\n        }\r\n    }\r\n    BondType.fromName = fromName;\r\n    function fromNames(names) {\r\n        var f = 0 /* None */;\r\n        for (var i = 0, il = names.length; i < il; ++i) {\r\n            f |= fromName(names[i]);\r\n        }\r\n        return f;\r\n    }\r\n    BondType.fromNames = fromNames;\r\n})(BondType || (BondType = {}));\r\n/**\r\n * \"Experimentally determined hydrophobicity scale for proteins at membrane interfaces\"\r\n * by Wimely and White (doi:10.1038/nsb1096-842)\r\n * http://blanco.biomol.uci.edu/Whole_residue_HFscales.txt\r\n * https://www.nature.com/articles/nsb1096-842\r\n */\r\nexport var ResidueHydrophobicity = {\r\n    // AA  DGwif   DGwoct  Oct-IF\r\n    'ALA': [0.17, 0.50, 0.33],\r\n    'ARG': [0.81, 1.81, 1.00],\r\n    'ASN': [0.42, 0.85, 0.43],\r\n    'ASP': [1.23, 3.64, 2.41],\r\n    'ASH': [-0.07, 0.43, 0.50],\r\n    'CYS': [-0.24, -0.02, 0.22],\r\n    'GLN': [0.58, 0.77, 0.19],\r\n    'GLU': [2.02, 3.63, 1.61],\r\n    'GLH': [-0.01, 0.11, 0.12],\r\n    'GLY': [0.01, 1.15, 1.14],\r\n    // \"His+\": [  0.96,  2.33,  1.37 ],\r\n    'HIS': [0.17, 0.11, -0.06],\r\n    'ILE': [-0.31, -1.12, -0.81],\r\n    'LEU': [-0.56, -1.25, -0.69],\r\n    'LYS': [0.99, 2.80, 1.81],\r\n    'MET': [-0.23, -0.67, -0.44],\r\n    'PHE': [-1.13, -1.71, -0.58],\r\n    'PRO': [0.45, 0.14, -0.31],\r\n    'SER': [0.13, 0.46, 0.33],\r\n    'THR': [0.14, 0.25, 0.11],\r\n    'TRP': [-1.85, -2.09, -0.24],\r\n    'TYR': [-0.94, -0.71, 0.23],\r\n    'VAL': [0.07, -0.46, -0.53],\r\n    // charmm ff\r\n    'HSD': [0.17, 0.11, -0.06], 'HSE': [0.17, 0.11, -0.06], 'HSP': [0.96, 2.33, 1.37],\r\n    // amber ff\r\n    'HID': [0.17, 0.11, -0.06], 'HIE': [0.17, 0.11, -0.06], 'HIP': [0.96, 2.33, 1.37],\r\n};\r\nexport var DefaultResidueHydrophobicity = [0.00, 0.00, 0.00];\r\n//# sourceMappingURL=types.js.map"]},"metadata":{},"sourceType":"module"}