{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Vec3 } from '../../mol-math/linear-algebra';\nimport { PrimitiveBuilder } from './primitive';\nimport { polygon } from './polygon';\nimport { PrismCage } from './prism';\nvar a = Vec3.zero(),\n    b = Vec3.zero(),\n    c = Vec3.zero(),\n    d = Vec3.zero();\nvar points = polygon(3, false);\n/**\r\n * Create a prism with a triangular base\r\n */\n\nexport function createWedge() {\n  var builder = PrimitiveBuilder(8); // create sides\n\n  for (var i = 0; i < 3; ++i) {\n    var ni = (i + 1) % 3;\n    Vec3.set(a, points[i * 3], points[i * 3 + 1], -0.5);\n    Vec3.set(b, points[ni * 3], points[ni * 3 + 1], -0.5);\n    Vec3.set(c, points[ni * 3], points[ni * 3 + 1], 0.5);\n    Vec3.set(d, points[i * 3], points[i * 3 + 1], 0.5);\n    builder.add(a, b, c);\n    builder.add(c, d, a);\n  } // create bases\n\n\n  Vec3.set(a, points[0], points[1], -0.5);\n  Vec3.set(b, points[3], points[4], -0.5);\n  Vec3.set(c, points[6], points[7], -0.5);\n  builder.add(c, b, a);\n  Vec3.set(a, points[0], points[1], 0.5);\n  Vec3.set(b, points[3], points[4], 0.5);\n  Vec3.set(c, points[6], points[7], 0.5);\n  builder.add(a, b, c);\n  return builder.getPrimitive();\n}\nvar wedge;\nexport function Wedge() {\n  if (!wedge) wedge = createWedge();\n  return wedge;\n}\nvar wedgeCage;\nexport function WedgeCage() {\n  if (!wedgeCage) wedgeCage = PrismCage(points);\n  return wedgeCage;\n}","map":{"version":3,"sources":["../../../src/mol-geo/primitive/wedge.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Vec3 } from '../../mol-math/linear-algebra';\r\nimport { PrimitiveBuilder } from './primitive';\r\nimport { polygon } from './polygon';\r\nimport { PrismCage } from './prism';\r\nvar a = Vec3.zero(), b = Vec3.zero(), c = Vec3.zero(), d = Vec3.zero();\r\nvar points = polygon(3, false);\r\n/**\r\n * Create a prism with a triangular base\r\n */\r\nexport function createWedge() {\r\n    var builder = PrimitiveBuilder(8);\r\n    // create sides\r\n    for (var i = 0; i < 3; ++i) {\r\n        var ni = (i + 1) % 3;\r\n        Vec3.set(a, points[i * 3], points[i * 3 + 1], -0.5);\r\n        Vec3.set(b, points[ni * 3], points[ni * 3 + 1], -0.5);\r\n        Vec3.set(c, points[ni * 3], points[ni * 3 + 1], 0.5);\r\n        Vec3.set(d, points[i * 3], points[i * 3 + 1], 0.5);\r\n        builder.add(a, b, c);\r\n        builder.add(c, d, a);\r\n    }\r\n    // create bases\r\n    Vec3.set(a, points[0], points[1], -0.5);\r\n    Vec3.set(b, points[3], points[4], -0.5);\r\n    Vec3.set(c, points[6], points[7], -0.5);\r\n    builder.add(c, b, a);\r\n    Vec3.set(a, points[0], points[1], 0.5);\r\n    Vec3.set(b, points[3], points[4], 0.5);\r\n    Vec3.set(c, points[6], points[7], 0.5);\r\n    builder.add(a, b, c);\r\n    return builder.getPrimitive();\r\n}\r\nvar wedge;\r\nexport function Wedge() {\r\n    if (!wedge)\r\n        wedge = createWedge();\r\n    return wedge;\r\n}\r\nvar wedgeCage;\r\nexport function WedgeCage() {\r\n    if (!wedgeCage)\r\n        wedgeCage = PrismCage(points);\r\n    return wedgeCage;\r\n}\r\n//# sourceMappingURL=wedge.js.map"]},"metadata":{},"sourceType":"module"}