{"ast":null,"code":"/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { TriTable } from '../../../mol-geo/util/marching-cubes/tables';\nimport { createTextureImage } from '../../../mol-gl/renderable/util';\nvar TriCount;\nexport function getTriCount() {\n  if (TriCount !== undefined) return TriCount;\n  TriCount = createTextureImage(16 * 16, 1, Uint8Array);\n  var array = TriCount.array;\n\n  for (var i = 0, il = TriTable.length; i < il; ++i) {\n    array[i] = TriTable[i].length / 3;\n  }\n\n  return TriCount;\n}\nvar TriIndices;\nexport function getTriIndices() {\n  if (TriIndices !== undefined) return TriIndices;\n  TriIndices = createTextureImage(64 * 64, 1, Uint8Array);\n  var array = TriIndices.array;\n\n  for (var i = 0, il = TriTable.length; i < il; ++i) {\n    for (var j = 0; j < 16; ++j) {\n      if (j < TriTable[i].length) {\n        array[i * 16 + j] = TriTable[i][j];\n      } else {\n        array[i * 16 + j] = 255;\n      }\n    }\n  }\n\n  return TriIndices;\n}","map":{"version":3,"sources":["../../../../src/mol-gl/compute/marching-cubes/tables.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,SAAS,QAAT,QAA0B,6CAA1B;AACA,SAAuB,kBAAvB,QAAiD,iCAAjD;AAEA,IAAI,QAAJ;AACA,OAAM,SAAU,WAAV,GAAqB;AACvB,MAAI,QAAQ,KAAK,SAAjB,EAA4B,OAAO,QAAP;AAC5B,EAAA,QAAQ,GAAG,kBAAkB,CAAC,KAAK,EAAN,EAAU,CAAV,EAAa,UAAb,CAA7B;AACQ,MAAA,KAAK,GAAK,QAAQ,CAAb,KAAL;;AACR,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,QAAQ,CAAC,MAA9B,EAAsC,CAAC,GAAG,EAA1C,EAA8C,EAAE,CAAhD,EAAmD;AAC/C,IAAA,KAAK,CAAC,CAAD,CAAL,GAAW,QAAQ,CAAC,CAAD,CAAR,CAAY,MAAZ,GAAqB,CAAhC;AACH;;AACD,SAAO,QAAP;AACH;AAED,IAAI,UAAJ;AACA,OAAM,SAAU,aAAV,GAAuB;AACzB,MAAI,UAAU,KAAK,SAAnB,EAA8B,OAAO,UAAP;AAC9B,EAAA,UAAU,GAAG,kBAAkB,CAAC,KAAK,EAAN,EAAU,CAAV,EAAa,UAAb,CAA/B;AACQ,MAAA,KAAK,GAAK,UAAU,CAAf,KAAL;;AACR,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,QAAQ,CAAC,MAA9B,EAAsC,CAAC,GAAG,EAA1C,EAA8C,EAAE,CAAhD,EAAmD;AAC/C,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,EAApB,EAAwB,EAAE,CAA1B,EAA6B;AACzB,UAAI,CAAC,GAAG,QAAQ,CAAC,CAAD,CAAR,CAAY,MAApB,EAA4B;AACxB,QAAA,KAAK,CAAC,CAAC,GAAG,EAAJ,GAAS,CAAV,CAAL,GAAoB,QAAQ,CAAC,CAAD,CAAR,CAAY,CAAZ,CAApB;AACH,OAFD,MAEO;AACH,QAAA,KAAK,CAAC,CAAC,GAAG,EAAJ,GAAS,CAAV,CAAL,GAAoB,GAApB;AACH;AACJ;AACJ;;AACD,SAAO,UAAP;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { TriTable, } from '../../../mol-geo/util/marching-cubes/tables';\r\nimport { createTextureImage } from '../../../mol-gl/renderable/util';\r\nvar TriCount;\r\nexport function getTriCount() {\r\n    if (TriCount !== undefined)\r\n        return TriCount;\r\n    TriCount = createTextureImage(16 * 16, 1, Uint8Array);\r\n    var array = TriCount.array;\r\n    for (var i = 0, il = TriTable.length; i < il; ++i) {\r\n        array[i] = TriTable[i].length / 3;\r\n    }\r\n    return TriCount;\r\n}\r\nvar TriIndices;\r\nexport function getTriIndices() {\r\n    if (TriIndices !== undefined)\r\n        return TriIndices;\r\n    TriIndices = createTextureImage(64 * 64, 1, Uint8Array);\r\n    var array = TriIndices.array;\r\n    for (var i = 0, il = TriTable.length; i < il; ++i) {\r\n        for (var j = 0; j < 16; ++j) {\r\n            if (j < TriTable[i].length) {\r\n                array[i * 16 + j] = TriTable[i][j];\r\n            }\r\n            else {\r\n                array[i * 16 + j] = 255;\r\n            }\r\n        }\r\n    }\r\n    return TriIndices;\r\n}\r\n//# sourceMappingURL=tables.js.map"]},"metadata":{},"sourceType":"module"}