{"ast":null,"code":"/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * Adapted from LiteMol.\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { LinkedList } from '../mol-data/generic';\nexport { LRUCache };\nvar LRUCache;\n\n(function (LRUCache) {\n  function entry(key, data) {\n    return {\n      key: key,\n      data: data\n    };\n  }\n\n  function create(capacity) {\n    return {\n      entries: LinkedList(),\n      capacity: Math.max(1, capacity)\n    };\n  }\n\n  LRUCache.create = create;\n\n  function get(cache, key) {\n    for (var e = cache.entries.first; e; e = e.next) {\n      if (e.value.key === key) {\n        cache.entries.remove(e);\n        cache.entries.addLast(e.value);\n        return e.value.data;\n      }\n    }\n\n    return void 0;\n  }\n\n  LRUCache.get = get;\n\n  function set(cache, key, data) {\n    var removed = undefined;\n\n    if (cache.entries.count >= cache.capacity) {\n      var first = cache.entries.first;\n      removed = first.value.data;\n      cache.entries.remove(first);\n    }\n\n    cache.entries.addLast(entry(key, data));\n    return removed;\n  }\n\n  LRUCache.set = set;\n})(LRUCache || (LRUCache = {}));","map":{"version":3,"sources":["../../src/mol-util/lru-cache.ts"],"names":[],"mappings":"AACA;;;;;AAKG;AAEH,SAAS,UAAT,QAA2B,qBAA3B;AAEA,SAAS,QAAT;AAOA,IAAU,QAAV;;AAAA,CAAA,UAAU,QAAV,EAAkB;AAMd,WAAS,KAAT,CAAkB,GAAlB,EAA+B,IAA/B,EAAsC;AAClC,WAAO;AAAE,MAAA,GAAG,EAAA,GAAL;AAAO,MAAA,IAAI,EAAA;AAAX,KAAP;AACH;;AAED,WAAgB,MAAhB,CAA0B,QAA1B,EAA0C;AACtC,WAAO;AACH,MAAA,OAAO,EAAE,UAAU,EADhB;AAEH,MAAA,QAAQ,EAAE,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,QAAZ;AAFP,KAAP;AAIH;;AALe,EAAA,QAAA,CAAA,MAAA,GAAM,MAAN;;AAOhB,WAAgB,GAAhB,CAAuB,KAAvB,EAA2C,GAA3C,EAAsD;AAClD,SAAK,IAAI,CAAC,GAAG,KAAK,CAAC,OAAN,CAAc,KAA3B,EAAkC,CAAlC,EAAqC,CAAC,GAAG,CAAC,CAAC,IAA3C,EAAiD;AAC7C,UAAI,CAAC,CAAC,KAAF,CAAQ,GAAR,KAAgB,GAApB,EAAyB;AACrB,QAAA,KAAK,CAAC,OAAN,CAAc,MAAd,CAAqB,CAArB;AACA,QAAA,KAAK,CAAC,OAAN,CAAc,OAAd,CAAsB,CAAC,CAAC,KAAxB;AACA,eAAO,CAAC,CAAC,KAAF,CAAQ,IAAf;AACH;AACJ;;AACD,WAAO,KAAK,CAAZ;AACH;;AATe,EAAA,QAAA,CAAA,GAAA,GAAG,GAAH;;AAWhB,WAAgB,GAAhB,CAAuB,KAAvB,EAA2C,GAA3C,EAAwD,IAAxD,EAA+D;AAC3D,QAAI,OAAO,GAAkB,SAA7B;;AACA,QAAI,KAAK,CAAC,OAAN,CAAc,KAAd,IAAuB,KAAK,CAAC,QAAjC,EAA2C;AACvC,UAAM,KAAK,GAAG,KAAK,CAAC,OAAN,CAAc,KAA5B;AACA,MAAA,OAAO,GAAG,KAAK,CAAC,KAAN,CAAY,IAAtB;AACA,MAAA,KAAK,CAAC,OAAN,CAAc,MAAd,CAAqB,KAArB;AACH;;AACD,IAAA,KAAK,CAAC,OAAN,CAAc,OAAd,CAAsB,KAAK,CAAC,GAAD,EAAM,IAAN,CAA3B;AACA,WAAO,OAAP;AACH;;AATe,EAAA,QAAA,CAAA,GAAA,GAAG,GAAH;AAUnB,CAtCD,EAAU,QAAQ,KAAR,QAAQ,GAAA,EAAA,CAAlB","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * Adapted from LiteMol.\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { LinkedList } from '../mol-data/generic';\r\nexport { LRUCache };\r\nvar LRUCache;\r\n(function (LRUCache) {\r\n    function entry(key, data) {\r\n        return { key: key, data: data };\r\n    }\r\n    function create(capacity) {\r\n        return {\r\n            entries: LinkedList(),\r\n            capacity: Math.max(1, capacity)\r\n        };\r\n    }\r\n    LRUCache.create = create;\r\n    function get(cache, key) {\r\n        for (var e = cache.entries.first; e; e = e.next) {\r\n            if (e.value.key === key) {\r\n                cache.entries.remove(e);\r\n                cache.entries.addLast(e.value);\r\n                return e.value.data;\r\n            }\r\n        }\r\n        return void 0;\r\n    }\r\n    LRUCache.get = get;\r\n    function set(cache, key, data) {\r\n        var removed = undefined;\r\n        if (cache.entries.count >= cache.capacity) {\r\n            var first = cache.entries.first;\r\n            removed = first.value.data;\r\n            cache.entries.remove(first);\r\n        }\r\n        cache.entries.addLast(entry(key, data));\r\n        return removed;\r\n    }\r\n    LRUCache.set = set;\r\n})(LRUCache || (LRUCache = {}));\r\n//# sourceMappingURL=lru-cache.js.map"]},"metadata":{},"sourceType":"module"}