{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { UUID } from '../../mol-util';\nimport { OrderedSet } from '../../mol-data/int';\nimport { Geometry } from '../../mol-geo/geometry/geometry';\nimport { Mat4, Vec3 } from '../../mol-math/linear-algebra';\nimport { Sphere3D } from '../../mol-math/geometry';\nimport { CentroidHelper } from '../../mol-math/geometry/centroid-helper';\nimport { ShapeGroupSizeTheme } from '../../mol-theme/size/shape-group';\nimport { ShapeGroupColorTheme } from '../../mol-theme/color/shape-group';\nimport { createTransform as _createTransform } from '../../mol-geo/geometry/transform-data';\nimport { createRenderObject as _createRenderObject, getNextMaterialId } from '../../mol-gl/render-object';\nimport { LocationIterator } from '../../mol-geo/util/location-iterator';\nexport var Shape;\n\n(function (Shape) {\n  function create(name, sourceData, geometry, getColor, getSize, getLabel, transforms) {\n    return {\n      id: UUID.create22(),\n      name: name,\n      sourceData: sourceData,\n      geometry: geometry,\n      transforms: transforms || [Mat4.identity()],\n\n      get groupCount() {\n        return Geometry.getGroupCount(geometry);\n      },\n\n      getColor: getColor,\n      getSize: getSize,\n      getLabel: getLabel\n    };\n  }\n\n  Shape.create = create;\n\n  function getTheme(shape) {\n    return {\n      color: ShapeGroupColorTheme({\n        shape: shape\n      }, {}),\n      size: ShapeGroupSizeTheme({\n        shape: shape\n      }, {})\n    };\n  }\n\n  Shape.getTheme = getTheme;\n\n  function groupIterator(shape) {\n    var instanceCount = shape.transforms.length;\n    var location = ShapeGroup.Location(shape);\n\n    var getLocation = function (groupIndex, instanceIndex) {\n      location.group = groupIndex;\n      location.instance = instanceIndex;\n      return location;\n    };\n\n    return LocationIterator(shape.groupCount, instanceCount, 1, getLocation);\n  }\n\n  Shape.groupIterator = groupIterator;\n\n  function createTransform(transforms, transformData) {\n    var transformArray = transformData && transformData.aTransform.ref.value.length >= transforms.length * 16 ? transformData.aTransform.ref.value : new Float32Array(transforms.length * 16);\n\n    for (var i = 0, il = transforms.length; i < il; ++i) {\n      Mat4.toArray(transforms[i], transformArray, i * 16);\n    }\n\n    return _createTransform(transformArray, transforms.length, transformData);\n  }\n\n  Shape.createTransform = createTransform;\n\n  function createRenderObject(shape, props) {\n    props;\n    var theme = Shape.getTheme(shape);\n    var utils = Geometry.getUtils(shape.geometry);\n    var materialId = getNextMaterialId();\n    var locationIt = groupIterator(shape);\n    var transform = Shape.createTransform(shape.transforms);\n    var values = utils.createValues(shape.geometry, transform, locationIt, theme, props);\n    var state = utils.createRenderableState(props);\n    return _createRenderObject(shape.geometry.kind, values, state, materialId);\n  }\n\n  Shape.createRenderObject = createRenderObject;\n\n  function Loci(shape) {\n    return {\n      kind: 'shape-loci',\n      shape: shape\n    };\n  }\n\n  Shape.Loci = Loci;\n\n  function isLoci(x) {\n    return !!x && x.kind === 'shape-loci';\n  }\n\n  Shape.isLoci = isLoci;\n\n  function areLociEqual(a, b) {\n    return a.shape === b.shape;\n  }\n\n  Shape.areLociEqual = areLociEqual;\n\n  function isLociEmpty(loci) {\n    return loci.shape.groupCount === 0;\n  }\n\n  Shape.isLociEmpty = isLociEmpty;\n})(Shape || (Shape = {}));\n\nexport var ShapeGroup;\n\n(function (ShapeGroup) {\n  function Location(shape, group, instance) {\n    if (group === void 0) {\n      group = 0;\n    }\n\n    if (instance === void 0) {\n      instance = 0;\n    }\n\n    return {\n      kind: 'group-location',\n      shape: shape,\n      group: group,\n      instance: instance\n    };\n  }\n\n  ShapeGroup.Location = Location;\n\n  function isLocation(x) {\n    return !!x && x.kind === 'group-location';\n  }\n\n  ShapeGroup.isLocation = isLocation;\n\n  function Loci(shape, groups) {\n    return {\n      kind: 'group-loci',\n      shape: shape,\n      groups: groups\n    };\n  }\n\n  ShapeGroup.Loci = Loci;\n\n  function isLoci(x) {\n    return !!x && x.kind === 'group-loci';\n  }\n\n  ShapeGroup.isLoci = isLoci;\n\n  function areLociEqual(a, b) {\n    if (a.shape !== b.shape) return false;\n    if (a.groups.length !== b.groups.length) return false;\n\n    for (var i = 0, il = a.groups.length; i < il; ++i) {\n      var _a = a.groups[i],\n          idsA = _a.ids,\n          instanceA = _a.instance;\n      var _b = b.groups[i],\n          idsB = _b.ids,\n          instanceB = _b.instance;\n      if (instanceA !== instanceB) return false;\n      if (!OrderedSet.areEqual(idsA, idsB)) return false;\n    }\n\n    return true;\n  }\n\n  ShapeGroup.areLociEqual = areLociEqual;\n\n  function isLociEmpty(loci) {\n    return size(loci) === 0 ? true : false;\n  }\n\n  ShapeGroup.isLociEmpty = isLociEmpty;\n\n  function size(loci) {\n    var size = 0;\n\n    for (var _i = 0, _a = loci.groups; _i < _a.length; _i++) {\n      var group = _a[_i];\n      size += OrderedSet.size(group.ids);\n    }\n\n    return size;\n  }\n\n  ShapeGroup.size = size;\n  var sphereHelper = new CentroidHelper(),\n      tmpPos = Vec3.zero();\n\n  function sphereHelperInclude(groups, mapping, positions, transforms) {\n    var indices = mapping.indices,\n        offsets = mapping.offsets;\n\n    var _loop_1 = function (ids, instance) {\n      OrderedSet.forEach(ids, function (v) {\n        for (var i = offsets[v], il = offsets[v + 1]; i < il; ++i) {\n          Vec3.fromArray(tmpPos, positions, indices[i] * 3);\n          Vec3.transformMat4(tmpPos, tmpPos, transforms[instance]);\n          sphereHelper.includeStep(tmpPos);\n        }\n      });\n    };\n\n    for (var _i = 0, groups_1 = groups; _i < groups_1.length; _i++) {\n      var _a = groups_1[_i],\n          ids = _a.ids,\n          instance = _a.instance;\n\n      _loop_1(ids, instance);\n    }\n  }\n\n  function sphereHelperRadius(groups, mapping, positions, transforms) {\n    var indices = mapping.indices,\n        offsets = mapping.offsets;\n\n    var _loop_2 = function (ids, instance) {\n      OrderedSet.forEach(ids, function (v) {\n        for (var i = offsets[v], il = offsets[v + 1]; i < il; ++i) {\n          Vec3.fromArray(tmpPos, positions, indices[i] * 3);\n          Vec3.transformMat4(tmpPos, tmpPos, transforms[instance]);\n          sphereHelper.radiusStep(tmpPos);\n        }\n      });\n    };\n\n    for (var _i = 0, groups_2 = groups; _i < groups_2.length; _i++) {\n      var _a = groups_2[_i],\n          ids = _a.ids,\n          instance = _a.instance;\n\n      _loop_2(ids, instance);\n    }\n  }\n\n  function getBoundingSphere(loci, boundingSphere) {\n    if (!boundingSphere) boundingSphere = Sphere3D();\n    sphereHelper.reset();\n    var padding = 0;\n    var _a = loci.shape,\n        geometry = _a.geometry,\n        transforms = _a.transforms;\n\n    if (geometry.kind === 'mesh' || geometry.kind === 'points') {\n      var positions = geometry.kind === 'mesh' ? geometry.vertexBuffer.ref.value : geometry.centerBuffer.ref.value;\n      sphereHelperInclude(loci.groups, geometry.groupMapping, positions, transforms);\n      sphereHelper.finishedIncludeStep();\n      sphereHelperRadius(loci.groups, geometry.groupMapping, positions, transforms);\n    } else if (geometry.kind === 'lines') {\n      var start = geometry.startBuffer.ref.value;\n      var end = geometry.endBuffer.ref.value;\n      sphereHelperInclude(loci.groups, geometry.groupMapping, start, transforms);\n      sphereHelperInclude(loci.groups, geometry.groupMapping, end, transforms);\n      sphereHelper.finishedIncludeStep();\n      sphereHelperRadius(loci.groups, geometry.groupMapping, start, transforms);\n      sphereHelperRadius(loci.groups, geometry.groupMapping, end, transforms);\n    } else if (geometry.kind === 'spheres' || geometry.kind === 'text') {\n      var positions = geometry.centerBuffer.ref.value;\n      sphereHelperInclude(loci.groups, geometry.groupMapping, positions, transforms);\n      sphereHelper.finishedIncludeStep();\n      sphereHelperRadius(loci.groups, geometry.groupMapping, positions, transforms);\n\n      var _loop_3 = function (ids, instance) {\n        OrderedSet.forEach(ids, function (v) {\n          var value = loci.shape.getSize(v, instance);\n          if (padding < value) padding = value;\n        });\n      };\n\n      for (var _i = 0, _b = loci.groups; _i < _b.length; _i++) {\n        var _c = _b[_i],\n            ids = _c.ids,\n            instance = _c.instance;\n\n        _loop_3(ids, instance);\n      }\n    } else {\n      // use whole shape bounding-sphere for other geometry kinds\n      return Sphere3D.copy(boundingSphere, geometry.boundingSphere);\n    }\n\n    Vec3.copy(boundingSphere.center, sphereHelper.center);\n    boundingSphere.radius = Math.sqrt(sphereHelper.radiusSq);\n    Sphere3D.expand(boundingSphere, boundingSphere, padding);\n    return boundingSphere;\n  }\n\n  ShapeGroup.getBoundingSphere = getBoundingSphere;\n})(ShapeGroup || (ShapeGroup = {}));","map":{"version":3,"sources":["../../../src/mol-model/shape/shape.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { UUID } from '../../mol-util';\r\nimport { OrderedSet } from '../../mol-data/int';\r\nimport { Geometry } from '../../mol-geo/geometry/geometry';\r\nimport { Mat4, Vec3 } from '../../mol-math/linear-algebra';\r\nimport { Sphere3D } from '../../mol-math/geometry';\r\nimport { CentroidHelper } from '../../mol-math/geometry/centroid-helper';\r\nimport { ShapeGroupSizeTheme } from '../../mol-theme/size/shape-group';\r\nimport { ShapeGroupColorTheme } from '../../mol-theme/color/shape-group';\r\nimport { createTransform as _createTransform } from '../../mol-geo/geometry/transform-data';\r\nimport { createRenderObject as _createRenderObject, getNextMaterialId } from '../../mol-gl/render-object';\r\nimport { LocationIterator } from '../../mol-geo/util/location-iterator';\r\nexport var Shape;\r\n(function (Shape) {\r\n    function create(name, sourceData, geometry, getColor, getSize, getLabel, transforms) {\r\n        return {\r\n            id: UUID.create22(),\r\n            name: name,\r\n            sourceData: sourceData,\r\n            geometry: geometry,\r\n            transforms: transforms || [Mat4.identity()],\r\n            get groupCount() { return Geometry.getGroupCount(geometry); },\r\n            getColor: getColor,\r\n            getSize: getSize,\r\n            getLabel: getLabel\r\n        };\r\n    }\r\n    Shape.create = create;\r\n    function getTheme(shape) {\r\n        return {\r\n            color: ShapeGroupColorTheme({ shape: shape }, {}),\r\n            size: ShapeGroupSizeTheme({ shape: shape }, {})\r\n        };\r\n    }\r\n    Shape.getTheme = getTheme;\r\n    function groupIterator(shape) {\r\n        var instanceCount = shape.transforms.length;\r\n        var location = ShapeGroup.Location(shape);\r\n        var getLocation = function (groupIndex, instanceIndex) {\r\n            location.group = groupIndex;\r\n            location.instance = instanceIndex;\r\n            return location;\r\n        };\r\n        return LocationIterator(shape.groupCount, instanceCount, 1, getLocation);\r\n    }\r\n    Shape.groupIterator = groupIterator;\r\n    function createTransform(transforms, transformData) {\r\n        var transformArray = transformData && transformData.aTransform.ref.value.length >= transforms.length * 16 ? transformData.aTransform.ref.value : new Float32Array(transforms.length * 16);\r\n        for (var i = 0, il = transforms.length; i < il; ++i) {\r\n            Mat4.toArray(transforms[i], transformArray, i * 16);\r\n        }\r\n        return _createTransform(transformArray, transforms.length, transformData);\r\n    }\r\n    Shape.createTransform = createTransform;\r\n    function createRenderObject(shape, props) {\r\n        props;\r\n        var theme = Shape.getTheme(shape);\r\n        var utils = Geometry.getUtils(shape.geometry);\r\n        var materialId = getNextMaterialId();\r\n        var locationIt = groupIterator(shape);\r\n        var transform = Shape.createTransform(shape.transforms);\r\n        var values = utils.createValues(shape.geometry, transform, locationIt, theme, props);\r\n        var state = utils.createRenderableState(props);\r\n        return _createRenderObject(shape.geometry.kind, values, state, materialId);\r\n    }\r\n    Shape.createRenderObject = createRenderObject;\r\n    function Loci(shape) { return { kind: 'shape-loci', shape: shape }; }\r\n    Shape.Loci = Loci;\r\n    function isLoci(x) { return !!x && x.kind === 'shape-loci'; }\r\n    Shape.isLoci = isLoci;\r\n    function areLociEqual(a, b) { return a.shape === b.shape; }\r\n    Shape.areLociEqual = areLociEqual;\r\n    function isLociEmpty(loci) { return loci.shape.groupCount === 0; }\r\n    Shape.isLociEmpty = isLociEmpty;\r\n})(Shape || (Shape = {}));\r\nexport var ShapeGroup;\r\n(function (ShapeGroup) {\r\n    function Location(shape, group, instance) {\r\n        if (group === void 0) { group = 0; }\r\n        if (instance === void 0) { instance = 0; }\r\n        return { kind: 'group-location', shape: shape, group: group, instance: instance };\r\n    }\r\n    ShapeGroup.Location = Location;\r\n    function isLocation(x) {\r\n        return !!x && x.kind === 'group-location';\r\n    }\r\n    ShapeGroup.isLocation = isLocation;\r\n    function Loci(shape, groups) {\r\n        return { kind: 'group-loci', shape: shape, groups: groups };\r\n    }\r\n    ShapeGroup.Loci = Loci;\r\n    function isLoci(x) {\r\n        return !!x && x.kind === 'group-loci';\r\n    }\r\n    ShapeGroup.isLoci = isLoci;\r\n    function areLociEqual(a, b) {\r\n        if (a.shape !== b.shape)\r\n            return false;\r\n        if (a.groups.length !== b.groups.length)\r\n            return false;\r\n        for (var i = 0, il = a.groups.length; i < il; ++i) {\r\n            var _a = a.groups[i], idsA = _a.ids, instanceA = _a.instance;\r\n            var _b = b.groups[i], idsB = _b.ids, instanceB = _b.instance;\r\n            if (instanceA !== instanceB)\r\n                return false;\r\n            if (!OrderedSet.areEqual(idsA, idsB))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    ShapeGroup.areLociEqual = areLociEqual;\r\n    function isLociEmpty(loci) {\r\n        return size(loci) === 0 ? true : false;\r\n    }\r\n    ShapeGroup.isLociEmpty = isLociEmpty;\r\n    function size(loci) {\r\n        var size = 0;\r\n        for (var _i = 0, _a = loci.groups; _i < _a.length; _i++) {\r\n            var group = _a[_i];\r\n            size += OrderedSet.size(group.ids);\r\n        }\r\n        return size;\r\n    }\r\n    ShapeGroup.size = size;\r\n    var sphereHelper = new CentroidHelper(), tmpPos = Vec3.zero();\r\n    function sphereHelperInclude(groups, mapping, positions, transforms) {\r\n        var indices = mapping.indices, offsets = mapping.offsets;\r\n        var _loop_1 = function (ids, instance) {\r\n            OrderedSet.forEach(ids, function (v) {\r\n                for (var i = offsets[v], il = offsets[v + 1]; i < il; ++i) {\r\n                    Vec3.fromArray(tmpPos, positions, indices[i] * 3);\r\n                    Vec3.transformMat4(tmpPos, tmpPos, transforms[instance]);\r\n                    sphereHelper.includeStep(tmpPos);\r\n                }\r\n            });\r\n        };\r\n        for (var _i = 0, groups_1 = groups; _i < groups_1.length; _i++) {\r\n            var _a = groups_1[_i], ids = _a.ids, instance = _a.instance;\r\n            _loop_1(ids, instance);\r\n        }\r\n    }\r\n    function sphereHelperRadius(groups, mapping, positions, transforms) {\r\n        var indices = mapping.indices, offsets = mapping.offsets;\r\n        var _loop_2 = function (ids, instance) {\r\n            OrderedSet.forEach(ids, function (v) {\r\n                for (var i = offsets[v], il = offsets[v + 1]; i < il; ++i) {\r\n                    Vec3.fromArray(tmpPos, positions, indices[i] * 3);\r\n                    Vec3.transformMat4(tmpPos, tmpPos, transforms[instance]);\r\n                    sphereHelper.radiusStep(tmpPos);\r\n                }\r\n            });\r\n        };\r\n        for (var _i = 0, groups_2 = groups; _i < groups_2.length; _i++) {\r\n            var _a = groups_2[_i], ids = _a.ids, instance = _a.instance;\r\n            _loop_2(ids, instance);\r\n        }\r\n    }\r\n    function getBoundingSphere(loci, boundingSphere) {\r\n        if (!boundingSphere)\r\n            boundingSphere = Sphere3D();\r\n        sphereHelper.reset();\r\n        var padding = 0;\r\n        var _a = loci.shape, geometry = _a.geometry, transforms = _a.transforms;\r\n        if (geometry.kind === 'mesh' || geometry.kind === 'points') {\r\n            var positions = geometry.kind === 'mesh'\r\n                ? geometry.vertexBuffer.ref.value\r\n                : geometry.centerBuffer.ref.value;\r\n            sphereHelperInclude(loci.groups, geometry.groupMapping, positions, transforms);\r\n            sphereHelper.finishedIncludeStep();\r\n            sphereHelperRadius(loci.groups, geometry.groupMapping, positions, transforms);\r\n        }\r\n        else if (geometry.kind === 'lines') {\r\n            var start = geometry.startBuffer.ref.value;\r\n            var end = geometry.endBuffer.ref.value;\r\n            sphereHelperInclude(loci.groups, geometry.groupMapping, start, transforms);\r\n            sphereHelperInclude(loci.groups, geometry.groupMapping, end, transforms);\r\n            sphereHelper.finishedIncludeStep();\r\n            sphereHelperRadius(loci.groups, geometry.groupMapping, start, transforms);\r\n            sphereHelperRadius(loci.groups, geometry.groupMapping, end, transforms);\r\n        }\r\n        else if (geometry.kind === 'spheres' || geometry.kind === 'text') {\r\n            var positions = geometry.centerBuffer.ref.value;\r\n            sphereHelperInclude(loci.groups, geometry.groupMapping, positions, transforms);\r\n            sphereHelper.finishedIncludeStep();\r\n            sphereHelperRadius(loci.groups, geometry.groupMapping, positions, transforms);\r\n            var _loop_3 = function (ids, instance) {\r\n                OrderedSet.forEach(ids, function (v) {\r\n                    var value = loci.shape.getSize(v, instance);\r\n                    if (padding < value)\r\n                        padding = value;\r\n                });\r\n            };\r\n            for (var _i = 0, _b = loci.groups; _i < _b.length; _i++) {\r\n                var _c = _b[_i], ids = _c.ids, instance = _c.instance;\r\n                _loop_3(ids, instance);\r\n            }\r\n        }\r\n        else {\r\n            // use whole shape bounding-sphere for other geometry kinds\r\n            return Sphere3D.copy(boundingSphere, geometry.boundingSphere);\r\n        }\r\n        Vec3.copy(boundingSphere.center, sphereHelper.center);\r\n        boundingSphere.radius = Math.sqrt(sphereHelper.radiusSq);\r\n        Sphere3D.expand(boundingSphere, boundingSphere, padding);\r\n        return boundingSphere;\r\n    }\r\n    ShapeGroup.getBoundingSphere = getBoundingSphere;\r\n})(ShapeGroup || (ShapeGroup = {}));\r\n//# sourceMappingURL=shape.js.map"]},"metadata":{},"sourceType":"module"}