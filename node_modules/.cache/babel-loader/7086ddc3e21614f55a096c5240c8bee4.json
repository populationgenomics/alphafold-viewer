{"ast":null,"code":"/**\r\n * Copyright (c) 2017 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { now } from '../mol-util/now';\nvar UUID;\n\n(function (UUID) {\n  var _btoa = typeof btoa !== 'undefined' ? btoa : function (s) {\n    return Buffer.from(s).toString('base64');\n  };\n\n  var chars = [];\n  /** Creates a 22 characters 'base64' encoded UUID */\n\n  function create22() {\n    var d = +new Date() + now();\n\n    for (var i = 0; i < 16; i++) {\n      chars[i] = String.fromCharCode((d + Math.random() * 0xff) % 0xff | 0);\n      d = Math.floor(d / 0xff);\n    }\n\n    return _btoa(chars.join('')).replace(/\\+/g, '-').replace(/\\//g, '_').substr(0, 22);\n  }\n\n  UUID.create22 = create22;\n\n  function createv4() {\n    var d = +new Date() + now();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n    });\n    return uuid;\n  }\n\n  UUID.createv4 = createv4;\n\n  function is(x) {\n    return typeof x === 'string';\n  }\n\n  UUID.is = is;\n})(UUID || (UUID = {}));\n\nexport { UUID };","map":{"version":3,"sources":["../../src/mol-util/uuid.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,SAAS,GAAT,QAAoB,iBAApB;AAKA,IAAU,IAAV;;AAAA,CAAA,UAAU,IAAV,EAAc;AACV,MAAM,KAAK,GAAG,OAAO,IAAP,KAAgB,WAAhB,GAA8B,IAA9B,GAAqC,UAAC,CAAD,EAAU;AAAK,WAAA,MAAM,CAAC,IAAP,CAAY,CAAZ,EAAe,QAAf,CAAA,QAAA,CAAA;AAAiC,GAAnG;;AAEA,MAAM,KAAK,GAAa,EAAxB;AACA;;AACA,WAAgB,QAAhB,GAAwB;AACpB,QAAI,CAAC,GAAI,CAAC,IAAI,IAAJ,EAAF,GAAgB,GAAG,EAA3B;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,EAApB,EAAwB,CAAC,EAAzB,EAA6B;AACzB,MAAA,KAAK,CAAC,CAAD,CAAL,GAAW,MAAM,CAAC,YAAP,CAAoB,CAAC,CAAC,GAAG,IAAI,CAAC,MAAL,KAAgB,IAArB,IAA6B,IAA7B,GAAoC,CAAxD,CAAX;AACA,MAAA,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,GAAG,IAAf,CAAJ;AACH;;AACD,WAAO,KAAK,CAAC,KAAK,CAAC,IAAN,CAAW,EAAX,CAAD,CAAL,CAAsB,OAAtB,CAA8B,KAA9B,EAAqC,GAArC,EAA0C,OAA1C,CAAkD,KAAlD,EAAyD,GAAzD,EAA8D,MAA9D,CAAqE,CAArE,EAAwE,EAAxE,CAAP;AACH;;AAPe,EAAA,IAAA,CAAA,QAAA,GAAQ,QAAR;;AAShB,WAAgB,QAAhB,GAAwB;AACpB,QAAI,CAAC,GAAI,CAAC,IAAI,IAAJ,EAAF,GAAgB,GAAG,EAA3B;AACA,QAAM,IAAI,GAAG,uCAAuC,OAAvC,CAA+C,OAA/C,EAAwD,UAAU,CAAV,EAAW;AAC5E,UAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAL,KAAgB,EAArB,IAA2B,EAA3B,GAAgC,CAA1C;AACA,MAAA,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,GAAG,EAAf,CAAJ;AACA,aAAO,CAAC,CAAC,KAAK,GAAN,GAAY,CAAZ,GAAiB,CAAC,GAAG,GAAJ,GAAU,GAA5B,EAAkC,QAAlC,CAA2C,EAA3C,CAAP;AACH,KAJY,CAAb;AAKA,WAAO,IAAP;AACH;;AARe,EAAA,IAAA,CAAA,QAAA,GAAQ,QAAR;;AAUhB,WAAgB,EAAhB,CAAmB,CAAnB,EAAyB;AACrB,WAAO,OAAO,CAAP,KAAa,QAApB;AACH;;AAFe,EAAA,IAAA,CAAA,EAAA,GAAE,EAAF;AAGnB,CA3BD,EAAU,IAAI,KAAJ,IAAI,GAAA,EAAA,CAAd;;AA6BA,SAAS,IAAT","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2017 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { now } from '../mol-util/now';\r\nvar UUID;\r\n(function (UUID) {\r\n    var _btoa = typeof btoa !== 'undefined' ? btoa : function (s) { return Buffer.from(s).toString('base64'); };\r\n    var chars = [];\r\n    /** Creates a 22 characters 'base64' encoded UUID */\r\n    function create22() {\r\n        var d = (+new Date()) + now();\r\n        for (var i = 0; i < 16; i++) {\r\n            chars[i] = String.fromCharCode((d + Math.random() * 0xff) % 0xff | 0);\r\n            d = Math.floor(d / 0xff);\r\n        }\r\n        return _btoa(chars.join('')).replace(/\\+/g, '-').replace(/\\//g, '_').substr(0, 22);\r\n    }\r\n    UUID.create22 = create22;\r\n    function createv4() {\r\n        var d = (+new Date()) + now();\r\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = (d + Math.random() * 16) % 16 | 0;\r\n            d = Math.floor(d / 16);\r\n            return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n        return uuid;\r\n    }\r\n    UUID.createv4 = createv4;\r\n    function is(x) {\r\n        return typeof x === 'string';\r\n    }\r\n    UUID.is = is;\r\n})(UUID || (UUID = {}));\r\nexport { UUID };\r\n//# sourceMappingURL=uuid.js.map"]},"metadata":{},"sourceType":"module"}