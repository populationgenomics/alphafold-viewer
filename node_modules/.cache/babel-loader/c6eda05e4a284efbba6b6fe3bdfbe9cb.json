{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Vec3 } from '../../mol-math/linear-algebra/3d/vec3';\nimport { Sphere3D } from './primitives/sphere3d';\nexport { CentroidHelper };\n\nvar CentroidHelper =\n/** @class */\nfunction () {\n  function CentroidHelper() {\n    this.count = 0;\n    this.center = Vec3();\n    this.radiusSq = 0;\n  }\n\n  CentroidHelper.prototype.reset = function () {\n    Vec3.set(this.center, 0, 0, 0);\n    this.radiusSq = 0;\n    this.count = 0;\n  };\n\n  CentroidHelper.prototype.includeStep = function (p) {\n    Vec3.add(this.center, this.center, p);\n    this.count++;\n  };\n\n  CentroidHelper.prototype.finishedIncludeStep = function () {\n    if (this.count === 0) return;\n    Vec3.scale(this.center, this.center, 1 / this.count);\n  };\n\n  CentroidHelper.prototype.radiusStep = function (p) {\n    var d = Vec3.squaredDistance(p, this.center);\n    if (d > this.radiusSq) this.radiusSq = d;\n  };\n\n  CentroidHelper.prototype.radiusSphereStep = function (center, radius) {\n    var _d = Vec3.distance(center, this.center) + radius;\n\n    var d = _d * _d;\n    if (d > this.radiusSq) this.radiusSq = d;\n  };\n\n  CentroidHelper.prototype.getSphere = function (sphere) {\n    if (!sphere) sphere = Sphere3D();\n    Vec3.copy(sphere.center, this.center);\n    sphere.radius = Math.sqrt(this.radiusSq);\n    return sphere;\n  };\n\n  CentroidHelper.prototype.getCount = function () {\n    return this.count;\n  };\n\n  return CentroidHelper;\n}();\n\n(function (CentroidHelper) {\n  var helper = new CentroidHelper();\n  var posA = Vec3();\n  var posB = Vec3();\n\n  function fromArrays(_a, to) {\n    var x = _a.x,\n        y = _a.y,\n        z = _a.z;\n    helper.reset();\n    var n = x.length;\n\n    for (var i = 0; i < n; i++) {\n      Vec3.set(posA, x[i], y[i], z[i]);\n      helper.includeStep(posA);\n    }\n\n    helper.finishedIncludeStep();\n\n    for (var i = 0; i < n; i++) {\n      Vec3.set(posA, x[i], y[i], z[i]);\n      helper.radiusStep(posA);\n    }\n\n    Vec3.copy(to.center, helper.center);\n    to.radius = Math.sqrt(helper.radiusSq);\n    return to;\n  }\n\n  CentroidHelper.fromArrays = fromArrays;\n\n  function fromProvider(count, getter, to) {\n    helper.reset();\n\n    for (var i = 0; i < count; i++) {\n      getter(i, posA);\n      helper.includeStep(posA);\n    }\n\n    helper.finishedIncludeStep();\n\n    for (var i = 0; i < count; i++) {\n      getter(i, posA);\n      helper.radiusStep(posA);\n    }\n\n    Vec3.copy(to.center, helper.center);\n    to.radius = Math.sqrt(helper.radiusSq);\n    return to;\n  }\n\n  CentroidHelper.fromProvider = fromProvider;\n\n  function fromPairProvider(count, getter, to) {\n    helper.reset();\n\n    for (var i = 0; i < count; i++) {\n      getter(i, posA, posB);\n      helper.includeStep(posA);\n      helper.includeStep(posB);\n    }\n\n    helper.finishedIncludeStep();\n\n    for (var i = 0; i < count; i++) {\n      getter(i, posA, posB);\n      helper.radiusStep(posA);\n      helper.radiusStep(posB);\n    }\n\n    Vec3.copy(to.center, helper.center);\n    to.radius = Math.sqrt(helper.radiusSq);\n    return to;\n  }\n\n  CentroidHelper.fromPairProvider = fromPairProvider;\n})(CentroidHelper || (CentroidHelper = {}));","map":{"version":3,"sources":["../../../src/mol-math/geometry/centroid-helper.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Vec3 } from '../../mol-math/linear-algebra/3d/vec3';\r\nimport { Sphere3D } from './primitives/sphere3d';\r\nexport { CentroidHelper };\r\nvar CentroidHelper = /** @class */ (function () {\r\n    function CentroidHelper() {\r\n        this.count = 0;\r\n        this.center = Vec3();\r\n        this.radiusSq = 0;\r\n    }\r\n    CentroidHelper.prototype.reset = function () {\r\n        Vec3.set(this.center, 0, 0, 0);\r\n        this.radiusSq = 0;\r\n        this.count = 0;\r\n    };\r\n    CentroidHelper.prototype.includeStep = function (p) {\r\n        Vec3.add(this.center, this.center, p);\r\n        this.count++;\r\n    };\r\n    CentroidHelper.prototype.finishedIncludeStep = function () {\r\n        if (this.count === 0)\r\n            return;\r\n        Vec3.scale(this.center, this.center, 1 / this.count);\r\n    };\r\n    CentroidHelper.prototype.radiusStep = function (p) {\r\n        var d = Vec3.squaredDistance(p, this.center);\r\n        if (d > this.radiusSq)\r\n            this.radiusSq = d;\r\n    };\r\n    CentroidHelper.prototype.radiusSphereStep = function (center, radius) {\r\n        var _d = Vec3.distance(center, this.center) + radius;\r\n        var d = _d * _d;\r\n        if (d > this.radiusSq)\r\n            this.radiusSq = d;\r\n    };\r\n    CentroidHelper.prototype.getSphere = function (sphere) {\r\n        if (!sphere)\r\n            sphere = Sphere3D();\r\n        Vec3.copy(sphere.center, this.center);\r\n        sphere.radius = Math.sqrt(this.radiusSq);\r\n        return sphere;\r\n    };\r\n    CentroidHelper.prototype.getCount = function () {\r\n        return this.count;\r\n    };\r\n    return CentroidHelper;\r\n}());\r\n(function (CentroidHelper) {\r\n    var helper = new CentroidHelper();\r\n    var posA = Vec3();\r\n    var posB = Vec3();\r\n    function fromArrays(_a, to) {\r\n        var x = _a.x, y = _a.y, z = _a.z;\r\n        helper.reset();\r\n        var n = x.length;\r\n        for (var i = 0; i < n; i++) {\r\n            Vec3.set(posA, x[i], y[i], z[i]);\r\n            helper.includeStep(posA);\r\n        }\r\n        helper.finishedIncludeStep();\r\n        for (var i = 0; i < n; i++) {\r\n            Vec3.set(posA, x[i], y[i], z[i]);\r\n            helper.radiusStep(posA);\r\n        }\r\n        Vec3.copy(to.center, helper.center);\r\n        to.radius = Math.sqrt(helper.radiusSq);\r\n        return to;\r\n    }\r\n    CentroidHelper.fromArrays = fromArrays;\r\n    function fromProvider(count, getter, to) {\r\n        helper.reset();\r\n        for (var i = 0; i < count; i++) {\r\n            getter(i, posA);\r\n            helper.includeStep(posA);\r\n        }\r\n        helper.finishedIncludeStep();\r\n        for (var i = 0; i < count; i++) {\r\n            getter(i, posA);\r\n            helper.radiusStep(posA);\r\n        }\r\n        Vec3.copy(to.center, helper.center);\r\n        to.radius = Math.sqrt(helper.radiusSq);\r\n        return to;\r\n    }\r\n    CentroidHelper.fromProvider = fromProvider;\r\n    function fromPairProvider(count, getter, to) {\r\n        helper.reset();\r\n        for (var i = 0; i < count; i++) {\r\n            getter(i, posA, posB);\r\n            helper.includeStep(posA);\r\n            helper.includeStep(posB);\r\n        }\r\n        helper.finishedIncludeStep();\r\n        for (var i = 0; i < count; i++) {\r\n            getter(i, posA, posB);\r\n            helper.radiusStep(posA);\r\n            helper.radiusStep(posB);\r\n        }\r\n        Vec3.copy(to.center, helper.center);\r\n        to.radius = Math.sqrt(helper.radiusSq);\r\n        return to;\r\n    }\r\n    CentroidHelper.fromPairProvider = fromPairProvider;\r\n})(CentroidHelper || (CentroidHelper = {}));\r\n//# sourceMappingURL=centroid-helper.js.map"]},"metadata":{},"sourceType":"module"}