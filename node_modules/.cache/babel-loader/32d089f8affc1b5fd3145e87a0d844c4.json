{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { UnitsPointsParams, UnitsPointsVisual } from '../units-visual';\nimport { Points } from '../../../mol-geo/geometry/points/points';\nimport { PointsBuilder } from '../../../mol-geo/geometry/points/points-builder';\nimport { Vec3 } from '../../../mol-math/linear-algebra';\nimport { ElementIterator, getElementLoci, eachElement, makeElementIgnoreTest } from './util/element';\nimport { Sphere3D } from '../../../mol-math/geometry';\nexport var ElementPointParams = __assign(__assign({}, UnitsPointsParams), {\n  pointSizeAttenuation: PD.Boolean(false),\n  ignoreHydrogens: PD.Boolean(false),\n  traceOnly: PD.Boolean(false)\n}); // TODO size\n\nexport function createElementPoint(ctx, unit, structure, theme, props, points) {\n  // TODO sizeFactor\n  var child = structure.child;\n  if (child && !child.unitMap.get(unit.id)) return Points.createEmpty(points);\n  var elements = unit.elements;\n  var n = elements.length;\n  var builder = PointsBuilder.create(n, n / 10, points);\n  var p = Vec3();\n  var pos = unit.conformation.invariantPosition;\n  var ignore = makeElementIgnoreTest(structure, unit, props);\n\n  if (ignore) {\n    for (var i = 0; i < n; ++i) {\n      if (ignore(elements[i])) continue;\n      pos(elements[i], p);\n      builder.add(p[0], p[1], p[2], i);\n    }\n  } else {\n    for (var i = 0; i < n; ++i) {\n      pos(elements[i], p);\n      builder.add(p[0], p[1], p[2], i);\n    }\n  }\n\n  var pt = builder.getPoints();\n  var sphere = Sphere3D.expand(Sphere3D(), unit.boundary.sphere, 1 * props.sizeFactor);\n  pt.setBoundingSphere(sphere);\n  return pt;\n}\nexport function ElementPointVisual(materialId) {\n  return UnitsPointsVisual({\n    defaultProps: PD.getDefaultValues(ElementPointParams),\n    createGeometry: createElementPoint,\n    createLocationIterator: ElementIterator.fromGroup,\n    getLoci: getElementLoci,\n    eachLocation: eachElement,\n    setUpdateState: function (state, newProps, currentProps) {\n      state.createGeometry = newProps.ignoreHydrogens !== currentProps.ignoreHydrogens || newProps.traceOnly !== currentProps.traceOnly;\n    }\n  }, materialId);\n}","map":{"version":3,"sources":["../../../../src/mol-repr/structure/visual/element-point.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { UnitsPointsParams, UnitsPointsVisual } from '../units-visual';\r\nimport { Points } from '../../../mol-geo/geometry/points/points';\r\nimport { PointsBuilder } from '../../../mol-geo/geometry/points/points-builder';\r\nimport { Vec3 } from '../../../mol-math/linear-algebra';\r\nimport { ElementIterator, getElementLoci, eachElement, makeElementIgnoreTest } from './util/element';\r\nimport { Sphere3D } from '../../../mol-math/geometry';\r\nexport var ElementPointParams = __assign(__assign({}, UnitsPointsParams), { pointSizeAttenuation: PD.Boolean(false), ignoreHydrogens: PD.Boolean(false), traceOnly: PD.Boolean(false) });\r\n// TODO size\r\nexport function createElementPoint(ctx, unit, structure, theme, props, points) {\r\n    // TODO sizeFactor\r\n    var child = structure.child;\r\n    if (child && !child.unitMap.get(unit.id))\r\n        return Points.createEmpty(points);\r\n    var elements = unit.elements;\r\n    var n = elements.length;\r\n    var builder = PointsBuilder.create(n, n / 10, points);\r\n    var p = Vec3();\r\n    var pos = unit.conformation.invariantPosition;\r\n    var ignore = makeElementIgnoreTest(structure, unit, props);\r\n    if (ignore) {\r\n        for (var i = 0; i < n; ++i) {\r\n            if (ignore(elements[i]))\r\n                continue;\r\n            pos(elements[i], p);\r\n            builder.add(p[0], p[1], p[2], i);\r\n        }\r\n    }\r\n    else {\r\n        for (var i = 0; i < n; ++i) {\r\n            pos(elements[i], p);\r\n            builder.add(p[0], p[1], p[2], i);\r\n        }\r\n    }\r\n    var pt = builder.getPoints();\r\n    var sphere = Sphere3D.expand(Sphere3D(), unit.boundary.sphere, 1 * props.sizeFactor);\r\n    pt.setBoundingSphere(sphere);\r\n    return pt;\r\n}\r\nexport function ElementPointVisual(materialId) {\r\n    return UnitsPointsVisual({\r\n        defaultProps: PD.getDefaultValues(ElementPointParams),\r\n        createGeometry: createElementPoint,\r\n        createLocationIterator: ElementIterator.fromGroup,\r\n        getLoci: getElementLoci,\r\n        eachLocation: eachElement,\r\n        setUpdateState: function (state, newProps, currentProps) {\r\n            state.createGeometry = (newProps.ignoreHydrogens !== currentProps.ignoreHydrogens ||\r\n                newProps.traceOnly !== currentProps.traceOnly);\r\n        }\r\n    }, materialId);\r\n}\r\n//# sourceMappingURL=element-point.js.map"]},"metadata":{},"sourceType":"module"}