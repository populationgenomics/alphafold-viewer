{"ast":null,"code":"/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __awaiter, __generator } from \"tslib\";\nimport { UUID } from '../mol-util';\nexport { PluginCommand, PluginCommandManager };\n\nfunction PluginCommand() {\n  var ret = function (ctx, params) {\n    return ctx.commands.dispatch(ret, params || {});\n  };\n\n  ret.subscribe = function (ctx, action) {\n    return ctx.commands.subscribe(ret, action);\n  };\n\n  ret.id = UUID.create22();\n  return ret;\n}\n\nvar PluginCommandManager =\n/** @class */\nfunction () {\n  function PluginCommandManager() {\n    this.subs = new Map();\n    this.disposing = false;\n  }\n\n  PluginCommandManager.prototype.subscribe = function (cmd, action) {\n    var _this = this;\n\n    var actions = this.subs.get(cmd.id);\n\n    if (!actions) {\n      actions = [];\n      this.subs.set(cmd.id, actions);\n    }\n\n    actions.push(action);\n    return {\n      unsubscribe: function () {\n        var actions = _this.subs.get(cmd.id);\n\n        if (!actions) return;\n        var idx = actions.indexOf(action);\n        if (idx < 0) return;\n\n        for (var i = idx + 1; i < actions.length; i++) {\n          actions[i - 1] = actions[i];\n        }\n\n        actions.pop();\n      }\n    };\n  };\n  /** Resolves after all actions have completed */\n\n\n  PluginCommandManager.prototype.dispatch = function (cmd, params) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      if (_this.disposing) {\n        reject('disposed');\n        return;\n      }\n\n      var actions = _this.subs.get(cmd.id);\n\n      if (!actions) {\n        resolve();\n        return;\n      }\n\n      _this.resolve({\n        cmd: cmd,\n        params: params,\n        resolve: resolve,\n        reject: reject\n      });\n    });\n  };\n\n  PluginCommandManager.prototype.dispose = function () {\n    this.subs.clear();\n  };\n\n  PluginCommandManager.prototype.resolve = function (instance) {\n    return __awaiter(this, void 0, void 0, function () {\n      var actions, _i, actions_1, a, e_1;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            actions = this.subs.get(instance.cmd.id);\n\n            if (!actions) {\n              instance.resolve();\n              return [2\n              /*return*/\n              ];\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 6,, 7]);\n\n            _i = 0, actions_1 = actions;\n            _a.label = 2;\n\n          case 2:\n            if (!(_i < actions_1.length)) return [3\n            /*break*/\n            , 5];\n            a = actions_1[_i];\n            return [4\n            /*yield*/\n            , a(instance.params)];\n\n          case 3:\n            _a.sent();\n\n            _a.label = 4;\n\n          case 4:\n            _i++;\n            return [3\n            /*break*/\n            , 2];\n\n          case 5:\n            instance.resolve();\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            e_1 = _a.sent();\n            instance.reject(e_1);\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return PluginCommandManager;\n}();","map":{"version":3,"sources":["../../src/mol-plugin/command.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { UUID } from '../mol-util';\r\nexport { PluginCommand, PluginCommandManager };\r\nfunction PluginCommand() {\r\n    var ret = (function (ctx, params) { return ctx.commands.dispatch(ret, params || {}); });\r\n    ret.subscribe = function (ctx, action) { return ctx.commands.subscribe(ret, action); };\r\n    ret.id = UUID.create22();\r\n    return ret;\r\n}\r\nvar PluginCommandManager = /** @class */ (function () {\r\n    function PluginCommandManager() {\r\n        this.subs = new Map();\r\n        this.disposing = false;\r\n    }\r\n    PluginCommandManager.prototype.subscribe = function (cmd, action) {\r\n        var _this = this;\r\n        var actions = this.subs.get(cmd.id);\r\n        if (!actions) {\r\n            actions = [];\r\n            this.subs.set(cmd.id, actions);\r\n        }\r\n        actions.push(action);\r\n        return {\r\n            unsubscribe: function () {\r\n                var actions = _this.subs.get(cmd.id);\r\n                if (!actions)\r\n                    return;\r\n                var idx = actions.indexOf(action);\r\n                if (idx < 0)\r\n                    return;\r\n                for (var i = idx + 1; i < actions.length; i++) {\r\n                    actions[i - 1] = actions[i];\r\n                }\r\n                actions.pop();\r\n            }\r\n        };\r\n    };\r\n    /** Resolves after all actions have completed */\r\n    PluginCommandManager.prototype.dispatch = function (cmd, params) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.disposing) {\r\n                reject('disposed');\r\n                return;\r\n            }\r\n            var actions = _this.subs.get(cmd.id);\r\n            if (!actions) {\r\n                resolve();\r\n                return;\r\n            }\r\n            _this.resolve({ cmd: cmd, params: params, resolve: resolve, reject: reject });\r\n        });\r\n    };\r\n    PluginCommandManager.prototype.dispose = function () {\r\n        this.subs.clear();\r\n    };\r\n    PluginCommandManager.prototype.resolve = function (instance) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var actions, _i, actions_1, a, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        actions = this.subs.get(instance.cmd.id);\r\n                        if (!actions) {\r\n                            instance.resolve();\r\n                            return [2 /*return*/];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 6, , 7]);\r\n                        _i = 0, actions_1 = actions;\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (!(_i < actions_1.length)) return [3 /*break*/, 5];\r\n                        a = actions_1[_i];\r\n                        return [4 /*yield*/, a(instance.params)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        _i++;\r\n                        return [3 /*break*/, 2];\r\n                    case 5:\r\n                        instance.resolve();\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        e_1 = _a.sent();\r\n                        instance.reject(e_1);\r\n                        return [3 /*break*/, 7];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return PluginCommandManager;\r\n}());\r\n//# sourceMappingURL=command.js.map"]},"metadata":{},"sourceType":"module"}