{"ast":null,"code":"/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n *\r\n * ported from https://github.com/photopea/UZIP.js/blob/master/UZIP.js\r\n * MIT License, Copyright (c) 2018 Photopea\r\n *\r\n * - added `ungzip`\r\n */\nimport { __awaiter, __generator } from \"tslib\";\nimport { writeUint, writeUshort, sizeUTF8, writeUTF8, readUshort, readUint, readUTF8, toInt32 } from './bin';\nimport { crc, adler } from './checksum';\nimport { _inflate } from './inflate';\nimport { _deflateRaw } from './deflate';\nimport { Task } from '../../mol-task';\nexport function unzip(runtime, buf, onlyNames) {\n  if (onlyNames === void 0) {\n    onlyNames = false;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var out, data, eocd, o, cnu, coffs, i, csize, usize, nl, el, cl, roff;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          out = Object.create(null);\n          data = new Uint8Array(buf);\n          eocd = data.length - 4;\n\n          while (readUint(data, eocd) !== 0x06054b50) eocd--;\n\n          o = eocd;\n          o += 4; // sign  = 0x06054b50\n\n          o += 4; // disks = 0;\n\n          cnu = readUshort(data, o);\n          o += 2; // const cnt = readUshort(data, o);\n\n          o += 2; // const csize = readUint(data, o);\n\n          o += 4;\n          coffs = readUint(data, o);\n          o += 4;\n          o = coffs;\n          i = 0;\n          _a.label = 1;\n\n        case 1:\n          if (!(i < cnu)) return [3\n          /*break*/\n          , 4]; // const sign = readUint(data, o);\n\n          o += 4;\n          o += 4; // versions;\n\n          o += 4; // flag + compr\n\n          o += 4; // time\n          // const crc32 = readUint(data, o);\n\n          o += 4;\n          csize = readUint(data, o);\n          o += 4;\n          usize = readUint(data, o);\n          o += 4;\n          nl = readUshort(data, o);\n          el = readUshort(data, o + 2);\n          cl = readUshort(data, o + 4);\n          o += 6; // name, extra, comment\n\n          o += 8; // disk, attribs\n\n          roff = readUint(data, o);\n          o += 4;\n          o += nl + el + cl;\n          return [4\n          /*yield*/\n          , _readLocal(runtime, data, roff, out, csize, usize, onlyNames)];\n\n        case 2:\n          _a.sent();\n\n          _a.label = 3;\n\n        case 3:\n          i++;\n          return [3\n          /*break*/\n          , 1];\n\n        case 4:\n          // console.log(out);\n          return [2\n          /*return*/\n          , out];\n      }\n    });\n  });\n}\n\nfunction _readLocal(runtime, data, o, out, csize, usize, onlyNames) {\n  return __awaiter(this, void 0, void 0, function () {\n    var cmpr, nlen, elen, name, file, buf;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          // const sign  = readUint(data, o);\n          o += 4; // const ver   = readUshort(data, o);\n\n          o += 2; // const gpflg = readUshort(data, o);\n\n          o += 2;\n          cmpr = readUshort(data, o);\n          o += 2; // const time  = readUint(data, o);\n\n          o += 4; // const crc32 = readUint(data, o);\n\n          o += 4; // var csize = rUi(data, o);  o+=4;\n          // var usize = rUi(data, o);  o+=4;\n\n          o += 8;\n          nlen = readUshort(data, o);\n          o += 2;\n          elen = readUshort(data, o);\n          o += 2;\n          name = readUTF8(data, o, nlen);\n          o += nlen; // console.log(name);\n\n          o += elen;\n\n          if (onlyNames) {\n            out[name] = {\n              size: usize,\n              csize: csize\n            };\n            return [2\n            /*return*/\n            ];\n          }\n\n          file = new Uint8Array(data.buffer, o);\n          if (!(cmpr === 0)) return [3\n          /*break*/\n          , 1];\n          out[name] = new Uint8Array(file.buffer.slice(o, o + csize));\n          return [3\n          /*break*/\n          , 4];\n\n        case 1:\n          if (!(cmpr === 8)) return [3\n          /*break*/\n          , 3];\n          buf = new Uint8Array(usize);\n          return [4\n          /*yield*/\n          , inflateRaw(runtime, file, buf)];\n\n        case 2:\n          _a.sent();\n\n          out[name] = buf;\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          throw new Error(\"unknown compression method: \" + cmpr);\n\n        case 4:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexport function inflateRaw(runtime, file, buf) {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2\n      /*return*/\n      , _inflate(runtime, file, buf)];\n    });\n  });\n}\nexport function inflate(runtime, file, buf) {\n  // const CMF = file[0]\n  // const FLG = file[1]\n  // const CM = (CMF&15)\n  // const CINFO = (CMF>>>4);\n  // console.log(CM, CINFO,CMF,FLG);\n  return inflateRaw(runtime, new Uint8Array(file.buffer, file.byteOffset + 2, file.length - 6), buf);\n} // https://tools.ietf.org/html/rfc1952\n\nexport function ungzip(runtime, file, buf) {\n  return __awaiter(this, void 0, void 0, function () {\n    var flg, o, xlen, zero, zero, crc32, isize, blocks, inflated, crcValue;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          flg = file[3];\n          o = 10;\n\n          if (flg & 4) {\n            // FEXTRA\n            xlen = readUshort(file, o); // console.log('FEXTRA', xlen)\n\n            o += xlen;\n          }\n\n          if (flg & 8) {\n            // FNAME\n            zero = o;\n\n            while (file[zero] !== 0) ++zero; // const name = readUTF8(file, o, zero - o)\n            // console.log('FNAME', name, zero - o)\n\n\n            o = zero + 1;\n          }\n\n          if (flg & 16) {\n            // FCOMMENT\n            zero = o;\n\n            while (file[zero] !== 0) ++zero; // const comment = readUTF8(file, o, zero - o)\n            // console.log('FCOMMENT', comment)\n\n\n            o = zero + 1;\n          }\n\n          if (flg & 1) {\n            // FHCRC\n            // const hcrc = readUshort(file, o)\n            // console.log('FHCRC', hcrc)\n            o += 2;\n          }\n\n          crc32 = toInt32(readUint(file, file.length - 8));\n          isize = readUint(file, file.length - 4);\n          if (buf === undefined) buf = new Uint8Array(isize);\n          blocks = new Uint8Array(file.buffer, file.byteOffset + o, file.length - o - 8);\n          return [4\n          /*yield*/\n          , inflateRaw(runtime, blocks, buf)];\n\n        case 1:\n          inflated = _a.sent();\n          crcValue = crc(inflated, 0, inflated.length);\n\n          if (crc32 !== crcValue) {\n            console.error(\"ungzip: checksums don't match\");\n          }\n\n          return [2\n          /*return*/\n          , inflated];\n      }\n    });\n  });\n}\nexport function deflate(runtime, data, opts\n/* , buf, off*/\n) {\n  return __awaiter(this, void 0, void 0, function () {\n    var off, buf, crcValue;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (opts === undefined) opts = {\n            level: 6\n          };\n          off = 0;\n          buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\n          buf[off] = 120;\n          buf[off + 1] = 156;\n          off += 2;\n          return [4\n          /*yield*/\n          , _deflateRaw(runtime, data, buf, off, opts.level)];\n\n        case 1:\n          off = _a.sent();\n          crcValue = adler(data, 0, data.length);\n          buf[off + 0] = crcValue >>> 24 & 255;\n          buf[off + 1] = crcValue >>> 16 & 255;\n          buf[off + 2] = crcValue >>> 8 & 255;\n          buf[off + 3] = crcValue >>> 0 & 255;\n          return [2\n          /*return*/\n          , new Uint8Array(buf.buffer, 0, off + 4)];\n      }\n    });\n  });\n}\n\nfunction deflateRaw(runtime, data, opts) {\n  return __awaiter(this, void 0, void 0, function () {\n    var buf, off;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (opts === undefined) opts = {\n            level: 6\n          };\n          buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\n          return [4\n          /*yield*/\n          , _deflateRaw(runtime, data, buf, 0, opts.level)];\n\n        case 1:\n          off = _a.sent();\n          return [2\n          /*return*/\n          , new Uint8Array(buf.buffer, 0, off)];\n      }\n    });\n  });\n}\n\nexport function Zip(obj, noCmpr) {\n  if (noCmpr === void 0) {\n    noCmpr = false;\n  }\n\n  return Task.create('Zip', function (ctx) {\n    return zip(ctx, obj, noCmpr);\n  });\n}\nexport function zip(runtime, obj, noCmpr) {\n  if (noCmpr === void 0) {\n    noCmpr = false;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var tot, zpd, _a, _b, _i, p, cpr, buf, crcValue, _c, _d, _e, p, data, o, fof, p, file, i, ioff, p, file, csize;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          tot = 0;\n          zpd = {};\n          _a = [];\n\n          for (_b in obj) _a.push(_b);\n\n          _i = 0;\n          _g.label = 1;\n\n        case 1:\n          if (!(_i < _a.length)) return [3\n          /*break*/\n          , 6];\n          p = _a[_i];\n          cpr = !_noNeed(p) && !noCmpr, buf = obj[p];\n          crcValue = crc(buf, 0, buf.length);\n          _c = zpd;\n          _d = p;\n          _f = {\n            cpr: cpr,\n            usize: buf.length,\n            crc: crcValue\n          };\n          if (!cpr) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , deflateRaw(runtime, buf)];\n\n        case 2:\n          _e = _g.sent();\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          _e = buf;\n          _g.label = 4;\n\n        case 4:\n          _c[_d] = (_f.file = _e, _f);\n          _g.label = 5;\n\n        case 5:\n          _i++;\n          return [3\n          /*break*/\n          , 1];\n\n        case 6:\n          for (p in zpd) tot += zpd[p].file.length + 30 + 46 + 2 * sizeUTF8(p);\n\n          tot += 22;\n          data = new Uint8Array(tot);\n          o = 0;\n          fof = [];\n\n          for (p in zpd) {\n            file = zpd[p];\n            fof.push(o);\n            o = _writeHeader(data, o, p, file, 0);\n          }\n\n          i = 0;\n          ioff = o;\n\n          for (p in zpd) {\n            file = zpd[p];\n            fof.push(o);\n            o = _writeHeader(data, o, p, file, 1, fof[i++]);\n          }\n\n          csize = o - ioff;\n          writeUint(data, o, 0x06054b50);\n          o += 4;\n          o += 4; // disks\n\n          writeUshort(data, o, i);\n          o += 2;\n          writeUshort(data, o, i);\n          o += 2; // number of c d records\n\n          writeUint(data, o, csize);\n          o += 4;\n          writeUint(data, o, ioff);\n          o += 4;\n          o += 2;\n          return [2\n          /*return*/\n          , data.buffer];\n      }\n    });\n  });\n} // no need to compress .PNG, .ZIP, .JPEG ....\n\nfunction _noNeed(fn) {\n  var ext = fn.split('.').pop().toLowerCase();\n  return 'png,jpg,jpeg,zip'.indexOf(ext) !== -1;\n}\n\nfunction _writeHeader(data, o, p, obj, t, roff) {\n  if (roff === void 0) {\n    roff = 0;\n  }\n\n  var file = obj.file;\n  writeUint(data, o, t === 0 ? 0x04034b50 : 0x02014b50);\n  o += 4; // sign\n\n  if (t === 1) o += 2; // ver made by\n\n  writeUshort(data, o, 20);\n  o += 2; // ver\n\n  writeUshort(data, o, 0);\n  o += 2; // gflip\n\n  writeUshort(data, o, obj.cpr ? 8 : 0);\n  o += 2; // cmpr\n\n  writeUint(data, o, 0);\n  o += 4; // time\n\n  writeUint(data, o, obj.crc);\n  o += 4; // crc32\n\n  writeUint(data, o, file.length);\n  o += 4; // csize\n\n  writeUint(data, o, obj.usize);\n  o += 4; // usize\n\n  writeUshort(data, o, sizeUTF8(p));\n  o += 2; // nlen\n\n  writeUshort(data, o, 0);\n  o += 2; // elen\n\n  if (t === 1) {\n    o += 2; // comment length\n\n    o += 2; // disk number\n\n    o += 6; // attributes\n\n    writeUint(data, o, roff);\n    o += 4; // usize\n  }\n\n  var nlen = writeUTF8(data, o, p);\n  o += nlen;\n\n  if (t === 0) {\n    data.set(file, o);\n    o += file.length;\n  }\n\n  return o;\n}","map":{"version":3,"sources":["../../../src/mol-util/zip/zip.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n *\r\n * ported from https://github.com/photopea/UZIP.js/blob/master/UZIP.js\r\n * MIT License, Copyright (c) 2018 Photopea\r\n *\r\n * - added `ungzip`\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { writeUint, writeUshort, sizeUTF8, writeUTF8, readUshort, readUint, readUTF8, toInt32 } from './bin';\r\nimport { crc, adler } from './checksum';\r\nimport { _inflate } from './inflate';\r\nimport { _deflateRaw } from './deflate';\r\nimport { Task } from '../../mol-task';\r\nexport function unzip(runtime, buf, onlyNames) {\r\n    if (onlyNames === void 0) { onlyNames = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var out, data, eocd, o, cnu, coffs, i, csize, usize, nl, el, cl, roff;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    out = Object.create(null);\r\n                    data = new Uint8Array(buf);\r\n                    eocd = data.length - 4;\r\n                    while (readUint(data, eocd) !== 0x06054b50)\r\n                        eocd--;\r\n                    o = eocd;\r\n                    o += 4; // sign  = 0x06054b50\r\n                    o += 4; // disks = 0;\r\n                    cnu = readUshort(data, o);\r\n                    o += 2;\r\n                    // const cnt = readUshort(data, o);\r\n                    o += 2;\r\n                    // const csize = readUint(data, o);\r\n                    o += 4;\r\n                    coffs = readUint(data, o);\r\n                    o += 4;\r\n                    o = coffs;\r\n                    i = 0;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!(i < cnu)) return [3 /*break*/, 4];\r\n                    // const sign = readUint(data, o);\r\n                    o += 4;\r\n                    o += 4; // versions;\r\n                    o += 4; // flag + compr\r\n                    o += 4; // time\r\n                    // const crc32 = readUint(data, o);\r\n                    o += 4;\r\n                    csize = readUint(data, o);\r\n                    o += 4;\r\n                    usize = readUint(data, o);\r\n                    o += 4;\r\n                    nl = readUshort(data, o);\r\n                    el = readUshort(data, o + 2);\r\n                    cl = readUshort(data, o + 4);\r\n                    o += 6; // name, extra, comment\r\n                    o += 8; // disk, attribs\r\n                    roff = readUint(data, o);\r\n                    o += 4;\r\n                    o += nl + el + cl;\r\n                    return [4 /*yield*/, _readLocal(runtime, data, roff, out, csize, usize, onlyNames)];\r\n                case 2:\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3:\r\n                    i++;\r\n                    return [3 /*break*/, 1];\r\n                case 4: \r\n                // console.log(out);\r\n                return [2 /*return*/, out];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction _readLocal(runtime, data, o, out, csize, usize, onlyNames) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var cmpr, nlen, elen, name, file, buf;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    // const sign  = readUint(data, o);\r\n                    o += 4;\r\n                    // const ver   = readUshort(data, o);\r\n                    o += 2;\r\n                    // const gpflg = readUshort(data, o);\r\n                    o += 2;\r\n                    cmpr = readUshort(data, o);\r\n                    o += 2;\r\n                    // const time  = readUint(data, o);\r\n                    o += 4;\r\n                    // const crc32 = readUint(data, o);\r\n                    o += 4;\r\n                    // var csize = rUi(data, o);  o+=4;\r\n                    // var usize = rUi(data, o);  o+=4;\r\n                    o += 8;\r\n                    nlen = readUshort(data, o);\r\n                    o += 2;\r\n                    elen = readUshort(data, o);\r\n                    o += 2;\r\n                    name = readUTF8(data, o, nlen);\r\n                    o += nlen; // console.log(name);\r\n                    o += elen;\r\n                    if (onlyNames) {\r\n                        out[name] = { size: usize, csize: csize };\r\n                        return [2 /*return*/];\r\n                    }\r\n                    file = new Uint8Array(data.buffer, o);\r\n                    if (!(cmpr === 0)) return [3 /*break*/, 1];\r\n                    out[name] = new Uint8Array(file.buffer.slice(o, o + csize));\r\n                    return [3 /*break*/, 4];\r\n                case 1:\r\n                    if (!(cmpr === 8)) return [3 /*break*/, 3];\r\n                    buf = new Uint8Array(usize);\r\n                    return [4 /*yield*/, inflateRaw(runtime, file, buf)];\r\n                case 2:\r\n                    _a.sent();\r\n                    out[name] = buf;\r\n                    return [3 /*break*/, 4];\r\n                case 3: throw new Error(\"unknown compression method: \" + cmpr);\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function inflateRaw(runtime, file, buf) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, _inflate(runtime, file, buf)];\r\n        });\r\n    });\r\n}\r\nexport function inflate(runtime, file, buf) {\r\n    // const CMF = file[0]\r\n    // const FLG = file[1]\r\n    // const CM = (CMF&15)\r\n    // const CINFO = (CMF>>>4);\r\n    // console.log(CM, CINFO,CMF,FLG);\r\n    return inflateRaw(runtime, new Uint8Array(file.buffer, file.byteOffset + 2, file.length - 6), buf);\r\n}\r\n// https://tools.ietf.org/html/rfc1952\r\nexport function ungzip(runtime, file, buf) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var flg, o, xlen, zero, zero, crc32, isize, blocks, inflated, crcValue;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    flg = file[3];\r\n                    o = 10;\r\n                    if (flg & 4) { // FEXTRA\r\n                        xlen = readUshort(file, o);\r\n                        // console.log('FEXTRA', xlen)\r\n                        o += xlen;\r\n                    }\r\n                    if (flg & 8) { // FNAME\r\n                        zero = o;\r\n                        while (file[zero] !== 0)\r\n                            ++zero;\r\n                        // const name = readUTF8(file, o, zero - o)\r\n                        // console.log('FNAME', name, zero - o)\r\n                        o = zero + 1;\r\n                    }\r\n                    if (flg & 16) { // FCOMMENT\r\n                        zero = o;\r\n                        while (file[zero] !== 0)\r\n                            ++zero;\r\n                        // const comment = readUTF8(file, o, zero - o)\r\n                        // console.log('FCOMMENT', comment)\r\n                        o = zero + 1;\r\n                    }\r\n                    if (flg & 1) { // FHCRC\r\n                        // const hcrc = readUshort(file, o)\r\n                        // console.log('FHCRC', hcrc)\r\n                        o += 2;\r\n                    }\r\n                    crc32 = toInt32(readUint(file, file.length - 8));\r\n                    isize = readUint(file, file.length - 4);\r\n                    if (buf === undefined)\r\n                        buf = new Uint8Array(isize);\r\n                    blocks = new Uint8Array(file.buffer, file.byteOffset + o, file.length - o - 8);\r\n                    return [4 /*yield*/, inflateRaw(runtime, blocks, buf)];\r\n                case 1:\r\n                    inflated = _a.sent();\r\n                    crcValue = crc(inflated, 0, inflated.length);\r\n                    if (crc32 !== crcValue) {\r\n                        console.error(\"ungzip: checksums don't match\");\r\n                    }\r\n                    return [2 /*return*/, inflated];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function deflate(runtime, data, opts /* , buf, off*/) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var off, buf, crcValue;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (opts === undefined)\r\n                        opts = { level: 6 };\r\n                    off = 0;\r\n                    buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\r\n                    buf[off] = 120;\r\n                    buf[off + 1] = 156;\r\n                    off += 2;\r\n                    return [4 /*yield*/, _deflateRaw(runtime, data, buf, off, opts.level)];\r\n                case 1:\r\n                    off = _a.sent();\r\n                    crcValue = adler(data, 0, data.length);\r\n                    buf[off + 0] = ((crcValue >>> 24) & 255);\r\n                    buf[off + 1] = ((crcValue >>> 16) & 255);\r\n                    buf[off + 2] = ((crcValue >>> 8) & 255);\r\n                    buf[off + 3] = ((crcValue >>> 0) & 255);\r\n                    return [2 /*return*/, new Uint8Array(buf.buffer, 0, off + 4)];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction deflateRaw(runtime, data, opts) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var buf, off;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (opts === undefined)\r\n                        opts = { level: 6 };\r\n                    buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\r\n                    return [4 /*yield*/, _deflateRaw(runtime, data, buf, 0, opts.level)];\r\n                case 1:\r\n                    off = _a.sent();\r\n                    return [2 /*return*/, new Uint8Array(buf.buffer, 0, off)];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function Zip(obj, noCmpr) {\r\n    if (noCmpr === void 0) { noCmpr = false; }\r\n    return Task.create('Zip', function (ctx) { return zip(ctx, obj, noCmpr); });\r\n}\r\nexport function zip(runtime, obj, noCmpr) {\r\n    if (noCmpr === void 0) { noCmpr = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var tot, zpd, _a, _b, _i, p, cpr, buf, crcValue, _c, _d, _e, p, data, o, fof, p, file, i, ioff, p, file, csize;\r\n        var _f;\r\n        return __generator(this, function (_g) {\r\n            switch (_g.label) {\r\n                case 0:\r\n                    tot = 0;\r\n                    zpd = {};\r\n                    _a = [];\r\n                    for (_b in obj)\r\n                        _a.push(_b);\r\n                    _i = 0;\r\n                    _g.label = 1;\r\n                case 1:\r\n                    if (!(_i < _a.length)) return [3 /*break*/, 6];\r\n                    p = _a[_i];\r\n                    cpr = !_noNeed(p) && !noCmpr, buf = obj[p];\r\n                    crcValue = crc(buf, 0, buf.length);\r\n                    _c = zpd;\r\n                    _d = p;\r\n                    _f = {\r\n                        cpr: cpr,\r\n                        usize: buf.length,\r\n                        crc: crcValue\r\n                    };\r\n                    if (!cpr) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, deflateRaw(runtime, buf)];\r\n                case 2:\r\n                    _e = _g.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    _e = buf;\r\n                    _g.label = 4;\r\n                case 4:\r\n                    _c[_d] = (_f.file = (_e),\r\n                        _f);\r\n                    _g.label = 5;\r\n                case 5:\r\n                    _i++;\r\n                    return [3 /*break*/, 1];\r\n                case 6:\r\n                    for (p in zpd)\r\n                        tot += zpd[p].file.length + 30 + 46 + 2 * sizeUTF8(p);\r\n                    tot += 22;\r\n                    data = new Uint8Array(tot);\r\n                    o = 0;\r\n                    fof = [];\r\n                    for (p in zpd) {\r\n                        file = zpd[p];\r\n                        fof.push(o);\r\n                        o = _writeHeader(data, o, p, file, 0);\r\n                    }\r\n                    i = 0;\r\n                    ioff = o;\r\n                    for (p in zpd) {\r\n                        file = zpd[p];\r\n                        fof.push(o);\r\n                        o = _writeHeader(data, o, p, file, 1, fof[i++]);\r\n                    }\r\n                    csize = o - ioff;\r\n                    writeUint(data, o, 0x06054b50);\r\n                    o += 4;\r\n                    o += 4; // disks\r\n                    writeUshort(data, o, i);\r\n                    o += 2;\r\n                    writeUshort(data, o, i);\r\n                    o += 2; // number of c d records\r\n                    writeUint(data, o, csize);\r\n                    o += 4;\r\n                    writeUint(data, o, ioff);\r\n                    o += 4;\r\n                    o += 2;\r\n                    return [2 /*return*/, data.buffer];\r\n            }\r\n        });\r\n    });\r\n}\r\n// no need to compress .PNG, .ZIP, .JPEG ....\r\nfunction _noNeed(fn) {\r\n    var ext = fn.split('.').pop().toLowerCase();\r\n    return 'png,jpg,jpeg,zip'.indexOf(ext) !== -1;\r\n}\r\nfunction _writeHeader(data, o, p, obj, t, roff) {\r\n    if (roff === void 0) { roff = 0; }\r\n    var file = obj.file;\r\n    writeUint(data, o, t === 0 ? 0x04034b50 : 0x02014b50);\r\n    o += 4; // sign\r\n    if (t === 1)\r\n        o += 2; // ver made by\r\n    writeUshort(data, o, 20);\r\n    o += 2; // ver\r\n    writeUshort(data, o, 0);\r\n    o += 2; // gflip\r\n    writeUshort(data, o, obj.cpr ? 8 : 0);\r\n    o += 2; // cmpr\r\n    writeUint(data, o, 0);\r\n    o += 4; // time\r\n    writeUint(data, o, obj.crc);\r\n    o += 4; // crc32\r\n    writeUint(data, o, file.length);\r\n    o += 4; // csize\r\n    writeUint(data, o, obj.usize);\r\n    o += 4; // usize\r\n    writeUshort(data, o, sizeUTF8(p));\r\n    o += 2; // nlen\r\n    writeUshort(data, o, 0);\r\n    o += 2; // elen\r\n    if (t === 1) {\r\n        o += 2; // comment length\r\n        o += 2; // disk number\r\n        o += 6; // attributes\r\n        writeUint(data, o, roff);\r\n        o += 4; // usize\r\n    }\r\n    var nlen = writeUTF8(data, o, p);\r\n    o += nlen;\r\n    if (t === 0) {\r\n        data.set(file, o);\r\n        o += file.length;\r\n    }\r\n    return o;\r\n}\r\n//# sourceMappingURL=zip.js.map"]},"metadata":{},"sourceType":"module"}