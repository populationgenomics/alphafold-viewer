{"ast":null,"code":"/**\r\n * Copyright (c) 2017-2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { parseCifText } from './cif/text/parser';\nimport { parseCifBinary } from './cif/binary/parser';\nimport { toDatabaseCollection, toDatabase } from './cif/schema';\nimport { mmCIF_Schema } from './cif/schema/mmcif';\nimport { CCD_Schema } from './cif/schema/ccd';\nimport { BIRD_Schema } from './cif/schema/bird';\nimport { dic_Schema } from './cif/schema/dic';\nimport { DensityServer_Data_Schema } from './cif/schema/density-server';\nimport { CifCore_Schema, CifCore_Aliases } from './cif/schema/cif-core';\nexport var CIF = {\n  parse: function (data) {\n    return typeof data === 'string' ? parseCifText(data) : parseCifBinary(data);\n  },\n  parseText: parseCifText,\n  parseBinary: parseCifBinary,\n  toDatabaseCollection: toDatabaseCollection,\n  toDatabase: toDatabase,\n  schema: {\n    mmCIF: function (frame) {\n      return toDatabase(mmCIF_Schema, frame);\n    },\n    CCD: function (frame) {\n      return toDatabase(CCD_Schema, frame);\n    },\n    BIRD: function (frame) {\n      return toDatabase(BIRD_Schema, frame);\n    },\n    dic: function (frame) {\n      return toDatabase(dic_Schema, frame);\n    },\n    cifCore: function (frame) {\n      return toDatabase(CifCore_Schema, frame, CifCore_Aliases);\n    },\n    densityServer: function (frame) {\n      return toDatabase(DensityServer_Data_Schema, frame);\n    }\n  }\n};\nexport * from './cif/data-model';","map":{"version":3,"sources":["../../../src/mol-io/reader/cif.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;AAEH,SAAS,YAAT,QAA6B,mBAA7B;AACA,SAAS,cAAT,QAA+B,qBAA/B;AAEA,SAAS,oBAAT,EAA+B,UAA/B,QAAiD,cAAjD;AACA,SAAS,YAAT,QAA6C,oBAA7C;AACA,SAAS,UAAT,QAAyC,kBAAzC;AACA,SAAS,WAAT,QAA2C,mBAA3C;AACA,SAAS,UAAT,QAAyC,kBAAzC;AACA,SAAS,yBAAT,QAAuE,6BAAvE;AACA,SAA2B,cAA3B,EAA2C,eAA3C,QAAkE,uBAAlE;AAEA,OAAO,IAAM,GAAG,GAAG;AACf,EAAA,KAAK,EAAE,UAAC,IAAD,EAAwB;AAAK,WAAA,OAAO,IAAP,KAAgB,QAAhB,GAA2B,YAAY,CAAC,IAAD,CAAvC,GAAgD,cAAc,CAA9D,IAA8D,CAA9D;AAAoE,GADzF;AAEf,EAAA,SAAS,EAAE,YAFI;AAGf,EAAA,WAAW,EAAE,cAHE;AAIf,EAAA,oBAAoB,EAAA,oBAJL;AAKf,EAAA,UAAU,EAAA,UALK;AAMf,EAAA,MAAM,EAAE;AACJ,IAAA,KAAK,EAAE,UAAC,KAAD,EAAgB;AAAK,aAAA,UAAU,CAA+B,YAA/B,EAAV,KAAU,CAAV;AAA6D,KADrF;AAEJ,IAAA,GAAG,EAAE,UAAC,KAAD,EAAgB;AAAK,aAAA,UAAU,CAA2B,UAA3B,EAAV,KAAU,CAAV;AAAuD,KAF7E;AAGJ,IAAA,IAAI,EAAE,UAAC,KAAD,EAAgB;AAAK,aAAA,UAAU,CAA6B,WAA7B,EAAV,KAAU,CAAV;AAA0D,KAHjF;AAIJ,IAAA,GAAG,EAAE,UAAC,KAAD,EAAgB;AAAK,aAAA,UAAU,CAA2B,UAA3B,EAAV,KAAU,CAAV;AAAuD,KAJ7E;AAKJ,IAAA,OAAO,EAAE,UAAC,KAAD,EAAgB;AAAK,aAAA,UAAU,CAAmC,cAAnC,EAAmD,KAAnD,EAAV,eAAU,CAAV;AAAoF,KAL9G;AAMJ,IAAA,aAAa,EAAE,UAAC,KAAD,EAAgB;AAAK,aAAA,UAAU,CAAyD,yBAAzD,EAAV,KAAU,CAAV;AAAoG;AANpI;AANO,CAAZ;AAgBP,cAAc,kBAAd","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2017-2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { parseCifText } from './cif/text/parser';\r\nimport { parseCifBinary } from './cif/binary/parser';\r\nimport { toDatabaseCollection, toDatabase } from './cif/schema';\r\nimport { mmCIF_Schema } from './cif/schema/mmcif';\r\nimport { CCD_Schema } from './cif/schema/ccd';\r\nimport { BIRD_Schema } from './cif/schema/bird';\r\nimport { dic_Schema } from './cif/schema/dic';\r\nimport { DensityServer_Data_Schema } from './cif/schema/density-server';\r\nimport { CifCore_Schema, CifCore_Aliases } from './cif/schema/cif-core';\r\nexport var CIF = {\r\n    parse: function (data) { return typeof data === 'string' ? parseCifText(data) : parseCifBinary(data); },\r\n    parseText: parseCifText,\r\n    parseBinary: parseCifBinary,\r\n    toDatabaseCollection: toDatabaseCollection,\r\n    toDatabase: toDatabase,\r\n    schema: {\r\n        mmCIF: function (frame) { return toDatabase(mmCIF_Schema, frame); },\r\n        CCD: function (frame) { return toDatabase(CCD_Schema, frame); },\r\n        BIRD: function (frame) { return toDatabase(BIRD_Schema, frame); },\r\n        dic: function (frame) { return toDatabase(dic_Schema, frame); },\r\n        cifCore: function (frame) { return toDatabase(CifCore_Schema, frame, CifCore_Aliases); },\r\n        densityServer: function (frame) { return toDatabase(DensityServer_Data_Schema, frame); },\r\n    }\r\n};\r\nexport * from './cif/data-model';\r\n//# sourceMappingURL=cif.js.map"]},"metadata":{},"sourceType":"module"}