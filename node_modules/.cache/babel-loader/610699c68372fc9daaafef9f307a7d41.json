{"ast":null,"code":"/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nexport var read_from_texture = \"\\nvec4 readFromTexture(const in sampler2D tex, const in float i, const in vec2 dim) {\\n    float x = intMod(i, dim.x);\\n    float y = floor(intDiv(i, dim.x));\\n    vec2 uv = (vec2(x, y) + 0.5) / dim;\\n    return texture2D(tex, uv);\\n}\\n\\nvec4 readFromTexture(const in sampler2D tex, const in int i, const in vec2 dim) {\\n    int x = imod(i, int(dim.x));\\n    int y = i / int(dim.x);\\n    vec2 uv = (vec2(x, y) + 0.5) / dim;\\n    return texture2D(tex, uv);\\n}\\n\";","map":{"version":3,"sources":["../../../../src/mol-gl/shader/chunks/read-from-texture.glsl.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,OAAO,IAAM,iBAAiB,GAAG,8cAA1B","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nexport var read_from_texture = \"\\nvec4 readFromTexture(const in sampler2D tex, const in float i, const in vec2 dim) {\\n    float x = intMod(i, dim.x);\\n    float y = floor(intDiv(i, dim.x));\\n    vec2 uv = (vec2(x, y) + 0.5) / dim;\\n    return texture2D(tex, uv);\\n}\\n\\nvec4 readFromTexture(const in sampler2D tex, const in int i, const in vec2 dim) {\\n    int x = imod(i, int(dim.x));\\n    int y = i / int(dim.x);\\n    vec2 uv = (vec2(x, y) + 0.5) / dim;\\n    return texture2D(tex, uv);\\n}\\n\";\r\n//# sourceMappingURL=read-from-texture.glsl.js.map"]},"metadata":{},"sourceType":"module"}