{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign, __awaiter, __extends, __generator } from \"tslib\";\nimport { ParamDefinition as PD } from '../../../../mol-util/param-definition';\nimport { PluginStateObject } from '../../../../mol-plugin-state/objects';\nimport { Volume } from '../../../../mol-model/volume';\nimport { Box3D } from '../../../../mol-math/geometry';\nimport { Mat4, Vec3 } from '../../../../mol-math/linear-algebra';\nimport { Color } from '../../../../mol-util/color';\nimport { PluginBehavior } from '../../behavior';\nimport { LRUCache } from '../../../../mol-util/lru-cache';\nimport { urlCombine } from '../../../../mol-util/url';\nimport { CIF } from '../../../../mol-io/reader/cif';\nimport { volumeFromDensityServerData } from '../../../../mol-model-formats/volume/density-server';\nimport { PluginCommands } from '../../../commands';\nimport { StateSelection } from '../../../../mol-state';\nimport { StructureElement } from '../../../../mol-model/structure';\nimport { EmptyLoci, Loci, isEmptyLoci } from '../../../../mol-model/loci';\nimport { Asset } from '../../../../mol-util/assets';\nimport { GlobalModelTransformInfo } from '../../../../mol-model/structure/model/properties/global-transform';\n\nvar VolumeStreaming =\n/** @class */\nfunction (_super) {\n  __extends(VolumeStreaming, _super);\n\n  function VolumeStreaming() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return VolumeStreaming;\n}(PluginStateObject.CreateBehavior({\n  name: 'Volume Streaming'\n}));\n\nexport { VolumeStreaming };\n\n(function (VolumeStreaming) {\n  VolumeStreaming.RootTag = 'volume-streaming-info';\n\n  function channelParam(label, color, defaultValue, stats, defaults) {\n    var _a, _b, _c, _d;\n\n    if (defaults === void 0) {\n      defaults = {};\n    }\n\n    return PD.Group({\n      isoValue: Volume.createIsoValueParam((_a = defaults.isoValue) !== null && _a !== void 0 ? _a : defaultValue, stats),\n      color: PD.Color((_b = defaults.color) !== null && _b !== void 0 ? _b : color),\n      wireframe: PD.Boolean((_c = defaults.wireframe) !== null && _c !== void 0 ? _c : false),\n      opacity: PD.Numeric((_d = defaults.opacity) !== null && _d !== void 0 ? _d : 0.3, {\n        min: 0,\n        max: 1,\n        step: 0.01\n      })\n    }, {\n      label: label,\n      isExpanded: true\n    });\n  }\n\n  var fakeSampling = {\n    byteOffset: 0,\n    rate: 1,\n    sampleCount: [1, 1, 1],\n    valuesInfo: [{\n      mean: 0,\n      min: -1,\n      max: 1,\n      sigma: 0.1\n    }, {\n      mean: 0,\n      min: -1,\n      max: 1,\n      sigma: 0.1\n    }]\n  };\n\n  function createParams(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var data = options.data,\n        defaultView = options.defaultView,\n        channelParams = options.channelParams;\n    var map = new Map();\n    if (data) data.entries.forEach(function (d) {\n      return map.set(d.dataId, d);\n    });\n    var names = data ? data.entries.map(function (d) {\n      return [d.dataId, d.dataId];\n    }) : [];\n    var defaultKey = data ? data.entries[0].dataId : '';\n    return {\n      entry: PD.Mapped(defaultKey, names, function (name) {\n        return PD.Group(createEntryParams({\n          entryData: map.get(name),\n          defaultView: defaultView,\n          structure: data && data.structure,\n          channelParams: channelParams\n        }));\n      })\n    };\n  }\n\n  VolumeStreaming.createParams = createParams;\n\n  function createEntryParams(options) {\n    var entryData = options.entryData,\n        defaultView = options.defaultView,\n        structure = options.structure,\n        _a = options.channelParams,\n        channelParams = _a === void 0 ? {} : _a; // fake the info\n\n    var info = entryData || {\n      kind: 'em',\n      header: {\n        sampling: [fakeSampling],\n        availablePrecisions: [{\n          precision: 0,\n          maxVoxels: 0\n        }]\n      },\n      emDefaultContourLevel: Volume.IsoValue.relative(0)\n    };\n    var box = structure && structure.boundary.box || Box3D();\n    return {\n      view: PD.MappedStatic(defaultView || (info.kind === 'em' ? 'cell' : 'selection-box'), {\n        'off': PD.Group({}),\n        'box': PD.Group({\n          bottomLeft: PD.Vec3(box.min),\n          topRight: PD.Vec3(box.max)\n        }, {\n          description: 'Static box defined by cartesian coords.',\n          isFlat: true\n        }),\n        'selection-box': PD.Group({\n          radius: PD.Numeric(5, {\n            min: 0,\n            max: 50,\n            step: 0.5\n          }, {\n            description: 'Radius in \\u212B within which the volume is shown.'\n          }),\n          bottomLeft: PD.Vec3(Vec3.create(0, 0, 0), {}, {\n            isHidden: true\n          }),\n          topRight: PD.Vec3(Vec3.create(0, 0, 0), {}, {\n            isHidden: true\n          })\n        }, {\n          description: 'Box around focused element.',\n          isFlat: true\n        }),\n        'cell': PD.Group({}),\n        // Show selection-box if available and cell otherwise.\n        'auto': PD.Group({\n          radius: PD.Numeric(5, {\n            min: 0,\n            max: 50,\n            step: 0.5\n          }, {\n            description: 'Radius in \\u212B within which the volume is shown.'\n          }),\n          selectionDetailLevel: PD.Select(Math.min(6, info.header.availablePrecisions.length - 1), info.header.availablePrecisions.map(function (p, i) {\n            return [i, i + 1 + \" [ \" + (Math.pow(p.maxVoxels, 1 / 3) | 0) + \"^3 cells ]\"];\n          }), {\n            label: 'Selection Detail',\n            description: 'Determines the maximum number of voxels. Depending on the size of the volume options are in the range from 0 (0.52M voxels) to 6 (25.17M voxels).'\n          }),\n          isSelection: PD.Boolean(false, {\n            isHidden: true\n          }),\n          bottomLeft: PD.Vec3(box.min, {}, {\n            isHidden: true\n          }),\n          topRight: PD.Vec3(box.max, {}, {\n            isHidden: true\n          })\n        }, {\n          description: 'Box around focused element.',\n          isFlat: true\n        })\n      }, {\n        options: VolumeStreaming.ViewTypeOptions,\n        description: 'Controls what of the volume is displayed. \"Off\" hides the volume alltogether. \"Bounded box\" shows the volume inside the given box. \"Around Interaction\" shows the volume around the focused element/atom. \"Whole Structure\" shows the volume for the whole structure.'\n      }),\n      detailLevel: PD.Select(Math.min(3, info.header.availablePrecisions.length - 1), info.header.availablePrecisions.map(function (p, i) {\n        return [i, i + 1 + \" [ \" + (Math.pow(p.maxVoxels, 1 / 3) | 0) + \"^3 cells ]\"];\n      }), {\n        description: 'Determines the maximum number of voxels. Depending on the size of the volume options are in the range from 0 (0.52M voxels) to 6 (25.17M voxels).'\n      }),\n      channels: info.kind === 'em' ? PD.Group({\n        'em': channelParam('EM', Color(0x638F8F), info.emDefaultContourLevel || Volume.IsoValue.relative(1), info.header.sampling[0].valuesInfo[0], channelParams['em'])\n      }, {\n        isFlat: true\n      }) : PD.Group({\n        '2fo-fc': channelParam('2Fo-Fc', Color(0x3362B2), Volume.IsoValue.relative(1.5), info.header.sampling[0].valuesInfo[0], channelParams['2fo-fc']),\n        'fo-fc(+ve)': channelParam('Fo-Fc(+ve)', Color(0x33BB33), Volume.IsoValue.relative(3), info.header.sampling[0].valuesInfo[1], channelParams['fo-fc(+ve)']),\n        'fo-fc(-ve)': channelParam('Fo-Fc(-ve)', Color(0xBB3333), Volume.IsoValue.relative(-3), info.header.sampling[0].valuesInfo[1], channelParams['fo-fc(-ve)'])\n      }, {\n        isFlat: true\n      })\n    };\n  }\n\n  VolumeStreaming.createEntryParams = createEntryParams;\n  VolumeStreaming.ViewTypeOptions = [['off', 'Off'], ['box', 'Bounded Box'], ['selection-box', 'Around Focus'], ['cell', 'Whole Structure'], ['auto', 'Auto']];\n  VolumeStreaming.ChannelTypeOptions = [['em', 'em'], ['2fo-fc', '2fo-fc'], ['fo-fc(+ve)', 'fo-fc(+ve)'], ['fo-fc(-ve)', 'fo-fc(-ve)']];\n\n  var Behavior =\n  /** @class */\n  function (_super) {\n    __extends(Behavior, _super);\n\n    function Behavior(plugin, data) {\n      var _this = _super.call(this, plugin, {}) || this;\n\n      _this.plugin = plugin;\n      _this.data = data;\n      _this.cache = LRUCache.create(25);\n      _this.params = {};\n      _this.lastLoci = EmptyLoci;\n      _this.ref = '';\n      _this.channels = {};\n      _this._invTransform = Mat4();\n      _this.infoMap = new Map();\n\n      _this.data.entries.forEach(function (info) {\n        return _this.infoMap.set(info.dataId, info);\n      });\n\n      return _this;\n    }\n\n    Object.defineProperty(Behavior.prototype, \"info\", {\n      get: function () {\n        return this.infoMap.get(this.params.entry.name);\n      },\n      enumerable: false,\n      configurable: true\n    });\n\n    Behavior.prototype.queryData = function (box) {\n      return __awaiter(this, void 0, void 0, function () {\n        var url, a, b, detail, entry, urlAsset, asset, data, removed;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              url = urlCombine(this.data.serverUrl, this.info.kind + \"/\" + this.info.dataId.toLowerCase());\n\n              if (box) {\n                a = box.min, b = box.max;\n                url += \"/box\" + (\"/\" + a.map(function (v) {\n                  return Math.round(1000 * v) / 1000;\n                }).join(',')) + (\"/\" + b.map(function (v) {\n                  return Math.round(1000 * v) / 1000;\n                }).join(','));\n              } else {\n                url += \"/cell\";\n              }\n\n              detail = this.params.entry.params.detailLevel;\n\n              if (this.params.entry.params.view.name === 'auto' && this.params.entry.params.view.params.isSelection) {\n                detail = this.params.entry.params.view.params.selectionDetailLevel;\n              }\n\n              url += \"?detail=\" + detail;\n              entry = LRUCache.get(this.cache, url);\n              if (entry) return [2\n              /*return*/\n              , entry.data];\n              urlAsset = Asset.getUrlAsset(this.plugin.managers.asset, url);\n              return [4\n              /*yield*/\n              , this.plugin.runTask(this.plugin.managers.asset.resolve(urlAsset, 'binary'))];\n\n            case 1:\n              asset = _a.sent();\n              return [4\n              /*yield*/\n              , this.parseCif(asset.data)];\n\n            case 2:\n              data = _a.sent();\n              if (!data) return [2\n              /*return*/\n              ];\n              removed = LRUCache.set(this.cache, url, {\n                data: data,\n                asset: asset\n              });\n              if (removed) removed.asset.dispose();\n              return [2\n              /*return*/\n              , data];\n          }\n        });\n      });\n    };\n\n    Behavior.prototype.parseCif = function (data) {\n      return __awaiter(this, void 0, void 0, function () {\n        var parsed, ret, i, block, densityServerCif, volume;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.plugin.runTask(CIF.parseBinary(data))];\n\n            case 1:\n              parsed = _a.sent();\n\n              if (parsed.isError) {\n                this.plugin.log.error('VolumeStreaming, parsing CIF: ' + parsed.toString());\n                return [2\n                /*return*/\n                ];\n              }\n\n              if (parsed.result.blocks.length < 2) {\n                this.plugin.log.error('VolumeStreaming: Invalid data.');\n                return [2\n                /*return*/\n                ];\n              }\n\n              ret = {};\n              i = 1;\n              _a.label = 2;\n\n            case 2:\n              if (!(i < parsed.result.blocks.length)) return [3\n              /*break*/\n              , 5];\n              block = parsed.result.blocks[i];\n              densityServerCif = CIF.schema.densityServer(block);\n              return [4\n              /*yield*/\n              , this.plugin.runTask(volumeFromDensityServerData(densityServerCif))];\n\n            case 3:\n              volume = _a.sent();\n              ret[block.header] = volume;\n              _a.label = 4;\n\n            case 4:\n              i++;\n              return [3\n              /*break*/\n              , 2];\n\n            case 5:\n              return [2\n              /*return*/\n              , ret];\n          }\n        });\n      });\n    };\n\n    Behavior.prototype.updateSelectionBoxParams = function (box) {\n      if (this.params.entry.params.view.name !== 'selection-box') return;\n      var state = this.plugin.state.data;\n\n      var newParams = __assign(__assign({}, this.params), {\n        entry: {\n          name: this.params.entry.name,\n          params: __assign(__assign({}, this.params.entry.params), {\n            view: {\n              name: 'selection-box',\n              params: {\n                radius: this.params.entry.params.view.params.radius,\n                bottomLeft: box.min,\n                topRight: box.max\n              }\n            }\n          })\n        }\n      });\n\n      var update = state.build().to(this.ref).update(newParams);\n      PluginCommands.State.Update(this.plugin, {\n        state: state,\n        tree: update,\n        options: {\n          doNotUpdateCurrent: true\n        }\n      });\n    };\n\n    Behavior.prototype.updateAutoParams = function (box, isSelection) {\n      if (this.params.entry.params.view.name !== 'auto') return;\n      var state = this.plugin.state.data;\n\n      var newParams = __assign(__assign({}, this.params), {\n        entry: {\n          name: this.params.entry.name,\n          params: __assign(__assign({}, this.params.entry.params), {\n            view: {\n              name: 'auto',\n              params: {\n                radius: this.params.entry.params.view.params.radius,\n                selectionDetailLevel: this.params.entry.params.view.params.selectionDetailLevel,\n                isSelection: isSelection,\n                bottomLeft: (box === null || box === void 0 ? void 0 : box.min) || Vec3.zero(),\n                topRight: (box === null || box === void 0 ? void 0 : box.max) || Vec3.zero()\n              }\n            }\n          })\n        }\n      });\n\n      var update = state.build().to(this.ref).update(newParams);\n      PluginCommands.State.Update(this.plugin, {\n        state: state,\n        tree: update,\n        options: {\n          doNotUpdateCurrent: true\n        }\n      });\n    };\n\n    Behavior.prototype.getStructureRoot = function () {\n      return this.plugin.state.data.select(StateSelection.Generators.byRef(this.ref).rootOfType(PluginStateObject.Molecule.Structure))[0];\n    };\n\n    Behavior.prototype.register = function (ref) {\n      var _this = this;\n\n      this.ref = ref;\n      this.subscribeObservable(this.plugin.state.events.object.removed, function (o) {\n        if (!PluginStateObject.Molecule.Structure.is(o.obj) || !StructureElement.Loci.is(_this.lastLoci)) return;\n\n        if (_this.lastLoci.structure === o.obj.data) {\n          _this.lastLoci = EmptyLoci;\n        }\n      });\n      this.subscribeObservable(this.plugin.state.events.object.updated, function (o) {\n        if (!PluginStateObject.Molecule.Structure.is(o.oldObj) || !StructureElement.Loci.is(_this.lastLoci)) return;\n\n        if (_this.lastLoci.structure === o.oldObj.data) {\n          _this.lastLoci = EmptyLoci;\n        }\n      });\n      this.subscribeObservable(this.plugin.managers.structure.focus.behaviors.current, function (entry) {\n        if (!_this.plugin.state.data.tree.children.has(_this.ref)) return;\n        var loci = entry ? entry.loci : EmptyLoci;\n\n        switch (_this.params.entry.params.view.name) {\n          case 'auto':\n            _this.updateAuto(loci);\n\n            break;\n\n          case 'selection-box':\n            _this.updateSelectionBox(loci);\n\n            break;\n\n          default:\n            _this.lastLoci = loci;\n            break;\n        }\n      });\n    };\n\n    Behavior.prototype.unregister = function () {\n      var entry = this.cache.entries.first;\n\n      while (entry) {\n        entry.value.data.asset.dispose();\n        entry = entry.next;\n      }\n    };\n\n    Behavior.prototype.getBoxFromLoci = function (loci) {\n      var _a, _b, _c;\n\n      if (Loci.isEmpty(loci) || isEmptyLoci(loci)) {\n        return Box3D();\n      }\n\n      var parent = this.plugin.helpers.substructureParent.get(loci.structure, true);\n      if (!parent) return Box3D();\n      var root = this.getStructureRoot();\n      if (!root || ((_a = root.obj) === null || _a === void 0 ? void 0 : _a.data) !== ((_b = parent.obj) === null || _b === void 0 ? void 0 : _b.data)) return Box3D();\n      var transform = GlobalModelTransformInfo.get((_c = root.obj) === null || _c === void 0 ? void 0 : _c.data.models[0]);\n      if (transform) Mat4.invert(this._invTransform, transform);\n      var extendedLoci = StructureElement.Loci.extendToWholeResidues(loci);\n      var box = StructureElement.Loci.getBoundary(extendedLoci, transform && !Number.isNaN(this._invTransform[0]) ? this._invTransform : void 0).box;\n\n      if (StructureElement.Loci.size(extendedLoci) === 1) {\n        Box3D.expand(box, box, Vec3.create(1, 1, 1));\n      }\n\n      return box;\n    };\n\n    Behavior.prototype.updateAuto = function (loci) {\n      // if (Loci.areEqual(this.lastLoci, loci)) {\n      //     this.lastLoci = EmptyLoci;\n      //     this.updateSelectionBoxParams(Box3D.empty());\n      //     return;\n      // }\n      this.lastLoci = loci;\n\n      if (isEmptyLoci(loci)) {\n        this.updateAutoParams(this.info.kind === 'x-ray' ? this.data.structure.boundary.box : void 0, false);\n        return;\n      }\n\n      var box = this.getBoxFromLoci(loci);\n      this.updateAutoParams(box, true);\n    };\n\n    Behavior.prototype.updateSelectionBox = function (loci) {\n      if (Loci.areEqual(this.lastLoci, loci)) {\n        this.lastLoci = EmptyLoci;\n        this.updateSelectionBoxParams(Box3D());\n        return;\n      }\n\n      this.lastLoci = loci;\n\n      if (isEmptyLoci(loci)) {\n        this.updateSelectionBoxParams(Box3D());\n        return;\n      }\n\n      var box = this.getBoxFromLoci(loci);\n      this.updateSelectionBoxParams(box);\n    };\n\n    Behavior.prototype.update = function (params) {\n      return __awaiter(this, void 0, void 0, function () {\n        var switchedToSelection, box, emptyData, r, r, data, _a, info;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              switchedToSelection = params.entry.params.view.name === 'selection-box' && this.params && this.params.entry && this.params.entry.params && this.params.entry.params.view && this.params.entry.params.view.name !== 'selection-box';\n              this.params = params;\n              box = void 0, emptyData = false;\n\n              switch (params.entry.params.view.name) {\n                case 'off':\n                  emptyData = true;\n                  break;\n\n                case 'box':\n                  box = Box3D.create(params.entry.params.view.params.bottomLeft, params.entry.params.view.params.topRight);\n                  emptyData = Box3D.volume(box) < 0.0001;\n                  break;\n\n                case 'selection-box':\n                  {\n                    if (switchedToSelection) {\n                      box = this.getBoxFromLoci(this.lastLoci) || Box3D();\n                    } else {\n                      box = Box3D.create(Vec3.clone(params.entry.params.view.params.bottomLeft), Vec3.clone(params.entry.params.view.params.topRight));\n                    }\n\n                    r = params.entry.params.view.params.radius;\n                    emptyData = Box3D.volume(box) < 0.0001;\n                    Box3D.expand(box, box, Vec3.create(r, r, r));\n                    break;\n                  }\n\n                case 'cell':\n                  box = this.info.kind === 'x-ray' ? this.data.structure.boundary.box : void 0;\n                  break;\n\n                case 'auto':\n                  box = params.entry.params.view.params.isSelection || this.info.kind === 'x-ray' ? Box3D.create(Vec3.clone(params.entry.params.view.params.bottomLeft), Vec3.clone(params.entry.params.view.params.topRight)) : void 0;\n\n                  if (box) {\n                    emptyData = Box3D.volume(box) < 0.0001;\n\n                    if (params.entry.params.view.params.isSelection) {\n                      r = params.entry.params.view.params.radius;\n                      Box3D.expand(box, box, Vec3.create(r, r, r));\n                    }\n                  }\n\n                  break;\n              }\n\n              if (!emptyData) return [3\n              /*break*/\n              , 1];\n              _a = {};\n              return [3\n              /*break*/\n              , 3];\n\n            case 1:\n              return [4\n              /*yield*/\n              , this.queryData(box)];\n\n            case 2:\n              _a = _b.sent();\n              _b.label = 3;\n\n            case 3:\n              data = _a;\n              if (!data) return [2\n              /*return*/\n              , false];\n              info = params.entry.params.channels;\n\n              if (this.info.kind === 'x-ray') {\n                this.channels['2fo-fc'] = this.createChannel(data['2FO-FC'] || Volume.One, info['2fo-fc'], this.info.header.sampling[0].valuesInfo[0]);\n                this.channels['fo-fc(+ve)'] = this.createChannel(data['FO-FC'] || Volume.One, info['fo-fc(+ve)'], this.info.header.sampling[0].valuesInfo[1]);\n                this.channels['fo-fc(-ve)'] = this.createChannel(data['FO-FC'] || Volume.One, info['fo-fc(-ve)'], this.info.header.sampling[0].valuesInfo[1]);\n              } else {\n                this.channels['em'] = this.createChannel(data['EM'] || Volume.One, info['em'], this.info.header.sampling[0].valuesInfo[0]);\n              }\n\n              return [2\n              /*return*/\n              , true];\n          }\n        });\n      });\n    };\n\n    Behavior.prototype.createChannel = function (data, info, stats) {\n      var i = info;\n      return {\n        data: data,\n        color: i.color,\n        wireframe: i.wireframe,\n        opacity: i.opacity,\n        isoValue: i.isoValue.kind === 'relative' ? i.isoValue : Volume.IsoValue.toRelative(i.isoValue, stats)\n      };\n    };\n\n    Behavior.prototype.getDescription = function () {\n      if (this.params.entry.params.view.name === 'selection-box') return 'Selection';\n      if (this.params.entry.params.view.name === 'box') return 'Static Box';\n      if (this.params.entry.params.view.name === 'cell') return 'Cell';\n      return '';\n    };\n\n    return Behavior;\n  }(PluginBehavior.WithSubscribers);\n\n  VolumeStreaming.Behavior = Behavior;\n})(VolumeStreaming || (VolumeStreaming = {}));","map":{"version":3,"sources":["../../../../../src/mol-plugin/behavior/dynamic/volume-streaming/behavior.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign, __awaiter, __extends, __generator } from \"tslib\";\r\nimport { ParamDefinition as PD } from '../../../../mol-util/param-definition';\r\nimport { PluginStateObject } from '../../../../mol-plugin-state/objects';\r\nimport { Volume } from '../../../../mol-model/volume';\r\nimport { Box3D } from '../../../../mol-math/geometry';\r\nimport { Mat4, Vec3 } from '../../../../mol-math/linear-algebra';\r\nimport { Color } from '../../../../mol-util/color';\r\nimport { PluginBehavior } from '../../behavior';\r\nimport { LRUCache } from '../../../../mol-util/lru-cache';\r\nimport { urlCombine } from '../../../../mol-util/url';\r\nimport { CIF } from '../../../../mol-io/reader/cif';\r\nimport { volumeFromDensityServerData } from '../../../../mol-model-formats/volume/density-server';\r\nimport { PluginCommands } from '../../../commands';\r\nimport { StateSelection } from '../../../../mol-state';\r\nimport { StructureElement } from '../../../../mol-model/structure';\r\nimport { EmptyLoci, Loci, isEmptyLoci } from '../../../../mol-model/loci';\r\nimport { Asset } from '../../../../mol-util/assets';\r\nimport { GlobalModelTransformInfo } from '../../../../mol-model/structure/model/properties/global-transform';\r\nvar VolumeStreaming = /** @class */ (function (_super) {\r\n    __extends(VolumeStreaming, _super);\r\n    function VolumeStreaming() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return VolumeStreaming;\r\n}(PluginStateObject.CreateBehavior({ name: 'Volume Streaming' })));\r\nexport { VolumeStreaming };\r\n(function (VolumeStreaming) {\r\n    VolumeStreaming.RootTag = 'volume-streaming-info';\r\n    function channelParam(label, color, defaultValue, stats, defaults) {\r\n        var _a, _b, _c, _d;\r\n        if (defaults === void 0) { defaults = {}; }\r\n        return PD.Group({\r\n            isoValue: Volume.createIsoValueParam((_a = defaults.isoValue) !== null && _a !== void 0 ? _a : defaultValue, stats),\r\n            color: PD.Color((_b = defaults.color) !== null && _b !== void 0 ? _b : color),\r\n            wireframe: PD.Boolean((_c = defaults.wireframe) !== null && _c !== void 0 ? _c : false),\r\n            opacity: PD.Numeric((_d = defaults.opacity) !== null && _d !== void 0 ? _d : 0.3, { min: 0, max: 1, step: 0.01 })\r\n        }, { label: label, isExpanded: true });\r\n    }\r\n    var fakeSampling = {\r\n        byteOffset: 0,\r\n        rate: 1,\r\n        sampleCount: [1, 1, 1],\r\n        valuesInfo: [{ mean: 0, min: -1, max: 1, sigma: 0.1 }, { mean: 0, min: -1, max: 1, sigma: 0.1 }]\r\n    };\r\n    function createParams(options) {\r\n        if (options === void 0) { options = {}; }\r\n        var data = options.data, defaultView = options.defaultView, channelParams = options.channelParams;\r\n        var map = new Map();\r\n        if (data)\r\n            data.entries.forEach(function (d) { return map.set(d.dataId, d); });\r\n        var names = data ? data.entries.map(function (d) { return [d.dataId, d.dataId]; }) : [];\r\n        var defaultKey = data ? data.entries[0].dataId : '';\r\n        return {\r\n            entry: PD.Mapped(defaultKey, names, function (name) { return PD.Group(createEntryParams({ entryData: map.get(name), defaultView: defaultView, structure: data && data.structure, channelParams: channelParams })); }),\r\n        };\r\n    }\r\n    VolumeStreaming.createParams = createParams;\r\n    function createEntryParams(options) {\r\n        var entryData = options.entryData, defaultView = options.defaultView, structure = options.structure, _a = options.channelParams, channelParams = _a === void 0 ? {} : _a;\r\n        // fake the info\r\n        var info = entryData || { kind: 'em', header: { sampling: [fakeSampling], availablePrecisions: [{ precision: 0, maxVoxels: 0 }] }, emDefaultContourLevel: Volume.IsoValue.relative(0) };\r\n        var box = (structure && structure.boundary.box) || Box3D();\r\n        return {\r\n            view: PD.MappedStatic(defaultView || (info.kind === 'em' ? 'cell' : 'selection-box'), {\r\n                'off': PD.Group({}),\r\n                'box': PD.Group({\r\n                    bottomLeft: PD.Vec3(box.min),\r\n                    topRight: PD.Vec3(box.max),\r\n                }, { description: 'Static box defined by cartesian coords.', isFlat: true }),\r\n                'selection-box': PD.Group({\r\n                    radius: PD.Numeric(5, { min: 0, max: 50, step: 0.5 }, { description: 'Radius in \\u212B within which the volume is shown.' }),\r\n                    bottomLeft: PD.Vec3(Vec3.create(0, 0, 0), {}, { isHidden: true }),\r\n                    topRight: PD.Vec3(Vec3.create(0, 0, 0), {}, { isHidden: true }),\r\n                }, { description: 'Box around focused element.', isFlat: true }),\r\n                'cell': PD.Group({}),\r\n                // Show selection-box if available and cell otherwise.\r\n                'auto': PD.Group({\r\n                    radius: PD.Numeric(5, { min: 0, max: 50, step: 0.5 }, { description: 'Radius in \\u212B within which the volume is shown.' }),\r\n                    selectionDetailLevel: PD.Select(Math.min(6, info.header.availablePrecisions.length - 1), info.header.availablePrecisions.map(function (p, i) { return [i, i + 1 + \" [ \" + (Math.pow(p.maxVoxels, 1 / 3) | 0) + \"^3 cells ]\"]; }), { label: 'Selection Detail', description: 'Determines the maximum number of voxels. Depending on the size of the volume options are in the range from 0 (0.52M voxels) to 6 (25.17M voxels).' }),\r\n                    isSelection: PD.Boolean(false, { isHidden: true }),\r\n                    bottomLeft: PD.Vec3(box.min, {}, { isHidden: true }),\r\n                    topRight: PD.Vec3(box.max, {}, { isHidden: true }),\r\n                }, { description: 'Box around focused element.', isFlat: true })\r\n            }, { options: VolumeStreaming.ViewTypeOptions, description: 'Controls what of the volume is displayed. \"Off\" hides the volume alltogether. \"Bounded box\" shows the volume inside the given box. \"Around Interaction\" shows the volume around the focused element/atom. \"Whole Structure\" shows the volume for the whole structure.' }),\r\n            detailLevel: PD.Select(Math.min(3, info.header.availablePrecisions.length - 1), info.header.availablePrecisions.map(function (p, i) { return [i, i + 1 + \" [ \" + (Math.pow(p.maxVoxels, 1 / 3) | 0) + \"^3 cells ]\"]; }), { description: 'Determines the maximum number of voxels. Depending on the size of the volume options are in the range from 0 (0.52M voxels) to 6 (25.17M voxels).' }),\r\n            channels: info.kind === 'em'\r\n                ? PD.Group({\r\n                    'em': channelParam('EM', Color(0x638F8F), info.emDefaultContourLevel || Volume.IsoValue.relative(1), info.header.sampling[0].valuesInfo[0], channelParams['em'])\r\n                }, { isFlat: true })\r\n                : PD.Group({\r\n                    '2fo-fc': channelParam('2Fo-Fc', Color(0x3362B2), Volume.IsoValue.relative(1.5), info.header.sampling[0].valuesInfo[0], channelParams['2fo-fc']),\r\n                    'fo-fc(+ve)': channelParam('Fo-Fc(+ve)', Color(0x33BB33), Volume.IsoValue.relative(3), info.header.sampling[0].valuesInfo[1], channelParams['fo-fc(+ve)']),\r\n                    'fo-fc(-ve)': channelParam('Fo-Fc(-ve)', Color(0xBB3333), Volume.IsoValue.relative(-3), info.header.sampling[0].valuesInfo[1], channelParams['fo-fc(-ve)']),\r\n                }, { isFlat: true }),\r\n        };\r\n    }\r\n    VolumeStreaming.createEntryParams = createEntryParams;\r\n    VolumeStreaming.ViewTypeOptions = [['off', 'Off'], ['box', 'Bounded Box'], ['selection-box', 'Around Focus'], ['cell', 'Whole Structure'], ['auto', 'Auto']];\r\n    VolumeStreaming.ChannelTypeOptions = [['em', 'em'], ['2fo-fc', '2fo-fc'], ['fo-fc(+ve)', 'fo-fc(+ve)'], ['fo-fc(-ve)', 'fo-fc(-ve)']];\r\n    var Behavior = /** @class */ (function (_super) {\r\n        __extends(Behavior, _super);\r\n        function Behavior(plugin, data) {\r\n            var _this = _super.call(this, plugin, {}) || this;\r\n            _this.plugin = plugin;\r\n            _this.data = data;\r\n            _this.cache = LRUCache.create(25);\r\n            _this.params = {};\r\n            _this.lastLoci = EmptyLoci;\r\n            _this.ref = '';\r\n            _this.channels = {};\r\n            _this._invTransform = Mat4();\r\n            _this.infoMap = new Map();\r\n            _this.data.entries.forEach(function (info) { return _this.infoMap.set(info.dataId, info); });\r\n            return _this;\r\n        }\r\n        Object.defineProperty(Behavior.prototype, \"info\", {\r\n            get: function () {\r\n                return this.infoMap.get(this.params.entry.name);\r\n            },\r\n            enumerable: false,\r\n            configurable: true\r\n        });\r\n        Behavior.prototype.queryData = function (box) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var url, a, b, detail, entry, urlAsset, asset, data, removed;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            url = urlCombine(this.data.serverUrl, this.info.kind + \"/\" + this.info.dataId.toLowerCase());\r\n                            if (box) {\r\n                                a = box.min, b = box.max;\r\n                                url += \"/box\"\r\n                                    + (\"/\" + a.map(function (v) { return Math.round(1000 * v) / 1000; }).join(','))\r\n                                    + (\"/\" + b.map(function (v) { return Math.round(1000 * v) / 1000; }).join(','));\r\n                            }\r\n                            else {\r\n                                url += \"/cell\";\r\n                            }\r\n                            detail = this.params.entry.params.detailLevel;\r\n                            if (this.params.entry.params.view.name === 'auto' && this.params.entry.params.view.params.isSelection) {\r\n                                detail = this.params.entry.params.view.params.selectionDetailLevel;\r\n                            }\r\n                            url += \"?detail=\" + detail;\r\n                            entry = LRUCache.get(this.cache, url);\r\n                            if (entry)\r\n                                return [2 /*return*/, entry.data];\r\n                            urlAsset = Asset.getUrlAsset(this.plugin.managers.asset, url);\r\n                            return [4 /*yield*/, this.plugin.runTask(this.plugin.managers.asset.resolve(urlAsset, 'binary'))];\r\n                        case 1:\r\n                            asset = _a.sent();\r\n                            return [4 /*yield*/, this.parseCif(asset.data)];\r\n                        case 2:\r\n                            data = _a.sent();\r\n                            if (!data)\r\n                                return [2 /*return*/];\r\n                            removed = LRUCache.set(this.cache, url, { data: data, asset: asset });\r\n                            if (removed)\r\n                                removed.asset.dispose();\r\n                            return [2 /*return*/, data];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Behavior.prototype.parseCif = function (data) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var parsed, ret, i, block, densityServerCif, volume;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0: return [4 /*yield*/, this.plugin.runTask(CIF.parseBinary(data))];\r\n                        case 1:\r\n                            parsed = _a.sent();\r\n                            if (parsed.isError) {\r\n                                this.plugin.log.error('VolumeStreaming, parsing CIF: ' + parsed.toString());\r\n                                return [2 /*return*/];\r\n                            }\r\n                            if (parsed.result.blocks.length < 2) {\r\n                                this.plugin.log.error('VolumeStreaming: Invalid data.');\r\n                                return [2 /*return*/];\r\n                            }\r\n                            ret = {};\r\n                            i = 1;\r\n                            _a.label = 2;\r\n                        case 2:\r\n                            if (!(i < parsed.result.blocks.length)) return [3 /*break*/, 5];\r\n                            block = parsed.result.blocks[i];\r\n                            densityServerCif = CIF.schema.densityServer(block);\r\n                            return [4 /*yield*/, this.plugin.runTask(volumeFromDensityServerData(densityServerCif))];\r\n                        case 3:\r\n                            volume = _a.sent();\r\n                            ret[block.header] = volume;\r\n                            _a.label = 4;\r\n                        case 4:\r\n                            i++;\r\n                            return [3 /*break*/, 2];\r\n                        case 5: return [2 /*return*/, ret];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Behavior.prototype.updateSelectionBoxParams = function (box) {\r\n            if (this.params.entry.params.view.name !== 'selection-box')\r\n                return;\r\n            var state = this.plugin.state.data;\r\n            var newParams = __assign(__assign({}, this.params), { entry: {\r\n                    name: this.params.entry.name,\r\n                    params: __assign(__assign({}, this.params.entry.params), { view: {\r\n                            name: 'selection-box',\r\n                            params: {\r\n                                radius: this.params.entry.params.view.params.radius,\r\n                                bottomLeft: box.min,\r\n                                topRight: box.max\r\n                            }\r\n                        } })\r\n                } });\r\n            var update = state.build().to(this.ref).update(newParams);\r\n            PluginCommands.State.Update(this.plugin, { state: state, tree: update, options: { doNotUpdateCurrent: true } });\r\n        };\r\n        Behavior.prototype.updateAutoParams = function (box, isSelection) {\r\n            if (this.params.entry.params.view.name !== 'auto')\r\n                return;\r\n            var state = this.plugin.state.data;\r\n            var newParams = __assign(__assign({}, this.params), { entry: {\r\n                    name: this.params.entry.name,\r\n                    params: __assign(__assign({}, this.params.entry.params), { view: {\r\n                            name: 'auto',\r\n                            params: {\r\n                                radius: this.params.entry.params.view.params.radius,\r\n                                selectionDetailLevel: this.params.entry.params.view.params.selectionDetailLevel,\r\n                                isSelection: isSelection,\r\n                                bottomLeft: (box === null || box === void 0 ? void 0 : box.min) || Vec3.zero(),\r\n                                topRight: (box === null || box === void 0 ? void 0 : box.max) || Vec3.zero()\r\n                            }\r\n                        } })\r\n                } });\r\n            var update = state.build().to(this.ref).update(newParams);\r\n            PluginCommands.State.Update(this.plugin, { state: state, tree: update, options: { doNotUpdateCurrent: true } });\r\n        };\r\n        Behavior.prototype.getStructureRoot = function () {\r\n            return this.plugin.state.data.select(StateSelection.Generators.byRef(this.ref).rootOfType(PluginStateObject.Molecule.Structure))[0];\r\n        };\r\n        Behavior.prototype.register = function (ref) {\r\n            var _this = this;\r\n            this.ref = ref;\r\n            this.subscribeObservable(this.plugin.state.events.object.removed, function (o) {\r\n                if (!PluginStateObject.Molecule.Structure.is(o.obj) || !StructureElement.Loci.is(_this.lastLoci))\r\n                    return;\r\n                if (_this.lastLoci.structure === o.obj.data) {\r\n                    _this.lastLoci = EmptyLoci;\r\n                }\r\n            });\r\n            this.subscribeObservable(this.plugin.state.events.object.updated, function (o) {\r\n                if (!PluginStateObject.Molecule.Structure.is(o.oldObj) || !StructureElement.Loci.is(_this.lastLoci))\r\n                    return;\r\n                if (_this.lastLoci.structure === o.oldObj.data) {\r\n                    _this.lastLoci = EmptyLoci;\r\n                }\r\n            });\r\n            this.subscribeObservable(this.plugin.managers.structure.focus.behaviors.current, function (entry) {\r\n                if (!_this.plugin.state.data.tree.children.has(_this.ref))\r\n                    return;\r\n                var loci = entry ? entry.loci : EmptyLoci;\r\n                switch (_this.params.entry.params.view.name) {\r\n                    case 'auto':\r\n                        _this.updateAuto(loci);\r\n                        break;\r\n                    case 'selection-box':\r\n                        _this.updateSelectionBox(loci);\r\n                        break;\r\n                    default:\r\n                        _this.lastLoci = loci;\r\n                        break;\r\n                }\r\n            });\r\n        };\r\n        Behavior.prototype.unregister = function () {\r\n            var entry = this.cache.entries.first;\r\n            while (entry) {\r\n                entry.value.data.asset.dispose();\r\n                entry = entry.next;\r\n            }\r\n        };\r\n        Behavior.prototype.getBoxFromLoci = function (loci) {\r\n            var _a, _b, _c;\r\n            if (Loci.isEmpty(loci) || isEmptyLoci(loci)) {\r\n                return Box3D();\r\n            }\r\n            var parent = this.plugin.helpers.substructureParent.get(loci.structure, true);\r\n            if (!parent)\r\n                return Box3D();\r\n            var root = this.getStructureRoot();\r\n            if (!root || ((_a = root.obj) === null || _a === void 0 ? void 0 : _a.data) !== ((_b = parent.obj) === null || _b === void 0 ? void 0 : _b.data))\r\n                return Box3D();\r\n            var transform = GlobalModelTransformInfo.get((_c = root.obj) === null || _c === void 0 ? void 0 : _c.data.models[0]);\r\n            if (transform)\r\n                Mat4.invert(this._invTransform, transform);\r\n            var extendedLoci = StructureElement.Loci.extendToWholeResidues(loci);\r\n            var box = StructureElement.Loci.getBoundary(extendedLoci, transform && !Number.isNaN(this._invTransform[0]) ? this._invTransform : void 0).box;\r\n            if (StructureElement.Loci.size(extendedLoci) === 1) {\r\n                Box3D.expand(box, box, Vec3.create(1, 1, 1));\r\n            }\r\n            return box;\r\n        };\r\n        Behavior.prototype.updateAuto = function (loci) {\r\n            // if (Loci.areEqual(this.lastLoci, loci)) {\r\n            //     this.lastLoci = EmptyLoci;\r\n            //     this.updateSelectionBoxParams(Box3D.empty());\r\n            //     return;\r\n            // }\r\n            this.lastLoci = loci;\r\n            if (isEmptyLoci(loci)) {\r\n                this.updateAutoParams(this.info.kind === 'x-ray' ? this.data.structure.boundary.box : void 0, false);\r\n                return;\r\n            }\r\n            var box = this.getBoxFromLoci(loci);\r\n            this.updateAutoParams(box, true);\r\n        };\r\n        Behavior.prototype.updateSelectionBox = function (loci) {\r\n            if (Loci.areEqual(this.lastLoci, loci)) {\r\n                this.lastLoci = EmptyLoci;\r\n                this.updateSelectionBoxParams(Box3D());\r\n                return;\r\n            }\r\n            this.lastLoci = loci;\r\n            if (isEmptyLoci(loci)) {\r\n                this.updateSelectionBoxParams(Box3D());\r\n                return;\r\n            }\r\n            var box = this.getBoxFromLoci(loci);\r\n            this.updateSelectionBoxParams(box);\r\n        };\r\n        Behavior.prototype.update = function (params) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var switchedToSelection, box, emptyData, r, r, data, _a, info;\r\n                return __generator(this, function (_b) {\r\n                    switch (_b.label) {\r\n                        case 0:\r\n                            switchedToSelection = params.entry.params.view.name === 'selection-box' && this.params && this.params.entry && this.params.entry.params && this.params.entry.params.view && this.params.entry.params.view.name !== 'selection-box';\r\n                            this.params = params;\r\n                            box = void 0, emptyData = false;\r\n                            switch (params.entry.params.view.name) {\r\n                                case 'off':\r\n                                    emptyData = true;\r\n                                    break;\r\n                                case 'box':\r\n                                    box = Box3D.create(params.entry.params.view.params.bottomLeft, params.entry.params.view.params.topRight);\r\n                                    emptyData = Box3D.volume(box) < 0.0001;\r\n                                    break;\r\n                                case 'selection-box': {\r\n                                    if (switchedToSelection) {\r\n                                        box = this.getBoxFromLoci(this.lastLoci) || Box3D();\r\n                                    }\r\n                                    else {\r\n                                        box = Box3D.create(Vec3.clone(params.entry.params.view.params.bottomLeft), Vec3.clone(params.entry.params.view.params.topRight));\r\n                                    }\r\n                                    r = params.entry.params.view.params.radius;\r\n                                    emptyData = Box3D.volume(box) < 0.0001;\r\n                                    Box3D.expand(box, box, Vec3.create(r, r, r));\r\n                                    break;\r\n                                }\r\n                                case 'cell':\r\n                                    box = this.info.kind === 'x-ray'\r\n                                        ? this.data.structure.boundary.box\r\n                                        : void 0;\r\n                                    break;\r\n                                case 'auto':\r\n                                    box = params.entry.params.view.params.isSelection || this.info.kind === 'x-ray'\r\n                                        ? Box3D.create(Vec3.clone(params.entry.params.view.params.bottomLeft), Vec3.clone(params.entry.params.view.params.topRight))\r\n                                        : void 0;\r\n                                    if (box) {\r\n                                        emptyData = Box3D.volume(box) < 0.0001;\r\n                                        if (params.entry.params.view.params.isSelection) {\r\n                                            r = params.entry.params.view.params.radius;\r\n                                            Box3D.expand(box, box, Vec3.create(r, r, r));\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                            }\r\n                            if (!emptyData) return [3 /*break*/, 1];\r\n                            _a = {};\r\n                            return [3 /*break*/, 3];\r\n                        case 1: return [4 /*yield*/, this.queryData(box)];\r\n                        case 2:\r\n                            _a = _b.sent();\r\n                            _b.label = 3;\r\n                        case 3:\r\n                            data = _a;\r\n                            if (!data)\r\n                                return [2 /*return*/, false];\r\n                            info = params.entry.params.channels;\r\n                            if (this.info.kind === 'x-ray') {\r\n                                this.channels['2fo-fc'] = this.createChannel(data['2FO-FC'] || Volume.One, info['2fo-fc'], this.info.header.sampling[0].valuesInfo[0]);\r\n                                this.channels['fo-fc(+ve)'] = this.createChannel(data['FO-FC'] || Volume.One, info['fo-fc(+ve)'], this.info.header.sampling[0].valuesInfo[1]);\r\n                                this.channels['fo-fc(-ve)'] = this.createChannel(data['FO-FC'] || Volume.One, info['fo-fc(-ve)'], this.info.header.sampling[0].valuesInfo[1]);\r\n                            }\r\n                            else {\r\n                                this.channels['em'] = this.createChannel(data['EM'] || Volume.One, info['em'], this.info.header.sampling[0].valuesInfo[0]);\r\n                            }\r\n                            return [2 /*return*/, true];\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        Behavior.prototype.createChannel = function (data, info, stats) {\r\n            var i = info;\r\n            return {\r\n                data: data,\r\n                color: i.color,\r\n                wireframe: i.wireframe,\r\n                opacity: i.opacity,\r\n                isoValue: i.isoValue.kind === 'relative' ? i.isoValue : Volume.IsoValue.toRelative(i.isoValue, stats)\r\n            };\r\n        };\r\n        Behavior.prototype.getDescription = function () {\r\n            if (this.params.entry.params.view.name === 'selection-box')\r\n                return 'Selection';\r\n            if (this.params.entry.params.view.name === 'box')\r\n                return 'Static Box';\r\n            if (this.params.entry.params.view.name === 'cell')\r\n                return 'Cell';\r\n            return '';\r\n        };\r\n        return Behavior;\r\n    }(PluginBehavior.WithSubscribers));\r\n    VolumeStreaming.Behavior = Behavior;\r\n})(VolumeStreaming || (VolumeStreaming = {}));\r\n//# sourceMappingURL=behavior.js.map"]},"metadata":{},"sourceType":"module"}