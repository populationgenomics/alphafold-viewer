{"ast":null,"code":"/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Loci } from '../mol-model/loci';\nimport { StructureElement } from '../mol-model/structure';\nimport { Script } from '../mol-script/script';\nimport { BitFlags } from '../mol-util/bit-flags';\nexport { Clipping };\n\nfunction Clipping(layers) {\n  return {\n    layers: layers\n  };\n}\n\n(function (Clipping) {\n  Clipping.Empty = {\n    layers: []\n  };\n  var Groups;\n\n  (function (Groups) {\n    Groups.is = BitFlags.has;\n\n    function create(flags) {\n      return BitFlags.create(flags);\n    }\n\n    Groups.create = create;\n    Groups.Names = {\n      'one': 1\n      /* One */\n      ,\n      'two': 2\n      /* Two */\n      ,\n      'three': 4\n      /* Three */\n      ,\n      'four': 8\n      /* Four */\n      ,\n      'five': 16\n      /* Five */\n      ,\n      'six': 32\n      /* Six */\n\n    };\n\n    function isName(name) {\n      return name in Groups.Names;\n    }\n\n    Groups.isName = isName;\n\n    function fromName(name) {\n      switch (name) {\n        case 'one':\n          return 1\n          /* One */\n          ;\n\n        case 'two':\n          return 2\n          /* Two */\n          ;\n\n        case 'three':\n          return 4\n          /* Three */\n          ;\n\n        case 'four':\n          return 8\n          /* Four */\n          ;\n\n        case 'five':\n          return 16\n          /* Five */\n          ;\n\n        case 'six':\n          return 32\n          /* Six */\n          ;\n      }\n    }\n\n    Groups.fromName = fromName;\n\n    function fromNames(names) {\n      var f = 0\n      /* None */\n      ;\n\n      for (var i = 0, il = names.length; i < il; ++i) {\n        f |= fromName(names[i]);\n      }\n\n      return f;\n    }\n\n    Groups.fromNames = fromNames;\n\n    function toNames(groups) {\n      var names = [];\n      if (Groups.is(groups, 1\n      /* One */\n      )) names.push('one');\n      if (Groups.is(groups, 2\n      /* Two */\n      )) names.push('two');\n      if (Groups.is(groups, 4\n      /* Three */\n      )) names.push('three');\n      if (Groups.is(groups, 8\n      /* Four */\n      )) names.push('four');\n      if (Groups.is(groups, 16\n      /* Five */\n      )) names.push('five');\n      if (Groups.is(groups, 32\n      /* Six */\n      )) names.push('six');\n      return names;\n    }\n\n    Groups.toNames = toNames;\n  })(Groups = Clipping.Groups || (Clipping.Groups = {}));\n  /** Clip object types */\n\n\n  Clipping.Type = {\n    none: 0,\n    plane: 1,\n    sphere: 2,\n    cube: 3,\n    cylinder: 4,\n    infiniteCone: 5\n  };\n\n  function areEqual(cA, cB) {\n    if (cA.layers.length === 0 && cB.layers.length === 0) return true;\n    if (cA.layers.length !== cB.layers.length) return false;\n\n    for (var i = 0, il = cA.layers.length; i < il; ++i) {\n      if (cA.layers[i].groups !== cB.layers[i].groups) return false;\n      if (!Loci.areEqual(cA.layers[i].loci, cB.layers[i].loci)) return false;\n    }\n\n    return true;\n  }\n\n  Clipping.areEqual = areEqual;\n\n  function isEmpty(clipping) {\n    return clipping.layers.length === 0;\n  }\n\n  Clipping.isEmpty = isEmpty;\n\n  function remap(clipping, structure) {\n    var layers = [];\n\n    for (var _i = 0, _a = clipping.layers; _i < _a.length; _i++) {\n      var layer = _a[_i];\n      var loci = layer.loci,\n          groups = layer.groups;\n      loci = StructureElement.Loci.remap(loci, structure);\n\n      if (!StructureElement.Loci.isEmpty(loci)) {\n        layers.push({\n          loci: loci,\n          groups: groups\n        });\n      }\n    }\n\n    return {\n      layers: layers\n    };\n  }\n\n  Clipping.remap = remap;\n\n  function merge(clipping) {\n    if (isEmpty(clipping)) return clipping;\n    var structure = clipping.layers[0].loci.structure;\n    var map = new Map();\n    var shadowed = StructureElement.Loci.none(structure);\n\n    for (var i = 0, il = clipping.layers.length; i < il; ++i) {\n      var _a = clipping.layers[il - i - 1],\n          loci = _a.loci,\n          groups = _a.groups; // process from end\n\n      loci = StructureElement.Loci.subtract(loci, shadowed);\n      shadowed = StructureElement.Loci.union(loci, shadowed);\n\n      if (!StructureElement.Loci.isEmpty(loci)) {\n        if (map.has(groups)) {\n          loci = StructureElement.Loci.union(loci, map.get(groups));\n        }\n\n        map.set(groups, loci);\n      }\n    }\n\n    var layers = [];\n    map.forEach(function (loci, groups) {\n      layers.push({\n        loci: loci,\n        groups: groups\n      });\n    });\n    return {\n      layers: layers\n    };\n  }\n\n  Clipping.merge = merge;\n\n  function filter(clipping, filter) {\n    if (isEmpty(clipping)) return clipping;\n    var structure = clipping.layers[0].loci.structure;\n    var layers = [];\n\n    for (var _i = 0, _a = clipping.layers; _i < _a.length; _i++) {\n      var layer = _a[_i];\n      var loci = layer.loci,\n          groups = layer.groups; // filter by first map to the `filter` structure and\n      // then map back to the original structure of the clipping loci\n\n      var filtered = StructureElement.Loci.remap(loci, filter);\n      loci = StructureElement.Loci.remap(filtered, structure);\n\n      if (!StructureElement.Loci.isEmpty(loci)) {\n        layers.push({\n          loci: loci,\n          groups: groups\n        });\n      }\n    }\n\n    return {\n      layers: layers\n    };\n  }\n\n  Clipping.filter = filter;\n\n  function ofScript(scriptLayers, structure) {\n    var layers = [];\n\n    for (var i = 0, il = scriptLayers.length; i < il; ++i) {\n      var _a = scriptLayers[i],\n          script = _a.script,\n          groups = _a.groups;\n      var loci = Script.toLoci(script, structure);\n\n      if (!StructureElement.Loci.isEmpty(loci)) {\n        layers.push({\n          loci: loci,\n          groups: groups\n        });\n      }\n    }\n\n    return {\n      layers: layers\n    };\n  }\n\n  Clipping.ofScript = ofScript;\n\n  function ofBundle(bundleLayers, structure) {\n    var layers = [];\n\n    for (var i = 0, il = bundleLayers.length; i < il; ++i) {\n      var _a = bundleLayers[i],\n          bundle = _a.bundle,\n          groups = _a.groups;\n      var loci = StructureElement.Bundle.toLoci(bundle, structure.root);\n      layers.push({\n        loci: loci,\n        groups: groups\n      });\n    }\n\n    return {\n      layers: layers\n    };\n  }\n\n  Clipping.ofBundle = ofBundle;\n\n  function toBundle(clipping) {\n    var layers = [];\n\n    for (var i = 0, il = clipping.layers.length; i < il; ++i) {\n      var _a = clipping.layers[i],\n          loci = _a.loci,\n          groups = _a.groups;\n      var bundle = StructureElement.Bundle.fromLoci(loci);\n      layers.push({\n        bundle: bundle,\n        groups: groups\n      });\n    }\n\n    return {\n      layers: layers\n    };\n  }\n\n  Clipping.toBundle = toBundle;\n})(Clipping || (Clipping = {}));","map":{"version":3,"sources":["../../src/mol-theme/clipping.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Loci } from '../mol-model/loci';\r\nimport { StructureElement } from '../mol-model/structure';\r\nimport { Script } from '../mol-script/script';\r\nimport { BitFlags } from '../mol-util/bit-flags';\r\nexport { Clipping };\r\nfunction Clipping(layers) {\r\n    return { layers: layers };\r\n}\r\n(function (Clipping) {\r\n    Clipping.Empty = { layers: [] };\r\n    var Groups;\r\n    (function (Groups) {\r\n        Groups.is = BitFlags.has;\r\n        function create(flags) {\r\n            return BitFlags.create(flags);\r\n        }\r\n        Groups.create = create;\r\n        Groups.Names = {\r\n            'one': 1 /* One */,\r\n            'two': 2 /* Two */,\r\n            'three': 4 /* Three */,\r\n            'four': 8 /* Four */,\r\n            'five': 16 /* Five */,\r\n            'six': 32 /* Six */,\r\n        };\r\n        function isName(name) {\r\n            return name in Groups.Names;\r\n        }\r\n        Groups.isName = isName;\r\n        function fromName(name) {\r\n            switch (name) {\r\n                case 'one': return 1 /* One */;\r\n                case 'two': return 2 /* Two */;\r\n                case 'three': return 4 /* Three */;\r\n                case 'four': return 8 /* Four */;\r\n                case 'five': return 16 /* Five */;\r\n                case 'six': return 32 /* Six */;\r\n            }\r\n        }\r\n        Groups.fromName = fromName;\r\n        function fromNames(names) {\r\n            var f = 0 /* None */;\r\n            for (var i = 0, il = names.length; i < il; ++i) {\r\n                f |= fromName(names[i]);\r\n            }\r\n            return f;\r\n        }\r\n        Groups.fromNames = fromNames;\r\n        function toNames(groups) {\r\n            var names = [];\r\n            if (Groups.is(groups, 1 /* One */))\r\n                names.push('one');\r\n            if (Groups.is(groups, 2 /* Two */))\r\n                names.push('two');\r\n            if (Groups.is(groups, 4 /* Three */))\r\n                names.push('three');\r\n            if (Groups.is(groups, 8 /* Four */))\r\n                names.push('four');\r\n            if (Groups.is(groups, 16 /* Five */))\r\n                names.push('five');\r\n            if (Groups.is(groups, 32 /* Six */))\r\n                names.push('six');\r\n            return names;\r\n        }\r\n        Groups.toNames = toNames;\r\n    })(Groups = Clipping.Groups || (Clipping.Groups = {}));\r\n    /** Clip object types */\r\n    Clipping.Type = {\r\n        none: 0,\r\n        plane: 1,\r\n        sphere: 2,\r\n        cube: 3,\r\n        cylinder: 4,\r\n        infiniteCone: 5,\r\n    };\r\n    function areEqual(cA, cB) {\r\n        if (cA.layers.length === 0 && cB.layers.length === 0)\r\n            return true;\r\n        if (cA.layers.length !== cB.layers.length)\r\n            return false;\r\n        for (var i = 0, il = cA.layers.length; i < il; ++i) {\r\n            if (cA.layers[i].groups !== cB.layers[i].groups)\r\n                return false;\r\n            if (!Loci.areEqual(cA.layers[i].loci, cB.layers[i].loci))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    Clipping.areEqual = areEqual;\r\n    function isEmpty(clipping) {\r\n        return clipping.layers.length === 0;\r\n    }\r\n    Clipping.isEmpty = isEmpty;\r\n    function remap(clipping, structure) {\r\n        var layers = [];\r\n        for (var _i = 0, _a = clipping.layers; _i < _a.length; _i++) {\r\n            var layer = _a[_i];\r\n            var loci = layer.loci, groups = layer.groups;\r\n            loci = StructureElement.Loci.remap(loci, structure);\r\n            if (!StructureElement.Loci.isEmpty(loci)) {\r\n                layers.push({ loci: loci, groups: groups });\r\n            }\r\n        }\r\n        return { layers: layers };\r\n    }\r\n    Clipping.remap = remap;\r\n    function merge(clipping) {\r\n        if (isEmpty(clipping))\r\n            return clipping;\r\n        var structure = clipping.layers[0].loci.structure;\r\n        var map = new Map();\r\n        var shadowed = StructureElement.Loci.none(structure);\r\n        for (var i = 0, il = clipping.layers.length; i < il; ++i) {\r\n            var _a = clipping.layers[il - i - 1], loci = _a.loci, groups = _a.groups; // process from end\r\n            loci = StructureElement.Loci.subtract(loci, shadowed);\r\n            shadowed = StructureElement.Loci.union(loci, shadowed);\r\n            if (!StructureElement.Loci.isEmpty(loci)) {\r\n                if (map.has(groups)) {\r\n                    loci = StructureElement.Loci.union(loci, map.get(groups));\r\n                }\r\n                map.set(groups, loci);\r\n            }\r\n        }\r\n        var layers = [];\r\n        map.forEach(function (loci, groups) {\r\n            layers.push({ loci: loci, groups: groups });\r\n        });\r\n        return { layers: layers };\r\n    }\r\n    Clipping.merge = merge;\r\n    function filter(clipping, filter) {\r\n        if (isEmpty(clipping))\r\n            return clipping;\r\n        var structure = clipping.layers[0].loci.structure;\r\n        var layers = [];\r\n        for (var _i = 0, _a = clipping.layers; _i < _a.length; _i++) {\r\n            var layer = _a[_i];\r\n            var loci = layer.loci, groups = layer.groups;\r\n            // filter by first map to the `filter` structure and\r\n            // then map back to the original structure of the clipping loci\r\n            var filtered = StructureElement.Loci.remap(loci, filter);\r\n            loci = StructureElement.Loci.remap(filtered, structure);\r\n            if (!StructureElement.Loci.isEmpty(loci)) {\r\n                layers.push({ loci: loci, groups: groups });\r\n            }\r\n        }\r\n        return { layers: layers };\r\n    }\r\n    Clipping.filter = filter;\r\n    function ofScript(scriptLayers, structure) {\r\n        var layers = [];\r\n        for (var i = 0, il = scriptLayers.length; i < il; ++i) {\r\n            var _a = scriptLayers[i], script = _a.script, groups = _a.groups;\r\n            var loci = Script.toLoci(script, structure);\r\n            if (!StructureElement.Loci.isEmpty(loci)) {\r\n                layers.push({ loci: loci, groups: groups });\r\n            }\r\n        }\r\n        return { layers: layers };\r\n    }\r\n    Clipping.ofScript = ofScript;\r\n    function ofBundle(bundleLayers, structure) {\r\n        var layers = [];\r\n        for (var i = 0, il = bundleLayers.length; i < il; ++i) {\r\n            var _a = bundleLayers[i], bundle = _a.bundle, groups = _a.groups;\r\n            var loci = StructureElement.Bundle.toLoci(bundle, structure.root);\r\n            layers.push({ loci: loci, groups: groups });\r\n        }\r\n        return { layers: layers };\r\n    }\r\n    Clipping.ofBundle = ofBundle;\r\n    function toBundle(clipping) {\r\n        var layers = [];\r\n        for (var i = 0, il = clipping.layers.length; i < il; ++i) {\r\n            var _a = clipping.layers[i], loci = _a.loci, groups = _a.groups;\r\n            var bundle = StructureElement.Bundle.fromLoci(loci);\r\n            layers.push({ bundle: bundle, groups: groups });\r\n        }\r\n        return { layers: layers };\r\n    }\r\n    Clipping.toBundle = toBundle;\r\n})(Clipping || (Clipping = {}));\r\n//# sourceMappingURL=clipping.js.map"]},"metadata":{},"sourceType":"module"}