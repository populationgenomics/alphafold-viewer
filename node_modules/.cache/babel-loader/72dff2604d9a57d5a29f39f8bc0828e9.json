{"ast":null,"code":"import { __assign, __awaiter, __extends, __generator } from \"tslib\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { PluginCommands } from '../../mol-plugin/commands';\nimport { PluginUIComponent } from '../base';\nimport { Button, ExpandGroup, ToggleButton } from '../controls/common';\nimport { CopySvg, CropFreeSvg, CropOrginalSvg, CropSvg, GetAppSvg } from '../controls/icons';\nimport { ParameterControls } from '../controls/parameters';\nimport { ScreenshotPreview } from '../controls/screenshot';\nimport { useBehavior } from '../hooks/use-behavior';\nimport { LocalStateSnapshotParams, StateExportImportControls } from '../state/snapshots';\n\nvar DownloadScreenshotControls =\n/** @class */\nfunction (_super) {\n  __extends(DownloadScreenshotControls, _super);\n\n  function DownloadScreenshotControls() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      showPreview: true,\n      isDisabled: false\n    };\n\n    _this.download = function () {\n      var _a;\n\n      (_a = _this.plugin.helpers.viewportScreenshot) === null || _a === void 0 ? void 0 : _a.download();\n\n      _this.props.close();\n    };\n\n    _this.copy = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a;\n\n        var _b;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _c.trys.push([0, 2,, 3]);\n\n              return [4\n              /*yield*/\n              , (_b = this.plugin.helpers.viewportScreenshot) === null || _b === void 0 ? void 0 : _b.copyToClipboard()];\n\n            case 1:\n              _c.sent();\n\n              PluginCommands.Toast.Show(this.plugin, {\n                message: 'Copied to clipboard.',\n                title: 'Screenshot',\n                timeoutMs: 1500\n              });\n              return [3\n              /*break*/\n              , 3];\n\n            case 2:\n              _a = _c.sent();\n              return [2\n              /*return*/\n              , this.copyImg()];\n\n            case 3:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.copyImg = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var src;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , (_a = this.plugin.helpers.viewportScreenshot) === null || _a === void 0 ? void 0 : _a.getImageDataUri()];\n\n            case 1:\n              src = _b.sent();\n              this.setState({\n                imageData: src\n              });\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.open = function (e) {\n      if (!e.target.files || !e.target.files[0]) return;\n      PluginCommands.State.Snapshots.OpenFile(_this.plugin, {\n        file: e.target.files[0]\n      });\n    };\n\n    return _this;\n  }\n\n  DownloadScreenshotControls.prototype.componentDidMount = function () {\n    var _this = this;\n\n    this.subscribe(this.plugin.state.data.behaviors.isUpdating, function (v) {\n      _this.setState({\n        isDisabled: v\n      });\n    });\n  };\n\n  DownloadScreenshotControls.prototype.componentWillUnmount = function () {\n    this.setState({\n      imageData: void 0\n    });\n  };\n\n  DownloadScreenshotControls.prototype.render = function () {\n    var _this = this;\n\n    var _a;\n\n    var hasClipboardApi = !!((_a = navigator.clipboard) === null || _a === void 0 ? void 0 : _a.write);\n    return _jsxs(\"div\", {\n      children: [this.state.showPreview && _jsxs(\"div\", __assign({\n        className: 'msp-image-preview'\n      }, {\n        children: [_jsx(ScreenshotPreview, {\n          plugin: this.plugin\n        }, void 0), _jsx(CropControls, {\n          plugin: this.plugin\n        }, void 0)]\n      }), void 0), _jsxs(\"div\", __assign({\n        className: 'msp-flex-row'\n      }, {\n        children: [!this.state.imageData && _jsx(Button, __assign({\n          icon: CopySvg,\n          onClick: hasClipboardApi ? this.copy : this.copyImg,\n          disabled: this.state.isDisabled\n        }, {\n          children: \"Copy\"\n        }), void 0), this.state.imageData && _jsx(Button, __assign({\n          onClick: function () {\n            return _this.setState({\n              imageData: void 0\n            });\n          },\n          disabled: this.state.isDisabled\n        }, {\n          children: \"Clear\"\n        }), void 0), _jsx(Button, __assign({\n          icon: GetAppSvg,\n          onClick: this.download,\n          disabled: this.state.isDisabled\n        }, {\n          children: \"Download\"\n        }), void 0)]\n      }), void 0), this.state.imageData && _jsxs(\"div\", __assign({\n        className: 'msp-row msp-copy-image-wrapper'\n      }, {\n        children: [_jsx(\"div\", {\n          children: \"Right click below + Copy Image\"\n        }, void 0), _jsx(\"img\", {\n          src: this.state.imageData,\n          style: {\n            width: '100%',\n            height: 32,\n            display: 'block'\n          }\n        }, void 0)]\n      }), void 0), _jsx(ScreenshotParams, {\n        plugin: this.plugin,\n        isDisabled: this.state.isDisabled\n      }, void 0), _jsxs(ExpandGroup, __assign({\n        header: 'State'\n      }, {\n        children: [_jsx(StateExportImportControls, {\n          onAction: this.props.close\n        }, void 0), _jsx(ExpandGroup, __assign({\n          header: 'Save Options',\n          initiallyExpanded: false,\n          noOffset: true\n        }, {\n          children: _jsx(LocalStateSnapshotParams, {}, void 0)\n        }), void 0)]\n      }), void 0)]\n    }, void 0);\n  };\n\n  return DownloadScreenshotControls;\n}(PluginUIComponent);\n\nexport { DownloadScreenshotControls };\n\nfunction ScreenshotParams(_a) {\n  var plugin = _a.plugin,\n      isDisabled = _a.isDisabled;\n  var helper = plugin.helpers.viewportScreenshot;\n  var values = useBehavior(helper.behaviors.values);\n  return _jsx(ParameterControls, {\n    params: helper.params,\n    values: values,\n    onChangeValues: function (v) {\n      return helper.behaviors.values.next(v);\n    },\n    isDisabled: isDisabled\n  }, void 0);\n}\n\nfunction CropControls(_a) {\n  var plugin = _a.plugin;\n  var helper = plugin.helpers.viewportScreenshot;\n  var cropParams = useBehavior(helper === null || helper === void 0 ? void 0 : helper.behaviors.cropParams);\n  useBehavior(helper === null || helper === void 0 ? void 0 : helper.behaviors.relativeCrop);\n  if (!helper) return null;\n  return _jsxs(\"div\", __assign({\n    style: {\n      width: '100%',\n      height: '24px',\n      marginTop: '8px'\n    }\n  }, {\n    children: [_jsx(ToggleButton, {\n      icon: CropOrginalSvg,\n      title: 'Auto-crop',\n      inline: true,\n      isSelected: cropParams.auto,\n      style: {\n        background: 'transparent',\n        float: 'left',\n        width: 'auto',\n        height: '24px',\n        lineHeight: '24px'\n      },\n      toggle: function () {\n        return helper.toggleAutocrop();\n      },\n      label: 'Auto-crop ' + (cropParams.auto ? 'On' : 'Off')\n    }, void 0), !cropParams.auto && _jsx(Button, {\n      icon: CropSvg,\n      title: 'Crop',\n      style: {\n        background: 'transparent',\n        float: 'right',\n        height: '24px',\n        lineHeight: '24px',\n        width: '24px',\n        padding: '0'\n      },\n      onClick: function () {\n        return helper.autocrop();\n      }\n    }, void 0), !cropParams.auto && !helper.isFullFrame && _jsx(Button, {\n      icon: CropFreeSvg,\n      title: 'Reset Crop',\n      style: {\n        background: 'transparent',\n        float: 'right',\n        height: '24px',\n        lineHeight: '24px',\n        width: '24px',\n        padding: '0'\n      },\n      onClick: function () {\n        return helper.resetCrop();\n      }\n    }, void 0)]\n  }), void 0);\n}","map":{"version":3,"sources":["../../../src/mol-plugin-ui/viewport/screenshot.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __awaiter, __extends, __generator } from \"tslib\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { PluginCommands } from '../../mol-plugin/commands';\r\nimport { PluginUIComponent } from '../base';\r\nimport { Button, ExpandGroup, ToggleButton } from '../controls/common';\r\nimport { CopySvg, CropFreeSvg, CropOrginalSvg, CropSvg, GetAppSvg } from '../controls/icons';\r\nimport { ParameterControls } from '../controls/parameters';\r\nimport { ScreenshotPreview } from '../controls/screenshot';\r\nimport { useBehavior } from '../hooks/use-behavior';\r\nimport { LocalStateSnapshotParams, StateExportImportControls } from '../state/snapshots';\r\nvar DownloadScreenshotControls = /** @class */ (function (_super) {\r\n    __extends(DownloadScreenshotControls, _super);\r\n    function DownloadScreenshotControls() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            showPreview: true,\r\n            isDisabled: false\r\n        };\r\n        _this.download = function () {\r\n            var _a;\r\n            (_a = _this.plugin.helpers.viewportScreenshot) === null || _a === void 0 ? void 0 : _a.download();\r\n            _this.props.close();\r\n        };\r\n        _this.copy = function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var _a;\r\n            var _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _c.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, ((_b = this.plugin.helpers.viewportScreenshot) === null || _b === void 0 ? void 0 : _b.copyToClipboard())];\r\n                    case 1:\r\n                        _c.sent();\r\n                        PluginCommands.Toast.Show(this.plugin, {\r\n                            message: 'Copied to clipboard.',\r\n                            title: 'Screenshot',\r\n                            timeoutMs: 1500\r\n                        });\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        _a = _c.sent();\r\n                        return [2 /*return*/, this.copyImg()];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); };\r\n        _this.copyImg = function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var src;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, ((_a = this.plugin.helpers.viewportScreenshot) === null || _a === void 0 ? void 0 : _a.getImageDataUri())];\r\n                    case 1:\r\n                        src = _b.sent();\r\n                        this.setState({ imageData: src });\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); };\r\n        _this.open = function (e) {\r\n            if (!e.target.files || !e.target.files[0])\r\n                return;\r\n            PluginCommands.State.Snapshots.OpenFile(_this.plugin, { file: e.target.files[0] });\r\n        };\r\n        return _this;\r\n    }\r\n    DownloadScreenshotControls.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        this.subscribe(this.plugin.state.data.behaviors.isUpdating, function (v) {\r\n            _this.setState({ isDisabled: v });\r\n        });\r\n    };\r\n    DownloadScreenshotControls.prototype.componentWillUnmount = function () {\r\n        this.setState({ imageData: void 0 });\r\n    };\r\n    DownloadScreenshotControls.prototype.render = function () {\r\n        var _this = this;\r\n        var _a;\r\n        var hasClipboardApi = !!((_a = navigator.clipboard) === null || _a === void 0 ? void 0 : _a.write);\r\n        return _jsxs(\"div\", { children: [this.state.showPreview && _jsxs(\"div\", __assign({ className: 'msp-image-preview' }, { children: [_jsx(ScreenshotPreview, { plugin: this.plugin }, void 0), _jsx(CropControls, { plugin: this.plugin }, void 0)] }), void 0), _jsxs(\"div\", __assign({ className: 'msp-flex-row' }, { children: [!this.state.imageData && _jsx(Button, __assign({ icon: CopySvg, onClick: hasClipboardApi ? this.copy : this.copyImg, disabled: this.state.isDisabled }, { children: \"Copy\" }), void 0), this.state.imageData && _jsx(Button, __assign({ onClick: function () { return _this.setState({ imageData: void 0 }); }, disabled: this.state.isDisabled }, { children: \"Clear\" }), void 0), _jsx(Button, __assign({ icon: GetAppSvg, onClick: this.download, disabled: this.state.isDisabled }, { children: \"Download\" }), void 0)] }), void 0), this.state.imageData && _jsxs(\"div\", __assign({ className: 'msp-row msp-copy-image-wrapper' }, { children: [_jsx(\"div\", { children: \"Right click below + Copy Image\" }, void 0), _jsx(\"img\", { src: this.state.imageData, style: { width: '100%', height: 32, display: 'block' } }, void 0)] }), void 0), _jsx(ScreenshotParams, { plugin: this.plugin, isDisabled: this.state.isDisabled }, void 0), _jsxs(ExpandGroup, __assign({ header: 'State' }, { children: [_jsx(StateExportImportControls, { onAction: this.props.close }, void 0), _jsx(ExpandGroup, __assign({ header: 'Save Options', initiallyExpanded: false, noOffset: true }, { children: _jsx(LocalStateSnapshotParams, {}, void 0) }), void 0)] }), void 0)] }, void 0);\r\n    };\r\n    return DownloadScreenshotControls;\r\n}(PluginUIComponent));\r\nexport { DownloadScreenshotControls };\r\nfunction ScreenshotParams(_a) {\r\n    var plugin = _a.plugin, isDisabled = _a.isDisabled;\r\n    var helper = plugin.helpers.viewportScreenshot;\r\n    var values = useBehavior(helper.behaviors.values);\r\n    return _jsx(ParameterControls, { params: helper.params, values: values, onChangeValues: function (v) { return helper.behaviors.values.next(v); }, isDisabled: isDisabled }, void 0);\r\n}\r\nfunction CropControls(_a) {\r\n    var plugin = _a.plugin;\r\n    var helper = plugin.helpers.viewportScreenshot;\r\n    var cropParams = useBehavior(helper === null || helper === void 0 ? void 0 : helper.behaviors.cropParams);\r\n    useBehavior(helper === null || helper === void 0 ? void 0 : helper.behaviors.relativeCrop);\r\n    if (!helper)\r\n        return null;\r\n    return _jsxs(\"div\", __assign({ style: { width: '100%', height: '24px', marginTop: '8px' } }, { children: [_jsx(ToggleButton, { icon: CropOrginalSvg, title: 'Auto-crop', inline: true, isSelected: cropParams.auto, style: { background: 'transparent', float: 'left', width: 'auto', height: '24px', lineHeight: '24px' }, toggle: function () { return helper.toggleAutocrop(); }, label: 'Auto-crop ' + (cropParams.auto ? 'On' : 'Off') }, void 0), !cropParams.auto && _jsx(Button, { icon: CropSvg, title: 'Crop', style: { background: 'transparent', float: 'right', height: '24px', lineHeight: '24px', width: '24px', padding: '0' }, onClick: function () { return helper.autocrop(); } }, void 0), !cropParams.auto && !helper.isFullFrame && _jsx(Button, { icon: CropFreeSvg, title: 'Reset Crop', style: { background: 'transparent', float: 'right', height: '24px', lineHeight: '24px', width: '24px', padding: '0' }, onClick: function () { return helper.resetCrop(); } }, void 0)] }), void 0);\r\n}\r\n//# sourceMappingURL=screenshot.js.map"]},"metadata":{},"sourceType":"module"}