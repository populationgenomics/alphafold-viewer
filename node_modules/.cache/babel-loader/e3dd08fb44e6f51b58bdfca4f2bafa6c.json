{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { Representation } from '../../../mol-repr/representation';\nimport { UnitsRepresentation, StructureRepresentationStateBuilder, StructureRepresentationProvider, ComplexRepresentation } from '../../../mol-repr/structure/representation';\nimport { InteractionsIntraUnitParams, InteractionsIntraUnitVisual } from './interactions-intra-unit-cylinder';\nimport { InteractionsProvider } from '../interactions';\nimport { InteractionsInterUnitParams, InteractionsInterUnitVisual } from './interactions-inter-unit-cylinder';\nimport { getUnitKindsParam } from '../../../mol-repr/structure/params';\nvar InteractionsVisuals = {\n  'intra-unit': function (ctx, getParams) {\n    return UnitsRepresentation('Intra-unit interactions cylinder', ctx, getParams, InteractionsIntraUnitVisual);\n  },\n  'inter-unit': function (ctx, getParams) {\n    return ComplexRepresentation('Inter-unit interactions cylinder', ctx, getParams, InteractionsInterUnitVisual);\n  }\n};\nexport var InteractionsParams = __assign(__assign(__assign({}, InteractionsIntraUnitParams), InteractionsInterUnitParams), {\n  unitKinds: getUnitKindsParam(['atomic']),\n  sizeFactor: PD.Numeric(0.2, {\n    min: 0.01,\n    max: 1,\n    step: 0.01\n  }),\n  visuals: PD.MultiSelect(['intra-unit', 'inter-unit'], PD.objectToOptions(InteractionsVisuals))\n});\nexport function getInteractionParams(ctx, structure) {\n  return PD.clone(InteractionsParams);\n}\nexport function InteractionRepresentation(ctx, getParams) {\n  return Representation.createMulti('Interactions', ctx, getParams, StructureRepresentationStateBuilder, InteractionsVisuals);\n}\nexport var InteractionsRepresentationProvider = StructureRepresentationProvider({\n  name: 'interactions',\n  label: 'Non-covalent Interactions',\n  description: 'Displays non-covalent interactions as dashed cylinders.',\n  factory: InteractionRepresentation,\n  getParams: getInteractionParams,\n  defaultValues: PD.getDefaultValues(InteractionsParams),\n  defaultColorTheme: {\n    name: 'interaction-type'\n  },\n  defaultSizeTheme: {\n    name: 'uniform'\n  },\n  isApplicable: function (structure) {\n    return structure.elementCount > 0 && InteractionsProvider.isApplicable(structure);\n  },\n  ensureCustomProperties: {\n    attach: function (ctx, structure) {\n      return InteractionsProvider.attach(ctx, structure, void 0, true);\n    },\n    detach: function (data) {\n      return InteractionsProvider.ref(data, false);\n    }\n  },\n  getData: function (structure, props) {\n    return props.includeParent ? structure.asParent() : structure;\n  },\n  mustRecreate: function (oldProps, newProps) {\n    return oldProps.includeParent !== newProps.includeParent;\n  }\n});","map":{"version":3,"sources":["../../../../src/mol-model-props/computed/representations/interactions.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { Representation } from '../../../mol-repr/representation';\r\nimport { UnitsRepresentation, StructureRepresentationStateBuilder, StructureRepresentationProvider, ComplexRepresentation } from '../../../mol-repr/structure/representation';\r\nimport { InteractionsIntraUnitParams, InteractionsIntraUnitVisual } from './interactions-intra-unit-cylinder';\r\nimport { InteractionsProvider } from '../interactions';\r\nimport { InteractionsInterUnitParams, InteractionsInterUnitVisual } from './interactions-inter-unit-cylinder';\r\nimport { getUnitKindsParam } from '../../../mol-repr/structure/params';\r\nvar InteractionsVisuals = {\r\n    'intra-unit': function (ctx, getParams) { return UnitsRepresentation('Intra-unit interactions cylinder', ctx, getParams, InteractionsIntraUnitVisual); },\r\n    'inter-unit': function (ctx, getParams) { return ComplexRepresentation('Inter-unit interactions cylinder', ctx, getParams, InteractionsInterUnitVisual); },\r\n};\r\nexport var InteractionsParams = __assign(__assign(__assign({}, InteractionsIntraUnitParams), InteractionsInterUnitParams), { unitKinds: getUnitKindsParam(['atomic']), sizeFactor: PD.Numeric(0.2, { min: 0.01, max: 1, step: 0.01 }), visuals: PD.MultiSelect(['intra-unit', 'inter-unit'], PD.objectToOptions(InteractionsVisuals)) });\r\nexport function getInteractionParams(ctx, structure) {\r\n    return PD.clone(InteractionsParams);\r\n}\r\nexport function InteractionRepresentation(ctx, getParams) {\r\n    return Representation.createMulti('Interactions', ctx, getParams, StructureRepresentationStateBuilder, InteractionsVisuals);\r\n}\r\nexport var InteractionsRepresentationProvider = StructureRepresentationProvider({\r\n    name: 'interactions',\r\n    label: 'Non-covalent Interactions',\r\n    description: 'Displays non-covalent interactions as dashed cylinders.',\r\n    factory: InteractionRepresentation,\r\n    getParams: getInteractionParams,\r\n    defaultValues: PD.getDefaultValues(InteractionsParams),\r\n    defaultColorTheme: { name: 'interaction-type' },\r\n    defaultSizeTheme: { name: 'uniform' },\r\n    isApplicable: function (structure) { return structure.elementCount > 0 && InteractionsProvider.isApplicable(structure); },\r\n    ensureCustomProperties: {\r\n        attach: function (ctx, structure) { return InteractionsProvider.attach(ctx, structure, void 0, true); },\r\n        detach: function (data) { return InteractionsProvider.ref(data, false); }\r\n    },\r\n    getData: function (structure, props) {\r\n        return props.includeParent ? structure.asParent() : structure;\r\n    },\r\n    mustRecreate: function (oldProps, newProps) {\r\n        return oldProps.includeParent !== newProps.includeParent;\r\n    }\r\n});\r\n//# sourceMappingURL=interactions.js.map"]},"metadata":{},"sourceType":"module"}