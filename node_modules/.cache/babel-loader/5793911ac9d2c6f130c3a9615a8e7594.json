{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { DrawPass } from './draw';\nimport { PostprocessingParams } from './postprocessing';\nimport { MultiSamplePass, MultiSampleParams, MultiSampleHelper } from './multi-sample';\nimport { Camera } from '../camera';\nimport { Viewport } from '../camera/util';\nimport { PixelData } from '../../mol-util/image';\nimport { CameraHelper, CameraHelperParams } from '../helper/camera-helper';\nimport { MarkingParams } from './marking';\nexport var ImageParams = {\n  transparentBackground: PD.Boolean(false),\n  multiSample: PD.Group(MultiSampleParams),\n  postprocessing: PD.Group(PostprocessingParams),\n  marking: PD.Group(MarkingParams),\n  cameraHelper: PD.Group(CameraHelperParams)\n};\n\nvar ImagePass =\n/** @class */\nfunction () {\n  function ImagePass(webgl, renderer, scene, camera, helper, enableWboit, props) {\n    this.webgl = webgl;\n    this.renderer = renderer;\n    this.scene = scene;\n    this.camera = camera;\n    this._width = 0;\n    this._height = 0;\n    this._camera = new Camera();\n    this.props = __assign(__assign({}, PD.getDefaultValues(ImageParams)), props);\n    this.drawPass = new DrawPass(webgl, 128, 128, enableWboit);\n    this.multiSamplePass = new MultiSamplePass(webgl, this.drawPass);\n    this.multiSampleHelper = new MultiSampleHelper(this.multiSamplePass);\n    this.helper = {\n      camera: new CameraHelper(webgl, this.props.cameraHelper),\n      debug: helper.debug,\n      handle: helper.handle\n    };\n    this.setSize(1024, 768);\n  }\n\n  Object.defineProperty(ImagePass.prototype, \"colorTarget\", {\n    get: function () {\n      return this._colorTarget;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ImagePass.prototype, \"width\", {\n    get: function () {\n      return this._width;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ImagePass.prototype, \"height\", {\n    get: function () {\n      return this._height;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ImagePass.prototype.setSize = function (width, height) {\n    if (width === this._width && height === this._height) return;\n    this._width = width;\n    this._height = height;\n    this.drawPass.setSize(width, height);\n    this.multiSamplePass.syncSize();\n  };\n\n  ImagePass.prototype.setProps = function (props) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    Object.assign(this.props, props);\n    if (props.cameraHelper) this.helper.camera.setProps(props.cameraHelper);\n  };\n\n  ImagePass.prototype.render = function () {\n    Camera.copySnapshot(this._camera.state, this.camera.state);\n    Viewport.set(this._camera.viewport, 0, 0, this._width, this._height);\n\n    this._camera.update();\n\n    if (MultiSamplePass.isEnabled(this.props.multiSample)) {\n      this.multiSampleHelper.render(this.renderer, this._camera, this.scene, this.helper, false, this.props.transparentBackground, this.props);\n      this._colorTarget = this.multiSamplePass.colorTarget;\n    } else {\n      this.drawPass.render(this.renderer, this._camera, this.scene, this.helper, false, this.props.transparentBackground, this.props.postprocessing, this.props.marking);\n      this._colorTarget = this.drawPass.getColorTarget(this.props.postprocessing);\n    }\n  };\n\n  ImagePass.prototype.getImageData = function (width, height, viewport) {\n    var _a, _b;\n\n    this.setSize(width, height);\n    this.render();\n    this.colorTarget.bind();\n    var w = (_a = viewport === null || viewport === void 0 ? void 0 : viewport.width) !== null && _a !== void 0 ? _a : width,\n        h = (_b = viewport === null || viewport === void 0 ? void 0 : viewport.height) !== null && _b !== void 0 ? _b : height;\n    var array = new Uint8Array(w * h * 4);\n\n    if (!viewport) {\n      this.webgl.readPixels(0, 0, w, h, array);\n    } else {\n      this.webgl.readPixels(viewport.x, height - viewport.y - viewport.height, w, h, array);\n    }\n\n    var pixelData = PixelData.create(array, w, h);\n    PixelData.flipY(pixelData);\n    PixelData.divideByAlpha(pixelData);\n    return new ImageData(new Uint8ClampedArray(array), w, h);\n  };\n\n  return ImagePass;\n}();\n\nexport { ImagePass };","map":{"version":3,"sources":["../../../src/mol-canvas3d/passes/image.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { DrawPass } from './draw';\r\nimport { PostprocessingParams } from './postprocessing';\r\nimport { MultiSamplePass, MultiSampleParams, MultiSampleHelper } from './multi-sample';\r\nimport { Camera } from '../camera';\r\nimport { Viewport } from '../camera/util';\r\nimport { PixelData } from '../../mol-util/image';\r\nimport { CameraHelper, CameraHelperParams } from '../helper/camera-helper';\r\nimport { MarkingParams } from './marking';\r\nexport var ImageParams = {\r\n    transparentBackground: PD.Boolean(false),\r\n    multiSample: PD.Group(MultiSampleParams),\r\n    postprocessing: PD.Group(PostprocessingParams),\r\n    marking: PD.Group(MarkingParams),\r\n    cameraHelper: PD.Group(CameraHelperParams),\r\n};\r\nvar ImagePass = /** @class */ (function () {\r\n    function ImagePass(webgl, renderer, scene, camera, helper, enableWboit, props) {\r\n        this.webgl = webgl;\r\n        this.renderer = renderer;\r\n        this.scene = scene;\r\n        this.camera = camera;\r\n        this._width = 0;\r\n        this._height = 0;\r\n        this._camera = new Camera();\r\n        this.props = __assign(__assign({}, PD.getDefaultValues(ImageParams)), props);\r\n        this.drawPass = new DrawPass(webgl, 128, 128, enableWboit);\r\n        this.multiSamplePass = new MultiSamplePass(webgl, this.drawPass);\r\n        this.multiSampleHelper = new MultiSampleHelper(this.multiSamplePass);\r\n        this.helper = {\r\n            camera: new CameraHelper(webgl, this.props.cameraHelper),\r\n            debug: helper.debug,\r\n            handle: helper.handle,\r\n        };\r\n        this.setSize(1024, 768);\r\n    }\r\n    Object.defineProperty(ImagePass.prototype, \"colorTarget\", {\r\n        get: function () { return this._colorTarget; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ImagePass.prototype, \"width\", {\r\n        get: function () { return this._width; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ImagePass.prototype, \"height\", {\r\n        get: function () { return this._height; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ImagePass.prototype.setSize = function (width, height) {\r\n        if (width === this._width && height === this._height)\r\n            return;\r\n        this._width = width;\r\n        this._height = height;\r\n        this.drawPass.setSize(width, height);\r\n        this.multiSamplePass.syncSize();\r\n    };\r\n    ImagePass.prototype.setProps = function (props) {\r\n        if (props === void 0) { props = {}; }\r\n        Object.assign(this.props, props);\r\n        if (props.cameraHelper)\r\n            this.helper.camera.setProps(props.cameraHelper);\r\n    };\r\n    ImagePass.prototype.render = function () {\r\n        Camera.copySnapshot(this._camera.state, this.camera.state);\r\n        Viewport.set(this._camera.viewport, 0, 0, this._width, this._height);\r\n        this._camera.update();\r\n        if (MultiSamplePass.isEnabled(this.props.multiSample)) {\r\n            this.multiSampleHelper.render(this.renderer, this._camera, this.scene, this.helper, false, this.props.transparentBackground, this.props);\r\n            this._colorTarget = this.multiSamplePass.colorTarget;\r\n        }\r\n        else {\r\n            this.drawPass.render(this.renderer, this._camera, this.scene, this.helper, false, this.props.transparentBackground, this.props.postprocessing, this.props.marking);\r\n            this._colorTarget = this.drawPass.getColorTarget(this.props.postprocessing);\r\n        }\r\n    };\r\n    ImagePass.prototype.getImageData = function (width, height, viewport) {\r\n        var _a, _b;\r\n        this.setSize(width, height);\r\n        this.render();\r\n        this.colorTarget.bind();\r\n        var w = (_a = viewport === null || viewport === void 0 ? void 0 : viewport.width) !== null && _a !== void 0 ? _a : width, h = (_b = viewport === null || viewport === void 0 ? void 0 : viewport.height) !== null && _b !== void 0 ? _b : height;\r\n        var array = new Uint8Array(w * h * 4);\r\n        if (!viewport) {\r\n            this.webgl.readPixels(0, 0, w, h, array);\r\n        }\r\n        else {\r\n            this.webgl.readPixels(viewport.x, height - viewport.y - viewport.height, w, h, array);\r\n        }\r\n        var pixelData = PixelData.create(array, w, h);\r\n        PixelData.flipY(pixelData);\r\n        PixelData.divideByAlpha(pixelData);\r\n        return new ImageData(new Uint8ClampedArray(array), w, h);\r\n    };\r\n    return ImagePass;\r\n}());\r\nexport { ImagePass };\r\n//# sourceMappingURL=image.js.map"]},"metadata":{},"sourceType":"module"}