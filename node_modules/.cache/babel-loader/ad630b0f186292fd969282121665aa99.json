{"ast":null,"code":"/**\r\n * Copyright (c) 2017 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nvar Predicates;\n\n(function (Predicates) {\n  function isSetLike(x) {\n    return !!x && !!x.has;\n  }\n\n  function eq(p, value) {\n    return function (l) {\n      return p(l) === value;\n    };\n  }\n\n  Predicates.eq = eq;\n\n  function lt(p, value) {\n    return function (l) {\n      return p(l) < value;\n    };\n  }\n\n  Predicates.lt = lt;\n\n  function lte(p, value) {\n    return function (l) {\n      return p(l) <= value;\n    };\n  }\n\n  Predicates.lte = lte;\n\n  function gt(p, value) {\n    return function (l) {\n      return p(l) > value;\n    };\n  }\n\n  Predicates.gt = gt;\n\n  function gte(p, value) {\n    return function (l) {\n      return p(l) >= value;\n    };\n  }\n\n  Predicates.gte = gte;\n\n  function _true(ctx) {\n    return true;\n  }\n\n  function _false(ctx) {\n    return false;\n  }\n\n  function inSet(p, values) {\n    if (isSetLike(values)) {\n      return function (l) {\n        return values.has(p(l));\n      };\n    } else {\n      if (values.length === 0) return _false;\n      var set_1 = new Set();\n\n      for (var i = 0; i < values.length; i++) set_1.add(values[i]);\n\n      return function (l) {\n        return set_1.has(p(l));\n      };\n    }\n  }\n\n  Predicates.inSet = inSet;\n\n  function and() {\n    var ps = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      ps[_i] = arguments[_i];\n    }\n\n    switch (ps.length) {\n      case 0:\n        return _true;\n\n      case 1:\n        return ps[0];\n\n      case 2:\n        {\n          var a_1 = ps[0],\n              b_1 = ps[1];\n          return function (l) {\n            return a_1(l) && b_1(l);\n          };\n        }\n\n      case 3:\n        {\n          var a_2 = ps[0],\n              b_2 = ps[1],\n              c_1 = ps[2];\n          return function (l) {\n            return a_2(l) && b_2(l) && c_1(l);\n          };\n        }\n\n      case 4:\n        {\n          var a_3 = ps[0],\n              b_3 = ps[1],\n              c_2 = ps[2],\n              d_1 = ps[3];\n          return function (l) {\n            return a_3(l) && b_3(l) && c_2(l) && d_1(l);\n          };\n        }\n\n      case 5:\n        {\n          var a_4 = ps[0],\n              b_4 = ps[1],\n              c_3 = ps[2],\n              d_2 = ps[3],\n              e_1 = ps[4];\n          return function (l) {\n            return a_4(l) && b_4(l) && c_3(l) && d_2(l) && e_1(l);\n          };\n        }\n\n      case 6:\n        {\n          var a_5 = ps[0],\n              b_5 = ps[1],\n              c_4 = ps[2],\n              d_3 = ps[3],\n              e_2 = ps[4],\n              f_1 = ps[5];\n          return function (l) {\n            return a_5(l) && b_5(l) && c_4(l) && d_3(l) && e_2(l) && f_1(l);\n          };\n        }\n\n      default:\n        {\n          var count_1 = ps.length;\n          return function (l) {\n            for (var i = 0; i < count_1; i++) if (!ps[i]) return false;\n\n            return true;\n          };\n        }\n    }\n  }\n\n  Predicates.and = and;\n\n  function or() {\n    var ps = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      ps[_i] = arguments[_i];\n    }\n\n    switch (ps.length) {\n      case 0:\n        return _false;\n\n      case 1:\n        return ps[0];\n\n      case 2:\n        {\n          var a_6 = ps[0],\n              b_6 = ps[1];\n          return function (l) {\n            return a_6(l) || b_6(l);\n          };\n        }\n\n      case 3:\n        {\n          var a_7 = ps[0],\n              b_7 = ps[1],\n              c_5 = ps[2];\n          return function (l) {\n            return a_7(l) || b_7(l) || c_5(l);\n          };\n        }\n\n      case 4:\n        {\n          var a_8 = ps[0],\n              b_8 = ps[1],\n              c_6 = ps[2],\n              d_4 = ps[3];\n          return function (l) {\n            return a_8(l) || b_8(l) || c_6(l) || d_4(l);\n          };\n        }\n\n      case 5:\n        {\n          var a_9 = ps[0],\n              b_9 = ps[1],\n              c_7 = ps[2],\n              d_5 = ps[3],\n              e_3 = ps[4];\n          return function (l) {\n            return a_9(l) || b_9(l) || c_7(l) || d_5(l) || e_3(l);\n          };\n        }\n\n      case 6:\n        {\n          var a_10 = ps[0],\n              b_10 = ps[1],\n              c_8 = ps[2],\n              d_6 = ps[3],\n              e_4 = ps[4],\n              f_2 = ps[5];\n          return function (l) {\n            return a_10(l) || b_10(l) || c_8(l) || d_6(l) || e_4(l) || f_2(l);\n          };\n        }\n\n      default:\n        {\n          var count_2 = ps.length;\n          return function (l) {\n            for (var i = 0; i < count_2; i++) if (ps[i]) return true;\n\n            return false;\n          };\n        }\n    }\n  }\n\n  Predicates.or = or;\n})(Predicates || (Predicates = {}));\n\nexport { Predicates };","map":{"version":3,"sources":["../../../../src/mol-model/structure/query/predicates.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2017 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nvar Predicates;\r\n(function (Predicates) {\r\n    function isSetLike(x) { return !!x && !!x.has; }\r\n    function eq(p, value) { return function (l) { return p(l) === value; }; }\r\n    Predicates.eq = eq;\r\n    function lt(p, value) { return function (l) { return p(l) < value; }; }\r\n    Predicates.lt = lt;\r\n    function lte(p, value) { return function (l) { return p(l) <= value; }; }\r\n    Predicates.lte = lte;\r\n    function gt(p, value) { return function (l) { return p(l) > value; }; }\r\n    Predicates.gt = gt;\r\n    function gte(p, value) { return function (l) { return p(l) >= value; }; }\r\n    Predicates.gte = gte;\r\n    function _true(ctx) { return true; }\r\n    function _false(ctx) { return false; }\r\n    function inSet(p, values) {\r\n        if (isSetLike(values)) {\r\n            return function (l) { return values.has(p(l)); };\r\n        }\r\n        else {\r\n            if (values.length === 0)\r\n                return _false;\r\n            var set_1 = new Set();\r\n            for (var i = 0; i < values.length; i++)\r\n                set_1.add(values[i]);\r\n            return function (l) { return set_1.has(p(l)); };\r\n        }\r\n    }\r\n    Predicates.inSet = inSet;\r\n    function and() {\r\n        var ps = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            ps[_i] = arguments[_i];\r\n        }\r\n        switch (ps.length) {\r\n            case 0: return _true;\r\n            case 1: return ps[0];\r\n            case 2: {\r\n                var a_1 = ps[0], b_1 = ps[1];\r\n                return function (l) { return a_1(l) && b_1(l); };\r\n            }\r\n            case 3: {\r\n                var a_2 = ps[0], b_2 = ps[1], c_1 = ps[2];\r\n                return function (l) { return a_2(l) && b_2(l) && c_1(l); };\r\n            }\r\n            case 4: {\r\n                var a_3 = ps[0], b_3 = ps[1], c_2 = ps[2], d_1 = ps[3];\r\n                return function (l) { return a_3(l) && b_3(l) && c_2(l) && d_1(l); };\r\n            }\r\n            case 5: {\r\n                var a_4 = ps[0], b_4 = ps[1], c_3 = ps[2], d_2 = ps[3], e_1 = ps[4];\r\n                return function (l) { return a_4(l) && b_4(l) && c_3(l) && d_2(l) && e_1(l); };\r\n            }\r\n            case 6: {\r\n                var a_5 = ps[0], b_5 = ps[1], c_4 = ps[2], d_3 = ps[3], e_2 = ps[4], f_1 = ps[5];\r\n                return function (l) { return a_5(l) && b_5(l) && c_4(l) && d_3(l) && e_2(l) && f_1(l); };\r\n            }\r\n            default: {\r\n                var count_1 = ps.length;\r\n                return function (l) {\r\n                    for (var i = 0; i < count_1; i++)\r\n                        if (!ps[i])\r\n                            return false;\r\n                    return true;\r\n                };\r\n            }\r\n        }\r\n    }\r\n    Predicates.and = and;\r\n    function or() {\r\n        var ps = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            ps[_i] = arguments[_i];\r\n        }\r\n        switch (ps.length) {\r\n            case 0: return _false;\r\n            case 1: return ps[0];\r\n            case 2: {\r\n                var a_6 = ps[0], b_6 = ps[1];\r\n                return function (l) { return a_6(l) || b_6(l); };\r\n            }\r\n            case 3: {\r\n                var a_7 = ps[0], b_7 = ps[1], c_5 = ps[2];\r\n                return function (l) { return a_7(l) || b_7(l) || c_5(l); };\r\n            }\r\n            case 4: {\r\n                var a_8 = ps[0], b_8 = ps[1], c_6 = ps[2], d_4 = ps[3];\r\n                return function (l) { return a_8(l) || b_8(l) || c_6(l) || d_4(l); };\r\n            }\r\n            case 5: {\r\n                var a_9 = ps[0], b_9 = ps[1], c_7 = ps[2], d_5 = ps[3], e_3 = ps[4];\r\n                return function (l) { return a_9(l) || b_9(l) || c_7(l) || d_5(l) || e_3(l); };\r\n            }\r\n            case 6: {\r\n                var a_10 = ps[0], b_10 = ps[1], c_8 = ps[2], d_6 = ps[3], e_4 = ps[4], f_2 = ps[5];\r\n                return function (l) { return a_10(l) || b_10(l) || c_8(l) || d_6(l) || e_4(l) || f_2(l); };\r\n            }\r\n            default: {\r\n                var count_2 = ps.length;\r\n                return function (l) {\r\n                    for (var i = 0; i < count_2; i++)\r\n                        if (ps[i])\r\n                            return true;\r\n                    return false;\r\n                };\r\n            }\r\n        }\r\n    }\r\n    Predicates.or = or;\r\n})(Predicates || (Predicates = {}));\r\nexport { Predicates };\r\n//# sourceMappingURL=predicates.js.map"]},"metadata":{},"sourceType":"module"}