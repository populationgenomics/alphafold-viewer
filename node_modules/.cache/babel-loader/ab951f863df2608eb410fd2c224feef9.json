{"ast":null,"code":"/*\r\n * Copyright (c) 2018 Mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { Expression } from './expression';\nexport function Argument(type, params) {\n  var _a = params || {},\n      _b = _a.description,\n      description = _b === void 0 ? void 0 : _b,\n      _c = _a.isOptional,\n      isOptional = _c === void 0 ? false : _c,\n      _d = _a.isRest,\n      isRest = _d === void 0 ? false : _d,\n      _e = _a.defaultValue,\n      defaultValue = _e === void 0 ? void 0 : _e;\n\n  return {\n    type: type,\n    isOptional: isOptional,\n    isRest: isRest,\n    defaultValue: defaultValue,\n    description: description\n  };\n}\nexport var Arguments;\n\n(function (Arguments) {\n  Arguments.None = Dictionary({});\n\n  function Dictionary(map) {\n    return {\n      kind: 'dictionary',\n      map: map,\n      '@type': 0\n    };\n  }\n\n  Arguments.Dictionary = Dictionary;\n\n  function List(type, params) {\n    var _a = (params || {}).nonEmpty,\n        nonEmpty = _a === void 0 ? false : _a;\n    return {\n      kind: 'list',\n      type: type,\n      nonEmpty: nonEmpty,\n      '@type': 0\n    };\n  }\n\n  Arguments.List = List;\n})(Arguments || (Arguments = {}));\n\nexport function MSymbol(name, args, type, description) {\n  var symbol = function (args) {\n    return Expression.Apply(Expression.Symbol(symbol.id), args);\n  };\n\n  symbol.info = {\n    namespace: '',\n    name: name,\n    description: description\n  };\n  symbol.id = '';\n  symbol.args = args;\n  symbol.type = type;\n  return symbol;\n}\nexport function CustomPropSymbol(namespace, name, type, description) {\n  var symbol = function (args) {\n    return Expression.Apply(Expression.Symbol(symbol.id), args);\n  };\n\n  symbol.info = {\n    namespace: namespace,\n    name: name,\n    description: description\n  };\n  symbol.id = namespace + \".\" + name;\n  symbol.args = Arguments.None;\n  symbol.type = type;\n  return symbol;\n}\nexport function isSymbol(x) {\n  var s = x;\n  return typeof s === 'function' && !!s.info && !!s.args && typeof s.info.namespace === 'string' && !!s.type;\n}","map":{"version":3,"sources":["../../../src/mol-script/language/symbol.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\n * Copyright (c) 2018 Mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { Expression } from './expression';\r\nexport function Argument(type, params) {\r\n    var _a = params || {}, _b = _a.description, description = _b === void 0 ? void 0 : _b, _c = _a.isOptional, isOptional = _c === void 0 ? false : _c, _d = _a.isRest, isRest = _d === void 0 ? false : _d, _e = _a.defaultValue, defaultValue = _e === void 0 ? void 0 : _e;\r\n    return { type: type, isOptional: isOptional, isRest: isRest, defaultValue: defaultValue, description: description };\r\n}\r\nexport var Arguments;\r\n(function (Arguments) {\r\n    Arguments.None = Dictionary({});\r\n    function Dictionary(map) {\r\n        return { kind: 'dictionary', map: map, '@type': 0 };\r\n    }\r\n    Arguments.Dictionary = Dictionary;\r\n    function List(type, params) {\r\n        var _a = (params || {}).nonEmpty, nonEmpty = _a === void 0 ? false : _a;\r\n        return { kind: 'list', type: type, nonEmpty: nonEmpty, '@type': 0 };\r\n    }\r\n    Arguments.List = List;\r\n})(Arguments || (Arguments = {}));\r\nexport function MSymbol(name, args, type, description) {\r\n    var symbol = function (args) {\r\n        return Expression.Apply(Expression.Symbol(symbol.id), args);\r\n    };\r\n    symbol.info = { namespace: '', name: name, description: description };\r\n    symbol.id = '';\r\n    symbol.args = args;\r\n    symbol.type = type;\r\n    return symbol;\r\n}\r\nexport function CustomPropSymbol(namespace, name, type, description) {\r\n    var symbol = function (args) {\r\n        return Expression.Apply(Expression.Symbol(symbol.id), args);\r\n    };\r\n    symbol.info = { namespace: namespace, name: name, description: description };\r\n    symbol.id = namespace + \".\" + name;\r\n    symbol.args = Arguments.None;\r\n    symbol.type = type;\r\n    return symbol;\r\n}\r\nexport function isSymbol(x) {\r\n    var s = x;\r\n    return typeof s === 'function' && !!s.info && !!s.args && typeof s.info.namespace === 'string' && !!s.type;\r\n}\r\n//# sourceMappingURL=symbol.js.map"]},"metadata":{},"sourceType":"module"}