{"ast":null,"code":"export var depthMerge_frag = \"\\nprecision highp float;\\nprecision highp sampler2D;\\n\\nuniform sampler2D tDepthPrimitives;\\nuniform sampler2D tDepthVolumes;\\nuniform vec2 uTexSize;\\n\\n#include common\\n\\nfloat getDepth(const in vec2 coords, sampler2D tDepth) {\\n    #ifdef dPackedDepth\\n        return unpackRGBAToDepth(texture2D(tDepth, coords));\\n    #else\\n        return texture2D(tDepth, coords).r;\\n    #endif\\n}\\n\\nvoid main() {\\n    vec2 coords = gl_FragCoord.xy / uTexSize;\\n    float depth = min(getDepth(coords, tDepthPrimitives), getDepth(coords, tDepthVolumes));\\n    gl_FragColor = packDepthToRGBA(depth);\\n}\\n\";","map":{"version":3,"sources":["../../../src/mol-gl/shader/depth-merge.frag.ts"],"names":[],"mappings":"AAAA,OAAO,IAAM,eAAe,GAAG,klBAAxB","sourceRoot":"","sourcesContent":["export var depthMerge_frag = \"\\nprecision highp float;\\nprecision highp sampler2D;\\n\\nuniform sampler2D tDepthPrimitives;\\nuniform sampler2D tDepthVolumes;\\nuniform vec2 uTexSize;\\n\\n#include common\\n\\nfloat getDepth(const in vec2 coords, sampler2D tDepth) {\\n    #ifdef dPackedDepth\\n        return unpackRGBAToDepth(texture2D(tDepth, coords));\\n    #else\\n        return texture2D(tDepth, coords).r;\\n    #endif\\n}\\n\\nvoid main() {\\n    vec2 coords = gl_FragCoord.xy / uTexSize;\\n    float depth = min(getDepth(coords, tDepthPrimitives), getDepth(coords, tDepthVolumes));\\n    gl_FragColor = packDepthToRGBA(depth);\\n}\\n\";\r\n//# sourceMappingURL=depth-merge.frag.js.map"]},"metadata":{},"sourceType":"module"}