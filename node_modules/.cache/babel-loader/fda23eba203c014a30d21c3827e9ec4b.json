{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __extends } from \"tslib\";\nimport { PluginBehavior } from '../../../behavior';\nimport { ParamDefinition as PD } from '../../../../../mol-util/param-definition';\nimport { InteractionsProvider } from '../../../../../mol-model-props/computed/interactions';\nimport { StateSelection } from '../../../../../mol-state';\nimport { PluginStateObject } from '../../../../../mol-plugin-state/objects';\nimport { StructureElement } from '../../../../../mol-model/structure/structure/element';\nimport { OrderedSet } from '../../../../../mol-data/int';\nimport { featureGroupLabel, featureTypeLabel } from '../../../../../mol-model-props/computed/interactions/common';\nimport { arraySetAdd } from '../../../../../mol-util/array';\nimport { InteractionTypeColorThemeProvider } from '../../../../../mol-model-props/computed/themes/interaction-type';\nimport { InteractionsRepresentationProvider } from '../../../../../mol-model-props/computed/representations/interactions';\nexport var Interactions = PluginBehavior.create({\n  name: 'computed-interactions-prop',\n  category: 'custom-props',\n  display: {\n    name: 'Interactions'\n  },\n  ctor:\n  /** @class */\n  function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n\n      _this.provider = InteractionsProvider;\n      _this.labelProvider = {\n        label: function (loci) {\n          if (!_this.params.showTooltip) return void 0;\n\n          switch (loci.kind) {\n            case 'element-loci':\n              if (loci.elements.length === 0) return void 0;\n              var labels = [];\n\n              var structures = _this.getStructures(loci.structure);\n\n              for (var _i = 0, structures_1 = structures; _i < structures_1.length; _i++) {\n                var s = structures_1[_i];\n\n                var interactions = _this.provider.get(s).value;\n\n                if (!interactions) continue;\n                var l = StructureElement.Loci.remap(loci, s);\n                if (l.elements.length !== 1) continue;\n                var e = l.elements[0];\n                if (OrderedSet.size(e.indices) !== 1) continue;\n                var features = interactions.unitsFeatures.get(e.unit.id);\n                if (!features) continue;\n                var typeLabels = [];\n                var groupLabels = [];\n                var label = [];\n                var idx = OrderedSet.start(e.indices);\n                var types = features.types,\n                    groups = features.groups,\n                    _a = features.elementsIndex,\n                    indices = _a.indices,\n                    offsets = _a.offsets;\n\n                for (var i = offsets[idx], il = offsets[idx + 1]; i < il; ++i) {\n                  var f = indices[i];\n                  var type = types[f];\n                  var group = groups[f];\n                  if (type) typeLabels.push(featureTypeLabel(type));\n                  if (group) groupLabels.push(featureGroupLabel(group));\n                }\n\n                if (typeLabels.length) label.push(\"<small>Types</small> \" + typeLabels.join(', '));\n                if (groupLabels.length) label.push(\"<small>Groups</small> \" + groupLabels.join(', '));\n                if (label.length) labels.push(\"Interaction Feature: \" + label.join(' | '));\n              }\n\n              return labels.length ? labels.join('<br/>') : undefined;\n\n            default:\n              return void 0;\n          }\n        }\n      };\n      return _this;\n    }\n\n    class_1.prototype.getStructures = function (structure) {\n      var structures = [];\n      var root = this.ctx.helpers.substructureParent.get(structure);\n\n      if (root) {\n        var state = this.ctx.state.data;\n        var selections = state.select(StateSelection.Generators.ofType(PluginStateObject.Molecule.Structure, root.transform.ref));\n\n        for (var _i = 0, selections_1 = selections; _i < selections_1.length; _i++) {\n          var s = selections_1[_i];\n          if (s.obj) arraySetAdd(structures, s.obj.data);\n        }\n      }\n\n      return structures;\n    };\n\n    class_1.prototype.update = function (p) {\n      var updated = this.params.autoAttach !== p.autoAttach || this.params.showTooltip !== p.showTooltip;\n      this.params.autoAttach = p.autoAttach;\n      this.params.showTooltip = p.showTooltip;\n      this.ctx.customStructureProperties.setDefaultAutoAttach(this.provider.descriptor.name, this.params.autoAttach);\n      return updated;\n    };\n\n    class_1.prototype.register = function () {\n      this.ctx.customStructureProperties.register(this.provider, this.params.autoAttach);\n      this.ctx.representation.structure.themes.colorThemeRegistry.add(InteractionTypeColorThemeProvider);\n      this.ctx.managers.lociLabels.addProvider(this.labelProvider);\n      this.ctx.representation.structure.registry.add(InteractionsRepresentationProvider);\n    };\n\n    class_1.prototype.unregister = function () {\n      this.ctx.customStructureProperties.unregister(this.provider.descriptor.name);\n      this.ctx.representation.structure.themes.colorThemeRegistry.remove(InteractionTypeColorThemeProvider);\n      this.ctx.managers.lociLabels.removeProvider(this.labelProvider);\n      this.ctx.representation.structure.registry.remove(InteractionsRepresentationProvider);\n    };\n\n    return class_1;\n  }(PluginBehavior.Handler),\n  params: function () {\n    return {\n      autoAttach: PD.Boolean(false),\n      showTooltip: PD.Boolean(true)\n    };\n  }\n});","map":{"version":3,"sources":["../../../../../../src/mol-plugin/behavior/dynamic/custom-props/computed/interactions.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { PluginBehavior } from '../../../behavior';\r\nimport { ParamDefinition as PD } from '../../../../../mol-util/param-definition';\r\nimport { InteractionsProvider } from '../../../../../mol-model-props/computed/interactions';\r\nimport { StateSelection } from '../../../../../mol-state';\r\nimport { PluginStateObject } from '../../../../../mol-plugin-state/objects';\r\nimport { StructureElement } from '../../../../../mol-model/structure/structure/element';\r\nimport { OrderedSet } from '../../../../../mol-data/int';\r\nimport { featureGroupLabel, featureTypeLabel } from '../../../../../mol-model-props/computed/interactions/common';\r\nimport { arraySetAdd } from '../../../../../mol-util/array';\r\nimport { InteractionTypeColorThemeProvider } from '../../../../../mol-model-props/computed/themes/interaction-type';\r\nimport { InteractionsRepresentationProvider } from '../../../../../mol-model-props/computed/representations/interactions';\r\nexport var Interactions = PluginBehavior.create({\r\n    name: 'computed-interactions-prop',\r\n    category: 'custom-props',\r\n    display: { name: 'Interactions' },\r\n    ctor: /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.provider = InteractionsProvider;\r\n            _this.labelProvider = {\r\n                label: function (loci) {\r\n                    if (!_this.params.showTooltip)\r\n                        return void 0;\r\n                    switch (loci.kind) {\r\n                        case 'element-loci':\r\n                            if (loci.elements.length === 0)\r\n                                return void 0;\r\n                            var labels = [];\r\n                            var structures = _this.getStructures(loci.structure);\r\n                            for (var _i = 0, structures_1 = structures; _i < structures_1.length; _i++) {\r\n                                var s = structures_1[_i];\r\n                                var interactions = _this.provider.get(s).value;\r\n                                if (!interactions)\r\n                                    continue;\r\n                                var l = StructureElement.Loci.remap(loci, s);\r\n                                if (l.elements.length !== 1)\r\n                                    continue;\r\n                                var e = l.elements[0];\r\n                                if (OrderedSet.size(e.indices) !== 1)\r\n                                    continue;\r\n                                var features = interactions.unitsFeatures.get(e.unit.id);\r\n                                if (!features)\r\n                                    continue;\r\n                                var typeLabels = [];\r\n                                var groupLabels = [];\r\n                                var label = [];\r\n                                var idx = OrderedSet.start(e.indices);\r\n                                var types = features.types, groups = features.groups, _a = features.elementsIndex, indices = _a.indices, offsets = _a.offsets;\r\n                                for (var i = offsets[idx], il = offsets[idx + 1]; i < il; ++i) {\r\n                                    var f = indices[i];\r\n                                    var type = types[f];\r\n                                    var group = groups[f];\r\n                                    if (type)\r\n                                        typeLabels.push(featureTypeLabel(type));\r\n                                    if (group)\r\n                                        groupLabels.push(featureGroupLabel(group));\r\n                                }\r\n                                if (typeLabels.length)\r\n                                    label.push(\"<small>Types</small> \" + typeLabels.join(', '));\r\n                                if (groupLabels.length)\r\n                                    label.push(\"<small>Groups</small> \" + groupLabels.join(', '));\r\n                                if (label.length)\r\n                                    labels.push(\"Interaction Feature: \" + label.join(' | '));\r\n                            }\r\n                            return labels.length ? labels.join('<br/>') : undefined;\r\n                        default: return void 0;\r\n                    }\r\n                }\r\n            };\r\n            return _this;\r\n        }\r\n        class_1.prototype.getStructures = function (structure) {\r\n            var structures = [];\r\n            var root = this.ctx.helpers.substructureParent.get(structure);\r\n            if (root) {\r\n                var state = this.ctx.state.data;\r\n                var selections = state.select(StateSelection.Generators.ofType(PluginStateObject.Molecule.Structure, root.transform.ref));\r\n                for (var _i = 0, selections_1 = selections; _i < selections_1.length; _i++) {\r\n                    var s = selections_1[_i];\r\n                    if (s.obj)\r\n                        arraySetAdd(structures, s.obj.data);\r\n                }\r\n            }\r\n            return structures;\r\n        };\r\n        class_1.prototype.update = function (p) {\r\n            var updated = (this.params.autoAttach !== p.autoAttach ||\r\n                this.params.showTooltip !== p.showTooltip);\r\n            this.params.autoAttach = p.autoAttach;\r\n            this.params.showTooltip = p.showTooltip;\r\n            this.ctx.customStructureProperties.setDefaultAutoAttach(this.provider.descriptor.name, this.params.autoAttach);\r\n            return updated;\r\n        };\r\n        class_1.prototype.register = function () {\r\n            this.ctx.customStructureProperties.register(this.provider, this.params.autoAttach);\r\n            this.ctx.representation.structure.themes.colorThemeRegistry.add(InteractionTypeColorThemeProvider);\r\n            this.ctx.managers.lociLabels.addProvider(this.labelProvider);\r\n            this.ctx.representation.structure.registry.add(InteractionsRepresentationProvider);\r\n        };\r\n        class_1.prototype.unregister = function () {\r\n            this.ctx.customStructureProperties.unregister(this.provider.descriptor.name);\r\n            this.ctx.representation.structure.themes.colorThemeRegistry.remove(InteractionTypeColorThemeProvider);\r\n            this.ctx.managers.lociLabels.removeProvider(this.labelProvider);\r\n            this.ctx.representation.structure.registry.remove(InteractionsRepresentationProvider);\r\n        };\r\n        return class_1;\r\n    }(PluginBehavior.Handler)),\r\n    params: function () { return ({\r\n        autoAttach: PD.Boolean(false),\r\n        showTooltip: PD.Boolean(true)\r\n    }); }\r\n});\r\n//# sourceMappingURL=interactions.js.map"]},"metadata":{},"sourceType":"module"}