{"ast":null,"code":"/**\r\n * Copyright (c) 2018 Mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { MolScriptSymbolTable as SymbolTable } from './symbol-table';\nexport var MolScriptBuilder;\n\n(function (MolScriptBuilder) {\n  MolScriptBuilder.core = SymbolTable.core;\n  MolScriptBuilder.struct = SymbolTable.structureQuery;\n  MolScriptBuilder.internal = SymbolTable.internal;\n  /** Atom-name constructor */\n\n  function atomName(s) {\n    return MolScriptBuilder.struct.type.atomName([s]);\n  }\n\n  MolScriptBuilder.atomName = atomName;\n  /** Element-symbol constructor */\n\n  function es(s) {\n    return MolScriptBuilder.struct.type.elementSymbol([s]);\n  }\n\n  MolScriptBuilder.es = es;\n  /** List constructor */\n\n  function list() {\n    var xs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      xs[_i] = arguments[_i];\n    }\n\n    return MolScriptBuilder.core.type.list(xs);\n  }\n\n  MolScriptBuilder.list = list;\n  /** Set constructor */\n\n  function set() {\n    var xs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      xs[_i] = arguments[_i];\n    }\n\n    return MolScriptBuilder.core.type.set(xs);\n  }\n\n  MolScriptBuilder.set = set;\n  /** RegEx constructor */\n\n  function re(pattern, flags) {\n    return MolScriptBuilder.core.type.regex([pattern, flags]);\n  }\n\n  MolScriptBuilder.re = re;\n  /** Function constructor */\n\n  function fn(x) {\n    return MolScriptBuilder.core.ctrl.fn([x]);\n  }\n\n  MolScriptBuilder.fn = fn;\n\n  function evaluate(x) {\n    return MolScriptBuilder.core.ctrl.eval([x]);\n  }\n\n  MolScriptBuilder.evaluate = evaluate;\n  var _acp = MolScriptBuilder.struct.atomProperty.core,\n      _ammp = MolScriptBuilder.struct.atomProperty.macromolecular,\n      _atp = MolScriptBuilder.struct.atomProperty.topology;\n  /** atom core property */\n\n  function acp(p) {\n    return _acp[p]();\n  }\n\n  MolScriptBuilder.acp = acp;\n  ;\n  /** atom topology property */\n\n  function atp(p) {\n    return _atp[p]();\n  }\n\n  MolScriptBuilder.atp = atp;\n  ;\n  /** atom macromolecular property */\n\n  function ammp(p) {\n    return _ammp[p]();\n  }\n\n  MolScriptBuilder.ammp = ammp;\n  ;\n  var _aps = MolScriptBuilder.struct.atomSet.propertySet;\n  /** atom core property set */\n\n  function acpSet(p) {\n    return _aps([acp(p)]);\n  }\n\n  MolScriptBuilder.acpSet = acpSet;\n  ;\n  /** atom topology property set */\n\n  function atpSet(p) {\n    return _aps([atp(p)]);\n  }\n\n  MolScriptBuilder.atpSet = atpSet;\n  ;\n  /** atom macromolecular property set */\n\n  function ammpSet(p) {\n    return _aps([ammp(p)]);\n  }\n\n  MolScriptBuilder.ammpSet = ammpSet;\n  ;\n})(MolScriptBuilder || (MolScriptBuilder = {}));","map":{"version":3,"sources":["../../../src/mol-script/language/builder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018 Mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { MolScriptSymbolTable as SymbolTable } from './symbol-table';\r\nexport var MolScriptBuilder;\r\n(function (MolScriptBuilder) {\r\n    MolScriptBuilder.core = SymbolTable.core;\r\n    MolScriptBuilder.struct = SymbolTable.structureQuery;\r\n    MolScriptBuilder.internal = SymbolTable.internal;\r\n    /** Atom-name constructor */\r\n    function atomName(s) { return MolScriptBuilder.struct.type.atomName([s]); }\r\n    MolScriptBuilder.atomName = atomName;\r\n    /** Element-symbol constructor */\r\n    function es(s) { return MolScriptBuilder.struct.type.elementSymbol([s]); }\r\n    MolScriptBuilder.es = es;\r\n    /** List constructor */\r\n    function list() {\r\n        var xs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            xs[_i] = arguments[_i];\r\n        }\r\n        return MolScriptBuilder.core.type.list(xs);\r\n    }\r\n    MolScriptBuilder.list = list;\r\n    /** Set constructor */\r\n    function set() {\r\n        var xs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            xs[_i] = arguments[_i];\r\n        }\r\n        return MolScriptBuilder.core.type.set(xs);\r\n    }\r\n    MolScriptBuilder.set = set;\r\n    /** RegEx constructor */\r\n    function re(pattern, flags) { return MolScriptBuilder.core.type.regex([pattern, flags]); }\r\n    MolScriptBuilder.re = re;\r\n    /** Function constructor */\r\n    function fn(x) { return MolScriptBuilder.core.ctrl.fn([x]); }\r\n    MolScriptBuilder.fn = fn;\r\n    function evaluate(x) { return MolScriptBuilder.core.ctrl.eval([x]); }\r\n    MolScriptBuilder.evaluate = evaluate;\r\n    var _acp = MolScriptBuilder.struct.atomProperty.core, _ammp = MolScriptBuilder.struct.atomProperty.macromolecular, _atp = MolScriptBuilder.struct.atomProperty.topology;\r\n    /** atom core property */\r\n    function acp(p) { return _acp[p](); }\r\n    MolScriptBuilder.acp = acp;\r\n    ;\r\n    /** atom topology property */\r\n    function atp(p) { return _atp[p](); }\r\n    MolScriptBuilder.atp = atp;\r\n    ;\r\n    /** atom macromolecular property */\r\n    function ammp(p) { return _ammp[p](); }\r\n    MolScriptBuilder.ammp = ammp;\r\n    ;\r\n    var _aps = MolScriptBuilder.struct.atomSet.propertySet;\r\n    /** atom core property set */\r\n    function acpSet(p) { return _aps([acp(p)]); }\r\n    MolScriptBuilder.acpSet = acpSet;\r\n    ;\r\n    /** atom topology property set */\r\n    function atpSet(p) { return _aps([atp(p)]); }\r\n    MolScriptBuilder.atpSet = atpSet;\r\n    ;\r\n    /** atom macromolecular property set */\r\n    function ammpSet(p) { return _aps([ammp(p)]); }\r\n    MolScriptBuilder.ammpSet = ammpSet;\r\n    ;\r\n})(MolScriptBuilder || (MolScriptBuilder = {}));\r\n//# sourceMappingURL=builder.js.map"]},"metadata":{},"sourceType":"module"}