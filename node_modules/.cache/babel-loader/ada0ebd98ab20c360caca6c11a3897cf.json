{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\n\n/**\r\n * Create 3d points for a polygon:\r\n * 3 for a triangle, 4 for a rectangle, 5 for a pentagon, 6 for a hexagon...\r\n */\nexport function polygon(sideCount, shift, radius) {\n  if (radius === void 0) {\n    radius = -1;\n  }\n\n  var points = new Float32Array(sideCount * 3);\n  var r = radius === -1 ? sideCount <= 4 ? Math.sqrt(2) / 2 : 0.6 : radius;\n  var offset = shift ? 1 : 0;\n\n  for (var i = 0, il = sideCount; i < il; ++i) {\n    var c = (i * 2 + offset) / sideCount * Math.PI;\n    points[i * 3] = Math.cos(c) * r;\n    points[i * 3 + 1] = Math.sin(c) * r;\n    points[i * 3 + 2] = 0;\n  }\n\n  return points;\n}","map":{"version":3,"sources":["../../../src/mol-geo/primitive/polygon.ts"],"names":[],"mappings":"AAAA;;;;AAIG;;AAEH;;;AAGG;AACH,OAAM,SAAU,OAAV,CAAkB,SAAlB,EAAqC,KAArC,EAAqD,MAArD,EAAgE;AAAX,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAU,CAAV;AAAW;;AAClE,MAAM,MAAM,GAAG,IAAI,YAAJ,CAAiB,SAAS,GAAG,CAA7B,CAAf;AACA,MAAM,CAAC,GAAG,MAAM,KAAK,CAAC,CAAZ,GACH,SAAS,IAAI,CAAb,GAAiB,IAAI,CAAC,IAAL,CAAU,CAAV,IAAe,CAAhC,GAAoC,GADjC,GAEJ,MAFN;AAIA,MAAM,MAAM,GAAG,KAAK,GAAG,CAAH,GAAO,CAA3B;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,SAArB,EAAgC,CAAC,GAAG,EAApC,EAAwC,EAAE,CAA1C,EAA6C;AACzC,QAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAJ,GAAQ,MAAT,IAAmB,SAAnB,GAA+B,IAAI,CAAC,EAA9C;AACA,IAAA,MAAM,CAAC,CAAC,GAAG,CAAL,CAAN,GAAgB,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,CAA9B;AACA,IAAA,MAAM,CAAC,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAN,GAAoB,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,CAAlC;AACA,IAAA,MAAM,CAAC,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAN,GAAoB,CAApB;AACH;;AACD,SAAO,MAAP;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n/**\r\n * Create 3d points for a polygon:\r\n * 3 for a triangle, 4 for a rectangle, 5 for a pentagon, 6 for a hexagon...\r\n */\r\nexport function polygon(sideCount, shift, radius) {\r\n    if (radius === void 0) { radius = -1; }\r\n    var points = new Float32Array(sideCount * 3);\r\n    var r = radius === -1\r\n        ? (sideCount <= 4 ? Math.sqrt(2) / 2 : 0.6)\r\n        : radius;\r\n    var offset = shift ? 1 : 0;\r\n    for (var i = 0, il = sideCount; i < il; ++i) {\r\n        var c = (i * 2 + offset) / sideCount * Math.PI;\r\n        points[i * 3] = Math.cos(c) * r;\r\n        points[i * 3 + 1] = Math.sin(c) * r;\r\n        points[i * 3 + 2] = 0;\r\n    }\r\n    return points;\r\n}\r\n//# sourceMappingURL=polygon.js.map"]},"metadata":{},"sourceType":"module"}