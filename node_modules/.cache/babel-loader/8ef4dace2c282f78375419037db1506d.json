{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __extends } from \"tslib\";\nimport { InterUnitGraph } from '../../../mol-math/graph/inter-unit-graph';\nexport { InteractionsIntraContacts };\nvar InteractionsIntraContacts;\n\n(function (InteractionsIntraContacts) {\n  /**\r\n   * Note: assumes that feature members of a contact are non-overlapping\r\n   */\n  function createElementsIndex(contacts, features, elementsCount) {\n    var offsets = new Int32Array(elementsCount + 1);\n    var bucketFill = new Int32Array(elementsCount);\n    var bucketSizes = new Int32Array(elementsCount);\n    var members = features.members,\n        featureOffsets = features.offsets;\n\n    for (var i = 0, il = contacts.edgeCount * 2; i < il; ++i) {\n      var aI = contacts.a[i];\n      var bI = contacts.b[i];\n      if (aI > bI) continue;\n\n      for (var j = featureOffsets[aI], jl = featureOffsets[aI + 1]; j < jl; ++j) {\n        ++bucketSizes[members[j]];\n      }\n\n      for (var j = featureOffsets[bI], jl = featureOffsets[bI + 1]; j < jl; ++j) {\n        ++bucketSizes[members[j]];\n      }\n    }\n\n    var offset = 0;\n\n    for (var i = 0; i < elementsCount; i++) {\n      offsets[i] = offset;\n      offset += bucketSizes[i];\n    }\n\n    offsets[elementsCount] = offset;\n    var indices = new Int32Array(offset);\n\n    for (var i = 0, il = contacts.edgeCount * 2; i < il; ++i) {\n      var aI = contacts.a[i];\n      var bI = contacts.b[i];\n      if (aI > bI) continue;\n\n      for (var j = featureOffsets[aI], jl = featureOffsets[aI + 1]; j < jl; ++j) {\n        var m = members[j];\n        var om = offsets[m] + bucketFill[m];\n        indices[om] = i;\n        ++bucketFill[m];\n      }\n\n      for (var j = featureOffsets[bI], jl = featureOffsets[bI + 1]; j < jl; ++j) {\n        var m = members[j];\n        var om = offsets[m] + bucketFill[m];\n        indices[om] = i;\n        ++bucketFill[m];\n      }\n    }\n\n    return {\n      indices: indices,\n      offsets: offsets\n    };\n  }\n\n  InteractionsIntraContacts.createElementsIndex = createElementsIndex;\n})(InteractionsIntraContacts || (InteractionsIntraContacts = {}));\n\nexport { InteractionsInterContacts };\n\nvar InteractionsInterContacts =\n/** @class */\nfunction (_super) {\n  __extends(InteractionsInterContacts, _super);\n\n  function InteractionsInterContacts(map, unitsFeatures) {\n    var _this = _super.call(this, map) || this;\n\n    var count = 0;\n    var elementKeyIndex = new Map();\n\n    var add = function (index, unitId) {\n      var vertexKey = _this.getElementKey(index, unitId);\n\n      var e = elementKeyIndex.get(vertexKey);\n      if (e === undefined) elementKeyIndex.set(vertexKey, [count]);else e.push(count);\n    };\n\n    _this.map.forEach(function (pairEdgesArray) {\n      pairEdgesArray.forEach(function (_a) {\n        var unitA = _a.unitA,\n            connectedIndices = _a.connectedIndices;\n        connectedIndices.forEach(function (indexA) {\n          var _a = unitsFeatures.get(unitA),\n              offsetsA = _a.offsets,\n              membersA = _a.members;\n\n          for (var j = offsetsA[indexA], jl = offsetsA[indexA + 1]; j < jl; ++j) {\n            add(membersA[j], unitA);\n          }\n\n          count += 1;\n        });\n      });\n    });\n\n    _this.elementKeyIndex = elementKeyIndex;\n    return _this;\n  }\n\n  InteractionsInterContacts.prototype.getContactIndicesForElement = function (index, unit) {\n    return this.elementKeyIndex.get(this.getElementKey(index, unit.id)) || [];\n  };\n\n  InteractionsInterContacts.prototype.getElementKey = function (index, unitId) {\n    return index + \"|\" + unitId;\n  };\n\n  return InteractionsInterContacts;\n}(InterUnitGraph);\n\nexport function interactionTypeLabel(type) {\n  switch (type) {\n    case 4\n    /* HydrogenBond */\n    :\n      return 'Hydrogen Bond';\n\n    case 6\n    /* Hydrophobic */\n    :\n      return 'Hydrophobic Contact';\n\n    case 5\n    /* HalogenBond */\n    :\n      return 'Halogen Bond';\n\n    case 1\n    /* Ionic */\n    :\n      return 'Ionic Interaction';\n\n    case 7\n    /* MetalCoordination */\n    :\n      return 'Metal Coordination';\n\n    case 2\n    /* CationPi */\n    :\n      return 'Cation-Pi Interaction';\n\n    case 3\n    /* PiStacking */\n    :\n      return 'Pi Stacking';\n\n    case 8\n    /* WeakHydrogenBond */\n    :\n      return 'Weak Hydrogen Bond';\n\n    case 0\n    /* Unknown */\n    :\n      return 'Unknown Interaction';\n  }\n}\nexport function featureTypeLabel(type) {\n  switch (type) {\n    case 0\n    /* None */\n    :\n      return 'None';\n\n    case 1\n    /* PositiveCharge */\n    :\n      return 'Positive Charge';\n\n    case 2\n    /* NegativeCharge */\n    :\n      return 'Negative Charge';\n\n    case 3\n    /* AromaticRing */\n    :\n      return 'Aromatic Ring';\n\n    case 4\n    /* HydrogenDonor */\n    :\n      return 'Hydrogen Donor';\n\n    case 5\n    /* HydrogenAcceptor */\n    :\n      return 'Hydrogen Acceptor';\n\n    case 6\n    /* HalogenDonor */\n    :\n      return 'Halogen Donor';\n\n    case 7\n    /* HalogenAcceptor */\n    :\n      return 'Halogen Acceptor';\n\n    case 8\n    /* HydrophobicAtom */\n    :\n      return 'HydrophobicAtom';\n\n    case 9\n    /* WeakHydrogenDonor */\n    :\n      return 'Weak Hydrogen Donor';\n\n    case 10\n    /* IonicTypePartner */\n    :\n      return 'Ionic Type Partner';\n\n    case 11\n    /* DativeBondPartner */\n    :\n      return 'Dative Bond Partner';\n\n    case 12\n    /* TransitionMetal */\n    :\n      return 'Transition Metal';\n\n    case 13\n    /* IonicTypeMetal */\n    :\n      return 'Ionic Type Metal';\n  }\n}\nexport function featureGroupLabel(group) {\n  switch (group) {\n    case 0\n    /* None */\n    :\n      return 'None';\n\n    case 1\n    /* QuaternaryAmine */\n    :\n      return 'Quaternary Amine';\n\n    case 2\n    /* TertiaryAmine */\n    :\n      return 'Tertiary Amine';\n\n    case 3\n    /* Sulfonium */\n    :\n      return 'Sulfonium';\n\n    case 4\n    /* SulfonicAcid */\n    :\n      return 'Sulfonic Acid';\n\n    case 5\n    /* Sulfate */\n    :\n      return 'Sulfate';\n\n    case 6\n    /* Phosphate */\n    :\n      return 'Phosphate';\n\n    case 7\n    /* Halocarbon */\n    :\n      return 'Halocarbon';\n\n    case 8\n    /* Guanidine */\n    :\n      return 'Guanidine';\n\n    case 9\n    /* Acetamidine */\n    :\n      return 'Acetamidine';\n\n    case 10\n    /* Carboxylate */\n    :\n      return 'Carboxylate';\n  }\n}","map":{"version":3,"sources":["../../../../src/mol-model-props/computed/interactions/common.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { InterUnitGraph } from '../../../mol-math/graph/inter-unit-graph';\r\nexport { InteractionsIntraContacts };\r\nvar InteractionsIntraContacts;\r\n(function (InteractionsIntraContacts) {\r\n    /**\r\n     * Note: assumes that feature members of a contact are non-overlapping\r\n     */\r\n    function createElementsIndex(contacts, features, elementsCount) {\r\n        var offsets = new Int32Array(elementsCount + 1);\r\n        var bucketFill = new Int32Array(elementsCount);\r\n        var bucketSizes = new Int32Array(elementsCount);\r\n        var members = features.members, featureOffsets = features.offsets;\r\n        for (var i = 0, il = contacts.edgeCount * 2; i < il; ++i) {\r\n            var aI = contacts.a[i];\r\n            var bI = contacts.b[i];\r\n            if (aI > bI)\r\n                continue;\r\n            for (var j = featureOffsets[aI], jl = featureOffsets[aI + 1]; j < jl; ++j) {\r\n                ++bucketSizes[members[j]];\r\n            }\r\n            for (var j = featureOffsets[bI], jl = featureOffsets[bI + 1]; j < jl; ++j) {\r\n                ++bucketSizes[members[j]];\r\n            }\r\n        }\r\n        var offset = 0;\r\n        for (var i = 0; i < elementsCount; i++) {\r\n            offsets[i] = offset;\r\n            offset += bucketSizes[i];\r\n        }\r\n        offsets[elementsCount] = offset;\r\n        var indices = new Int32Array(offset);\r\n        for (var i = 0, il = contacts.edgeCount * 2; i < il; ++i) {\r\n            var aI = contacts.a[i];\r\n            var bI = contacts.b[i];\r\n            if (aI > bI)\r\n                continue;\r\n            for (var j = featureOffsets[aI], jl = featureOffsets[aI + 1]; j < jl; ++j) {\r\n                var m = members[j];\r\n                var om = offsets[m] + bucketFill[m];\r\n                indices[om] = i;\r\n                ++bucketFill[m];\r\n            }\r\n            for (var j = featureOffsets[bI], jl = featureOffsets[bI + 1]; j < jl; ++j) {\r\n                var m = members[j];\r\n                var om = offsets[m] + bucketFill[m];\r\n                indices[om] = i;\r\n                ++bucketFill[m];\r\n            }\r\n        }\r\n        return { indices: indices, offsets: offsets };\r\n    }\r\n    InteractionsIntraContacts.createElementsIndex = createElementsIndex;\r\n})(InteractionsIntraContacts || (InteractionsIntraContacts = {}));\r\nexport { InteractionsInterContacts };\r\nvar InteractionsInterContacts = /** @class */ (function (_super) {\r\n    __extends(InteractionsInterContacts, _super);\r\n    function InteractionsInterContacts(map, unitsFeatures) {\r\n        var _this = _super.call(this, map) || this;\r\n        var count = 0;\r\n        var elementKeyIndex = new Map();\r\n        var add = function (index, unitId) {\r\n            var vertexKey = _this.getElementKey(index, unitId);\r\n            var e = elementKeyIndex.get(vertexKey);\r\n            if (e === undefined)\r\n                elementKeyIndex.set(vertexKey, [count]);\r\n            else\r\n                e.push(count);\r\n        };\r\n        _this.map.forEach(function (pairEdgesArray) {\r\n            pairEdgesArray.forEach(function (_a) {\r\n                var unitA = _a.unitA, connectedIndices = _a.connectedIndices;\r\n                connectedIndices.forEach(function (indexA) {\r\n                    var _a = unitsFeatures.get(unitA), offsetsA = _a.offsets, membersA = _a.members;\r\n                    for (var j = offsetsA[indexA], jl = offsetsA[indexA + 1]; j < jl; ++j) {\r\n                        add(membersA[j], unitA);\r\n                    }\r\n                    count += 1;\r\n                });\r\n            });\r\n        });\r\n        _this.elementKeyIndex = elementKeyIndex;\r\n        return _this;\r\n    }\r\n    InteractionsInterContacts.prototype.getContactIndicesForElement = function (index, unit) {\r\n        return this.elementKeyIndex.get(this.getElementKey(index, unit.id)) || [];\r\n    };\r\n    InteractionsInterContacts.prototype.getElementKey = function (index, unitId) {\r\n        return index + \"|\" + unitId;\r\n    };\r\n    return InteractionsInterContacts;\r\n}(InterUnitGraph));\r\nexport function interactionTypeLabel(type) {\r\n    switch (type) {\r\n        case 4 /* HydrogenBond */:\r\n            return 'Hydrogen Bond';\r\n        case 6 /* Hydrophobic */:\r\n            return 'Hydrophobic Contact';\r\n        case 5 /* HalogenBond */:\r\n            return 'Halogen Bond';\r\n        case 1 /* Ionic */:\r\n            return 'Ionic Interaction';\r\n        case 7 /* MetalCoordination */:\r\n            return 'Metal Coordination';\r\n        case 2 /* CationPi */:\r\n            return 'Cation-Pi Interaction';\r\n        case 3 /* PiStacking */:\r\n            return 'Pi Stacking';\r\n        case 8 /* WeakHydrogenBond */:\r\n            return 'Weak Hydrogen Bond';\r\n        case 0 /* Unknown */:\r\n            return 'Unknown Interaction';\r\n    }\r\n}\r\nexport function featureTypeLabel(type) {\r\n    switch (type) {\r\n        case 0 /* None */:\r\n            return 'None';\r\n        case 1 /* PositiveCharge */:\r\n            return 'Positive Charge';\r\n        case 2 /* NegativeCharge */:\r\n            return 'Negative Charge';\r\n        case 3 /* AromaticRing */:\r\n            return 'Aromatic Ring';\r\n        case 4 /* HydrogenDonor */:\r\n            return 'Hydrogen Donor';\r\n        case 5 /* HydrogenAcceptor */:\r\n            return 'Hydrogen Acceptor';\r\n        case 6 /* HalogenDonor */:\r\n            return 'Halogen Donor';\r\n        case 7 /* HalogenAcceptor */:\r\n            return 'Halogen Acceptor';\r\n        case 8 /* HydrophobicAtom */:\r\n            return 'HydrophobicAtom';\r\n        case 9 /* WeakHydrogenDonor */:\r\n            return 'Weak Hydrogen Donor';\r\n        case 10 /* IonicTypePartner */:\r\n            return 'Ionic Type Partner';\r\n        case 11 /* DativeBondPartner */:\r\n            return 'Dative Bond Partner';\r\n        case 12 /* TransitionMetal */:\r\n            return 'Transition Metal';\r\n        case 13 /* IonicTypeMetal */:\r\n            return 'Ionic Type Metal';\r\n    }\r\n}\r\nexport function featureGroupLabel(group) {\r\n    switch (group) {\r\n        case 0 /* None */:\r\n            return 'None';\r\n        case 1 /* QuaternaryAmine */:\r\n            return 'Quaternary Amine';\r\n        case 2 /* TertiaryAmine */:\r\n            return 'Tertiary Amine';\r\n        case 3 /* Sulfonium */:\r\n            return 'Sulfonium';\r\n        case 4 /* SulfonicAcid */:\r\n            return 'Sulfonic Acid';\r\n        case 5 /* Sulfate */:\r\n            return 'Sulfate';\r\n        case 6 /* Phosphate */:\r\n            return 'Phosphate';\r\n        case 7 /* Halocarbon */:\r\n            return 'Halocarbon';\r\n        case 8 /* Guanidine */:\r\n            return 'Guanidine';\r\n        case 9 /* Acetamidine */:\r\n            return 'Acetamidine';\r\n        case 10 /* Carboxylate */:\r\n            return 'Carboxylate';\r\n    }\r\n}\r\n//# sourceMappingURL=common.js.map"]},"metadata":{},"sourceType":"module"}