{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __assign, __extends } from \"tslib\";\nimport { EveryLoci, isEmptyLoci, Loci } from '../../mol-model/loci';\nimport { Structure, StructureElement } from '../../mol-model/structure';\nimport { Representation } from '../../mol-repr/representation';\nimport { MarkerAction } from '../../mol-util/marker-action';\nimport { shallowEqual } from '../../mol-util/object';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { StatefulPluginComponent } from '../component';\nexport { InteractivityManager }; // TODO: make this customizable somewhere?\n\nvar DefaultInteractivityFocusOptions = {\n  minRadius: 6,\n  extraRadius: 6,\n  durationMs: 250\n};\n\nvar InteractivityManager =\n/** @class */\nfunction (_super) {\n  __extends(InteractivityManager, _super);\n\n  function InteractivityManager(plugin, props) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    var _this = _super.call(this, {\n      props: __assign(__assign({}, PD.getDefaultValues(InteractivityManager.Params)), props)\n    }) || this;\n\n    _this.plugin = plugin;\n    _this._props = PD.getDefaultValues(InteractivityManager.Params);\n    _this.events = {\n      propsUpdated: _this.ev()\n    };\n    _this.lociSelects = new InteractivityManager.LociSelectManager(plugin, _this._props);\n    _this.lociHighlights = new InteractivityManager.LociHighlightManager(plugin, _this._props);\n    return _this;\n  }\n\n  Object.defineProperty(InteractivityManager.prototype, \"props\", {\n    get: function () {\n      return __assign({}, this.state.props);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  InteractivityManager.prototype.setProps = function (props) {\n    var old = this.props;\n\n    var _new = __assign(__assign({}, this.state.props), props);\n\n    if (shallowEqual(old, _new)) return;\n    this.updateState({\n      props: _new\n    });\n    this.lociSelects.setProps(_new);\n    this.lociHighlights.setProps(_new);\n    this.events.propsUpdated.next(void 0);\n  };\n\n  return InteractivityManager;\n}(StatefulPluginComponent);\n\n(function (InteractivityManager) {\n  InteractivityManager.Params = {\n    granularity: PD.Select('residue', Loci.GranularityOptions, {\n      label: 'Picking Level',\n      description: 'Controls if selections are expanded upon picking to whole residues, chains, structures, instances, or left as atoms and coarse elements'\n    })\n  };\n\n  var LociMarkManager =\n  /** @class */\n  function () {\n    function LociMarkManager(ctx, props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      this.ctx = ctx;\n      this.providers = [];\n      this.props = PD.getDefaultValues(InteractivityManager.Params);\n      this.sel = ctx.managers.structure.selection;\n      this.setProps(props);\n    }\n\n    LociMarkManager.prototype.setProps = function (props) {\n      Object.assign(this.props, props);\n    };\n\n    LociMarkManager.prototype.addProvider = function (provider) {\n      this.providers.push(provider);\n    };\n\n    LociMarkManager.prototype.removeProvider = function (provider) {\n      this.providers = this.providers.filter(function (p) {\n        return p !== provider;\n      }); // TODO clear, then re-apply remaining providers\n    };\n\n    LociMarkManager.prototype.normalizedLoci = function (reprLoci, applyGranularity, alwaysConvertBonds) {\n      if (alwaysConvertBonds === void 0) {\n        alwaysConvertBonds = false;\n      }\n\n      var loci = reprLoci.loci,\n          repr = reprLoci.repr;\n      var granularity = applyGranularity ? this.props.granularity : undefined;\n      return {\n        loci: Loci.normalize(loci, granularity, alwaysConvertBonds),\n        repr: repr\n      };\n    };\n\n    LociMarkManager.prototype.mark = function (current, action, noRender) {\n      if (noRender === void 0) {\n        noRender = false;\n      }\n\n      if (!Loci.isEmpty(current.loci)) {\n        for (var _i = 0, _a = this.providers; _i < _a.length; _i++) {\n          var p = _a[_i];\n          p(current, action, noRender);\n        }\n      }\n    };\n\n    return LociMarkManager;\n  }();\n\n  InteractivityManager.LociMarkManager = LociMarkManager; //\n\n  var LociHighlightManager =\n  /** @class */\n  function (_super) {\n    __extends(LociHighlightManager, _super);\n\n    function LociHighlightManager() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n\n      _this.prev = [];\n\n      _this.clearHighlights = function (noRender) {\n        if (noRender === void 0) {\n          noRender = false;\n        }\n\n        for (var _i = 0, _a = _this.prev; _i < _a.length; _i++) {\n          var p = _a[_i];\n\n          _this.mark(p, MarkerAction.RemoveHighlight, noRender);\n        }\n\n        _this.prev.length = 0;\n      };\n\n      return _this;\n    }\n\n    LociHighlightManager.prototype.isHighlighted = function (loci) {\n      for (var _i = 0, _a = this.prev; _i < _a.length; _i++) {\n        var p = _a[_i];\n        if (Representation.Loci.areEqual(p, loci)) return true;\n      }\n\n      return false;\n    };\n\n    LociHighlightManager.prototype.addHighlight = function (loci) {\n      this.mark(loci, MarkerAction.Highlight);\n      this.prev.push(loci);\n    };\n\n    LociHighlightManager.prototype.highlight = function (current, applyGranularity) {\n      if (applyGranularity === void 0) {\n        applyGranularity = true;\n      }\n\n      var normalized = this.normalizedLoci(current, applyGranularity);\n\n      if (!this.isHighlighted(normalized)) {\n        this.addHighlight(normalized);\n      }\n    };\n\n    LociHighlightManager.prototype.highlightOnly = function (current, applyGranularity) {\n      if (applyGranularity === void 0) {\n        applyGranularity = true;\n      }\n\n      var normalized = this.normalizedLoci(current, applyGranularity);\n\n      if (!this.isHighlighted(normalized)) {\n        if (Loci.isEmpty(normalized.loci)) {\n          this.clearHighlights();\n        } else {\n          this.clearHighlights(true);\n          this.addHighlight(normalized);\n        }\n      }\n    };\n\n    LociHighlightManager.prototype.highlightOnlyExtend = function (current, applyGranularity) {\n      if (applyGranularity === void 0) {\n        applyGranularity = true;\n      }\n\n      var normalized = this.normalizedLoci(current, applyGranularity);\n\n      if (StructureElement.Loci.is(normalized.loci)) {\n        var extended = {\n          loci: this.sel.tryGetRange(normalized.loci) || normalized.loci,\n          repr: normalized.repr\n        };\n\n        if (!this.isHighlighted(extended)) {\n          if (Loci.isEmpty(extended.loci)) {\n            this.clearHighlights();\n          } else {\n            this.clearHighlights(true);\n            this.addHighlight(extended);\n          }\n        }\n      }\n    };\n\n    return LociHighlightManager;\n  }(LociMarkManager);\n\n  InteractivityManager.LociHighlightManager = LociHighlightManager; //\n\n  var LociSelectManager =\n  /** @class */\n  function (_super) {\n    __extends(LociSelectManager, _super);\n\n    function LociSelectManager() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    LociSelectManager.prototype.toggle = function (current, applyGranularity) {\n      if (applyGranularity === void 0) {\n        applyGranularity = true;\n      }\n\n      if (Loci.isEmpty(current.loci)) return;\n      var normalized = this.normalizedLoci(current, applyGranularity, true);\n\n      if (StructureElement.Loci.is(normalized.loci)) {\n        this.toggleSel(normalized);\n      } else {\n        _super.prototype.mark.call(this, normalized, MarkerAction.Toggle);\n      }\n    };\n\n    LociSelectManager.prototype.toggleExtend = function (current, applyGranularity) {\n      if (applyGranularity === void 0) {\n        applyGranularity = true;\n      }\n\n      if (Loci.isEmpty(current.loci)) return;\n      var normalized = this.normalizedLoci(current, applyGranularity, true);\n\n      if (StructureElement.Loci.is(normalized.loci)) {\n        var loci = this.sel.tryGetRange(normalized.loci) || normalized.loci;\n        this.toggleSel({\n          loci: loci,\n          repr: normalized.repr\n        });\n      }\n    };\n\n    LociSelectManager.prototype.select = function (current, applyGranularity) {\n      if (applyGranularity === void 0) {\n        applyGranularity = true;\n      }\n\n      var normalized = this.normalizedLoci(current, applyGranularity, true);\n\n      if (StructureElement.Loci.is(normalized.loci)) {\n        this.sel.modify('add', normalized.loci);\n      }\n\n      this.mark(normalized, MarkerAction.Select);\n    };\n\n    LociSelectManager.prototype.selectJoin = function (current, applyGranularity) {\n      if (applyGranularity === void 0) {\n        applyGranularity = true;\n      }\n\n      var normalized = this.normalizedLoci(current, applyGranularity, true);\n\n      if (StructureElement.Loci.is(normalized.loci)) {\n        this.sel.modify('intersect', normalized.loci);\n      }\n\n      this.mark(normalized, MarkerAction.Select);\n    };\n\n    LociSelectManager.prototype.selectOnly = function (current, applyGranularity) {\n      if (applyGranularity === void 0) {\n        applyGranularity = true;\n      }\n\n      var normalized = this.normalizedLoci(current, applyGranularity, true);\n\n      if (StructureElement.Loci.is(normalized.loci)) {\n        // only deselect for the structure of the given loci\n        this.deselect({\n          loci: Structure.toStructureElementLoci(normalized.loci.structure),\n          repr: normalized.repr\n        }, false);\n        this.sel.modify('set', normalized.loci);\n      }\n\n      this.mark(normalized, MarkerAction.Select);\n    };\n\n    LociSelectManager.prototype.deselect = function (current, applyGranularity) {\n      if (applyGranularity === void 0) {\n        applyGranularity = true;\n      }\n\n      var normalized = this.normalizedLoci(current, applyGranularity, true);\n\n      if (StructureElement.Loci.is(normalized.loci)) {\n        this.sel.modify('remove', normalized.loci);\n      }\n\n      this.mark(normalized, MarkerAction.Deselect);\n    };\n\n    LociSelectManager.prototype.deselectAll = function () {\n      this.sel.clear();\n      this.mark({\n        loci: EveryLoci\n      }, MarkerAction.Deselect);\n    };\n\n    LociSelectManager.prototype.deselectAllOnEmpty = function (current) {\n      if (isEmptyLoci(current.loci)) this.deselectAll();\n    };\n\n    LociSelectManager.prototype.mark = function (current, action) {\n      var loci = current.loci;\n\n      if (!Loci.isEmpty(loci)) {\n        if (StructureElement.Loci.is(loci)) {\n          // do a full deselect/select for the current structure so visuals that are\n          // marked with granularity unequal to 'element' and join/intersect operations\n          // are handled properly\n          var selLoci = this.sel.getLoci(loci.structure);\n\n          _super.prototype.mark.call(this, {\n            loci: Structure.Loci(loci.structure)\n          }, MarkerAction.Deselect, !Loci.isEmpty(selLoci));\n\n          _super.prototype.mark.call(this, {\n            loci: selLoci\n          }, MarkerAction.Select);\n        } else {\n          _super.prototype.mark.call(this, current, action);\n        }\n      }\n    };\n\n    LociSelectManager.prototype.toggleSel = function (current) {\n      if (this.sel.has(current.loci)) {\n        this.sel.modify('remove', current.loci);\n        this.mark(current, MarkerAction.Deselect);\n      } else {\n        this.sel.modify('add', current.loci);\n        this.mark(current, MarkerAction.Select);\n      }\n    };\n\n    return LociSelectManager;\n  }(LociMarkManager);\n\n  InteractivityManager.LociSelectManager = LociSelectManager;\n})(InteractivityManager || (InteractivityManager = {}));","map":{"version":3,"sources":["../../../src/mol-plugin-state/manager/interactivity.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __assign, __extends } from \"tslib\";\r\nimport { EveryLoci, isEmptyLoci, Loci } from '../../mol-model/loci';\r\nimport { Structure, StructureElement } from '../../mol-model/structure';\r\nimport { Representation } from '../../mol-repr/representation';\r\nimport { MarkerAction } from '../../mol-util/marker-action';\r\nimport { shallowEqual } from '../../mol-util/object';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { StatefulPluginComponent } from '../component';\r\nexport { InteractivityManager };\r\n// TODO: make this customizable somewhere?\r\nvar DefaultInteractivityFocusOptions = {\r\n    minRadius: 6,\r\n    extraRadius: 6,\r\n    durationMs: 250,\r\n};\r\nvar InteractivityManager = /** @class */ (function (_super) {\r\n    __extends(InteractivityManager, _super);\r\n    function InteractivityManager(plugin, props) {\r\n        if (props === void 0) { props = {}; }\r\n        var _this = _super.call(this, { props: __assign(__assign({}, PD.getDefaultValues(InteractivityManager.Params)), props) }) || this;\r\n        _this.plugin = plugin;\r\n        _this._props = PD.getDefaultValues(InteractivityManager.Params);\r\n        _this.events = {\r\n            propsUpdated: _this.ev()\r\n        };\r\n        _this.lociSelects = new InteractivityManager.LociSelectManager(plugin, _this._props);\r\n        _this.lociHighlights = new InteractivityManager.LociHighlightManager(plugin, _this._props);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(InteractivityManager.prototype, \"props\", {\r\n        get: function () { return __assign({}, this.state.props); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    InteractivityManager.prototype.setProps = function (props) {\r\n        var old = this.props;\r\n        var _new = __assign(__assign({}, this.state.props), props);\r\n        if (shallowEqual(old, _new))\r\n            return;\r\n        this.updateState({ props: _new });\r\n        this.lociSelects.setProps(_new);\r\n        this.lociHighlights.setProps(_new);\r\n        this.events.propsUpdated.next(void 0);\r\n    };\r\n    return InteractivityManager;\r\n}(StatefulPluginComponent));\r\n(function (InteractivityManager) {\r\n    InteractivityManager.Params = {\r\n        granularity: PD.Select('residue', Loci.GranularityOptions, { label: 'Picking Level', description: 'Controls if selections are expanded upon picking to whole residues, chains, structures, instances, or left as atoms and coarse elements' }),\r\n    };\r\n    var LociMarkManager = /** @class */ (function () {\r\n        function LociMarkManager(ctx, props) {\r\n            if (props === void 0) { props = {}; }\r\n            this.ctx = ctx;\r\n            this.providers = [];\r\n            this.props = PD.getDefaultValues(InteractivityManager.Params);\r\n            this.sel = ctx.managers.structure.selection;\r\n            this.setProps(props);\r\n        }\r\n        LociMarkManager.prototype.setProps = function (props) {\r\n            Object.assign(this.props, props);\r\n        };\r\n        LociMarkManager.prototype.addProvider = function (provider) {\r\n            this.providers.push(provider);\r\n        };\r\n        LociMarkManager.prototype.removeProvider = function (provider) {\r\n            this.providers = this.providers.filter(function (p) { return p !== provider; });\r\n            // TODO clear, then re-apply remaining providers\r\n        };\r\n        LociMarkManager.prototype.normalizedLoci = function (reprLoci, applyGranularity, alwaysConvertBonds) {\r\n            if (alwaysConvertBonds === void 0) { alwaysConvertBonds = false; }\r\n            var loci = reprLoci.loci, repr = reprLoci.repr;\r\n            var granularity = applyGranularity ? this.props.granularity : undefined;\r\n            return { loci: Loci.normalize(loci, granularity, alwaysConvertBonds), repr: repr };\r\n        };\r\n        LociMarkManager.prototype.mark = function (current, action, noRender) {\r\n            if (noRender === void 0) { noRender = false; }\r\n            if (!Loci.isEmpty(current.loci)) {\r\n                for (var _i = 0, _a = this.providers; _i < _a.length; _i++) {\r\n                    var p = _a[_i];\r\n                    p(current, action, noRender);\r\n                }\r\n            }\r\n        };\r\n        return LociMarkManager;\r\n    }());\r\n    InteractivityManager.LociMarkManager = LociMarkManager;\r\n    //\r\n    var LociHighlightManager = /** @class */ (function (_super) {\r\n        __extends(LociHighlightManager, _super);\r\n        function LociHighlightManager() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.prev = [];\r\n            _this.clearHighlights = function (noRender) {\r\n                if (noRender === void 0) { noRender = false; }\r\n                for (var _i = 0, _a = _this.prev; _i < _a.length; _i++) {\r\n                    var p = _a[_i];\r\n                    _this.mark(p, MarkerAction.RemoveHighlight, noRender);\r\n                }\r\n                _this.prev.length = 0;\r\n            };\r\n            return _this;\r\n        }\r\n        LociHighlightManager.prototype.isHighlighted = function (loci) {\r\n            for (var _i = 0, _a = this.prev; _i < _a.length; _i++) {\r\n                var p = _a[_i];\r\n                if (Representation.Loci.areEqual(p, loci))\r\n                    return true;\r\n            }\r\n            return false;\r\n        };\r\n        LociHighlightManager.prototype.addHighlight = function (loci) {\r\n            this.mark(loci, MarkerAction.Highlight);\r\n            this.prev.push(loci);\r\n        };\r\n        LociHighlightManager.prototype.highlight = function (current, applyGranularity) {\r\n            if (applyGranularity === void 0) { applyGranularity = true; }\r\n            var normalized = this.normalizedLoci(current, applyGranularity);\r\n            if (!this.isHighlighted(normalized)) {\r\n                this.addHighlight(normalized);\r\n            }\r\n        };\r\n        LociHighlightManager.prototype.highlightOnly = function (current, applyGranularity) {\r\n            if (applyGranularity === void 0) { applyGranularity = true; }\r\n            var normalized = this.normalizedLoci(current, applyGranularity);\r\n            if (!this.isHighlighted(normalized)) {\r\n                if (Loci.isEmpty(normalized.loci)) {\r\n                    this.clearHighlights();\r\n                }\r\n                else {\r\n                    this.clearHighlights(true);\r\n                    this.addHighlight(normalized);\r\n                }\r\n            }\r\n        };\r\n        LociHighlightManager.prototype.highlightOnlyExtend = function (current, applyGranularity) {\r\n            if (applyGranularity === void 0) { applyGranularity = true; }\r\n            var normalized = this.normalizedLoci(current, applyGranularity);\r\n            if (StructureElement.Loci.is(normalized.loci)) {\r\n                var extended = {\r\n                    loci: this.sel.tryGetRange(normalized.loci) || normalized.loci,\r\n                    repr: normalized.repr\r\n                };\r\n                if (!this.isHighlighted(extended)) {\r\n                    if (Loci.isEmpty(extended.loci)) {\r\n                        this.clearHighlights();\r\n                    }\r\n                    else {\r\n                        this.clearHighlights(true);\r\n                        this.addHighlight(extended);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return LociHighlightManager;\r\n    }(LociMarkManager));\r\n    InteractivityManager.LociHighlightManager = LociHighlightManager;\r\n    //\r\n    var LociSelectManager = /** @class */ (function (_super) {\r\n        __extends(LociSelectManager, _super);\r\n        function LociSelectManager() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        LociSelectManager.prototype.toggle = function (current, applyGranularity) {\r\n            if (applyGranularity === void 0) { applyGranularity = true; }\r\n            if (Loci.isEmpty(current.loci))\r\n                return;\r\n            var normalized = this.normalizedLoci(current, applyGranularity, true);\r\n            if (StructureElement.Loci.is(normalized.loci)) {\r\n                this.toggleSel(normalized);\r\n            }\r\n            else {\r\n                _super.prototype.mark.call(this, normalized, MarkerAction.Toggle);\r\n            }\r\n        };\r\n        LociSelectManager.prototype.toggleExtend = function (current, applyGranularity) {\r\n            if (applyGranularity === void 0) { applyGranularity = true; }\r\n            if (Loci.isEmpty(current.loci))\r\n                return;\r\n            var normalized = this.normalizedLoci(current, applyGranularity, true);\r\n            if (StructureElement.Loci.is(normalized.loci)) {\r\n                var loci = this.sel.tryGetRange(normalized.loci) || normalized.loci;\r\n                this.toggleSel({ loci: loci, repr: normalized.repr });\r\n            }\r\n        };\r\n        LociSelectManager.prototype.select = function (current, applyGranularity) {\r\n            if (applyGranularity === void 0) { applyGranularity = true; }\r\n            var normalized = this.normalizedLoci(current, applyGranularity, true);\r\n            if (StructureElement.Loci.is(normalized.loci)) {\r\n                this.sel.modify('add', normalized.loci);\r\n            }\r\n            this.mark(normalized, MarkerAction.Select);\r\n        };\r\n        LociSelectManager.prototype.selectJoin = function (current, applyGranularity) {\r\n            if (applyGranularity === void 0) { applyGranularity = true; }\r\n            var normalized = this.normalizedLoci(current, applyGranularity, true);\r\n            if (StructureElement.Loci.is(normalized.loci)) {\r\n                this.sel.modify('intersect', normalized.loci);\r\n            }\r\n            this.mark(normalized, MarkerAction.Select);\r\n        };\r\n        LociSelectManager.prototype.selectOnly = function (current, applyGranularity) {\r\n            if (applyGranularity === void 0) { applyGranularity = true; }\r\n            var normalized = this.normalizedLoci(current, applyGranularity, true);\r\n            if (StructureElement.Loci.is(normalized.loci)) {\r\n                // only deselect for the structure of the given loci\r\n                this.deselect({ loci: Structure.toStructureElementLoci(normalized.loci.structure), repr: normalized.repr }, false);\r\n                this.sel.modify('set', normalized.loci);\r\n            }\r\n            this.mark(normalized, MarkerAction.Select);\r\n        };\r\n        LociSelectManager.prototype.deselect = function (current, applyGranularity) {\r\n            if (applyGranularity === void 0) { applyGranularity = true; }\r\n            var normalized = this.normalizedLoci(current, applyGranularity, true);\r\n            if (StructureElement.Loci.is(normalized.loci)) {\r\n                this.sel.modify('remove', normalized.loci);\r\n            }\r\n            this.mark(normalized, MarkerAction.Deselect);\r\n        };\r\n        LociSelectManager.prototype.deselectAll = function () {\r\n            this.sel.clear();\r\n            this.mark({ loci: EveryLoci }, MarkerAction.Deselect);\r\n        };\r\n        LociSelectManager.prototype.deselectAllOnEmpty = function (current) {\r\n            if (isEmptyLoci(current.loci))\r\n                this.deselectAll();\r\n        };\r\n        LociSelectManager.prototype.mark = function (current, action) {\r\n            var loci = current.loci;\r\n            if (!Loci.isEmpty(loci)) {\r\n                if (StructureElement.Loci.is(loci)) {\r\n                    // do a full deselect/select for the current structure so visuals that are\r\n                    // marked with granularity unequal to 'element' and join/intersect operations\r\n                    // are handled properly\r\n                    var selLoci = this.sel.getLoci(loci.structure);\r\n                    _super.prototype.mark.call(this, { loci: Structure.Loci(loci.structure) }, MarkerAction.Deselect, !Loci.isEmpty(selLoci));\r\n                    _super.prototype.mark.call(this, { loci: selLoci }, MarkerAction.Select);\r\n                }\r\n                else {\r\n                    _super.prototype.mark.call(this, current, action);\r\n                }\r\n            }\r\n        };\r\n        LociSelectManager.prototype.toggleSel = function (current) {\r\n            if (this.sel.has(current.loci)) {\r\n                this.sel.modify('remove', current.loci);\r\n                this.mark(current, MarkerAction.Deselect);\r\n            }\r\n            else {\r\n                this.sel.modify('add', current.loci);\r\n                this.mark(current, MarkerAction.Select);\r\n            }\r\n        };\r\n        return LociSelectManager;\r\n    }(LociMarkManager));\r\n    InteractivityManager.LociSelectManager = LociSelectManager;\r\n})(InteractivityManager || (InteractivityManager = {}));\r\n//# sourceMappingURL=interactivity.js.map"]},"metadata":{},"sourceType":"module"}