{"ast":null,"code":"/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { ValueCell } from '../../mol-util';\nimport { LocationIterator } from '../util/location-iterator';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { createIdentityTransform } from './transform-data';\nimport { ColorNames } from '../../mol-util/color/names';\nimport { NullLocation } from '../../mol-model/location';\nimport { UniformColorTheme } from '../../mol-theme/color/uniform';\nimport { UniformSizeTheme } from '../../mol-theme/size/uniform';\nexport var VisualQualityInfo = {\n  'custom': {},\n  'auto': {},\n  'highest': {},\n  'higher': {},\n  'high': {},\n  'medium': {},\n  'low': {},\n  'lower': {},\n  'lowest': {}\n};\nexport var VisualQualityNames = Object.keys(VisualQualityInfo);\nexport var VisualQualityOptions = PD.arrayToOptions(VisualQualityNames); //\n\nexport var BaseGeometry;\n\n(function (BaseGeometry) {\n  BaseGeometry.Params = {\n    alpha: PD.Numeric(1, {\n      min: 0,\n      max: 1,\n      step: 0.01\n    }, {\n      label: 'Opacity',\n      isEssential: true,\n      description: 'How opaque/transparent the representation is rendered.'\n    }),\n    quality: PD.Select('auto', VisualQualityOptions, {\n      isEssential: true,\n      description: 'Visual/rendering quality of the representation.'\n    })\n  };\n  BaseGeometry.ShadingCategory = {\n    category: 'Shading'\n  };\n  BaseGeometry.CustomQualityParamInfo = {\n    category: 'Custom Quality',\n    hideIf: function (params) {\n      return typeof params.quality !== 'undefined' && params.quality !== 'custom';\n    }\n  };\n\n  function createSimple(colorValue, sizeValue, transform) {\n    if (colorValue === void 0) {\n      colorValue = ColorNames.grey;\n    }\n\n    if (sizeValue === void 0) {\n      sizeValue = 1;\n    }\n\n    if (!transform) transform = createIdentityTransform();\n    var locationIterator = LocationIterator(1, transform.instanceCount.ref.value, 1, function () {\n      return NullLocation;\n    }, false, function () {\n      return false;\n    });\n    var theme = {\n      color: UniformColorTheme({}, {\n        value: colorValue\n      }),\n      size: UniformSizeTheme({}, {\n        value: sizeValue\n      })\n    };\n    return {\n      transform: transform,\n      locationIterator: locationIterator,\n      theme: theme\n    };\n  }\n\n  BaseGeometry.createSimple = createSimple;\n\n  function createValues(props, counts) {\n    return {\n      alpha: ValueCell.create(props.alpha),\n      uAlpha: ValueCell.create(props.alpha),\n      uVertexCount: ValueCell.create(counts.vertexCount),\n      uGroupCount: ValueCell.create(counts.groupCount),\n      drawCount: ValueCell.create(counts.drawCount)\n    };\n  }\n\n  BaseGeometry.createValues = createValues;\n\n  function updateValues(values, props) {\n    ValueCell.updateIfChanged(values.alpha, props.alpha); // `uAlpha` is set in renderable.render\n  }\n\n  BaseGeometry.updateValues = updateValues;\n\n  function createRenderableState(props) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    var opaque = props.alpha === undefined ? true : props.alpha === 1;\n    return {\n      disposed: false,\n      visible: true,\n      alphaFactor: 1,\n      pickable: true,\n      colorOnly: false,\n      opaque: opaque,\n      writeDepth: opaque,\n      noClip: false\n    };\n  }\n\n  BaseGeometry.createRenderableState = createRenderableState;\n\n  function updateRenderableState(state, props) {\n    state.opaque = props.alpha * state.alphaFactor >= 1;\n    state.writeDepth = state.opaque;\n  }\n\n  BaseGeometry.updateRenderableState = updateRenderableState;\n})(BaseGeometry || (BaseGeometry = {}));","map":{"version":3,"sources":["../../../src/mol-geo/geometry/base.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { ValueCell } from '../../mol-util';\r\nimport { LocationIterator } from '../util/location-iterator';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { createIdentityTransform } from './transform-data';\r\nimport { ColorNames } from '../../mol-util/color/names';\r\nimport { NullLocation } from '../../mol-model/location';\r\nimport { UniformColorTheme } from '../../mol-theme/color/uniform';\r\nimport { UniformSizeTheme } from '../../mol-theme/size/uniform';\r\nexport var VisualQualityInfo = {\r\n    'custom': {},\r\n    'auto': {},\r\n    'highest': {},\r\n    'higher': {},\r\n    'high': {},\r\n    'medium': {},\r\n    'low': {},\r\n    'lower': {},\r\n    'lowest': {},\r\n};\r\nexport var VisualQualityNames = Object.keys(VisualQualityInfo);\r\nexport var VisualQualityOptions = PD.arrayToOptions(VisualQualityNames);\r\n//\r\nexport var BaseGeometry;\r\n(function (BaseGeometry) {\r\n    BaseGeometry.Params = {\r\n        alpha: PD.Numeric(1, { min: 0, max: 1, step: 0.01 }, { label: 'Opacity', isEssential: true, description: 'How opaque/transparent the representation is rendered.' }),\r\n        quality: PD.Select('auto', VisualQualityOptions, { isEssential: true, description: 'Visual/rendering quality of the representation.' }),\r\n    };\r\n    BaseGeometry.ShadingCategory = { category: 'Shading' };\r\n    BaseGeometry.CustomQualityParamInfo = {\r\n        category: 'Custom Quality',\r\n        hideIf: function (params) { return typeof params.quality !== 'undefined' && params.quality !== 'custom'; }\r\n    };\r\n    function createSimple(colorValue, sizeValue, transform) {\r\n        if (colorValue === void 0) { colorValue = ColorNames.grey; }\r\n        if (sizeValue === void 0) { sizeValue = 1; }\r\n        if (!transform)\r\n            transform = createIdentityTransform();\r\n        var locationIterator = LocationIterator(1, transform.instanceCount.ref.value, 1, function () { return NullLocation; }, false, function () { return false; });\r\n        var theme = {\r\n            color: UniformColorTheme({}, { value: colorValue }),\r\n            size: UniformSizeTheme({}, { value: sizeValue })\r\n        };\r\n        return { transform: transform, locationIterator: locationIterator, theme: theme };\r\n    }\r\n    BaseGeometry.createSimple = createSimple;\r\n    function createValues(props, counts) {\r\n        return {\r\n            alpha: ValueCell.create(props.alpha),\r\n            uAlpha: ValueCell.create(props.alpha),\r\n            uVertexCount: ValueCell.create(counts.vertexCount),\r\n            uGroupCount: ValueCell.create(counts.groupCount),\r\n            drawCount: ValueCell.create(counts.drawCount),\r\n        };\r\n    }\r\n    BaseGeometry.createValues = createValues;\r\n    function updateValues(values, props) {\r\n        ValueCell.updateIfChanged(values.alpha, props.alpha); // `uAlpha` is set in renderable.render\r\n    }\r\n    BaseGeometry.updateValues = updateValues;\r\n    function createRenderableState(props) {\r\n        if (props === void 0) { props = {}; }\r\n        var opaque = props.alpha === undefined ? true : props.alpha === 1;\r\n        return {\r\n            disposed: false,\r\n            visible: true,\r\n            alphaFactor: 1,\r\n            pickable: true,\r\n            colorOnly: false,\r\n            opaque: opaque,\r\n            writeDepth: opaque,\r\n            noClip: false,\r\n        };\r\n    }\r\n    BaseGeometry.createRenderableState = createRenderableState;\r\n    function updateRenderableState(state, props) {\r\n        state.opaque = props.alpha * state.alphaFactor >= 1;\r\n        state.writeDepth = state.opaque;\r\n    }\r\n    BaseGeometry.updateRenderableState = updateRenderableState;\r\n})(BaseGeometry || (BaseGeometry = {}));\r\n//# sourceMappingURL=base.js.map"]},"metadata":{},"sourceType":"module"}