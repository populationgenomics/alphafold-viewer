{"ast":null,"code":"/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { ColorScale } from '../../mol-util/color';\nimport { StructureElement, Unit, Bond } from '../../mol-model/structure';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { ResidueHydrophobicity } from '../../mol-model/structure/model/types';\nvar Description = 'Assigns a color to every amino acid according to the \"Experimentally determined hydrophobicity scale for proteins at membrane interfaces\" by Wimely and White (doi:10.1038/nsb1096-842).';\nexport var HydrophobicityColorThemeParams = {\n  list: PD.ColorList('red-yellow-green', {\n    presetKind: 'scale'\n  }),\n  scale: PD.Select('DGwif', [['DGwif', 'DG water-membrane'], ['DGwoct', 'DG water-octanol'], ['Oct-IF', 'DG difference']])\n};\nexport function getHydrophobicityColorThemeParams(ctx) {\n  return HydrophobicityColorThemeParams; // TODO return copy\n}\nvar scaleIndexMap = {\n  'DGwif': 0,\n  'DGwoct': 1,\n  'Oct-IF': 2\n};\nexport function hydrophobicity(compId, scaleIndex) {\n  var c = ResidueHydrophobicity[compId];\n  return c === undefined ? 0 : c[scaleIndex];\n}\n\nfunction getAtomicCompId(unit, element) {\n  return unit.model.atomicHierarchy.atoms.label_comp_id.value(element);\n}\n\nfunction getCoarseCompId(unit, element) {\n  var seqIdBegin = unit.coarseElements.seq_id_begin.value(element);\n  var seqIdEnd = unit.coarseElements.seq_id_end.value(element);\n\n  if (seqIdBegin === seqIdEnd) {\n    var entityKey = unit.coarseElements.entityKey[element];\n    var seq = unit.model.sequence.byEntityKey[entityKey].sequence;\n    return seq.compId.value(seqIdBegin - 1); // 1-indexed\n  }\n}\n\nexport function HydrophobicityColorTheme(ctx, props) {\n  var scaleIndex = scaleIndexMap[props.scale]; // get domain\n\n  var min = Infinity;\n  var max = -Infinity;\n\n  for (var name_1 in ResidueHydrophobicity) {\n    var val = ResidueHydrophobicity[name_1][scaleIndex];\n    min = Math.min(min, val);\n    max = Math.max(max, val);\n  }\n\n  var scale = ColorScale.create({\n    listOrName: props.list.colors,\n    domain: [max, min],\n    minLabel: 'Hydrophobic',\n    maxLabel: 'Hydrophilic'\n  });\n\n  function color(location) {\n    var compId;\n\n    if (StructureElement.Location.is(location)) {\n      if (Unit.isAtomic(location.unit)) {\n        compId = getAtomicCompId(location.unit, location.element);\n      } else {\n        compId = getCoarseCompId(location.unit, location.element);\n      }\n    } else if (Bond.isLocation(location)) {\n      if (Unit.isAtomic(location.aUnit)) {\n        compId = getAtomicCompId(location.aUnit, location.aUnit.elements[location.aIndex]);\n      } else {\n        compId = getCoarseCompId(location.aUnit, location.aUnit.elements[location.aIndex]);\n      }\n    }\n\n    return scale.color(compId ? hydrophobicity(compId, scaleIndex) : 0);\n  }\n\n  return {\n    factory: HydrophobicityColorTheme,\n    granularity: 'group',\n    preferSmoothing: true,\n    color: color,\n    props: props,\n    description: Description,\n    legend: scale ? scale.legend : undefined\n  };\n}\nexport var HydrophobicityColorThemeProvider = {\n  name: 'hydrophobicity',\n  label: 'Hydrophobicity',\n  category: \"Residue Property\"\n  /* Residue */\n  ,\n  factory: HydrophobicityColorTheme,\n  getParams: getHydrophobicityColorThemeParams,\n  defaultValues: PD.getDefaultValues(HydrophobicityColorThemeParams),\n  isApplicable: function (ctx) {\n    return !!ctx.structure;\n  }\n};","map":{"version":3,"sources":["../../../src/mol-theme/color/hydrophobicity.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { ColorScale } from '../../mol-util/color';\r\nimport { StructureElement, Unit, Bond } from '../../mol-model/structure';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { ResidueHydrophobicity } from '../../mol-model/structure/model/types';\r\nvar Description = 'Assigns a color to every amino acid according to the \"Experimentally determined hydrophobicity scale for proteins at membrane interfaces\" by Wimely and White (doi:10.1038/nsb1096-842).';\r\nexport var HydrophobicityColorThemeParams = {\r\n    list: PD.ColorList('red-yellow-green', { presetKind: 'scale' }),\r\n    scale: PD.Select('DGwif', [['DGwif', 'DG water-membrane'], ['DGwoct', 'DG water-octanol'], ['Oct-IF', 'DG difference']])\r\n};\r\nexport function getHydrophobicityColorThemeParams(ctx) {\r\n    return HydrophobicityColorThemeParams; // TODO return copy\r\n}\r\nvar scaleIndexMap = { 'DGwif': 0, 'DGwoct': 1, 'Oct-IF': 2 };\r\nexport function hydrophobicity(compId, scaleIndex) {\r\n    var c = ResidueHydrophobicity[compId];\r\n    return c === undefined ? 0 : c[scaleIndex];\r\n}\r\nfunction getAtomicCompId(unit, element) {\r\n    return unit.model.atomicHierarchy.atoms.label_comp_id.value(element);\r\n}\r\nfunction getCoarseCompId(unit, element) {\r\n    var seqIdBegin = unit.coarseElements.seq_id_begin.value(element);\r\n    var seqIdEnd = unit.coarseElements.seq_id_end.value(element);\r\n    if (seqIdBegin === seqIdEnd) {\r\n        var entityKey = unit.coarseElements.entityKey[element];\r\n        var seq = unit.model.sequence.byEntityKey[entityKey].sequence;\r\n        return seq.compId.value(seqIdBegin - 1); // 1-indexed\r\n    }\r\n}\r\nexport function HydrophobicityColorTheme(ctx, props) {\r\n    var scaleIndex = scaleIndexMap[props.scale];\r\n    // get domain\r\n    var min = Infinity;\r\n    var max = -Infinity;\r\n    for (var name_1 in ResidueHydrophobicity) {\r\n        var val = ResidueHydrophobicity[name_1][scaleIndex];\r\n        min = Math.min(min, val);\r\n        max = Math.max(max, val);\r\n    }\r\n    var scale = ColorScale.create({\r\n        listOrName: props.list.colors,\r\n        domain: [max, min],\r\n        minLabel: 'Hydrophobic',\r\n        maxLabel: 'Hydrophilic'\r\n    });\r\n    function color(location) {\r\n        var compId;\r\n        if (StructureElement.Location.is(location)) {\r\n            if (Unit.isAtomic(location.unit)) {\r\n                compId = getAtomicCompId(location.unit, location.element);\r\n            }\r\n            else {\r\n                compId = getCoarseCompId(location.unit, location.element);\r\n            }\r\n        }\r\n        else if (Bond.isLocation(location)) {\r\n            if (Unit.isAtomic(location.aUnit)) {\r\n                compId = getAtomicCompId(location.aUnit, location.aUnit.elements[location.aIndex]);\r\n            }\r\n            else {\r\n                compId = getCoarseCompId(location.aUnit, location.aUnit.elements[location.aIndex]);\r\n            }\r\n        }\r\n        return scale.color(compId ? hydrophobicity(compId, scaleIndex) : 0);\r\n    }\r\n    return {\r\n        factory: HydrophobicityColorTheme,\r\n        granularity: 'group',\r\n        preferSmoothing: true,\r\n        color: color,\r\n        props: props,\r\n        description: Description,\r\n        legend: scale ? scale.legend : undefined\r\n    };\r\n}\r\nexport var HydrophobicityColorThemeProvider = {\r\n    name: 'hydrophobicity',\r\n    label: 'Hydrophobicity',\r\n    category: \"Residue Property\" /* Residue */,\r\n    factory: HydrophobicityColorTheme,\r\n    getParams: getHydrophobicityColorThemeParams,\r\n    defaultValues: PD.getDefaultValues(HydrophobicityColorThemeParams),\r\n    isApplicable: function (ctx) { return !!ctx.structure; }\r\n};\r\n//# sourceMappingURL=hydrophobicity.js.map"]},"metadata":{},"sourceType":"module"}