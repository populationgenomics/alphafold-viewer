{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { addShaderDefines } from '../shader-code';\nimport { getUniformSetters, getUniformType } from './uniform';\nimport { getAttribType } from './buffer';\nimport { idFactory } from '../../mol-util/id-factory';\nimport { isDebugMode } from '../../mol-util/debug';\nvar getNextProgramId = idFactory();\n\nfunction getLocations(gl, program, schema) {\n  var locations = {};\n  Object.keys(schema).forEach(function (k) {\n    var spec = schema[k];\n\n    if (spec.type === 'attribute') {\n      var loc = gl.getAttribLocation(program, k); // unused attributes will result in a `-1` location which is usually fine\n      // if (loc === -1) console.info(`Could not get attribute location for '${k}'`)\n\n      locations[k] = loc;\n    } else if (spec.type === 'uniform' || spec.type === 'texture') {\n      var loc = gl.getUniformLocation(program, k); // unused uniforms will result in a `null` location which is usually fine\n      // if (loc === null) console.info(`Could not get uniform location for '${k}'`)\n\n      locations[k] = loc;\n    }\n  });\n  return locations;\n}\n\nfunction checkActiveAttributes(gl, program, schema) {\n  var attribCount = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (var i = 0; i < attribCount; ++i) {\n    var info = gl.getActiveAttrib(program, i);\n\n    if (info) {\n      var name_1 = info.name,\n          type = info.type;\n\n      if (name_1.startsWith('__activeAttribute')) {\n        // name assigned by `gl.shim.ts`, ignore for checks\n        continue;\n      }\n\n      if (name_1 === 'gl_InstanceID') continue; // WebGL2 built-in\n\n      if (name_1 === 'gl_VertexID') continue; // WebGL2 built-in\n\n      var spec = schema[name_1];\n\n      if (spec === undefined) {\n        throw new Error(\"missing 'uniform' or 'texture' with name '\" + name_1 + \"' in schema\");\n      }\n\n      if (spec.type !== 'attribute') {\n        throw new Error(\"'\" + name_1 + \"' must be of type 'attribute' but is '\" + spec.type + \"'\");\n      }\n\n      var attribType = getAttribType(gl, spec.kind, spec.itemSize);\n\n      if (attribType !== type) {\n        throw new Error(\"unexpected attribute type for \" + name_1);\n      }\n    }\n  }\n}\n\nfunction checkActiveUniforms(gl, program, schema) {\n  var attribCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (var i = 0; i < attribCount; ++i) {\n    var info = gl.getActiveUniform(program, i);\n\n    if (info) {\n      var name_2 = info.name,\n          type = info.type;\n\n      if (name_2.startsWith('__activeUniform')) {\n        // name assigned by `gl.shim.ts`, ignore for checks\n        continue;\n      }\n\n      var baseName = name_2.replace(/[[0-9]+\\]$/, ''); // 'array' uniforms\n\n      var spec = schema[baseName];\n\n      if (spec === undefined) {\n        throw new Error(\"missing 'uniform' or 'texture' with name '\" + name_2 + \"' in schema\");\n      }\n\n      if (spec.type === 'uniform') {\n        var uniformType = getUniformType(gl, spec.kind);\n\n        if (uniformType !== type) {\n          throw new Error(\"unexpected uniform type for \" + name_2);\n        }\n      } else if (spec.type === 'texture') {\n        if (spec.kind === 'image-float32' || spec.kind === 'image-uint8') {\n          if (type !== gl.SAMPLER_2D) {\n            throw new Error(\"unexpected sampler type for '\" + name_2 + \"'\");\n          }\n        } else if (spec.kind === 'volume-float32' || spec.kind === 'volume-uint8') {\n          if (type !== gl.SAMPLER_3D) {\n            throw new Error(\"unexpected sampler type for '\" + name_2 + \"'\");\n          }\n        } else {// TODO\n        }\n      } else {\n        throw new Error(\"'\" + name_2 + \"' must be of type 'uniform' or 'texture' but is '\" + spec.type + \"'\");\n      }\n    }\n  }\n}\n\nfunction checkProgram(gl, program) {\n  // no-op in FF on Mac, see https://bugzilla.mozilla.org/show_bug.cgi?id=1284425\n  // gl.validateProgram(program)\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    throw new Error(\"Could not compile WebGL program. \\n\\n\" + gl.getProgramInfoLog(program));\n  }\n}\n\nexport function getProgram(gl) {\n  var program = gl.createProgram();\n\n  if (program === null) {\n    throw new Error('Could not create WebGL program');\n  }\n\n  return program;\n}\nexport function createProgram(gl, state, extensions, getShader, props) {\n  var defineValues = props.defineValues,\n      _shaderCode = props.shaderCode,\n      schema = props.schema;\n  var program = getProgram(gl);\n  var programId = getNextProgramId();\n  var shaderCode = addShaderDefines(gl, extensions, defineValues, _shaderCode);\n  var vertShader = getShader('vert', shaderCode.vert);\n  var fragShader = getShader('frag', shaderCode.frag);\n  var locations;\n  var uniformSetters;\n\n  function init() {\n    vertShader.attach(program);\n    fragShader.attach(program);\n    gl.linkProgram(program);\n\n    if (isDebugMode) {\n      checkProgram(gl, program);\n    }\n\n    locations = getLocations(gl, program, schema);\n    uniformSetters = getUniformSetters(schema);\n\n    if (isDebugMode) {\n      checkActiveAttributes(gl, program, schema);\n      checkActiveUniforms(gl, program, schema);\n    }\n  }\n\n  init();\n  var destroyed = false;\n  return {\n    id: programId,\n    use: function () {\n      // console.log('use', programId)\n      state.currentProgramId = programId;\n      gl.useProgram(program);\n    },\n    setUniforms: function (uniformValues) {\n      for (var i = 0, il = uniformValues.length; i < il; ++i) {\n        var _a = uniformValues[i],\n            k = _a[0],\n            v = _a[1];\n\n        if (v) {\n          var l = locations[k];\n          if (l !== null) uniformSetters[k](gl, l, v.ref.value);\n        }\n      }\n    },\n    bindAttributes: function (attributeBuffers) {\n      for (var i = 0, il = attributeBuffers.length; i < il; ++i) {\n        var _a = attributeBuffers[i],\n            k = _a[0],\n            buffer = _a[1];\n        var l = locations[k];\n        if (l !== -1) buffer.bind(l);\n      }\n    },\n    bindTextures: function (textures, startingTargetUnit) {\n      for (var i = 0, il = textures.length; i < il; ++i) {\n        var _a = textures[i],\n            k = _a[0],\n            texture = _a[1];\n        var l = locations[k];\n\n        if (l !== null && l !== undefined) {\n          texture.bind(i + startingTargetUnit);\n          uniformSetters[k](gl, l, i + startingTargetUnit);\n        }\n      }\n    },\n    reset: function () {\n      program = getProgram(gl);\n      init();\n    },\n    destroy: function () {\n      if (destroyed) return;\n      vertShader.destroy();\n      fragShader.destroy();\n      gl.deleteProgram(program);\n      destroyed = true;\n    }\n  };\n}","map":{"version":3,"sources":["../../../src/mol-gl/webgl/program.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,SAAmC,gBAAnC,QAA2D,gBAA3D;AAGA,SAAS,iBAAT,EAA0C,cAA1C,QAAgF,WAAhF;AACA,SAA2B,aAA3B,QAAgD,UAAhD;AAEA,SAAS,SAAT,QAA0B,2BAA1B;AAEA,SAAS,WAAT,QAA4B,sBAA5B;AAIA,IAAM,gBAAgB,GAAG,SAAS,EAAlC;;AAgBA,SAAS,YAAT,CAAsB,EAAtB,EAA8C,OAA9C,EAAqE,MAArE,EAA6F;AACzF,MAAM,SAAS,GAAc,EAA7B;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAA,CAAA,EAAC;AACzB,QAAM,IAAI,GAAG,MAAM,CAAC,CAAD,CAAnB;;AACA,QAAI,IAAI,CAAC,IAAL,KAAc,WAAlB,EAA+B;AAC3B,UAAM,GAAG,GAAG,EAAE,CAAC,iBAAH,CAAqB,OAArB,EAA8B,CAA9B,CAAZ,CAD2B,CAE3B;AACA;;AACA,MAAA,SAAS,CAAC,CAAD,CAAT,GAAe,GAAf;AACH,KALD,MAKO,IAAI,IAAI,CAAC,IAAL,KAAc,SAAd,IAA2B,IAAI,CAAC,IAAL,KAAc,SAA7C,EAAwD;AAC3D,UAAM,GAAG,GAAG,EAAE,CAAC,kBAAH,CAAsB,OAAtB,EAA+B,CAA/B,CAAZ,CAD2D,CAE3D;AACA;;AACA,MAAA,SAAS,CAAC,CAAD,CAAT,GAAe,GAAf;AACH;AACJ,GAbD;AAcA,SAAO,SAAP;AACH;;AAED,SAAS,qBAAT,CAA+B,EAA/B,EAAuD,OAAvD,EAA8E,MAA9E,EAAsG;AAClG,MAAM,WAAW,GAAG,EAAE,CAAC,mBAAH,CAAuB,OAAvB,EAAgC,EAAE,CAAC,iBAAnC,CAApB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAApB,EAAiC,EAAE,CAAnC,EAAsC;AAClC,QAAM,IAAI,GAAG,EAAE,CAAC,eAAH,CAAmB,OAAnB,EAA4B,CAA5B,CAAb;;AACA,QAAI,IAAJ,EAAU;AACE,UAAA,MAAI,GAAW,IAAI,CAAf,IAAJ;AAAA,UAAM,IAAI,GAAK,IAAI,CAAT,IAAV;;AACR,UAAI,MAAI,CAAC,UAAL,CAAgB,mBAAhB,CAAJ,EAA0C;AACtC;AACA;AACH;;AACD,UAAI,MAAI,KAAK,eAAb,EAA8B,SANxB,CAMkC;;AACxC,UAAI,MAAI,KAAK,aAAb,EAA4B,SAPtB,CAOgC;;AACtC,UAAM,IAAI,GAAG,MAAM,CAAC,MAAD,CAAnB;;AACA,UAAI,IAAI,KAAK,SAAb,EAAwB;AACpB,cAAM,IAAI,KAAJ,CAAU,+CAA6C,MAA7C,GAAiD,aAA3D,CAAN;AACH;;AACD,UAAI,IAAI,CAAC,IAAL,KAAc,WAAlB,EAA+B;AAC3B,cAAM,IAAI,KAAJ,CAAU,MAAI,MAAJ,GAAQ,wCAAR,GAAiD,IAAI,CAAC,IAAtD,GAA0D,GAApE,CAAN;AACH;;AACD,UAAM,UAAU,GAAG,aAAa,CAAC,EAAD,EAAK,IAAI,CAAC,IAAV,EAAgB,IAAI,CAAC,QAArB,CAAhC;;AACA,UAAI,UAAU,KAAK,IAAnB,EAAyB;AACrB,cAAM,IAAI,KAAJ,CAAU,mCAAiC,MAA3C,CAAN;AACH;AACJ;AACJ;AACJ;;AAED,SAAS,mBAAT,CAA6B,EAA7B,EAAqD,OAArD,EAA4E,MAA5E,EAAoG;AAChG,MAAM,WAAW,GAAG,EAAE,CAAC,mBAAH,CAAuB,OAAvB,EAAgC,EAAE,CAAC,eAAnC,CAApB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAApB,EAAiC,EAAE,CAAnC,EAAsC;AAClC,QAAM,IAAI,GAAG,EAAE,CAAC,gBAAH,CAAoB,OAApB,EAA6B,CAA7B,CAAb;;AACA,QAAI,IAAJ,EAAU;AACE,UAAA,MAAI,GAAW,IAAI,CAAf,IAAJ;AAAA,UAAM,IAAI,GAAK,IAAI,CAAT,IAAV;;AACR,UAAI,MAAI,CAAC,UAAL,CAAgB,iBAAhB,CAAJ,EAAwC;AACpC;AACA;AACH;;AACD,UAAM,QAAQ,GAAG,MAAI,CAAC,OAAL,CAAa,YAAb,EAA2B,EAA3B,CAAjB,CANM,CAM2C;;AACjD,UAAM,IAAI,GAAG,MAAM,CAAC,QAAD,CAAnB;;AACA,UAAI,IAAI,KAAK,SAAb,EAAwB;AACpB,cAAM,IAAI,KAAJ,CAAU,+CAA6C,MAA7C,GAAiD,aAA3D,CAAN;AACH;;AACD,UAAI,IAAI,CAAC,IAAL,KAAc,SAAlB,EAA6B;AACzB,YAAM,WAAW,GAAG,cAAc,CAAC,EAAD,EAAK,IAAI,CAAC,IAAV,CAAlC;;AACA,YAAI,WAAW,KAAK,IAApB,EAA0B;AACtB,gBAAM,IAAI,KAAJ,CAAU,iCAA+B,MAAzC,CAAN;AACH;AACJ,OALD,MAKO,IAAI,IAAI,CAAC,IAAL,KAAc,SAAlB,EAA6B;AAChC,YAAI,IAAI,CAAC,IAAL,KAAc,eAAd,IAAiC,IAAI,CAAC,IAAL,KAAc,aAAnD,EAAkE;AAC9D,cAAI,IAAI,KAAK,EAAE,CAAC,UAAhB,EAA4B;AACxB,kBAAM,IAAI,KAAJ,CAAU,kCAAgC,MAAhC,GAAoC,GAA9C,CAAN;AACH;AACJ,SAJD,MAIO,IAAI,IAAI,CAAC,IAAL,KAAc,gBAAd,IAAkC,IAAI,CAAC,IAAL,KAAc,cAApD,EAAoE;AACvE,cAAI,IAAI,KAAM,EAA6B,CAAC,UAA5C,EAAwD;AACpD,kBAAM,IAAI,KAAJ,CAAU,kCAAgC,MAAhC,GAAoC,GAA9C,CAAN;AACH;AACJ,SAJM,MAIA,CACH;AACH;AACJ,OAZM,MAYA;AACH,cAAM,IAAI,KAAJ,CAAU,MAAI,MAAJ,GAAQ,mDAAR,GAA4D,IAAI,CAAC,IAAjE,GAAqE,GAA/E,CAAN;AACH;AACJ;AACJ;AACJ;;AAED,SAAS,YAAT,CAAsB,EAAtB,EAA8C,OAA9C,EAAmE;AAC/D;AACA;AACA,MAAI,CAAC,EAAE,CAAC,mBAAH,CAAuB,OAAvB,EAAgC,EAAE,CAAC,WAAnC,CAAL,EAAsD;AAClD,UAAM,IAAI,KAAJ,CAAU,0CAAwC,EAAE,CAAC,iBAAH,CAAqB,OAArB,CAAlD,CAAN;AACH;AACJ;;AAQD,OAAM,SAAU,UAAV,CAAqB,EAArB,EAA2C;AAC7C,MAAM,OAAO,GAAG,EAAE,CAAC,aAAH,EAAhB;;AACA,MAAI,OAAO,KAAK,IAAhB,EAAsB;AAClB,UAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACH;;AACD,SAAO,OAAP;AACH;AAID,OAAM,SAAU,aAAV,CAAwB,EAAxB,EAAgD,KAAhD,EAAmE,UAAnE,EAAgG,SAAhG,EAAyH,KAAzH,EAA4I;AACtI,MAAA,YAAY,GAAsC,KAAK,CAA3C,YAAZ;AAAA,MAA0B,WAAW,GAAa,KAAK,CAAlB,UAArC;AAAA,MAAuC,MAAM,GAAK,KAAK,CAAV,MAA7C;AAER,MAAI,OAAO,GAAG,UAAU,CAAC,EAAD,CAAxB;AACA,MAAM,SAAS,GAAG,gBAAgB,EAAlC;AAEA,MAAM,UAAU,GAAG,gBAAgB,CAAC,EAAD,EAAK,UAAL,EAAiB,YAAjB,EAA+B,WAA/B,CAAnC;AACA,MAAM,UAAU,GAAG,SAAS,CAAC,MAAD,EAAS,UAAU,CAAC,IAApB,CAA5B;AACA,MAAM,UAAU,GAAG,SAAS,CAAC,MAAD,EAAS,UAAU,CAAC,IAApB,CAA5B;AAEA,MAAI,SAAJ;AACA,MAAI,cAAJ;;AAEA,WAAS,IAAT,GAAa;AACT,IAAA,UAAU,CAAC,MAAX,CAAkB,OAAlB;AACA,IAAA,UAAU,CAAC,MAAX,CAAkB,OAAlB;AACA,IAAA,EAAE,CAAC,WAAH,CAAe,OAAf;;AACA,QAAI,WAAJ,EAAiB;AACb,MAAA,YAAY,CAAC,EAAD,EAAK,OAAL,CAAZ;AACH;;AAED,IAAA,SAAS,GAAG,YAAY,CAAC,EAAD,EAAK,OAAL,EAAc,MAAd,CAAxB;AACA,IAAA,cAAc,GAAG,iBAAiB,CAAC,MAAD,CAAlC;;AAEA,QAAI,WAAJ,EAAiB;AACb,MAAA,qBAAqB,CAAC,EAAD,EAAK,OAAL,EAAc,MAAd,CAArB;AACA,MAAA,mBAAmB,CAAC,EAAD,EAAK,OAAL,EAAc,MAAd,CAAnB;AACH;AACJ;;AACD,EAAA,IAAI;AAEJ,MAAI,SAAS,GAAG,KAAhB;AAEA,SAAO;AACH,IAAA,EAAE,EAAE,SADD;AAGH,IAAA,GAAG,EAAE,YAAA;AACD;AACA,MAAA,KAAK,CAAC,gBAAN,GAAyB,SAAzB;AACA,MAAA,EAAE,CAAC,UAAH,CAAc,OAAd;AACH,KAPE;AAQH,IAAA,WAAW,EAAE,UAAC,aAAD,EAA4B;AACrC,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,aAAa,CAAC,MAAnC,EAA2C,CAAC,GAAG,EAA/C,EAAmD,EAAE,CAArD,EAAwD;AAC9C,YAAA,EAAA,GAAS,aAAa,CAAC,CAAD,CAAtB;AAAA,YAAC,CAAC,GAAA,EAAA,CAAA,CAAA,CAAF;AAAA,YAAI,CAAC,GAAA,EAAA,CAAA,CAAA,CAAL;;AACN,YAAI,CAAJ,EAAO;AACH,cAAM,CAAC,GAAG,SAAS,CAAC,CAAD,CAAnB;AACA,cAAI,CAAC,KAAK,IAAV,EAAgB,cAAc,CAAC,CAAD,CAAd,CAAkB,EAAlB,EAAsB,CAAtB,EAAyB,CAAC,CAAC,GAAF,CAAM,KAA/B;AACnB;AACJ;AACJ,KAhBE;AAiBH,IAAA,cAAc,EAAE,UAAC,gBAAD,EAAmC;AAC/C,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,gBAAgB,CAAC,MAAtC,EAA8C,CAAC,GAAG,EAAlD,EAAsD,EAAE,CAAxD,EAA2D;AACjD,YAAA,EAAA,GAAc,gBAAgB,CAAC,CAAD,CAA9B;AAAA,YAAC,CAAC,GAAA,EAAA,CAAA,CAAA,CAAF;AAAA,YAAI,MAAM,GAAA,EAAA,CAAA,CAAA,CAAV;AACN,YAAM,CAAC,GAAG,SAAS,CAAC,CAAD,CAAnB;AACA,YAAI,CAAC,KAAK,CAAC,CAAX,EAAc,MAAM,CAAC,IAAP,CAAY,CAAZ;AACjB;AACJ,KAvBE;AAwBH,IAAA,YAAY,EAAE,UAAC,QAAD,EAAqB,kBAArB,EAA+C;AACzD,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,QAAQ,CAAC,MAA9B,EAAsC,CAAC,GAAG,EAA1C,EAA8C,EAAE,CAAhD,EAAmD;AACzC,YAAA,EAAA,GAAe,QAAQ,CAAC,CAAD,CAAvB;AAAA,YAAC,CAAC,GAAA,EAAA,CAAA,CAAA,CAAF;AAAA,YAAI,OAAO,GAAA,EAAA,CAAA,CAAA,CAAX;AACN,YAAM,CAAC,GAAG,SAAS,CAAC,CAAD,CAAnB;;AACA,YAAI,CAAC,KAAK,IAAN,IAAc,CAAC,KAAK,SAAxB,EAAmC;AAC/B,UAAA,OAAO,CAAC,IAAR,CAAc,CAAC,GAAG,kBAAlB;AACA,UAAA,cAAc,CAAC,CAAD,CAAd,CAAkB,EAAlB,EAAsB,CAAtB,EAA0B,CAAC,GAAG,kBAA9B;AACH;AACJ;AACJ,KAjCE;AAmCH,IAAA,KAAK,EAAE,YAAA;AACH,MAAA,OAAO,GAAG,UAAU,CAAC,EAAD,CAApB;AACA,MAAA,IAAI;AACP,KAtCE;AAuCH,IAAA,OAAO,EAAE,YAAA;AACL,UAAI,SAAJ,EAAe;AACf,MAAA,UAAU,CAAC,OAAX;AACA,MAAA,UAAU,CAAC,OAAX;AACA,MAAA,EAAE,CAAC,aAAH,CAAiB,OAAjB;AACA,MAAA,SAAS,GAAG,IAAZ;AACH;AA7CE,GAAP;AA+CH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { addShaderDefines } from '../shader-code';\r\nimport { getUniformSetters, getUniformType } from './uniform';\r\nimport { getAttribType } from './buffer';\r\nimport { idFactory } from '../../mol-util/id-factory';\r\nimport { isDebugMode } from '../../mol-util/debug';\r\nvar getNextProgramId = idFactory();\r\nfunction getLocations(gl, program, schema) {\r\n    var locations = {};\r\n    Object.keys(schema).forEach(function (k) {\r\n        var spec = schema[k];\r\n        if (spec.type === 'attribute') {\r\n            var loc = gl.getAttribLocation(program, k);\r\n            // unused attributes will result in a `-1` location which is usually fine\r\n            // if (loc === -1) console.info(`Could not get attribute location for '${k}'`)\r\n            locations[k] = loc;\r\n        }\r\n        else if (spec.type === 'uniform' || spec.type === 'texture') {\r\n            var loc = gl.getUniformLocation(program, k);\r\n            // unused uniforms will result in a `null` location which is usually fine\r\n            // if (loc === null) console.info(`Could not get uniform location for '${k}'`)\r\n            locations[k] = loc;\r\n        }\r\n    });\r\n    return locations;\r\n}\r\nfunction checkActiveAttributes(gl, program, schema) {\r\n    var attribCount = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n    for (var i = 0; i < attribCount; ++i) {\r\n        var info = gl.getActiveAttrib(program, i);\r\n        if (info) {\r\n            var name_1 = info.name, type = info.type;\r\n            if (name_1.startsWith('__activeAttribute')) {\r\n                // name assigned by `gl.shim.ts`, ignore for checks\r\n                continue;\r\n            }\r\n            if (name_1 === 'gl_InstanceID')\r\n                continue; // WebGL2 built-in\r\n            if (name_1 === 'gl_VertexID')\r\n                continue; // WebGL2 built-in\r\n            var spec = schema[name_1];\r\n            if (spec === undefined) {\r\n                throw new Error(\"missing 'uniform' or 'texture' with name '\" + name_1 + \"' in schema\");\r\n            }\r\n            if (spec.type !== 'attribute') {\r\n                throw new Error(\"'\" + name_1 + \"' must be of type 'attribute' but is '\" + spec.type + \"'\");\r\n            }\r\n            var attribType = getAttribType(gl, spec.kind, spec.itemSize);\r\n            if (attribType !== type) {\r\n                throw new Error(\"unexpected attribute type for \" + name_1);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction checkActiveUniforms(gl, program, schema) {\r\n    var attribCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n    for (var i = 0; i < attribCount; ++i) {\r\n        var info = gl.getActiveUniform(program, i);\r\n        if (info) {\r\n            var name_2 = info.name, type = info.type;\r\n            if (name_2.startsWith('__activeUniform')) {\r\n                // name assigned by `gl.shim.ts`, ignore for checks\r\n                continue;\r\n            }\r\n            var baseName = name_2.replace(/[[0-9]+\\]$/, ''); // 'array' uniforms\r\n            var spec = schema[baseName];\r\n            if (spec === undefined) {\r\n                throw new Error(\"missing 'uniform' or 'texture' with name '\" + name_2 + \"' in schema\");\r\n            }\r\n            if (spec.type === 'uniform') {\r\n                var uniformType = getUniformType(gl, spec.kind);\r\n                if (uniformType !== type) {\r\n                    throw new Error(\"unexpected uniform type for \" + name_2);\r\n                }\r\n            }\r\n            else if (spec.type === 'texture') {\r\n                if (spec.kind === 'image-float32' || spec.kind === 'image-uint8') {\r\n                    if (type !== gl.SAMPLER_2D) {\r\n                        throw new Error(\"unexpected sampler type for '\" + name_2 + \"'\");\r\n                    }\r\n                }\r\n                else if (spec.kind === 'volume-float32' || spec.kind === 'volume-uint8') {\r\n                    if (type !== gl.SAMPLER_3D) {\r\n                        throw new Error(\"unexpected sampler type for '\" + name_2 + \"'\");\r\n                    }\r\n                }\r\n                else {\r\n                    // TODO\r\n                }\r\n            }\r\n            else {\r\n                throw new Error(\"'\" + name_2 + \"' must be of type 'uniform' or 'texture' but is '\" + spec.type + \"'\");\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction checkProgram(gl, program) {\r\n    // no-op in FF on Mac, see https://bugzilla.mozilla.org/show_bug.cgi?id=1284425\r\n    // gl.validateProgram(program)\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        throw new Error(\"Could not compile WebGL program. \\n\\n\" + gl.getProgramInfoLog(program));\r\n    }\r\n}\r\nexport function getProgram(gl) {\r\n    var program = gl.createProgram();\r\n    if (program === null) {\r\n        throw new Error('Could not create WebGL program');\r\n    }\r\n    return program;\r\n}\r\nexport function createProgram(gl, state, extensions, getShader, props) {\r\n    var defineValues = props.defineValues, _shaderCode = props.shaderCode, schema = props.schema;\r\n    var program = getProgram(gl);\r\n    var programId = getNextProgramId();\r\n    var shaderCode = addShaderDefines(gl, extensions, defineValues, _shaderCode);\r\n    var vertShader = getShader('vert', shaderCode.vert);\r\n    var fragShader = getShader('frag', shaderCode.frag);\r\n    var locations;\r\n    var uniformSetters;\r\n    function init() {\r\n        vertShader.attach(program);\r\n        fragShader.attach(program);\r\n        gl.linkProgram(program);\r\n        if (isDebugMode) {\r\n            checkProgram(gl, program);\r\n        }\r\n        locations = getLocations(gl, program, schema);\r\n        uniformSetters = getUniformSetters(schema);\r\n        if (isDebugMode) {\r\n            checkActiveAttributes(gl, program, schema);\r\n            checkActiveUniforms(gl, program, schema);\r\n        }\r\n    }\r\n    init();\r\n    var destroyed = false;\r\n    return {\r\n        id: programId,\r\n        use: function () {\r\n            // console.log('use', programId)\r\n            state.currentProgramId = programId;\r\n            gl.useProgram(program);\r\n        },\r\n        setUniforms: function (uniformValues) {\r\n            for (var i = 0, il = uniformValues.length; i < il; ++i) {\r\n                var _a = uniformValues[i], k = _a[0], v = _a[1];\r\n                if (v) {\r\n                    var l = locations[k];\r\n                    if (l !== null)\r\n                        uniformSetters[k](gl, l, v.ref.value);\r\n                }\r\n            }\r\n        },\r\n        bindAttributes: function (attributeBuffers) {\r\n            for (var i = 0, il = attributeBuffers.length; i < il; ++i) {\r\n                var _a = attributeBuffers[i], k = _a[0], buffer = _a[1];\r\n                var l = locations[k];\r\n                if (l !== -1)\r\n                    buffer.bind(l);\r\n            }\r\n        },\r\n        bindTextures: function (textures, startingTargetUnit) {\r\n            for (var i = 0, il = textures.length; i < il; ++i) {\r\n                var _a = textures[i], k = _a[0], texture = _a[1];\r\n                var l = locations[k];\r\n                if (l !== null && l !== undefined) {\r\n                    texture.bind((i + startingTargetUnit));\r\n                    uniformSetters[k](gl, l, (i + startingTargetUnit));\r\n                }\r\n            }\r\n        },\r\n        reset: function () {\r\n            program = getProgram(gl);\r\n            init();\r\n        },\r\n        destroy: function () {\r\n            if (destroyed)\r\n                return;\r\n            vertShader.destroy();\r\n            fragShader.destroy();\r\n            gl.deleteProgram(program);\r\n            destroyed = true;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=program.js.map"]},"metadata":{},"sourceType":"module"}