{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { Structure, Unit, Bond } from '../../../mol-model/structure';\nimport { Features, FeaturesBuilder } from './features';\nimport { ValenceModelProvider } from '../valence-model';\nimport { interactionTypeLabel } from './common';\nimport { IntraContactsBuilder, InterContactsBuilder } from './contacts-builder';\nimport { IntMap } from '../../../mol-data/int';\nimport { addUnitContacts, addStructureContacts, ContactsParams } from './contacts';\nimport { HalogenDonorProvider, HalogenAcceptorProvider, HalogenBondsProvider } from './halogen-bonds';\nimport { HydrogenDonorProvider, WeakHydrogenDonorProvider, HydrogenAcceptorProvider, HydrogenBondsProvider, WeakHydrogenBondsProvider } from './hydrogen-bonds';\nimport { NegativChargeProvider, PositiveChargeProvider, AromaticRingProvider, IonicProvider, PiStackingProvider, CationPiProvider } from './charged';\nimport { HydrophobicAtomProvider, HydrophobicProvider } from './hydrophobic';\nimport { SetUtils } from '../../../mol-util/set';\nimport { MetalCoordinationProvider, MetalProvider, MetalBindingProvider } from './metal';\nimport { refineInteractions } from './refine';\nimport { DataLocation } from '../../../mol-model/location';\nimport { CentroidHelper } from '../../../mol-math/geometry/centroid-helper';\nimport { DataLoci } from '../../../mol-model/loci';\nimport { bondLabel } from '../../../mol-theme/label';\nimport { ObjectKeys } from '../../../mol-util/type-helpers';\nexport { Interactions };\nvar Interactions;\n\n(function (Interactions) {\n  function Location(interactions, structure, unitA, indexA, unitB, indexB) {\n    return DataLocation('interactions', {\n      structure: structure,\n      interactions: interactions\n    }, {\n      unitA: unitA,\n      indexA: indexA,\n      unitB: unitB,\n      indexB: indexB\n    });\n  }\n\n  Interactions.Location = Location;\n\n  function isLocation(x) {\n    return !!x && x.kind === 'data-location' && x.tag === 'interactions';\n  }\n\n  Interactions.isLocation = isLocation;\n\n  function areLocationsEqual(locA, locB) {\n    return locA.data.structure === locB.data.structure && locA.data.interactions === locB.data.interactions && locA.element.indexA === locB.element.indexA && locA.element.indexB === locB.element.indexB && locA.element.unitA === locB.element.unitA && locA.element.unitB === locB.element.unitB;\n  }\n\n  Interactions.areLocationsEqual = areLocationsEqual;\n\n  function _label(interactions, element) {\n    var unitA = element.unitA,\n        indexA = element.indexA,\n        unitB = element.unitB,\n        indexB = element.indexB;\n    var contacts = interactions.contacts,\n        unitsContacts = interactions.unitsContacts;\n\n    if (unitA === unitB) {\n      var contacts_1 = unitsContacts.get(unitA.id);\n      var idx = contacts_1.getDirectedEdgeIndex(indexA, indexB);\n      return interactionTypeLabel(contacts_1.edgeProps.type[idx]);\n    } else {\n      var idx = contacts.getEdgeIndex(indexA, unitA.id, indexB, unitB.id);\n      return interactionTypeLabel(contacts.edges[idx].props.type);\n    }\n  }\n\n  function locationLabel(location) {\n    return _label(location.data.interactions, location.element);\n  }\n\n  Interactions.locationLabel = locationLabel;\n\n  function Loci(structure, interactions, elements) {\n    return DataLoci('interactions', {\n      structure: structure,\n      interactions: interactions\n    }, elements, function (boundingSphere) {\n      return getBoundingSphere(interactions, elements, boundingSphere);\n    }, function () {\n      return getLabel(structure, interactions, elements);\n    });\n  }\n\n  Interactions.Loci = Loci;\n\n  function isLoci(x) {\n    return !!x && x.kind === 'data-loci' && x.tag === 'interactions';\n  }\n\n  Interactions.isLoci = isLoci;\n\n  function getBoundingSphere(interactions, elements, boundingSphere) {\n    var unitsFeatures = interactions.unitsFeatures;\n    return CentroidHelper.fromPairProvider(elements.length, function (i, pA, pB) {\n      var e = elements[i];\n      Features.setPosition(pA, e.unitA, e.indexA, unitsFeatures.get(e.unitA.id));\n      Features.setPosition(pB, e.unitB, e.indexB, unitsFeatures.get(e.unitB.id));\n    }, boundingSphere);\n  }\n\n  Interactions.getBoundingSphere = getBoundingSphere;\n\n  function getLabel(structure, interactions, elements) {\n    var element = elements[0];\n    if (element === undefined) return '';\n    var unitA = element.unitA,\n        indexA = element.indexA,\n        unitB = element.unitB,\n        indexB = element.indexB;\n    var unitsFeatures = interactions.unitsFeatures;\n\n    var _a = unitsFeatures.get(unitA.id),\n        mA = _a.members,\n        oA = _a.offsets;\n\n    var _b = unitsFeatures.get(unitB.id),\n        mB = _b.members,\n        oB = _b.offsets;\n\n    var options = {\n      granularity: 'element'\n    };\n\n    if (oA[indexA + 1] - oA[indexA] > 1 || oB[indexB + 1] - oB[indexB] > 1) {\n      options.granularity = 'residue';\n    }\n\n    return [_label(interactions, element), bondLabel(Bond.Location(structure, unitA, mA[oA[indexA]], structure, unitB, mB[oB[indexB]]), options)].join('</br>');\n  }\n\n  Interactions.getLabel = getLabel;\n})(Interactions || (Interactions = {}));\n\nvar FeatureProviders = [HydrogenDonorProvider, WeakHydrogenDonorProvider, HydrogenAcceptorProvider, NegativChargeProvider, PositiveChargeProvider, AromaticRingProvider, HalogenDonorProvider, HalogenAcceptorProvider, HydrophobicAtomProvider, MetalProvider, MetalBindingProvider];\nvar ContactProviders = {\n  'ionic': IonicProvider,\n  'pi-stacking': PiStackingProvider,\n  'cation-pi': CationPiProvider,\n  'halogen-bonds': HalogenBondsProvider,\n  'hydrogen-bonds': HydrogenBondsProvider,\n  'weak-hydrogen-bonds': WeakHydrogenBondsProvider,\n  'hydrophobic': HydrophobicProvider,\n  'metal-coordination': MetalCoordinationProvider\n};\n\nfunction getProvidersParams(defaultOn) {\n  if (defaultOn === void 0) {\n    defaultOn = [];\n  }\n\n  var params = Object.create(null);\n  Object.keys(ContactProviders).forEach(function (k) {\n    params[k] = PD.MappedStatic(defaultOn.includes(k) ? 'on' : 'off', {\n      on: PD.Group(ContactProviders[k].params),\n      off: PD.Group({})\n    }, {\n      cycle: true\n    });\n  });\n  return params;\n}\n\nexport var ContactProviderParams = getProvidersParams([// 'ionic',\n'cation-pi', 'pi-stacking', 'hydrogen-bonds', 'halogen-bonds', // 'hydrophobic',\n'metal-coordination' // 'weak-hydrogen-bonds',\n]);\nexport var InteractionsParams = {\n  providers: PD.Group(ContactProviderParams, {\n    isFlat: true\n  }),\n  contacts: PD.Group(ContactsParams, {\n    label: 'Advanced Options'\n  })\n};\nexport function computeInteractions(ctx, structure, props) {\n  return __awaiter(this, void 0, void 0, function () {\n    var p, contactTesters, requiredFeatures, featureProviders, unitsFeatures, unitsContacts, i, il, group, features, intraUnitContacts, j, jl, u, contacts, interactions;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          p = __assign(__assign({}, PD.getDefaultValues(InteractionsParams)), props);\n          return [4\n          /*yield*/\n          , ValenceModelProvider.attach(ctx, structure)];\n\n        case 1:\n          _a.sent();\n\n          contactTesters = [];\n          ObjectKeys(ContactProviders).forEach(function (k) {\n            var _a = p.providers[k],\n                name = _a.name,\n                params = _a.params;\n\n            if (name === 'on') {\n              contactTesters.push(ContactProviders[k].createTester(params));\n            }\n          });\n          requiredFeatures = new Set();\n          contactTesters.forEach(function (l) {\n            return SetUtils.add(requiredFeatures, l.requiredFeatures);\n          });\n          featureProviders = FeatureProviders.filter(function (f) {\n            return SetUtils.areIntersecting(requiredFeatures, f.types);\n          });\n          unitsFeatures = IntMap.Mutable();\n          unitsContacts = IntMap.Mutable();\n          i = 0, il = structure.unitSymmetryGroups.length;\n          _a.label = 2;\n\n        case 2:\n          if (!(i < il)) return [3\n          /*break*/\n          , 6];\n          group = structure.unitSymmetryGroups[i];\n          if (!ctx.runtime.shouldUpdate) return [3\n          /*break*/\n          , 4];\n          return [4\n          /*yield*/\n          , ctx.runtime.update({\n            message: 'computing interactions',\n            current: i,\n            max: il\n          })];\n\n        case 3:\n          _a.sent();\n\n          _a.label = 4;\n\n        case 4:\n          features = findUnitFeatures(structure, group.units[0], featureProviders);\n          intraUnitContacts = findIntraUnitContacts(structure, group.units[0], features, contactTesters, p.contacts);\n\n          for (j = 0, jl = group.units.length; j < jl; ++j) {\n            u = group.units[j];\n            unitsFeatures.set(u.id, features);\n            unitsContacts.set(u.id, intraUnitContacts);\n          }\n\n          _a.label = 5;\n\n        case 5:\n          ++i;\n          return [3\n          /*break*/\n          , 2];\n\n        case 6:\n          contacts = findInterUnitContacts(structure, unitsFeatures, contactTesters, p.contacts);\n          interactions = {\n            unitsFeatures: unitsFeatures,\n            unitsContacts: unitsContacts,\n            contacts: contacts\n          };\n          refineInteractions(structure, interactions);\n          return [2\n          /*return*/\n          , interactions];\n      }\n    });\n  });\n}\n\nfunction findUnitFeatures(structure, unit, featureProviders) {\n  var count = unit.elements.length;\n  var featuresBuilder = FeaturesBuilder.create(count, count / 2);\n\n  if (Unit.isAtomic(unit)) {\n    for (var _i = 0, featureProviders_1 = featureProviders; _i < featureProviders_1.length; _i++) {\n      var fp = featureProviders_1[_i];\n      fp.add(structure, unit, featuresBuilder);\n    }\n  }\n\n  return featuresBuilder.getFeatures(count);\n}\n\nfunction findIntraUnitContacts(structure, unit, features, contactTesters, props) {\n  var builder = IntraContactsBuilder.create(features, unit.elements.length);\n\n  if (Unit.isAtomic(unit)) {\n    addUnitContacts(structure, unit, features, builder, contactTesters, props);\n  }\n\n  return builder.getContacts();\n}\n\nfunction findInterUnitContacts(structure, unitsFeatures, contactTesters, props) {\n  var builder = InterContactsBuilder.create();\n  Structure.eachUnitPair(structure, function (unitA, unitB) {\n    var featuresA = unitsFeatures.get(unitA.id);\n    var featuresB = unitsFeatures.get(unitB.id);\n    addStructureContacts(structure, unitA, featuresA, unitB, featuresB, builder, contactTesters, props);\n  }, {\n    maxRadius: Math.max.apply(Math, contactTesters.map(function (t) {\n      return t.maxDistance;\n    })),\n    validUnit: function (unit) {\n      return Unit.isAtomic(unit);\n    },\n    validUnitPair: function (unitA, unitB) {\n      return Structure.validUnitPair(structure, unitA, unitB);\n    }\n  });\n  return builder.getContacts(unitsFeatures);\n}","map":{"version":3,"sources":["../../../../src/mol-model-props/computed/interactions/interactions.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { Structure, Unit, Bond } from '../../../mol-model/structure';\r\nimport { Features, FeaturesBuilder } from './features';\r\nimport { ValenceModelProvider } from '../valence-model';\r\nimport { interactionTypeLabel } from './common';\r\nimport { IntraContactsBuilder, InterContactsBuilder } from './contacts-builder';\r\nimport { IntMap } from '../../../mol-data/int';\r\nimport { addUnitContacts, addStructureContacts, ContactsParams } from './contacts';\r\nimport { HalogenDonorProvider, HalogenAcceptorProvider, HalogenBondsProvider } from './halogen-bonds';\r\nimport { HydrogenDonorProvider, WeakHydrogenDonorProvider, HydrogenAcceptorProvider, HydrogenBondsProvider, WeakHydrogenBondsProvider } from './hydrogen-bonds';\r\nimport { NegativChargeProvider, PositiveChargeProvider, AromaticRingProvider, IonicProvider, PiStackingProvider, CationPiProvider } from './charged';\r\nimport { HydrophobicAtomProvider, HydrophobicProvider } from './hydrophobic';\r\nimport { SetUtils } from '../../../mol-util/set';\r\nimport { MetalCoordinationProvider, MetalProvider, MetalBindingProvider } from './metal';\r\nimport { refineInteractions } from './refine';\r\nimport { DataLocation } from '../../../mol-model/location';\r\nimport { CentroidHelper } from '../../../mol-math/geometry/centroid-helper';\r\nimport { DataLoci } from '../../../mol-model/loci';\r\nimport { bondLabel } from '../../../mol-theme/label';\r\nimport { ObjectKeys } from '../../../mol-util/type-helpers';\r\nexport { Interactions };\r\nvar Interactions;\r\n(function (Interactions) {\r\n    function Location(interactions, structure, unitA, indexA, unitB, indexB) {\r\n        return DataLocation('interactions', { structure: structure, interactions: interactions }, { unitA: unitA, indexA: indexA, unitB: unitB, indexB: indexB });\r\n    }\r\n    Interactions.Location = Location;\r\n    function isLocation(x) {\r\n        return !!x && x.kind === 'data-location' && x.tag === 'interactions';\r\n    }\r\n    Interactions.isLocation = isLocation;\r\n    function areLocationsEqual(locA, locB) {\r\n        return (locA.data.structure === locB.data.structure &&\r\n            locA.data.interactions === locB.data.interactions &&\r\n            locA.element.indexA === locB.element.indexA &&\r\n            locA.element.indexB === locB.element.indexB &&\r\n            locA.element.unitA === locB.element.unitA &&\r\n            locA.element.unitB === locB.element.unitB);\r\n    }\r\n    Interactions.areLocationsEqual = areLocationsEqual;\r\n    function _label(interactions, element) {\r\n        var unitA = element.unitA, indexA = element.indexA, unitB = element.unitB, indexB = element.indexB;\r\n        var contacts = interactions.contacts, unitsContacts = interactions.unitsContacts;\r\n        if (unitA === unitB) {\r\n            var contacts_1 = unitsContacts.get(unitA.id);\r\n            var idx = contacts_1.getDirectedEdgeIndex(indexA, indexB);\r\n            return interactionTypeLabel(contacts_1.edgeProps.type[idx]);\r\n        }\r\n        else {\r\n            var idx = contacts.getEdgeIndex(indexA, unitA.id, indexB, unitB.id);\r\n            return interactionTypeLabel(contacts.edges[idx].props.type);\r\n        }\r\n    }\r\n    function locationLabel(location) {\r\n        return _label(location.data.interactions, location.element);\r\n    }\r\n    Interactions.locationLabel = locationLabel;\r\n    function Loci(structure, interactions, elements) {\r\n        return DataLoci('interactions', { structure: structure, interactions: interactions }, elements, function (boundingSphere) { return getBoundingSphere(interactions, elements, boundingSphere); }, function () { return getLabel(structure, interactions, elements); });\r\n    }\r\n    Interactions.Loci = Loci;\r\n    function isLoci(x) {\r\n        return !!x && x.kind === 'data-loci' && x.tag === 'interactions';\r\n    }\r\n    Interactions.isLoci = isLoci;\r\n    function getBoundingSphere(interactions, elements, boundingSphere) {\r\n        var unitsFeatures = interactions.unitsFeatures;\r\n        return CentroidHelper.fromPairProvider(elements.length, function (i, pA, pB) {\r\n            var e = elements[i];\r\n            Features.setPosition(pA, e.unitA, e.indexA, unitsFeatures.get(e.unitA.id));\r\n            Features.setPosition(pB, e.unitB, e.indexB, unitsFeatures.get(e.unitB.id));\r\n        }, boundingSphere);\r\n    }\r\n    Interactions.getBoundingSphere = getBoundingSphere;\r\n    function getLabel(structure, interactions, elements) {\r\n        var element = elements[0];\r\n        if (element === undefined)\r\n            return '';\r\n        var unitA = element.unitA, indexA = element.indexA, unitB = element.unitB, indexB = element.indexB;\r\n        var unitsFeatures = interactions.unitsFeatures;\r\n        var _a = unitsFeatures.get(unitA.id), mA = _a.members, oA = _a.offsets;\r\n        var _b = unitsFeatures.get(unitB.id), mB = _b.members, oB = _b.offsets;\r\n        var options = { granularity: 'element' };\r\n        if (oA[indexA + 1] - oA[indexA] > 1 || oB[indexB + 1] - oB[indexB] > 1) {\r\n            options.granularity = 'residue';\r\n        }\r\n        return [\r\n            _label(interactions, element),\r\n            bondLabel(Bond.Location(structure, unitA, mA[oA[indexA]], structure, unitB, mB[oB[indexB]]), options)\r\n        ].join('</br>');\r\n    }\r\n    Interactions.getLabel = getLabel;\r\n})(Interactions || (Interactions = {}));\r\nvar FeatureProviders = [\r\n    HydrogenDonorProvider, WeakHydrogenDonorProvider, HydrogenAcceptorProvider,\r\n    NegativChargeProvider, PositiveChargeProvider, AromaticRingProvider,\r\n    HalogenDonorProvider, HalogenAcceptorProvider,\r\n    HydrophobicAtomProvider,\r\n    MetalProvider, MetalBindingProvider,\r\n];\r\nvar ContactProviders = {\r\n    'ionic': IonicProvider,\r\n    'pi-stacking': PiStackingProvider,\r\n    'cation-pi': CationPiProvider,\r\n    'halogen-bonds': HalogenBondsProvider,\r\n    'hydrogen-bonds': HydrogenBondsProvider,\r\n    'weak-hydrogen-bonds': WeakHydrogenBondsProvider,\r\n    'hydrophobic': HydrophobicProvider,\r\n    'metal-coordination': MetalCoordinationProvider,\r\n};\r\nfunction getProvidersParams(defaultOn) {\r\n    if (defaultOn === void 0) { defaultOn = []; }\r\n    var params = Object.create(null);\r\n    Object.keys(ContactProviders).forEach(function (k) {\r\n        params[k] = PD.MappedStatic(defaultOn.includes(k) ? 'on' : 'off', {\r\n            on: PD.Group(ContactProviders[k].params),\r\n            off: PD.Group({})\r\n        }, { cycle: true });\r\n    });\r\n    return params;\r\n}\r\nexport var ContactProviderParams = getProvidersParams([\r\n    // 'ionic',\r\n    'cation-pi',\r\n    'pi-stacking',\r\n    'hydrogen-bonds',\r\n    'halogen-bonds',\r\n    // 'hydrophobic',\r\n    'metal-coordination',\r\n    // 'weak-hydrogen-bonds',\r\n]);\r\nexport var InteractionsParams = {\r\n    providers: PD.Group(ContactProviderParams, { isFlat: true }),\r\n    contacts: PD.Group(ContactsParams, { label: 'Advanced Options' }),\r\n};\r\nexport function computeInteractions(ctx, structure, props) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var p, contactTesters, requiredFeatures, featureProviders, unitsFeatures, unitsContacts, i, il, group, features, intraUnitContacts, j, jl, u, contacts, interactions;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    p = __assign(__assign({}, PD.getDefaultValues(InteractionsParams)), props);\r\n                    return [4 /*yield*/, ValenceModelProvider.attach(ctx, structure)];\r\n                case 1:\r\n                    _a.sent();\r\n                    contactTesters = [];\r\n                    ObjectKeys(ContactProviders).forEach(function (k) {\r\n                        var _a = p.providers[k], name = _a.name, params = _a.params;\r\n                        if (name === 'on') {\r\n                            contactTesters.push(ContactProviders[k].createTester(params));\r\n                        }\r\n                    });\r\n                    requiredFeatures = new Set();\r\n                    contactTesters.forEach(function (l) { return SetUtils.add(requiredFeatures, l.requiredFeatures); });\r\n                    featureProviders = FeatureProviders.filter(function (f) { return SetUtils.areIntersecting(requiredFeatures, f.types); });\r\n                    unitsFeatures = IntMap.Mutable();\r\n                    unitsContacts = IntMap.Mutable();\r\n                    i = 0, il = structure.unitSymmetryGroups.length;\r\n                    _a.label = 2;\r\n                case 2:\r\n                    if (!(i < il)) return [3 /*break*/, 6];\r\n                    group = structure.unitSymmetryGroups[i];\r\n                    if (!ctx.runtime.shouldUpdate) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, ctx.runtime.update({ message: 'computing interactions', current: i, max: il })];\r\n                case 3:\r\n                    _a.sent();\r\n                    _a.label = 4;\r\n                case 4:\r\n                    features = findUnitFeatures(structure, group.units[0], featureProviders);\r\n                    intraUnitContacts = findIntraUnitContacts(structure, group.units[0], features, contactTesters, p.contacts);\r\n                    for (j = 0, jl = group.units.length; j < jl; ++j) {\r\n                        u = group.units[j];\r\n                        unitsFeatures.set(u.id, features);\r\n                        unitsContacts.set(u.id, intraUnitContacts);\r\n                    }\r\n                    _a.label = 5;\r\n                case 5:\r\n                    ++i;\r\n                    return [3 /*break*/, 2];\r\n                case 6:\r\n                    contacts = findInterUnitContacts(structure, unitsFeatures, contactTesters, p.contacts);\r\n                    interactions = { unitsFeatures: unitsFeatures, unitsContacts: unitsContacts, contacts: contacts };\r\n                    refineInteractions(structure, interactions);\r\n                    return [2 /*return*/, interactions];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction findUnitFeatures(structure, unit, featureProviders) {\r\n    var count = unit.elements.length;\r\n    var featuresBuilder = FeaturesBuilder.create(count, count / 2);\r\n    if (Unit.isAtomic(unit)) {\r\n        for (var _i = 0, featureProviders_1 = featureProviders; _i < featureProviders_1.length; _i++) {\r\n            var fp = featureProviders_1[_i];\r\n            fp.add(structure, unit, featuresBuilder);\r\n        }\r\n    }\r\n    return featuresBuilder.getFeatures(count);\r\n}\r\nfunction findIntraUnitContacts(structure, unit, features, contactTesters, props) {\r\n    var builder = IntraContactsBuilder.create(features, unit.elements.length);\r\n    if (Unit.isAtomic(unit)) {\r\n        addUnitContacts(structure, unit, features, builder, contactTesters, props);\r\n    }\r\n    return builder.getContacts();\r\n}\r\nfunction findInterUnitContacts(structure, unitsFeatures, contactTesters, props) {\r\n    var builder = InterContactsBuilder.create();\r\n    Structure.eachUnitPair(structure, function (unitA, unitB) {\r\n        var featuresA = unitsFeatures.get(unitA.id);\r\n        var featuresB = unitsFeatures.get(unitB.id);\r\n        addStructureContacts(structure, unitA, featuresA, unitB, featuresB, builder, contactTesters, props);\r\n    }, {\r\n        maxRadius: Math.max.apply(Math, contactTesters.map(function (t) { return t.maxDistance; })),\r\n        validUnit: function (unit) { return Unit.isAtomic(unit); },\r\n        validUnitPair: function (unitA, unitB) { return Structure.validUnitPair(structure, unitA, unitB); }\r\n    });\r\n    return builder.getContacts(unitsFeatures);\r\n}\r\n//# sourceMappingURL=interactions.js.map"]},"metadata":{},"sourceType":"module"}