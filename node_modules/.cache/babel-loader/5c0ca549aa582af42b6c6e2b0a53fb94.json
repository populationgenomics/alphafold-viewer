{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __awaiter, __generator, __spreadArray } from \"tslib\";\nimport { StateAction, StateSelection } from '../../mol-state';\nimport { Task } from '../../mol-task';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { PresetStructureRepresentations, StructureRepresentationPresetProvider } from '../builder/structure/representation-preset';\nimport { BuiltInTrajectoryFormats } from '../formats/trajectory';\nimport { RootStructureDefinition } from '../helpers/root-structure';\nimport { PluginStateObject } from '../objects';\nimport { StateTransforms } from '../transforms';\nimport { CustomModelProperties, CustomStructureProperties, TrajectoryFromModelAndCoordinates } from '../transforms/model';\nimport { Asset } from '../../mol-util/assets';\nimport { PluginConfig } from '../../mol-plugin/config';\n\nvar DownloadModelRepresentationOptions = function (plugin) {\n  return PD.Group({\n    type: RootStructureDefinition.getParams(void 0, 'auto').type,\n    representation: PD.Select(PresetStructureRepresentations.auto.id, plugin.builders.structure.representation.getPresets().map(function (p) {\n      return [p.id, p.display.name, p.display.group];\n    }), {\n      description: 'Which representation preset to use.'\n    }),\n    representationParams: PD.Group(StructureRepresentationPresetProvider.CommonParams, {\n      isHidden: true\n    }),\n    asTrajectory: PD.Optional(PD.Boolean(false, {\n      description: 'Load all entries into a single trajectory.'\n    }))\n  }, {\n    isExpanded: false\n  });\n};\n\nexport var PdbDownloadProvider = {\n  'rcsb': PD.Group({\n    encoding: PD.Select('bcif', [['cif', 'cif'], ['bcif', 'bcif']])\n  }, {\n    label: 'RCSB PDB',\n    isFlat: true\n  }),\n  'pdbe': PD.Group({\n    variant: PD.Select('updated-bcif', [['updated-bcif', 'Updated (bcif)'], ['updated', 'Updated'], ['archival', 'Archival']])\n  }, {\n    label: 'PDBe',\n    isFlat: true\n  })\n};\nexport { DownloadStructure };\nvar DownloadStructure = StateAction.build({\n  from: PluginStateObject.Root,\n  display: {\n    name: 'Download Structure',\n    description: 'Load a structure from the provided source and create its representation.'\n  },\n  params: function (_, plugin) {\n    var options = DownloadModelRepresentationOptions(plugin);\n    var defaultPdbProvider = plugin.config.get(PluginConfig.Download.DefaultPdbProvider) || 'pdbe';\n    return {\n      source: PD.MappedStatic('pdb', {\n        'pdb': PD.Group({\n          provider: PD.Group({\n            id: PD.Text('1tqn', {\n              label: 'PDB Id(s)',\n              description: 'One or more comma/space separated PDB ids.'\n            }),\n            server: PD.MappedStatic(defaultPdbProvider, PdbDownloadProvider)\n          }, {\n            pivot: 'id'\n          }),\n          options: options\n        }, {\n          isFlat: true,\n          label: 'PDB'\n        }),\n        'pdb-dev': PD.Group({\n          provider: PD.Group({\n            id: PD.Text('PDBDEV_00000001', {\n              label: 'PDBDev Id(s)',\n              description: 'One or more comma/space separated ids.'\n            }),\n            encoding: PD.Select('bcif', [['cif', 'cif'], ['bcif', 'bcif']])\n          }, {\n            pivot: 'id'\n          }),\n          options: options\n        }, {\n          isFlat: true,\n          label: 'PDBDEV'\n        }),\n        'swissmodel': PD.Group({\n          id: PD.Text('Q9Y2I8', {\n            label: 'UniProtKB AC(s)',\n            description: 'One or more comma/space separated ACs.'\n          }),\n          options: options\n        }, {\n          isFlat: true,\n          label: 'SWISS-MODEL',\n          description: 'Loads the best homology model or experimental structure'\n        }),\n        'pubchem': PD.Group({\n          id: PD.Text('2244,2245', {\n            label: 'PubChem ID',\n            description: 'One or more comma/space separated IDs.'\n          }),\n          options: options\n        }, {\n          isFlat: true,\n          label: 'PubChem',\n          description: 'Loads 3D conformer from PubChem.'\n        }),\n        'url': PD.Group({\n          url: PD.Url(''),\n          format: PD.Select('mmcif', PD.arrayToOptions(BuiltInTrajectoryFormats.map(function (f) {\n            return f[0];\n          }), function (f) {\n            return f;\n          })),\n          isBinary: PD.Boolean(false),\n          options: options\n        }, {\n          isFlat: true,\n          label: 'URL'\n        })\n      })\n    };\n  }\n})(function (_a, plugin) {\n  var params = _a.params,\n      state = _a.state;\n  return Task.create('Download Structure', function (ctx) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var src, downloadParams, asTrajectory, format, representationPreset, showUnitcell, structure;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            plugin.behaviors.layout.leftPanelTabName.next('data');\n            src = params.source;\n            asTrajectory = false, format = 'mmcif';\n\n            switch (src.name) {\n              case 'url':\n                downloadParams = [{\n                  url: src.params.url,\n                  isBinary: src.params.isBinary\n                }];\n                format = src.params.format;\n                break;\n\n              case 'pdb':\n                downloadParams = src.params.provider.server.name === 'pdbe' ? src.params.provider.server.params.variant === 'updated' ? getDownloadParams(src.params.provider.id, function (id) {\n                  return \"https://www.ebi.ac.uk/pdbe/static/entry/\" + id.toLowerCase() + \"_updated.cif\";\n                }, function (id) {\n                  return \"PDBe: \" + id + \" (updated cif)\";\n                }, false) : src.params.provider.server.params.variant === 'updated-bcif' ? getDownloadParams(src.params.provider.id, function (id) {\n                  return \"https://www.ebi.ac.uk/pdbe/entry-files/download/\" + id.toLowerCase() + \".bcif\";\n                }, function (id) {\n                  return \"PDBe: \" + id + \" (updated cif)\";\n                }, true) : getDownloadParams(src.params.provider.id, function (id) {\n                  return \"https://www.ebi.ac.uk/pdbe/static/entry/\" + id.toLowerCase() + \".cif\";\n                }, function (id) {\n                  return \"PDBe: \" + id + \" (cif)\";\n                }, false) : src.params.provider.server.params.encoding === 'cif' ? getDownloadParams(src.params.provider.id, function (id) {\n                  return \"https://files.rcsb.org/download/\" + id.toUpperCase() + \".cif\";\n                }, function (id) {\n                  return \"RCSB: \" + id + \" (cif)\";\n                }, false) : getDownloadParams(src.params.provider.id, function (id) {\n                  return \"https://models.rcsb.org/\" + id.toUpperCase() + \".bcif\";\n                }, function (id) {\n                  return \"RCSB: \" + id + \" (bcif)\";\n                }, true);\n                asTrajectory = !!src.params.options.asTrajectory;\n                break;\n\n              case 'pdb-dev':\n                downloadParams = getDownloadParams(src.params.provider.id, function (id) {\n                  var nId = id.toUpperCase().startsWith('PDBDEV_') ? id : \"PDBDEV_\" + id.padStart(8, '0');\n                  return src.params.provider.encoding === 'bcif' ? \"https://pdb-dev.wwpdb.org/bcif/\" + nId.toUpperCase() + \".bcif\" : \"https://pdb-dev.wwpdb.org/cif/\" + nId.toUpperCase() + \".cif\";\n                }, function (id) {\n                  return id.toUpperCase().startsWith('PDBDEV_') ? id : \"PDBDEV_\" + id.padStart(8, '0');\n                }, src.params.provider.encoding === 'bcif');\n                asTrajectory = !!src.params.options.asTrajectory;\n                break;\n\n              case 'swissmodel':\n                downloadParams = getDownloadParams(src.params.id, function (id) {\n                  return \"https://swissmodel.expasy.org/repository/uniprot/\" + id.toUpperCase() + \".pdb\";\n                }, function (id) {\n                  return \"SWISS-MODEL: \" + id;\n                }, false);\n                asTrajectory = !!src.params.options.asTrajectory;\n                format = 'pdb';\n                break;\n\n              case 'pubchem':\n                downloadParams = getDownloadParams(src.params.id, function (id) {\n                  return \"https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/CID/\" + id.trim() + \"/record/SDF/?record_type=3d\";\n                }, function (id) {\n                  return \"PubChem: \" + id;\n                }, false);\n                asTrajectory = !!src.params.options.asTrajectory;\n                format = 'mol';\n                break;\n\n              default:\n                throw new Error(src.name + \" not supported.\");\n            }\n\n            representationPreset = params.source.params.options.representation || PresetStructureRepresentations.auto.id;\n            showUnitcell = representationPreset !== PresetStructureRepresentations.empty.id;\n            structure = src.params.options.type.name === 'auto' ? void 0 : src.params.options.type;\n            return [4\n            /*yield*/\n            , state.transaction(function () {\n              return __awaiter(void 0, void 0, void 0, function () {\n                var blob, trajectory, _i, downloadParams_1, download, data, trajectory;\n\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (!(downloadParams.length > 0 && asTrajectory)) return [3\n                      /*break*/\n                      , 4];\n                      return [4\n                      /*yield*/\n                      , plugin.builders.data.downloadBlob({\n                        sources: downloadParams.map(function (src, i) {\n                          return {\n                            id: '' + i,\n                            url: src.url,\n                            isBinary: src.isBinary\n                          };\n                        }),\n                        maxConcurrency: 6\n                      }, {\n                        state: {\n                          isGhost: true\n                        }\n                      })];\n\n                    case 1:\n                      blob = _a.sent();\n                      return [4\n                      /*yield*/\n                      , plugin.builders.structure.parseTrajectory(blob, {\n                        formats: downloadParams.map(function (_, i) {\n                          return {\n                            id: '' + i,\n                            format: 'cif'\n                          };\n                        })\n                      })];\n\n                    case 2:\n                      trajectory = _a.sent();\n                      return [4\n                      /*yield*/\n                      , plugin.builders.structure.hierarchy.applyPreset(trajectory, 'default', {\n                        structure: structure,\n                        showUnitcell: showUnitcell,\n                        representationPreset: representationPreset,\n                        representationPresetParams: params.source.params.options.representationParams\n                      })];\n\n                    case 3:\n                      _a.sent();\n\n                      return [3\n                      /*break*/\n                      , 10];\n\n                    case 4:\n                      _i = 0, downloadParams_1 = downloadParams;\n                      _a.label = 5;\n\n                    case 5:\n                      if (!(_i < downloadParams_1.length)) return [3\n                      /*break*/\n                      , 10];\n                      download = downloadParams_1[_i];\n                      return [4\n                      /*yield*/\n                      , plugin.builders.data.download(download, {\n                        state: {\n                          isGhost: true\n                        }\n                      })];\n\n                    case 6:\n                      data = _a.sent();\n                      return [4\n                      /*yield*/\n                      , plugin.builders.structure.parseTrajectory(data, format)];\n\n                    case 7:\n                      trajectory = _a.sent();\n                      return [4\n                      /*yield*/\n                      , plugin.builders.structure.hierarchy.applyPreset(trajectory, 'default', {\n                        structure: structure,\n                        showUnitcell: showUnitcell,\n                        representationPreset: representationPreset,\n                        representationPresetParams: params.source.params.options.representationParams\n                      })];\n\n                    case 8:\n                      _a.sent();\n\n                      _a.label = 9;\n\n                    case 9:\n                      _i++;\n                      return [3\n                      /*break*/\n                      , 5];\n\n                    case 10:\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              });\n            }).runInContext(ctx)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  });\n});\n\nfunction getDownloadParams(src, url, label, isBinary) {\n  var ids = src.split(/[,\\s]/).map(function (id) {\n    return id.trim();\n  }).filter(function (id) {\n    return !!id && (id.length >= 4 || /^[1-9][0-9]*$/.test(id));\n  });\n  var ret = [];\n\n  for (var _i = 0, ids_1 = ids; _i < ids_1.length; _i++) {\n    var id = ids_1[_i];\n    ret.push({\n      url: Asset.Url(url(id)),\n      isBinary: isBinary,\n      label: label(id)\n    });\n  }\n\n  return ret;\n}\n\nexport var UpdateTrajectory = StateAction.build({\n  display: {\n    name: 'Update Trajectory'\n  },\n  params: {\n    action: PD.Select('advance', [['advance', 'Advance'], ['reset', 'Reset']]),\n    by: PD.Optional(PD.Numeric(1, {\n      min: -1,\n      max: 1,\n      step: 1\n    }))\n  }\n})(function (_a) {\n  var params = _a.params,\n      state = _a.state;\n  var models = state.selectQ(function (q) {\n    return q.ofTransformer(StateTransforms.Model.ModelFromTrajectory);\n  });\n  var update = state.build();\n\n  if (params.action === 'reset') {\n    for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {\n      var m = models_1[_i];\n      update.to(m).update({\n        modelIndex: 0\n      });\n    }\n  } else {\n    var _loop_1 = function (m) {\n      var parent_1 = StateSelection.findAncestorOfType(state.tree, state.cells, m.transform.ref, PluginStateObject.Molecule.Trajectory);\n      if (!parent_1 || !parent_1.obj) return \"continue\";\n      var traj = parent_1.obj;\n      update.to(m).update(function (old) {\n        var modelIndex = (old.modelIndex + params.by) % traj.data.frameCount;\n        if (modelIndex < 0) modelIndex += traj.data.frameCount;\n        return {\n          modelIndex: modelIndex\n        };\n      });\n    };\n\n    for (var _b = 0, models_2 = models; _b < models_2.length; _b++) {\n      var m = models_2[_b];\n\n      _loop_1(m);\n    }\n  }\n\n  return state.updateTree(update);\n});\nexport var EnableModelCustomProps = StateAction.build({\n  display: {\n    name: 'Custom Model Properties',\n    description: 'Enable parameters for custom properties of the model.'\n  },\n  from: PluginStateObject.Molecule.Model,\n  params: function (a, ctx) {\n    return ctx.customModelProperties.getParams(a === null || a === void 0 ? void 0 : a.data);\n  },\n  isApplicable: function (a, t, ctx) {\n    return t.transformer !== CustomModelProperties;\n  }\n})(function (_a, ctx) {\n  var ref = _a.ref,\n      params = _a.params;\n  return ctx.builders.structure.insertModelProperties(ref, params);\n});\nexport var EnableStructureCustomProps = StateAction.build({\n  display: {\n    name: 'Custom Structure Properties',\n    description: 'Enable parameters for custom properties of the structure.'\n  },\n  from: PluginStateObject.Molecule.Structure,\n  params: function (a, ctx) {\n    return ctx.customStructureProperties.getParams(a === null || a === void 0 ? void 0 : a.data);\n  },\n  isApplicable: function (a, t, ctx) {\n    return t.transformer !== CustomStructureProperties;\n  }\n})(function (_a, ctx) {\n  var ref = _a.ref,\n      params = _a.params;\n  return ctx.builders.structure.insertStructureProperties(ref, params);\n});\nexport var AddTrajectory = StateAction.build({\n  display: {\n    name: 'Add Trajectory',\n    description: 'Add trajectory from existing model/topology and coordinates.'\n  },\n  from: PluginStateObject.Root,\n  params: function (a, ctx) {\n    var state = ctx.state.data;\n\n    var models = __spreadArray(__spreadArray([], state.selectQ(function (q) {\n      return q.rootsOfType(PluginStateObject.Molecule.Model);\n    }), true), state.selectQ(function (q) {\n      return q.rootsOfType(PluginStateObject.Molecule.Topology);\n    }), true);\n\n    var modelOptions = models.map(function (t) {\n      return [t.transform.ref, t.obj.label];\n    });\n    var coords = state.selectQ(function (q) {\n      return q.rootsOfType(PluginStateObject.Molecule.Coordinates);\n    });\n    var coordOptions = coords.map(function (c) {\n      return [c.transform.ref, c.obj.label];\n    });\n    return {\n      model: PD.Select(modelOptions.length ? modelOptions[0][0] : '', modelOptions),\n      coordinates: PD.Select(coordOptions.length ? coordOptions[0][0] : '', coordOptions)\n    };\n  }\n})(function (_a, ctx) {\n  var params = _a.params,\n      state = _a.state;\n  return Task.create('Add Trajectory', function (taskCtx) {\n    return state.transaction(function () {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var dependsOn, model, structure;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              dependsOn = [params.model, params.coordinates];\n              model = state.build().toRoot().apply(TrajectoryFromModelAndCoordinates, {\n                modelRef: params.model,\n                coordinatesRef: params.coordinates\n              }, {\n                dependsOn: dependsOn\n              }).apply(StateTransforms.Model.ModelFromTrajectory, {\n                modelIndex: 0\n              });\n              return [4\n              /*yield*/\n              , state.updateTree(model).runInContext(taskCtx)];\n\n            case 1:\n              _a.sent();\n\n              return [4\n              /*yield*/\n              , ctx.builders.structure.createStructure(model.selector)];\n\n            case 2:\n              structure = _a.sent();\n              return [4\n              /*yield*/\n              , ctx.builders.structure.representation.applyPreset(structure, 'auto')];\n\n            case 3:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }).runInContext(taskCtx);\n  });\n});","map":{"version":3,"sources":["../../../src/mol-plugin-state/actions/structure.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __awaiter, __generator, __spreadArray } from \"tslib\";\r\nimport { StateAction, StateSelection } from '../../mol-state';\r\nimport { Task } from '../../mol-task';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { PresetStructureRepresentations, StructureRepresentationPresetProvider } from '../builder/structure/representation-preset';\r\nimport { BuiltInTrajectoryFormats } from '../formats/trajectory';\r\nimport { RootStructureDefinition } from '../helpers/root-structure';\r\nimport { PluginStateObject } from '../objects';\r\nimport { StateTransforms } from '../transforms';\r\nimport { CustomModelProperties, CustomStructureProperties, TrajectoryFromModelAndCoordinates } from '../transforms/model';\r\nimport { Asset } from '../../mol-util/assets';\r\nimport { PluginConfig } from '../../mol-plugin/config';\r\nvar DownloadModelRepresentationOptions = function (plugin) { return PD.Group({\r\n    type: RootStructureDefinition.getParams(void 0, 'auto').type,\r\n    representation: PD.Select(PresetStructureRepresentations.auto.id, plugin.builders.structure.representation.getPresets().map(function (p) { return [p.id, p.display.name, p.display.group]; }), { description: 'Which representation preset to use.' }),\r\n    representationParams: PD.Group(StructureRepresentationPresetProvider.CommonParams, { isHidden: true }),\r\n    asTrajectory: PD.Optional(PD.Boolean(false, { description: 'Load all entries into a single trajectory.' }))\r\n}, { isExpanded: false }); };\r\nexport var PdbDownloadProvider = {\r\n    'rcsb': PD.Group({\r\n        encoding: PD.Select('bcif', [['cif', 'cif'], ['bcif', 'bcif']]),\r\n    }, { label: 'RCSB PDB', isFlat: true }),\r\n    'pdbe': PD.Group({\r\n        variant: PD.Select('updated-bcif', [['updated-bcif', 'Updated (bcif)'], ['updated', 'Updated'], ['archival', 'Archival']]),\r\n    }, { label: 'PDBe', isFlat: true }),\r\n};\r\nexport { DownloadStructure };\r\nvar DownloadStructure = StateAction.build({\r\n    from: PluginStateObject.Root,\r\n    display: { name: 'Download Structure', description: 'Load a structure from the provided source and create its representation.' },\r\n    params: function (_, plugin) {\r\n        var options = DownloadModelRepresentationOptions(plugin);\r\n        var defaultPdbProvider = plugin.config.get(PluginConfig.Download.DefaultPdbProvider) || 'pdbe';\r\n        return {\r\n            source: PD.MappedStatic('pdb', {\r\n                'pdb': PD.Group({\r\n                    provider: PD.Group({\r\n                        id: PD.Text('1tqn', { label: 'PDB Id(s)', description: 'One or more comma/space separated PDB ids.' }),\r\n                        server: PD.MappedStatic(defaultPdbProvider, PdbDownloadProvider),\r\n                    }, { pivot: 'id' }),\r\n                    options: options\r\n                }, { isFlat: true, label: 'PDB' }),\r\n                'pdb-dev': PD.Group({\r\n                    provider: PD.Group({\r\n                        id: PD.Text('PDBDEV_00000001', { label: 'PDBDev Id(s)', description: 'One or more comma/space separated ids.' }),\r\n                        encoding: PD.Select('bcif', [['cif', 'cif'], ['bcif', 'bcif']]),\r\n                    }, { pivot: 'id' }),\r\n                    options: options\r\n                }, { isFlat: true, label: 'PDBDEV' }),\r\n                'swissmodel': PD.Group({\r\n                    id: PD.Text('Q9Y2I8', { label: 'UniProtKB AC(s)', description: 'One or more comma/space separated ACs.' }),\r\n                    options: options\r\n                }, { isFlat: true, label: 'SWISS-MODEL', description: 'Loads the best homology model or experimental structure' }),\r\n                'pubchem': PD.Group({\r\n                    id: PD.Text('2244,2245', { label: 'PubChem ID', description: 'One or more comma/space separated IDs.' }),\r\n                    options: options\r\n                }, { isFlat: true, label: 'PubChem', description: 'Loads 3D conformer from PubChem.' }),\r\n                'url': PD.Group({\r\n                    url: PD.Url(''),\r\n                    format: PD.Select('mmcif', PD.arrayToOptions(BuiltInTrajectoryFormats.map(function (f) { return f[0]; }), function (f) { return f; })),\r\n                    isBinary: PD.Boolean(false),\r\n                    options: options\r\n                }, { isFlat: true, label: 'URL' })\r\n            })\r\n        };\r\n    }\r\n})(function (_a, plugin) {\r\n    var params = _a.params, state = _a.state;\r\n    return Task.create('Download Structure', function (ctx) { return __awaiter(void 0, void 0, void 0, function () {\r\n        var src, downloadParams, asTrajectory, format, representationPreset, showUnitcell, structure;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    plugin.behaviors.layout.leftPanelTabName.next('data');\r\n                    src = params.source;\r\n                    asTrajectory = false, format = 'mmcif';\r\n                    switch (src.name) {\r\n                        case 'url':\r\n                            downloadParams = [{ url: src.params.url, isBinary: src.params.isBinary }];\r\n                            format = src.params.format;\r\n                            break;\r\n                        case 'pdb':\r\n                            downloadParams = src.params.provider.server.name === 'pdbe'\r\n                                ? src.params.provider.server.params.variant === 'updated'\r\n                                    ? getDownloadParams(src.params.provider.id, function (id) { return \"https://www.ebi.ac.uk/pdbe/static/entry/\" + id.toLowerCase() + \"_updated.cif\"; }, function (id) { return \"PDBe: \" + id + \" (updated cif)\"; }, false)\r\n                                    : src.params.provider.server.params.variant === 'updated-bcif'\r\n                                        ? getDownloadParams(src.params.provider.id, function (id) { return \"https://www.ebi.ac.uk/pdbe/entry-files/download/\" + id.toLowerCase() + \".bcif\"; }, function (id) { return \"PDBe: \" + id + \" (updated cif)\"; }, true)\r\n                                        : getDownloadParams(src.params.provider.id, function (id) { return \"https://www.ebi.ac.uk/pdbe/static/entry/\" + id.toLowerCase() + \".cif\"; }, function (id) { return \"PDBe: \" + id + \" (cif)\"; }, false)\r\n                                : src.params.provider.server.params.encoding === 'cif'\r\n                                    ? getDownloadParams(src.params.provider.id, function (id) { return \"https://files.rcsb.org/download/\" + id.toUpperCase() + \".cif\"; }, function (id) { return \"RCSB: \" + id + \" (cif)\"; }, false)\r\n                                    : getDownloadParams(src.params.provider.id, function (id) { return \"https://models.rcsb.org/\" + id.toUpperCase() + \".bcif\"; }, function (id) { return \"RCSB: \" + id + \" (bcif)\"; }, true);\r\n                            asTrajectory = !!src.params.options.asTrajectory;\r\n                            break;\r\n                        case 'pdb-dev':\r\n                            downloadParams = getDownloadParams(src.params.provider.id, function (id) {\r\n                                var nId = id.toUpperCase().startsWith('PDBDEV_') ? id : \"PDBDEV_\" + id.padStart(8, '0');\r\n                                return src.params.provider.encoding === 'bcif'\r\n                                    ? \"https://pdb-dev.wwpdb.org/bcif/\" + nId.toUpperCase() + \".bcif\"\r\n                                    : \"https://pdb-dev.wwpdb.org/cif/\" + nId.toUpperCase() + \".cif\";\r\n                            }, function (id) { return id.toUpperCase().startsWith('PDBDEV_') ? id : \"PDBDEV_\" + id.padStart(8, '0'); }, src.params.provider.encoding === 'bcif');\r\n                            asTrajectory = !!src.params.options.asTrajectory;\r\n                            break;\r\n                        case 'swissmodel':\r\n                            downloadParams = getDownloadParams(src.params.id, function (id) { return \"https://swissmodel.expasy.org/repository/uniprot/\" + id.toUpperCase() + \".pdb\"; }, function (id) { return \"SWISS-MODEL: \" + id; }, false);\r\n                            asTrajectory = !!src.params.options.asTrajectory;\r\n                            format = 'pdb';\r\n                            break;\r\n                        case 'pubchem':\r\n                            downloadParams = getDownloadParams(src.params.id, function (id) { return \"https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/CID/\" + id.trim() + \"/record/SDF/?record_type=3d\"; }, function (id) { return \"PubChem: \" + id; }, false);\r\n                            asTrajectory = !!src.params.options.asTrajectory;\r\n                            format = 'mol';\r\n                            break;\r\n                        default: throw new Error(src.name + \" not supported.\");\r\n                    }\r\n                    representationPreset = params.source.params.options.representation || PresetStructureRepresentations.auto.id;\r\n                    showUnitcell = representationPreset !== PresetStructureRepresentations.empty.id;\r\n                    structure = src.params.options.type.name === 'auto' ? void 0 : src.params.options.type;\r\n                    return [4 /*yield*/, state.transaction(function () { return __awaiter(void 0, void 0, void 0, function () {\r\n                            var blob, trajectory, _i, downloadParams_1, download, data, trajectory;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0:\r\n                                        if (!(downloadParams.length > 0 && asTrajectory)) return [3 /*break*/, 4];\r\n                                        return [4 /*yield*/, plugin.builders.data.downloadBlob({\r\n                                                sources: downloadParams.map(function (src, i) { return ({ id: '' + i, url: src.url, isBinary: src.isBinary }); }),\r\n                                                maxConcurrency: 6\r\n                                            }, { state: { isGhost: true } })];\r\n                                    case 1:\r\n                                        blob = _a.sent();\r\n                                        return [4 /*yield*/, plugin.builders.structure.parseTrajectory(blob, { formats: downloadParams.map(function (_, i) { return ({ id: '' + i, format: 'cif' }); }) })];\r\n                                    case 2:\r\n                                        trajectory = _a.sent();\r\n                                        return [4 /*yield*/, plugin.builders.structure.hierarchy.applyPreset(trajectory, 'default', {\r\n                                                structure: structure,\r\n                                                showUnitcell: showUnitcell,\r\n                                                representationPreset: representationPreset,\r\n                                                representationPresetParams: params.source.params.options.representationParams\r\n                                            })];\r\n                                    case 3:\r\n                                        _a.sent();\r\n                                        return [3 /*break*/, 10];\r\n                                    case 4:\r\n                                        _i = 0, downloadParams_1 = downloadParams;\r\n                                        _a.label = 5;\r\n                                    case 5:\r\n                                        if (!(_i < downloadParams_1.length)) return [3 /*break*/, 10];\r\n                                        download = downloadParams_1[_i];\r\n                                        return [4 /*yield*/, plugin.builders.data.download(download, { state: { isGhost: true } })];\r\n                                    case 6:\r\n                                        data = _a.sent();\r\n                                        return [4 /*yield*/, plugin.builders.structure.parseTrajectory(data, format)];\r\n                                    case 7:\r\n                                        trajectory = _a.sent();\r\n                                        return [4 /*yield*/, plugin.builders.structure.hierarchy.applyPreset(trajectory, 'default', {\r\n                                                structure: structure,\r\n                                                showUnitcell: showUnitcell,\r\n                                                representationPreset: representationPreset,\r\n                                                representationPresetParams: params.source.params.options.representationParams\r\n                                            })];\r\n                                    case 8:\r\n                                        _a.sent();\r\n                                        _a.label = 9;\r\n                                    case 9:\r\n                                        _i++;\r\n                                        return [3 /*break*/, 5];\r\n                                    case 10: return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); }).runInContext(ctx)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); });\r\n});\r\nfunction getDownloadParams(src, url, label, isBinary) {\r\n    var ids = src.split(/[,\\s]/).map(function (id) { return id.trim(); }).filter(function (id) { return !!id && (id.length >= 4 || /^[1-9][0-9]*$/.test(id)); });\r\n    var ret = [];\r\n    for (var _i = 0, ids_1 = ids; _i < ids_1.length; _i++) {\r\n        var id = ids_1[_i];\r\n        ret.push({ url: Asset.Url(url(id)), isBinary: isBinary, label: label(id) });\r\n    }\r\n    return ret;\r\n}\r\nexport var UpdateTrajectory = StateAction.build({\r\n    display: { name: 'Update Trajectory' },\r\n    params: {\r\n        action: PD.Select('advance', [['advance', 'Advance'], ['reset', 'Reset']]),\r\n        by: PD.Optional(PD.Numeric(1, { min: -1, max: 1, step: 1 }))\r\n    }\r\n})(function (_a) {\r\n    var params = _a.params, state = _a.state;\r\n    var models = state.selectQ(function (q) { return q.ofTransformer(StateTransforms.Model.ModelFromTrajectory); });\r\n    var update = state.build();\r\n    if (params.action === 'reset') {\r\n        for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {\r\n            var m = models_1[_i];\r\n            update.to(m).update({ modelIndex: 0 });\r\n        }\r\n    }\r\n    else {\r\n        var _loop_1 = function (m) {\r\n            var parent_1 = StateSelection.findAncestorOfType(state.tree, state.cells, m.transform.ref, PluginStateObject.Molecule.Trajectory);\r\n            if (!parent_1 || !parent_1.obj)\r\n                return \"continue\";\r\n            var traj = parent_1.obj;\r\n            update.to(m).update(function (old) {\r\n                var modelIndex = (old.modelIndex + params.by) % traj.data.frameCount;\r\n                if (modelIndex < 0)\r\n                    modelIndex += traj.data.frameCount;\r\n                return { modelIndex: modelIndex };\r\n            });\r\n        };\r\n        for (var _b = 0, models_2 = models; _b < models_2.length; _b++) {\r\n            var m = models_2[_b];\r\n            _loop_1(m);\r\n        }\r\n    }\r\n    return state.updateTree(update);\r\n});\r\nexport var EnableModelCustomProps = StateAction.build({\r\n    display: { name: 'Custom Model Properties', description: 'Enable parameters for custom properties of the model.' },\r\n    from: PluginStateObject.Molecule.Model,\r\n    params: function (a, ctx) {\r\n        return ctx.customModelProperties.getParams(a === null || a === void 0 ? void 0 : a.data);\r\n    },\r\n    isApplicable: function (a, t, ctx) {\r\n        return t.transformer !== CustomModelProperties;\r\n    }\r\n})(function (_a, ctx) {\r\n    var ref = _a.ref, params = _a.params;\r\n    return ctx.builders.structure.insertModelProperties(ref, params);\r\n});\r\nexport var EnableStructureCustomProps = StateAction.build({\r\n    display: { name: 'Custom Structure Properties', description: 'Enable parameters for custom properties of the structure.' },\r\n    from: PluginStateObject.Molecule.Structure,\r\n    params: function (a, ctx) {\r\n        return ctx.customStructureProperties.getParams(a === null || a === void 0 ? void 0 : a.data);\r\n    },\r\n    isApplicable: function (a, t, ctx) {\r\n        return t.transformer !== CustomStructureProperties;\r\n    }\r\n})(function (_a, ctx) {\r\n    var ref = _a.ref, params = _a.params;\r\n    return ctx.builders.structure.insertStructureProperties(ref, params);\r\n});\r\nexport var AddTrajectory = StateAction.build({\r\n    display: { name: 'Add Trajectory', description: 'Add trajectory from existing model/topology and coordinates.' },\r\n    from: PluginStateObject.Root,\r\n    params: function (a, ctx) {\r\n        var state = ctx.state.data;\r\n        var models = __spreadArray(__spreadArray([], state.selectQ(function (q) { return q.rootsOfType(PluginStateObject.Molecule.Model); }), true), state.selectQ(function (q) { return q.rootsOfType(PluginStateObject.Molecule.Topology); }), true);\r\n        var modelOptions = models.map(function (t) { return [t.transform.ref, t.obj.label]; });\r\n        var coords = state.selectQ(function (q) { return q.rootsOfType(PluginStateObject.Molecule.Coordinates); });\r\n        var coordOptions = coords.map(function (c) { return [c.transform.ref, c.obj.label]; });\r\n        return {\r\n            model: PD.Select(modelOptions.length ? modelOptions[0][0] : '', modelOptions),\r\n            coordinates: PD.Select(coordOptions.length ? coordOptions[0][0] : '', coordOptions)\r\n        };\r\n    }\r\n})(function (_a, ctx) {\r\n    var params = _a.params, state = _a.state;\r\n    return Task.create('Add Trajectory', function (taskCtx) {\r\n        return state.transaction(function () { return __awaiter(void 0, void 0, void 0, function () {\r\n            var dependsOn, model, structure;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        dependsOn = [params.model, params.coordinates];\r\n                        model = state.build().toRoot()\r\n                            .apply(TrajectoryFromModelAndCoordinates, {\r\n                            modelRef: params.model,\r\n                            coordinatesRef: params.coordinates\r\n                        }, { dependsOn: dependsOn })\r\n                            .apply(StateTransforms.Model.ModelFromTrajectory, { modelIndex: 0 });\r\n                        return [4 /*yield*/, state.updateTree(model).runInContext(taskCtx)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, ctx.builders.structure.createStructure(model.selector)];\r\n                    case 2:\r\n                        structure = _a.sent();\r\n                        return [4 /*yield*/, ctx.builders.structure.representation.applyPreset(structure, 'auto')];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); }).runInContext(taskCtx);\r\n    });\r\n});\r\n//# sourceMappingURL=structure.js.map"]},"metadata":{},"sourceType":"module"}