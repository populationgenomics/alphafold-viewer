{"ast":null,"code":"/**\r\n * Copyright (c) 2017-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __extends } from \"tslib\";\nimport { IntAdjacencyGraph } from '../../../../../mol-math/graph';\nimport { Unit } from '../../unit';\nimport { InterUnitGraph } from '../../../../../mol-math/graph/inter-unit-graph';\nvar IntraUnitBonds;\n\n(function (IntraUnitBonds) {\n  IntraUnitBonds.Empty = IntAdjacencyGraph.create([], [], [], 0, {\n    flags: [],\n    order: []\n  });\n})(IntraUnitBonds || (IntraUnitBonds = {}));\n\nvar InterUnitBonds =\n/** @class */\nfunction (_super) {\n  __extends(InterUnitBonds, _super);\n\n  function InterUnitBonds() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /** Get inter-unit bond given a bond-location */\n\n\n  InterUnitBonds.prototype.getBondFromLocation = function (l) {\n    return Unit.isAtomic(l.aUnit) && Unit.isAtomic(l.bUnit) ? this.getEdge(l.aIndex, l.aUnit.id, l.bIndex, l.bUnit.id) : undefined;\n  };\n  /** Get inter-unit bond index given a bond-location */\n\n\n  InterUnitBonds.prototype.getBondIndexFromLocation = function (l) {\n    return Unit.isAtomic(l.aUnit) && Unit.isAtomic(l.bUnit) ? this.getEdgeIndex(l.aIndex, l.aUnit.id, l.bIndex, l.bUnit.id) : -1;\n  };\n\n  return InterUnitBonds;\n}(InterUnitGraph);\n\n(function (InterUnitBonds) {\n  var UnitPairBonds =\n  /** @class */\n  function (_super) {\n    __extends(UnitPairBonds, _super);\n\n    function UnitPairBonds() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    return UnitPairBonds;\n  }(InterUnitGraph.UnitPairEdges);\n\n  InterUnitBonds.UnitPairBonds = UnitPairBonds;\n})(InterUnitBonds || (InterUnitBonds = {}));\n\nexport { IntraUnitBonds, InterUnitBonds };","map":{"version":3,"sources":["../../../../../../src/mol-model/structure/structure/unit/bonds/data.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;;AAGH,SAAS,iBAAT,QAAkC,+BAAlC;AACA,SAAS,IAAT,QAAqB,YAArB;AAGA,SAAS,cAAT,QAA+B,gDAA/B;AAIA,IAAU,cAAV;;AAAA,CAAA,UAAU,cAAV,EAAwB;AACP,EAAA,cAAA,CAAA,KAAA,GAAwB,iBAAiB,CAAC,MAAlB,CAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,CAArC,EAAwC;AAAE,IAAA,KAAK,EAAE,EAAT;AAAa,IAAA,KAAK,EAAE;AAApB,GAAxC,CAAxB;AAChB,CAFD,EAAU,cAAc,KAAd,cAAc,GAAA,EAAA,CAAxB;;AAMA,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AAA7B,WAAA,cAAA,GAAA;;AAUC;AATG;;;AACA,EAAA,cAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,UAAoB,CAApB,EAAoC;AAChC,WAAO,IAAI,CAAC,QAAL,CAAc,CAAC,CAAC,KAAhB,KAA0B,IAAI,CAAC,QAAL,CAAc,CAAC,CAAC,KAAhB,CAA1B,GAAmD,KAAK,OAAL,CAAa,CAAC,CAAC,MAAf,EAAuB,CAAC,CAAC,KAAF,CAAQ,EAA/B,EAAmC,CAAC,CAAC,MAArC,EAA6C,CAAC,CAAC,KAAF,CAAQ,EAArD,CAAnD,GAA8G,SAArH;AACH,GAFD;AAIA;;;AACA,EAAA,cAAA,CAAA,SAAA,CAAA,wBAAA,GAAA,UAAyB,CAAzB,EAAyC;AACrC,WAAO,IAAI,CAAC,QAAL,CAAc,CAAC,CAAC,KAAhB,KAA0B,IAAI,CAAC,QAAL,CAAc,CAAC,CAAC,KAAhB,CAA1B,GAAmD,KAAK,YAAL,CAAkB,CAAC,CAAC,MAApB,EAA4B,CAAC,CAAC,KAAF,CAAQ,EAApC,EAAwC,CAAC,CAAC,MAA1C,EAAkD,CAAC,CAAC,KAAF,CAAQ,EAA1D,CAAnD,GAAmH,CAAC,CAA3H;AACH,GAFD;;AAGJ,SAAA,cAAA;AAAC,CAVD,CAA6B,cAA7B,CAAA;;AAYA,CAAA,UAAU,cAAV,EAAwB;AACpB,MAAA,aAAA;AAAA;AAAA,YAAA,MAAA,EAAA;AAAmC,IAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAAnC,aAAA,aAAA,GAAA;;AAA0H;;AAAD,WAAA,aAAA;AAAC,GAA1H,CAAmC,cAAc,CAAC,aAAlD,CAAA;;AAAa,EAAA,cAAA,CAAA,aAAA,GAAa,aAAb;AAEhB,CAHD,EAAU,cAAc,KAAd,cAAc,GAAA,EAAA,CAAxB;;AAKA,SAAS,cAAT,EAAyB,cAAzB","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2017-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { IntAdjacencyGraph } from '../../../../../mol-math/graph';\r\nimport { Unit } from '../../unit';\r\nimport { InterUnitGraph } from '../../../../../mol-math/graph/inter-unit-graph';\r\nvar IntraUnitBonds;\r\n(function (IntraUnitBonds) {\r\n    IntraUnitBonds.Empty = IntAdjacencyGraph.create([], [], [], 0, { flags: [], order: [] });\r\n})(IntraUnitBonds || (IntraUnitBonds = {}));\r\nvar InterUnitBonds = /** @class */ (function (_super) {\r\n    __extends(InterUnitBonds, _super);\r\n    function InterUnitBonds() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /** Get inter-unit bond given a bond-location */\r\n    InterUnitBonds.prototype.getBondFromLocation = function (l) {\r\n        return Unit.isAtomic(l.aUnit) && Unit.isAtomic(l.bUnit) ? this.getEdge(l.aIndex, l.aUnit.id, l.bIndex, l.bUnit.id) : undefined;\r\n    };\r\n    /** Get inter-unit bond index given a bond-location */\r\n    InterUnitBonds.prototype.getBondIndexFromLocation = function (l) {\r\n        return Unit.isAtomic(l.aUnit) && Unit.isAtomic(l.bUnit) ? this.getEdgeIndex(l.aIndex, l.aUnit.id, l.bIndex, l.bUnit.id) : -1;\r\n    };\r\n    return InterUnitBonds;\r\n}(InterUnitGraph));\r\n(function (InterUnitBonds) {\r\n    var UnitPairBonds = /** @class */ (function (_super) {\r\n        __extends(UnitPairBonds, _super);\r\n        function UnitPairBonds() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        return UnitPairBonds;\r\n    }(InterUnitGraph.UnitPairEdges));\r\n    InterUnitBonds.UnitPairBonds = UnitPairBonds;\r\n})(InterUnitBonds || (InterUnitBonds = {}));\r\nexport { IntraUnitBonds, InterUnitBonds };\r\n//# sourceMappingURL=data.js.map"]},"metadata":{},"sourceType":"module"}