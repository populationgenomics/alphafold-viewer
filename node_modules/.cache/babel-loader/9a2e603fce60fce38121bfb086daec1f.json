{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { Vec3 } from '../../../../mol-math/linear-algebra';\nimport { ChunkedArray } from '../../../../mol-data/util';\nvar tA = Vec3();\nvar tB = Vec3();\nvar tV = Vec3();\nvar horizontalVector = Vec3();\nvar verticalVector = Vec3();\nvar verticalRightVector = Vec3();\nvar verticalLeftVector = Vec3();\nvar normalOffset = Vec3();\nvar positionVector = Vec3();\nvar normalVector = Vec3();\nvar torsionVector = Vec3();\nvar p1 = Vec3();\nvar p2 = Vec3();\nvar p3 = Vec3();\nvar p4 = Vec3(); // avoiding namespace lookup improved performance in Chrome (Aug 2020)\n\nvar v3fromArray = Vec3.fromArray;\nvar v3scale = Vec3.scale;\nvar v3add = Vec3.add;\nvar v3sub = Vec3.sub;\nvar v3magnitude = Vec3.magnitude;\nvar v3negate = Vec3.negate;\nvar v3copy = Vec3.copy;\nvar v3cross = Vec3.cross;\nvar v3set = Vec3.set;\nvar caAdd3 = ChunkedArray.add3;\nvar caAdd = ChunkedArray.add;\n\nfunction addCap(offset, state, controlPoints, normalVectors, binormalVectors, width, leftHeight, rightHeight) {\n  var vertices = state.vertices,\n      normals = state.normals,\n      indices = state.indices;\n  var vertexCount = vertices.elementCount;\n  v3fromArray(tA, normalVectors, offset);\n  v3scale(verticalLeftVector, tA, leftHeight);\n  v3scale(verticalRightVector, tA, rightHeight);\n  v3fromArray(tB, binormalVectors, offset);\n  v3scale(horizontalVector, tB, width);\n  v3cross(normalVector, tB, tA);\n  v3fromArray(positionVector, controlPoints, offset);\n  v3add(p1, v3add(p1, positionVector, horizontalVector), verticalRightVector);\n  v3sub(p2, v3add(p2, positionVector, horizontalVector), verticalLeftVector);\n  v3sub(p3, v3sub(p3, positionVector, horizontalVector), verticalLeftVector);\n  v3add(p4, v3sub(p4, positionVector, horizontalVector), verticalRightVector);\n\n  if (leftHeight < rightHeight) {\n    caAdd3(vertices, p4[0], p4[1], p4[2]);\n    caAdd3(vertices, p3[0], p3[1], p3[2]);\n    caAdd3(vertices, p2[0], p2[1], p2[2]);\n    caAdd3(vertices, p1[0], p1[1], p1[2]);\n    v3copy(verticalVector, verticalRightVector);\n  } else {\n    caAdd3(vertices, p1[0], p1[1], p1[2]);\n    caAdd3(vertices, p2[0], p2[1], p2[2]);\n    caAdd3(vertices, p3[0], p3[1], p3[2]);\n    caAdd3(vertices, p4[0], p4[1], p4[2]);\n    v3copy(verticalVector, verticalLeftVector);\n  }\n\n  for (var i = 0; i < 4; ++i) {\n    caAdd3(normals, normalVector[0], normalVector[1], normalVector[2]);\n  }\n\n  caAdd3(indices, vertexCount + 2, vertexCount + 1, vertexCount);\n  caAdd3(indices, vertexCount, vertexCount + 3, vertexCount + 2);\n}\n/** set arrowHeight = 0 for no arrow */\n\n\nexport function addSheet(state, controlPoints, normalVectors, binormalVectors, linearSegments, widthValues, heightValues, arrowHeight, startCap, endCap) {\n  var currentGroup = state.currentGroup,\n      vertices = state.vertices,\n      normals = state.normals,\n      indices = state.indices,\n      groups = state.groups;\n  var vertexCount = vertices.elementCount;\n  var offsetLength = 0;\n\n  if (arrowHeight > 0) {\n    v3fromArray(tA, controlPoints, 0);\n    v3fromArray(tB, controlPoints, linearSegments * 3);\n    offsetLength = arrowHeight / v3magnitude(v3sub(tV, tB, tA));\n  } else {\n    v3set(normalOffset, 0, 0, 0);\n  }\n\n  for (var i = 0; i <= linearSegments; ++i) {\n    var width = widthValues[i];\n    var height = heightValues[i];\n    var actualHeight = arrowHeight === 0 ? height : arrowHeight * (1 - i / linearSegments);\n    var i3 = i * 3;\n    v3fromArray(verticalVector, normalVectors, i3);\n    v3scale(verticalVector, verticalVector, actualHeight);\n    v3fromArray(horizontalVector, binormalVectors, i3);\n    v3scale(horizontalVector, horizontalVector, width);\n\n    if (arrowHeight > 0) {\n      v3fromArray(tA, normalVectors, i3);\n      v3fromArray(tB, binormalVectors, i3);\n      v3scale(normalOffset, v3cross(normalOffset, tA, tB), offsetLength);\n    }\n\n    v3fromArray(positionVector, controlPoints, i3);\n    v3fromArray(normalVector, normalVectors, i3);\n    v3fromArray(torsionVector, binormalVectors, i3);\n    v3add(tA, v3add(tA, positionVector, horizontalVector), verticalVector);\n    v3add(tB, normalVector, normalOffset);\n    caAdd3(vertices, tA[0], tA[1], tA[2]);\n    caAdd3(normals, tB[0], tB[1], tB[2]);\n    v3add(tA, v3sub(tA, positionVector, horizontalVector), verticalVector);\n    caAdd3(vertices, tA[0], tA[1], tA[2]);\n    caAdd3(normals, tB[0], tB[1], tB[2]); // v3add(tA, v3sub(tA, positionVector, horizontalVector), verticalVector) // reuse tA\n\n    v3negate(tB, torsionVector);\n    caAdd3(vertices, tA[0], tA[1], tA[2]);\n    caAdd3(normals, tB[0], tB[1], tB[2]);\n    v3sub(tA, v3sub(tA, positionVector, horizontalVector), verticalVector);\n    caAdd3(vertices, tA[0], tA[1], tA[2]);\n    caAdd3(normals, tB[0], tB[1], tB[2]); // v3sub(tA, v3sub(tA, positionVector, horizontalVector), verticalVector) // reuse tA\n\n    v3add(tB, v3negate(tB, normalVector), normalOffset);\n    caAdd3(vertices, tA[0], tA[1], tA[2]);\n    caAdd3(normals, tB[0], tB[1], tB[2]);\n    v3sub(tA, v3add(tA, positionVector, horizontalVector), verticalVector);\n    caAdd3(vertices, tA[0], tA[1], tA[2]);\n    caAdd3(normals, tB[0], tB[1], tB[2]); // v3sub(tA, v3add(tA, positionVector, horizontalVector), verticalVector) // reuse tA\n\n    v3copy(tB, torsionVector);\n    caAdd3(vertices, tA[0], tA[1], tA[2]);\n    caAdd3(normals, tB[0], tB[1], tB[2]);\n    v3add(tA, v3add(tA, positionVector, horizontalVector), verticalVector);\n    caAdd3(vertices, tA[0], tA[1], tA[2]);\n    caAdd3(normals, tB[0], tB[1], tB[2]);\n  }\n\n  for (var i = 0; i < linearSegments; ++i) {\n    // the triangles are arranged such that opposing triangles of the sheet align\n    // which prevents triangle intersection within tight curves\n    for (var j = 0; j < 2; j++) {\n      caAdd3(indices, vertexCount + i * 8 + 2 * j, // a\n      vertexCount + (i + 1) * 8 + 2 * j + 1, // c\n      vertexCount + i * 8 + 2 * j + 1 // b\n      );\n      caAdd3(indices, vertexCount + i * 8 + 2 * j, // a\n      vertexCount + (i + 1) * 8 + 2 * j, // d\n      vertexCount + (i + 1) * 8 + 2 * j + 1 // c\n      );\n    }\n\n    for (var j = 2; j < 4; j++) {\n      caAdd3(indices, vertexCount + i * 8 + 2 * j, // a\n      vertexCount + (i + 1) * 8 + 2 * j, // d\n      vertexCount + i * 8 + 2 * j + 1);\n      caAdd3(indices, vertexCount + (i + 1) * 8 + 2 * j, // d\n      vertexCount + (i + 1) * 8 + 2 * j + 1, // c\n      vertexCount + i * 8 + 2 * j + 1);\n    }\n  }\n\n  if (startCap) {\n    var width = widthValues[0];\n    var height = heightValues[0];\n    var h = arrowHeight === 0 ? height : arrowHeight;\n    addCap(0, state, controlPoints, normalVectors, binormalVectors, width, h, h);\n  } else if (arrowHeight > 0) {\n    var width = widthValues[0];\n    var height = heightValues[0];\n    addCap(0, state, controlPoints, normalVectors, binormalVectors, width, arrowHeight, -height);\n    addCap(0, state, controlPoints, normalVectors, binormalVectors, width, -arrowHeight, height);\n  }\n\n  if (endCap && arrowHeight === 0) {\n    var width = widthValues[linearSegments];\n    var height = heightValues[linearSegments]; // use negative height to flip the direction the cap's triangles are facing\n\n    addCap(linearSegments * 3, state, controlPoints, normalVectors, binormalVectors, width, -height, -height);\n  }\n\n  var addedVertexCount = (linearSegments + 1) * 8 + (startCap ? 4 : arrowHeight > 0 ? 8 : 0) + (endCap && arrowHeight === 0 ? 4 : 0);\n\n  for (var i = 0, il = addedVertexCount; i < il; ++i) caAdd(groups, currentGroup);\n}","map":{"version":3,"sources":["../../../../../src/mol-geo/geometry/mesh/builder/sheet.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { Vec3 } from '../../../../mol-math/linear-algebra';\r\nimport { ChunkedArray } from '../../../../mol-data/util';\r\nvar tA = Vec3();\r\nvar tB = Vec3();\r\nvar tV = Vec3();\r\nvar horizontalVector = Vec3();\r\nvar verticalVector = Vec3();\r\nvar verticalRightVector = Vec3();\r\nvar verticalLeftVector = Vec3();\r\nvar normalOffset = Vec3();\r\nvar positionVector = Vec3();\r\nvar normalVector = Vec3();\r\nvar torsionVector = Vec3();\r\nvar p1 = Vec3();\r\nvar p2 = Vec3();\r\nvar p3 = Vec3();\r\nvar p4 = Vec3();\r\n// avoiding namespace lookup improved performance in Chrome (Aug 2020)\r\nvar v3fromArray = Vec3.fromArray;\r\nvar v3scale = Vec3.scale;\r\nvar v3add = Vec3.add;\r\nvar v3sub = Vec3.sub;\r\nvar v3magnitude = Vec3.magnitude;\r\nvar v3negate = Vec3.negate;\r\nvar v3copy = Vec3.copy;\r\nvar v3cross = Vec3.cross;\r\nvar v3set = Vec3.set;\r\nvar caAdd3 = ChunkedArray.add3;\r\nvar caAdd = ChunkedArray.add;\r\nfunction addCap(offset, state, controlPoints, normalVectors, binormalVectors, width, leftHeight, rightHeight) {\r\n    var vertices = state.vertices, normals = state.normals, indices = state.indices;\r\n    var vertexCount = vertices.elementCount;\r\n    v3fromArray(tA, normalVectors, offset);\r\n    v3scale(verticalLeftVector, tA, leftHeight);\r\n    v3scale(verticalRightVector, tA, rightHeight);\r\n    v3fromArray(tB, binormalVectors, offset);\r\n    v3scale(horizontalVector, tB, width);\r\n    v3cross(normalVector, tB, tA);\r\n    v3fromArray(positionVector, controlPoints, offset);\r\n    v3add(p1, v3add(p1, positionVector, horizontalVector), verticalRightVector);\r\n    v3sub(p2, v3add(p2, positionVector, horizontalVector), verticalLeftVector);\r\n    v3sub(p3, v3sub(p3, positionVector, horizontalVector), verticalLeftVector);\r\n    v3add(p4, v3sub(p4, positionVector, horizontalVector), verticalRightVector);\r\n    if (leftHeight < rightHeight) {\r\n        caAdd3(vertices, p4[0], p4[1], p4[2]);\r\n        caAdd3(vertices, p3[0], p3[1], p3[2]);\r\n        caAdd3(vertices, p2[0], p2[1], p2[2]);\r\n        caAdd3(vertices, p1[0], p1[1], p1[2]);\r\n        v3copy(verticalVector, verticalRightVector);\r\n    }\r\n    else {\r\n        caAdd3(vertices, p1[0], p1[1], p1[2]);\r\n        caAdd3(vertices, p2[0], p2[1], p2[2]);\r\n        caAdd3(vertices, p3[0], p3[1], p3[2]);\r\n        caAdd3(vertices, p4[0], p4[1], p4[2]);\r\n        v3copy(verticalVector, verticalLeftVector);\r\n    }\r\n    for (var i = 0; i < 4; ++i) {\r\n        caAdd3(normals, normalVector[0], normalVector[1], normalVector[2]);\r\n    }\r\n    caAdd3(indices, vertexCount + 2, vertexCount + 1, vertexCount);\r\n    caAdd3(indices, vertexCount, vertexCount + 3, vertexCount + 2);\r\n}\r\n/** set arrowHeight = 0 for no arrow */\r\nexport function addSheet(state, controlPoints, normalVectors, binormalVectors, linearSegments, widthValues, heightValues, arrowHeight, startCap, endCap) {\r\n    var currentGroup = state.currentGroup, vertices = state.vertices, normals = state.normals, indices = state.indices, groups = state.groups;\r\n    var vertexCount = vertices.elementCount;\r\n    var offsetLength = 0;\r\n    if (arrowHeight > 0) {\r\n        v3fromArray(tA, controlPoints, 0);\r\n        v3fromArray(tB, controlPoints, linearSegments * 3);\r\n        offsetLength = arrowHeight / v3magnitude(v3sub(tV, tB, tA));\r\n    }\r\n    else {\r\n        v3set(normalOffset, 0, 0, 0);\r\n    }\r\n    for (var i = 0; i <= linearSegments; ++i) {\r\n        var width = widthValues[i];\r\n        var height = heightValues[i];\r\n        var actualHeight = arrowHeight === 0 ? height : arrowHeight * (1 - i / linearSegments);\r\n        var i3 = i * 3;\r\n        v3fromArray(verticalVector, normalVectors, i3);\r\n        v3scale(verticalVector, verticalVector, actualHeight);\r\n        v3fromArray(horizontalVector, binormalVectors, i3);\r\n        v3scale(horizontalVector, horizontalVector, width);\r\n        if (arrowHeight > 0) {\r\n            v3fromArray(tA, normalVectors, i3);\r\n            v3fromArray(tB, binormalVectors, i3);\r\n            v3scale(normalOffset, v3cross(normalOffset, tA, tB), offsetLength);\r\n        }\r\n        v3fromArray(positionVector, controlPoints, i3);\r\n        v3fromArray(normalVector, normalVectors, i3);\r\n        v3fromArray(torsionVector, binormalVectors, i3);\r\n        v3add(tA, v3add(tA, positionVector, horizontalVector), verticalVector);\r\n        v3add(tB, normalVector, normalOffset);\r\n        caAdd3(vertices, tA[0], tA[1], tA[2]);\r\n        caAdd3(normals, tB[0], tB[1], tB[2]);\r\n        v3add(tA, v3sub(tA, positionVector, horizontalVector), verticalVector);\r\n        caAdd3(vertices, tA[0], tA[1], tA[2]);\r\n        caAdd3(normals, tB[0], tB[1], tB[2]);\r\n        // v3add(tA, v3sub(tA, positionVector, horizontalVector), verticalVector) // reuse tA\r\n        v3negate(tB, torsionVector);\r\n        caAdd3(vertices, tA[0], tA[1], tA[2]);\r\n        caAdd3(normals, tB[0], tB[1], tB[2]);\r\n        v3sub(tA, v3sub(tA, positionVector, horizontalVector), verticalVector);\r\n        caAdd3(vertices, tA[0], tA[1], tA[2]);\r\n        caAdd3(normals, tB[0], tB[1], tB[2]);\r\n        // v3sub(tA, v3sub(tA, positionVector, horizontalVector), verticalVector) // reuse tA\r\n        v3add(tB, v3negate(tB, normalVector), normalOffset);\r\n        caAdd3(vertices, tA[0], tA[1], tA[2]);\r\n        caAdd3(normals, tB[0], tB[1], tB[2]);\r\n        v3sub(tA, v3add(tA, positionVector, horizontalVector), verticalVector);\r\n        caAdd3(vertices, tA[0], tA[1], tA[2]);\r\n        caAdd3(normals, tB[0], tB[1], tB[2]);\r\n        // v3sub(tA, v3add(tA, positionVector, horizontalVector), verticalVector) // reuse tA\r\n        v3copy(tB, torsionVector);\r\n        caAdd3(vertices, tA[0], tA[1], tA[2]);\r\n        caAdd3(normals, tB[0], tB[1], tB[2]);\r\n        v3add(tA, v3add(tA, positionVector, horizontalVector), verticalVector);\r\n        caAdd3(vertices, tA[0], tA[1], tA[2]);\r\n        caAdd3(normals, tB[0], tB[1], tB[2]);\r\n    }\r\n    for (var i = 0; i < linearSegments; ++i) {\r\n        // the triangles are arranged such that opposing triangles of the sheet align\r\n        // which prevents triangle intersection within tight curves\r\n        for (var j = 0; j < 2; j++) {\r\n            caAdd3(indices, vertexCount + i * 8 + 2 * j, // a\r\n            vertexCount + (i + 1) * 8 + 2 * j + 1, // c\r\n            vertexCount + i * 8 + 2 * j + 1 // b\r\n            );\r\n            caAdd3(indices, vertexCount + i * 8 + 2 * j, // a\r\n            vertexCount + (i + 1) * 8 + 2 * j, // d\r\n            vertexCount + (i + 1) * 8 + 2 * j + 1 // c\r\n            );\r\n        }\r\n        for (var j = 2; j < 4; j++) {\r\n            caAdd3(indices, vertexCount + i * 8 + 2 * j, // a\r\n            vertexCount + (i + 1) * 8 + 2 * j, // d\r\n            vertexCount + i * 8 + 2 * j + 1);\r\n            caAdd3(indices, vertexCount + (i + 1) * 8 + 2 * j, // d\r\n            vertexCount + (i + 1) * 8 + 2 * j + 1, // c\r\n            vertexCount + i * 8 + 2 * j + 1);\r\n        }\r\n    }\r\n    if (startCap) {\r\n        var width = widthValues[0];\r\n        var height = heightValues[0];\r\n        var h = arrowHeight === 0 ? height : arrowHeight;\r\n        addCap(0, state, controlPoints, normalVectors, binormalVectors, width, h, h);\r\n    }\r\n    else if (arrowHeight > 0) {\r\n        var width = widthValues[0];\r\n        var height = heightValues[0];\r\n        addCap(0, state, controlPoints, normalVectors, binormalVectors, width, arrowHeight, -height);\r\n        addCap(0, state, controlPoints, normalVectors, binormalVectors, width, -arrowHeight, height);\r\n    }\r\n    if (endCap && arrowHeight === 0) {\r\n        var width = widthValues[linearSegments];\r\n        var height = heightValues[linearSegments];\r\n        // use negative height to flip the direction the cap's triangles are facing\r\n        addCap(linearSegments * 3, state, controlPoints, normalVectors, binormalVectors, width, -height, -height);\r\n    }\r\n    var addedVertexCount = (linearSegments + 1) * 8 +\r\n        (startCap ? 4 : (arrowHeight > 0 ? 8 : 0)) +\r\n        (endCap && arrowHeight === 0 ? 4 : 0);\r\n    for (var i = 0, il = addedVertexCount; i < il; ++i)\r\n        caAdd(groups, currentGroup);\r\n}\r\n//# sourceMappingURL=sheet.js.map"]},"metadata":{},"sourceType":"module"}