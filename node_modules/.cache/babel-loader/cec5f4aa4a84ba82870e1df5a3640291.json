{"ast":null,"code":"/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Mat4 } from '../../../../mol-math/linear-algebra';\nimport { MeshBuilder } from '../mesh-builder';\nimport { Sphere } from '../../../primitive/sphere';\nvar sphereMap = new Map();\nvar tmpSphereMat = Mat4.identity();\n\nfunction setSphereMat(m, center, radius) {\n  return Mat4.scaleUniformly(m, Mat4.fromTranslation(m, center), radius);\n}\n\nexport function getSphere(detail) {\n  var sphere = sphereMap.get(detail);\n\n  if (sphere === undefined) {\n    sphere = Sphere(detail);\n    sphereMap.set(detail, sphere);\n  }\n\n  return sphere;\n}\nexport function addSphere(state, center, radius, detail) {\n  MeshBuilder.addPrimitive(state, setSphereMat(tmpSphereMat, center, radius), getSphere(detail));\n}","map":{"version":3,"sources":["../../../../../src/mol-geo/geometry/mesh/builder/sphere.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,SAAe,IAAf,QAA2B,qCAA3B;AACA,SAAS,WAAT,QAA4B,iBAA5B;AAEA,SAAS,MAAT,QAAuB,2BAAvB;AAEA,IAAM,SAAS,GAAG,IAAI,GAAJ,EAAlB;AACA,IAAM,YAAY,GAAG,IAAI,CAAC,QAAL,EAArB;;AAEA,SAAS,YAAT,CAAsB,CAAtB,EAA+B,MAA/B,EAA6C,MAA7C,EAA2D;AACvD,SAAO,IAAI,CAAC,cAAL,CAAoB,CAApB,EAAuB,IAAI,CAAC,eAAL,CAAqB,CAArB,EAAwB,MAAxB,CAAvB,EAAwD,MAAxD,CAAP;AACH;;AAED,OAAM,SAAU,SAAV,CAAoB,MAApB,EAAkC;AACpC,MAAI,MAAM,GAAG,SAAS,CAAC,GAAV,CAAc,MAAd,CAAb;;AACA,MAAI,MAAM,KAAK,SAAf,EAA0B;AACtB,IAAA,MAAM,GAAG,MAAM,CAAC,MAAD,CAAf;AACA,IAAA,SAAS,CAAC,GAAV,CAAc,MAAd,EAAsB,MAAtB;AACH;;AACD,SAAO,MAAP;AACH;AAED,OAAM,SAAU,SAAV,CAAoB,KAApB,EAA8C,MAA9C,EAA4D,MAA5D,EAA4E,MAA5E,EAA0F;AAC5F,EAAA,WAAW,CAAC,YAAZ,CAAyB,KAAzB,EAAgC,YAAY,CAAC,YAAD,EAAe,MAAf,EAAuB,MAAvB,CAA5C,EAA4E,SAAS,CAAC,MAAD,CAArF;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Mat4 } from '../../../../mol-math/linear-algebra';\r\nimport { MeshBuilder } from '../mesh-builder';\r\nimport { Sphere } from '../../../primitive/sphere';\r\nvar sphereMap = new Map();\r\nvar tmpSphereMat = Mat4.identity();\r\nfunction setSphereMat(m, center, radius) {\r\n    return Mat4.scaleUniformly(m, Mat4.fromTranslation(m, center), radius);\r\n}\r\nexport function getSphere(detail) {\r\n    var sphere = sphereMap.get(detail);\r\n    if (sphere === undefined) {\r\n        sphere = Sphere(detail);\r\n        sphereMap.set(detail, sphere);\r\n    }\r\n    return sphere;\r\n}\r\nexport function addSphere(state, center, radius, detail) {\r\n    MeshBuilder.addPrimitive(state, setSphereMat(tmpSphereMat, center, radius), getSphere(detail));\r\n}\r\n//# sourceMappingURL=sphere.js.map"]},"metadata":{},"sourceType":"module"}