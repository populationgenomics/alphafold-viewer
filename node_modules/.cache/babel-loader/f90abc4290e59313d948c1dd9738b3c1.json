{"ast":null,"code":"/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { UUID } from '../mol-util';\nimport { StateSelection } from '../mol-state';\nexport { StateObject, StateObjectCell };\nvar StateObject;\n\n(function (StateObject) {\n  function factory() {\n    return function (type) {\n      return create(type);\n    };\n  }\n\n  StateObject.factory = factory;\n\n  function create(type) {\n    var _a;\n\n    return _a =\n    /** @class */\n    function () {\n      function O(data, props) {\n        this.data = data;\n        this.id = UUID.create22();\n        this.type = type;\n        this.label = props && props.label || type.name;\n        this.description = props && props.description;\n      }\n\n      O.is = function (obj) {\n        return !!obj && type === obj.type;\n      };\n\n      return O;\n    }(), _a.type = type, _a;\n  }\n\n  StateObject.create = create;\n\n  function hasTag(o, t) {\n    if (!o.tags) return false;\n\n    for (var _i = 0, _a = o.tags; _i < _a.length; _i++) {\n      var s = _a[_i];\n      if (s === t) return true;\n    }\n\n    return false;\n  }\n\n  StateObject.hasTag = hasTag;\n  /** A special object indicating a transformer result has no value. */\n\n  StateObject.Null = {\n    id: UUID.create22(),\n    type: {\n      name: 'Null',\n      typeClass: 'Null'\n    },\n    data: void 0,\n    label: 'Null'\n  };\n})(StateObject || (StateObject = {}));\n\nvar StateObjectCell;\n\n(function (StateObjectCell) {\n  function is(o) {\n    var c = o;\n    return !!c && !!c.transform && !!c.parent && !!c.status;\n  }\n\n  StateObjectCell.is = is;\n\n  function resolve(state, refOrCellOrSelector) {\n    var ref = typeof refOrCellOrSelector === 'string' ? refOrCellOrSelector : StateObjectCell.is(refOrCellOrSelector) ? refOrCellOrSelector.transform.ref : refOrCellOrSelector.ref;\n    return state.cells.get(ref);\n  }\n\n  StateObjectCell.resolve = resolve;\n})(StateObjectCell || (StateObjectCell = {})); // TODO: improve the API?\n\n\nvar StateObjectTracker =\n/** @class */\nfunction () {\n  function StateObjectTracker(state) {\n    this.state = state;\n    this.version = '';\n  }\n\n  StateObjectTracker.prototype.setQuery = function (sel) {\n    this.query = StateSelection.compile(sel);\n  };\n\n  StateObjectTracker.prototype.update = function () {\n    var cell = this.state.select(this.query)[0];\n    var version = cell ? cell.transform.version : void 0;\n    var changed = this.cell !== cell || this.version !== version;\n    this.cell = cell;\n    this.version = version || '';\n    this.data = cell && cell.obj ? cell.obj.data : void 0;\n    return changed;\n  };\n\n  return StateObjectTracker;\n}();\n\nexport { StateObjectTracker };\n\nvar StateObjectSelector =\n/** @class */\nfunction () {\n  function StateObjectSelector(ref, state) {\n    this.ref = ref;\n    this.state = state;\n  }\n\n  Object.defineProperty(StateObjectSelector.prototype, \"cell\", {\n    get: function () {\n      var _a;\n\n      return (_a = this.state) === null || _a === void 0 ? void 0 : _a.cells.get(this.ref);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateObjectSelector.prototype, \"obj\", {\n    get: function () {\n      var _a, _b;\n\n      return (_b = (_a = this.state) === null || _a === void 0 ? void 0 : _a.cells.get(this.ref)) === null || _b === void 0 ? void 0 : _b.obj;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateObjectSelector.prototype, \"data\", {\n    get: function () {\n      var _a;\n\n      return (_a = this.obj) === null || _a === void 0 ? void 0 : _a.data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateObjectSelector.prototype.update = function (params, builder) {\n    if (!this.state) throw new Error(\"To use update() from StateObjectSelector, 'state' must be defined.\");\n    if (!builder) builder = this.state.build();\n    (builder || this.state.build()).to(this).update(params);\n    return builder;\n  };\n  /** Checks if the object exists. If not throw an error. */\n\n\n  StateObjectSelector.prototype.checkValid = function () {\n    if (!this.state) {\n      throw new Error('Unassigned State.');\n    }\n\n    var cell = this.cell;\n\n    if (!cell) {\n      throw new Error(\"Not created at all. Did you await/then the corresponding state update?\");\n    }\n\n    if (cell.status === 'ok') return true;\n    if (cell.status === 'error') throw new Error(cell.errorText);\n    if (cell.obj === StateObject.Null) throw new Error('The object is Null.');\n    throw new Error(\"Unresolved. Did you await/then the corresponding state update?\");\n  };\n\n  Object.defineProperty(StateObjectSelector.prototype, \"isOk\", {\n    get: function () {\n      var cell = this.cell;\n      return cell && cell.status === 'ok' && cell.obj !== StateObject.Null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return StateObjectSelector;\n}();\n\nexport { StateObjectSelector };\nexport var StateObjectRef;\n\n(function (StateObjectRef) {\n  function resolveRef(ref) {\n    var _a;\n\n    if (!ref) return;\n    if (typeof ref === 'string') return ref;\n    if (StateObjectCell.is(ref)) return ref.transform.ref;\n    return (_a = ref.cell) === null || _a === void 0 ? void 0 : _a.transform.ref;\n  }\n\n  StateObjectRef.resolveRef = resolveRef;\n\n  function resolve(state, ref) {\n    if (!ref) return;\n    if (StateObjectCell.is(ref)) return ref;\n    if (typeof ref === 'string') return state.cells.get(ref);\n    return ref.cell;\n  }\n\n  StateObjectRef.resolve = resolve;\n\n  function resolveAndCheck(state, ref) {\n    var cell = resolve(state, ref);\n    if (!cell || !cell.obj || cell.status !== 'ok') return;\n    return cell;\n  }\n\n  StateObjectRef.resolveAndCheck = resolveAndCheck;\n})(StateObjectRef || (StateObjectRef = {}));","map":{"version":3,"sources":["../../src/mol-state/object.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { UUID } from '../mol-util';\r\nimport { StateSelection } from '../mol-state';\r\nexport { StateObject, StateObjectCell };\r\nvar StateObject;\r\n(function (StateObject) {\r\n    function factory() {\r\n        return function (type) { return create(type); };\r\n    }\r\n    StateObject.factory = factory;\r\n    function create(type) {\r\n        var _a;\r\n        return _a = /** @class */ (function () {\r\n                function O(data, props) {\r\n                    this.data = data;\r\n                    this.id = UUID.create22();\r\n                    this.type = type;\r\n                    this.label = props && props.label || type.name;\r\n                    this.description = props && props.description;\r\n                }\r\n                O.is = function (obj) { return !!obj && type === obj.type; };\r\n                return O;\r\n            }()),\r\n            _a.type = type,\r\n            _a;\r\n    }\r\n    StateObject.create = create;\r\n    function hasTag(o, t) {\r\n        if (!o.tags)\r\n            return false;\r\n        for (var _i = 0, _a = o.tags; _i < _a.length; _i++) {\r\n            var s = _a[_i];\r\n            if (s === t)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    StateObject.hasTag = hasTag;\r\n    /** A special object indicating a transformer result has no value. */\r\n    StateObject.Null = {\r\n        id: UUID.create22(),\r\n        type: { name: 'Null', typeClass: 'Null' },\r\n        data: void 0,\r\n        label: 'Null'\r\n    };\r\n})(StateObject || (StateObject = {}));\r\nvar StateObjectCell;\r\n(function (StateObjectCell) {\r\n    function is(o) {\r\n        var c = o;\r\n        return !!c && !!c.transform && !!c.parent && !!c.status;\r\n    }\r\n    StateObjectCell.is = is;\r\n    function resolve(state, refOrCellOrSelector) {\r\n        var ref = typeof refOrCellOrSelector === 'string'\r\n            ? refOrCellOrSelector\r\n            : StateObjectCell.is(refOrCellOrSelector)\r\n                ? refOrCellOrSelector.transform.ref\r\n                : refOrCellOrSelector.ref;\r\n        return state.cells.get(ref);\r\n    }\r\n    StateObjectCell.resolve = resolve;\r\n})(StateObjectCell || (StateObjectCell = {}));\r\n// TODO: improve the API?\r\nvar StateObjectTracker = /** @class */ (function () {\r\n    function StateObjectTracker(state) {\r\n        this.state = state;\r\n        this.version = '';\r\n    }\r\n    StateObjectTracker.prototype.setQuery = function (sel) {\r\n        this.query = StateSelection.compile(sel);\r\n    };\r\n    StateObjectTracker.prototype.update = function () {\r\n        var cell = this.state.select(this.query)[0];\r\n        var version = cell ? cell.transform.version : void 0;\r\n        var changed = this.cell !== cell || this.version !== version;\r\n        this.cell = cell;\r\n        this.version = version || '';\r\n        this.data = cell && cell.obj ? cell.obj.data : void 0;\r\n        return changed;\r\n    };\r\n    return StateObjectTracker;\r\n}());\r\nexport { StateObjectTracker };\r\nvar StateObjectSelector = /** @class */ (function () {\r\n    function StateObjectSelector(ref, state) {\r\n        this.ref = ref;\r\n        this.state = state;\r\n    }\r\n    Object.defineProperty(StateObjectSelector.prototype, \"cell\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.state) === null || _a === void 0 ? void 0 : _a.cells.get(this.ref);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StateObjectSelector.prototype, \"obj\", {\r\n        get: function () {\r\n            var _a, _b;\r\n            return (_b = (_a = this.state) === null || _a === void 0 ? void 0 : _a.cells.get(this.ref)) === null || _b === void 0 ? void 0 : _b.obj;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StateObjectSelector.prototype, \"data\", {\r\n        get: function () {\r\n            var _a;\r\n            return (_a = this.obj) === null || _a === void 0 ? void 0 : _a.data;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StateObjectSelector.prototype.update = function (params, builder) {\r\n        if (!this.state)\r\n            throw new Error(\"To use update() from StateObjectSelector, 'state' must be defined.\");\r\n        if (!builder)\r\n            builder = this.state.build();\r\n        (builder || this.state.build()).to(this).update(params);\r\n        return builder;\r\n    };\r\n    /** Checks if the object exists. If not throw an error. */\r\n    StateObjectSelector.prototype.checkValid = function () {\r\n        if (!this.state) {\r\n            throw new Error('Unassigned State.');\r\n        }\r\n        var cell = this.cell;\r\n        if (!cell) {\r\n            throw new Error(\"Not created at all. Did you await/then the corresponding state update?\");\r\n        }\r\n        if (cell.status === 'ok')\r\n            return true;\r\n        if (cell.status === 'error')\r\n            throw new Error(cell.errorText);\r\n        if (cell.obj === StateObject.Null)\r\n            throw new Error('The object is Null.');\r\n        throw new Error(\"Unresolved. Did you await/then the corresponding state update?\");\r\n    };\r\n    Object.defineProperty(StateObjectSelector.prototype, \"isOk\", {\r\n        get: function () {\r\n            var cell = this.cell;\r\n            return cell && cell.status === 'ok' && cell.obj !== StateObject.Null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return StateObjectSelector;\r\n}());\r\nexport { StateObjectSelector };\r\nexport var StateObjectRef;\r\n(function (StateObjectRef) {\r\n    function resolveRef(ref) {\r\n        var _a;\r\n        if (!ref)\r\n            return;\r\n        if (typeof ref === 'string')\r\n            return ref;\r\n        if (StateObjectCell.is(ref))\r\n            return ref.transform.ref;\r\n        return (_a = ref.cell) === null || _a === void 0 ? void 0 : _a.transform.ref;\r\n    }\r\n    StateObjectRef.resolveRef = resolveRef;\r\n    function resolve(state, ref) {\r\n        if (!ref)\r\n            return;\r\n        if (StateObjectCell.is(ref))\r\n            return ref;\r\n        if (typeof ref === 'string')\r\n            return state.cells.get(ref);\r\n        return ref.cell;\r\n    }\r\n    StateObjectRef.resolve = resolve;\r\n    function resolveAndCheck(state, ref) {\r\n        var cell = resolve(state, ref);\r\n        if (!cell || !cell.obj || cell.status !== 'ok')\r\n            return;\r\n        return cell;\r\n    }\r\n    StateObjectRef.resolveAndCheck = resolveAndCheck;\r\n})(StateObjectRef || (StateObjectRef = {}));\r\n//# sourceMappingURL=object.js.map"]},"metadata":{},"sourceType":"module"}