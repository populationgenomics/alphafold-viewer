{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { createRenderObject, getNextMaterialId } from '../../mol-gl/render-object';\nimport { MeshBuilder } from '../../mol-geo/geometry/mesh/mesh-builder';\nimport { addSphere } from '../../mol-geo/geometry/mesh/builder/sphere';\nimport { Mesh } from '../../mol-geo/geometry/mesh/mesh';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { Scene } from '../../mol-gl/scene';\nimport { Sphere3D } from '../../mol-math/geometry';\nimport { ColorNames } from '../../mol-util/color/names';\nimport { sphereVertexCount } from '../../mol-geo/primitive/sphere';\nimport { ValueCell } from '../../mol-util';\nimport { Geometry } from '../../mol-geo/geometry/geometry';\nexport var DebugHelperParams = {\n  sceneBoundingSpheres: PD.Boolean(false, {\n    description: 'Show full scene bounding spheres.'\n  }),\n  visibleSceneBoundingSpheres: PD.Boolean(false, {\n    description: 'Show visible scene bounding spheres.'\n  }),\n  objectBoundingSpheres: PD.Boolean(false, {\n    description: 'Show bounding spheres of visible render objects.'\n  }),\n  instanceBoundingSpheres: PD.Boolean(false, {\n    description: 'Show bounding spheres of visible instances.'\n  })\n};\n\nvar BoundingSphereHelper =\n/** @class */\nfunction () {\n  function BoundingSphereHelper(ctx, parent, props) {\n    this.objectsData = new Map();\n    this.instancesData = new Map();\n    this.scene = Scene.create(ctx);\n    this.parent = parent;\n    this._props = __assign(__assign({}, PD.getDefaultValues(DebugHelperParams)), props);\n  }\n\n  BoundingSphereHelper.prototype.update = function () {\n    var _this = this;\n\n    var newSceneData = updateBoundingSphereData(this.scene, this.parent.boundingSphere, this.sceneData, ColorNames.lightgrey, sceneMaterialId);\n    if (newSceneData) this.sceneData = newSceneData;\n    var newVisibleSceneData = updateBoundingSphereData(this.scene, this.parent.boundingSphereVisible, this.visibleSceneData, ColorNames.black, visibleSceneMaterialId);\n    if (newVisibleSceneData) this.visibleSceneData = newVisibleSceneData;\n    this.parent.forEach(function (r, ro) {\n      var objectData = _this.objectsData.get(ro);\n\n      var newObjectData = updateBoundingSphereData(_this.scene, r.values.boundingSphere.ref.value, objectData, ColorNames.tomato, objectMaterialId);\n      if (newObjectData) _this.objectsData.set(ro, newObjectData);\n\n      var instanceData = _this.instancesData.get(ro);\n\n      var newInstanceData = updateBoundingSphereData(_this.scene, r.values.invariantBoundingSphere.ref.value, instanceData, ColorNames.skyblue, instanceMaterialId, {\n        aTransform: ro.values.aTransform,\n        matrix: ro.values.matrix,\n        transform: ro.values.transform,\n        extraTransform: ro.values.extraTransform,\n        uInstanceCount: ro.values.uInstanceCount,\n        instanceCount: ro.values.instanceCount,\n        aInstance: ro.values.aInstance,\n        hasReflection: ro.values.hasReflection\n      });\n      if (newInstanceData) _this.instancesData.set(ro, newInstanceData);\n    });\n    this.objectsData.forEach(function (objectData, ro) {\n      if (!_this.parent.has(ro)) {\n        _this.scene.remove(objectData.renderObject);\n\n        _this.objectsData.delete(ro);\n      }\n    });\n    this.instancesData.forEach(function (instanceData, ro) {\n      if (!_this.parent.has(ro)) {\n        _this.scene.remove(instanceData.renderObject);\n\n        _this.instancesData.delete(ro);\n      }\n    });\n    this.scene.update(void 0, false);\n    this.scene.commit();\n  };\n\n  BoundingSphereHelper.prototype.syncVisibility = function () {\n    var _this = this;\n\n    if (this.sceneData) {\n      this.sceneData.renderObject.state.visible = this._props.sceneBoundingSpheres;\n    }\n\n    if (this.visibleSceneData) {\n      this.visibleSceneData.renderObject.state.visible = this._props.visibleSceneBoundingSpheres;\n    }\n\n    this.parent.forEach(function (_, ro) {\n      var objectData = _this.objectsData.get(ro);\n\n      if (objectData) objectData.renderObject.state.visible = ro.state.visible && _this._props.objectBoundingSpheres;\n\n      var instanceData = _this.instancesData.get(ro);\n\n      if (instanceData) instanceData.renderObject.state.visible = ro.state.visible && _this._props.instanceBoundingSpheres;\n    });\n  };\n\n  BoundingSphereHelper.prototype.clear = function () {\n    this.sceneData = undefined;\n    this.objectsData.clear();\n    this.scene.clear();\n  };\n\n  Object.defineProperty(BoundingSphereHelper.prototype, \"isEnabled\", {\n    get: function () {\n      return this._props.sceneBoundingSpheres || this._props.visibleSceneBoundingSpheres || this._props.objectBoundingSpheres || this._props.instanceBoundingSpheres;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BoundingSphereHelper.prototype, \"props\", {\n    get: function () {\n      return this._props;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  BoundingSphereHelper.prototype.setProps = function (props) {\n    Object.assign(this._props, props);\n    if (this.isEnabled) this.update();\n  };\n\n  return BoundingSphereHelper;\n}();\n\nexport { BoundingSphereHelper };\n\nfunction updateBoundingSphereData(scene, boundingSphere, data, color, materialId, transform) {\n  if (!data || !Sphere3D.equals(data.boundingSphere, boundingSphere)) {\n    var mesh = createBoundingSphereMesh(boundingSphere, data && data.mesh);\n    var renderObject = data ? data.renderObject : createBoundingSphereRenderObject(mesh, color, materialId, transform);\n\n    if (data) {\n      ValueCell.updateIfChanged(renderObject.values.drawCount, Geometry.getDrawCount(mesh));\n    } else {\n      scene.add(renderObject);\n    }\n\n    return {\n      boundingSphere: Sphere3D.clone(boundingSphere),\n      renderObject: renderObject,\n      mesh: mesh\n    };\n  }\n}\n\nfunction createBoundingSphereMesh(boundingSphere, mesh) {\n  var detail = 2;\n  var vertexCount = sphereVertexCount(detail);\n  var builderState = MeshBuilder.createState(vertexCount, vertexCount / 2, mesh);\n\n  if (boundingSphere.radius) {\n    addSphere(builderState, boundingSphere.center, boundingSphere.radius, detail);\n\n    if (Sphere3D.hasExtrema(boundingSphere)) {\n      for (var _i = 0, _a = boundingSphere.extrema; _i < _a.length; _i++) {\n        var e = _a[_i];\n        addSphere(builderState, e, 1.0, 0);\n      }\n    }\n  }\n\n  return MeshBuilder.getMesh(builderState);\n}\n\nvar sceneMaterialId = getNextMaterialId();\nvar visibleSceneMaterialId = getNextMaterialId();\nvar objectMaterialId = getNextMaterialId();\nvar instanceMaterialId = getNextMaterialId();\n\nfunction createBoundingSphereRenderObject(mesh, color, materialId, transform) {\n  var values = Mesh.Utils.createValuesSimple(mesh, {\n    alpha: 0.1,\n    doubleSided: false\n  }, color, 1, transform);\n  return createRenderObject('mesh', values, {\n    disposed: false,\n    visible: true,\n    alphaFactor: 1,\n    pickable: false,\n    colorOnly: false,\n    opaque: false,\n    writeDepth: false,\n    noClip: false\n  }, materialId);\n}","map":{"version":3,"sources":["../../../src/mol-canvas3d/helper/bounding-sphere-helper.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { createRenderObject, getNextMaterialId } from '../../mol-gl/render-object';\r\nimport { MeshBuilder } from '../../mol-geo/geometry/mesh/mesh-builder';\r\nimport { addSphere } from '../../mol-geo/geometry/mesh/builder/sphere';\r\nimport { Mesh } from '../../mol-geo/geometry/mesh/mesh';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { Scene } from '../../mol-gl/scene';\r\nimport { Sphere3D } from '../../mol-math/geometry';\r\nimport { ColorNames } from '../../mol-util/color/names';\r\nimport { sphereVertexCount } from '../../mol-geo/primitive/sphere';\r\nimport { ValueCell } from '../../mol-util';\r\nimport { Geometry } from '../../mol-geo/geometry/geometry';\r\nexport var DebugHelperParams = {\r\n    sceneBoundingSpheres: PD.Boolean(false, { description: 'Show full scene bounding spheres.' }),\r\n    visibleSceneBoundingSpheres: PD.Boolean(false, { description: 'Show visible scene bounding spheres.' }),\r\n    objectBoundingSpheres: PD.Boolean(false, { description: 'Show bounding spheres of visible render objects.' }),\r\n    instanceBoundingSpheres: PD.Boolean(false, { description: 'Show bounding spheres of visible instances.' }),\r\n};\r\nvar BoundingSphereHelper = /** @class */ (function () {\r\n    function BoundingSphereHelper(ctx, parent, props) {\r\n        this.objectsData = new Map();\r\n        this.instancesData = new Map();\r\n        this.scene = Scene.create(ctx);\r\n        this.parent = parent;\r\n        this._props = __assign(__assign({}, PD.getDefaultValues(DebugHelperParams)), props);\r\n    }\r\n    BoundingSphereHelper.prototype.update = function () {\r\n        var _this = this;\r\n        var newSceneData = updateBoundingSphereData(this.scene, this.parent.boundingSphere, this.sceneData, ColorNames.lightgrey, sceneMaterialId);\r\n        if (newSceneData)\r\n            this.sceneData = newSceneData;\r\n        var newVisibleSceneData = updateBoundingSphereData(this.scene, this.parent.boundingSphereVisible, this.visibleSceneData, ColorNames.black, visibleSceneMaterialId);\r\n        if (newVisibleSceneData)\r\n            this.visibleSceneData = newVisibleSceneData;\r\n        this.parent.forEach(function (r, ro) {\r\n            var objectData = _this.objectsData.get(ro);\r\n            var newObjectData = updateBoundingSphereData(_this.scene, r.values.boundingSphere.ref.value, objectData, ColorNames.tomato, objectMaterialId);\r\n            if (newObjectData)\r\n                _this.objectsData.set(ro, newObjectData);\r\n            var instanceData = _this.instancesData.get(ro);\r\n            var newInstanceData = updateBoundingSphereData(_this.scene, r.values.invariantBoundingSphere.ref.value, instanceData, ColorNames.skyblue, instanceMaterialId, {\r\n                aTransform: ro.values.aTransform,\r\n                matrix: ro.values.matrix,\r\n                transform: ro.values.transform,\r\n                extraTransform: ro.values.extraTransform,\r\n                uInstanceCount: ro.values.uInstanceCount,\r\n                instanceCount: ro.values.instanceCount,\r\n                aInstance: ro.values.aInstance,\r\n                hasReflection: ro.values.hasReflection,\r\n            });\r\n            if (newInstanceData)\r\n                _this.instancesData.set(ro, newInstanceData);\r\n        });\r\n        this.objectsData.forEach(function (objectData, ro) {\r\n            if (!_this.parent.has(ro)) {\r\n                _this.scene.remove(objectData.renderObject);\r\n                _this.objectsData.delete(ro);\r\n            }\r\n        });\r\n        this.instancesData.forEach(function (instanceData, ro) {\r\n            if (!_this.parent.has(ro)) {\r\n                _this.scene.remove(instanceData.renderObject);\r\n                _this.instancesData.delete(ro);\r\n            }\r\n        });\r\n        this.scene.update(void 0, false);\r\n        this.scene.commit();\r\n    };\r\n    BoundingSphereHelper.prototype.syncVisibility = function () {\r\n        var _this = this;\r\n        if (this.sceneData) {\r\n            this.sceneData.renderObject.state.visible = this._props.sceneBoundingSpheres;\r\n        }\r\n        if (this.visibleSceneData) {\r\n            this.visibleSceneData.renderObject.state.visible = this._props.visibleSceneBoundingSpheres;\r\n        }\r\n        this.parent.forEach(function (_, ro) {\r\n            var objectData = _this.objectsData.get(ro);\r\n            if (objectData)\r\n                objectData.renderObject.state.visible = ro.state.visible && _this._props.objectBoundingSpheres;\r\n            var instanceData = _this.instancesData.get(ro);\r\n            if (instanceData)\r\n                instanceData.renderObject.state.visible = ro.state.visible && _this._props.instanceBoundingSpheres;\r\n        });\r\n    };\r\n    BoundingSphereHelper.prototype.clear = function () {\r\n        this.sceneData = undefined;\r\n        this.objectsData.clear();\r\n        this.scene.clear();\r\n    };\r\n    Object.defineProperty(BoundingSphereHelper.prototype, \"isEnabled\", {\r\n        get: function () {\r\n            return (this._props.sceneBoundingSpheres || this._props.visibleSceneBoundingSpheres ||\r\n                this._props.objectBoundingSpheres || this._props.instanceBoundingSpheres);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BoundingSphereHelper.prototype, \"props\", {\r\n        get: function () { return this._props; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    BoundingSphereHelper.prototype.setProps = function (props) {\r\n        Object.assign(this._props, props);\r\n        if (this.isEnabled)\r\n            this.update();\r\n    };\r\n    return BoundingSphereHelper;\r\n}());\r\nexport { BoundingSphereHelper };\r\nfunction updateBoundingSphereData(scene, boundingSphere, data, color, materialId, transform) {\r\n    if (!data || !Sphere3D.equals(data.boundingSphere, boundingSphere)) {\r\n        var mesh = createBoundingSphereMesh(boundingSphere, data && data.mesh);\r\n        var renderObject = data ? data.renderObject : createBoundingSphereRenderObject(mesh, color, materialId, transform);\r\n        if (data) {\r\n            ValueCell.updateIfChanged(renderObject.values.drawCount, Geometry.getDrawCount(mesh));\r\n        }\r\n        else {\r\n            scene.add(renderObject);\r\n        }\r\n        return { boundingSphere: Sphere3D.clone(boundingSphere), renderObject: renderObject, mesh: mesh };\r\n    }\r\n}\r\nfunction createBoundingSphereMesh(boundingSphere, mesh) {\r\n    var detail = 2;\r\n    var vertexCount = sphereVertexCount(detail);\r\n    var builderState = MeshBuilder.createState(vertexCount, vertexCount / 2, mesh);\r\n    if (boundingSphere.radius) {\r\n        addSphere(builderState, boundingSphere.center, boundingSphere.radius, detail);\r\n        if (Sphere3D.hasExtrema(boundingSphere)) {\r\n            for (var _i = 0, _a = boundingSphere.extrema; _i < _a.length; _i++) {\r\n                var e = _a[_i];\r\n                addSphere(builderState, e, 1.0, 0);\r\n            }\r\n        }\r\n    }\r\n    return MeshBuilder.getMesh(builderState);\r\n}\r\nvar sceneMaterialId = getNextMaterialId();\r\nvar visibleSceneMaterialId = getNextMaterialId();\r\nvar objectMaterialId = getNextMaterialId();\r\nvar instanceMaterialId = getNextMaterialId();\r\nfunction createBoundingSphereRenderObject(mesh, color, materialId, transform) {\r\n    var values = Mesh.Utils.createValuesSimple(mesh, { alpha: 0.1, doubleSided: false }, color, 1, transform);\r\n    return createRenderObject('mesh', values, { disposed: false, visible: true, alphaFactor: 1, pickable: false, colorOnly: false, opaque: false, writeDepth: false, noClip: false }, materialId);\r\n}\r\n//# sourceMappingURL=bounding-sphere-helper.js.map"]},"metadata":{},"sourceType":"module"}