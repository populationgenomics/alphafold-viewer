{"ast":null,"code":"/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { UUID } from './uuid';\nimport { iterableToArray } from '../mol-data/util';\nimport { ajaxGet, readFromFile } from './data-source';\nimport { Task } from '../mol-task';\nexport { AssetManager, Asset };\nvar Asset;\n\n(function (Asset) {\n  function Url(url, options) {\n    return __assign({\n      kind: 'url',\n      id: UUID.create22(),\n      url: url\n    }, options);\n  }\n\n  Asset.Url = Url;\n\n  function File(file) {\n    return {\n      kind: 'file',\n      id: UUID.create22(),\n      name: file.name,\n      file: file\n    };\n  }\n\n  Asset.File = File;\n\n  function isUrl(x) {\n    return (x === null || x === void 0 ? void 0 : x.kind) === 'url';\n  }\n\n  Asset.isUrl = isUrl;\n\n  function isFile(x) {\n    return (x === null || x === void 0 ? void 0 : x.kind) === 'file';\n  }\n\n  Asset.isFile = isFile;\n\n  function Wrapper(data, asset, manager) {\n    return {\n      data: data,\n      dispose: function () {\n        manager.release(asset);\n      }\n    };\n  }\n\n  Asset.Wrapper = Wrapper;\n\n  function getUrl(url) {\n    return typeof url === 'string' ? url : url.url;\n  }\n\n  Asset.getUrl = getUrl;\n\n  function getUrlAsset(manager, url, body) {\n    if (typeof url === 'string') {\n      var asset = manager.tryFindUrl(url, body);\n      return asset || Url(url, {\n        body: body\n      });\n    }\n\n    return url;\n  }\n\n  Asset.getUrlAsset = getUrlAsset;\n})(Asset || (Asset = {}));\n\nvar AssetManager =\n/** @class */\nfunction () {\n  function AssetManager() {\n    // TODO: add URL based ref-counted cache?\n    // TODO: when serializing, check for duplicates?\n    this._assets = new Map();\n  }\n\n  Object.defineProperty(AssetManager.prototype, \"assets\", {\n    get: function () {\n      return iterableToArray(this._assets.values());\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AssetManager.prototype.tryFindUrl = function (url, body) {\n    var assets = this.assets.values();\n\n    while (true) {\n      var v = assets.next();\n      if (v.done) return;\n      var asset = v.value.asset;\n      if (Asset.isUrl(asset) && asset.url === url && (asset.body || '') === (body || '')) return asset;\n    }\n  };\n\n  AssetManager.prototype.set = function (asset, file) {\n    this._assets.set(asset.id, {\n      asset: asset,\n      file: file,\n      refCount: 0\n    });\n  };\n\n  AssetManager.prototype.resolve = function (asset, type, store) {\n    var _this = this;\n\n    if (store === void 0) {\n      store = true;\n    }\n\n    if (Asset.isUrl(asset)) {\n      return Task.create(\"Download \" + (asset.title || asset.url), function (ctx) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var entry, _a, _b, _c, _d, data, file, _e, _f;\n\n          return __generator(this, function (_g) {\n            switch (_g.label) {\n              case 0:\n                if (!this._assets.has(asset.id)) return [3\n                /*break*/\n                , 2];\n                entry = this._assets.get(asset.id);\n                entry.refCount++;\n                _b = (_a = Asset).Wrapper;\n                return [4\n                /*yield*/\n                , readFromFile(entry.file, type).runInContext(ctx)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _b.apply(_a, [_g.sent(), asset, this])];\n\n              case 2:\n                if (!!store) return [3\n                /*break*/\n                , 4];\n                _d = (_c = Asset).Wrapper;\n                return [4\n                /*yield*/\n                , ajaxGet(__assign(__assign({}, asset), {\n                  type: type\n                })).runInContext(ctx)];\n\n              case 3:\n                return [2\n                /*return*/\n                , _d.apply(_c, [_g.sent(), asset, this])];\n\n              case 4:\n                return [4\n                /*yield*/\n                , ajaxGet(__assign(__assign({}, asset), {\n                  type: 'binary'\n                })).runInContext(ctx)];\n\n              case 5:\n                data = _g.sent();\n                file = new File([data], 'raw-data');\n\n                this._assets.set(asset.id, {\n                  asset: asset,\n                  file: file,\n                  refCount: 1\n                });\n\n                _f = (_e = Asset).Wrapper;\n                return [4\n                /*yield*/\n                , readFromFile(file, type).runInContext(ctx)];\n\n              case 6:\n                return [2\n                /*return*/\n                , _f.apply(_e, [_g.sent(), asset, this])];\n            }\n          });\n        });\n      });\n    } else {\n      return Task.create(\"Read \" + asset.name, function (ctx) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var entry, _a, _b, _c, _d;\n\n          return __generator(this, function (_e) {\n            switch (_e.label) {\n              case 0:\n                if (!this._assets.has(asset.id)) return [3\n                /*break*/\n                , 2];\n                entry = this._assets.get(asset.id);\n                entry.refCount++;\n                _b = (_a = Asset).Wrapper;\n                return [4\n                /*yield*/\n                , readFromFile(entry.file, type).runInContext(ctx)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _b.apply(_a, [_e.sent(), asset, this])];\n\n              case 2:\n                if (!(asset.file instanceof File)) {\n                  throw new Error(\"Cannot resolve file asset '\" + asset.name + \"' (\" + asset.id + \")\");\n                }\n\n                if (store) {\n                  this._assets.set(asset.id, {\n                    asset: asset,\n                    file: asset.file,\n                    refCount: 1\n                  });\n                }\n\n                _d = (_c = Asset).Wrapper;\n                return [4\n                /*yield*/\n                , readFromFile(asset.file, type).runInContext(ctx)];\n\n              case 3:\n                return [2\n                /*return*/\n                , _d.apply(_c, [_e.sent(), asset, this])];\n            }\n          });\n        });\n      });\n    }\n  };\n\n  AssetManager.prototype.release = function (asset) {\n    var entry = this._assets.get(asset.id);\n\n    if (!entry) return;\n    entry.refCount--;\n    if (entry.refCount <= 0) this._assets.delete(asset.id);\n  };\n\n  return AssetManager;\n}();","map":{"version":3,"sources":["../../src/mol-util/assets.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { UUID } from './uuid';\r\nimport { iterableToArray } from '../mol-data/util';\r\nimport { ajaxGet, readFromFile } from './data-source';\r\nimport { Task } from '../mol-task';\r\nexport { AssetManager, Asset };\r\nvar Asset;\r\n(function (Asset) {\r\n    function Url(url, options) {\r\n        return __assign({ kind: 'url', id: UUID.create22(), url: url }, options);\r\n    }\r\n    Asset.Url = Url;\r\n    function File(file) {\r\n        return { kind: 'file', id: UUID.create22(), name: file.name, file: file };\r\n    }\r\n    Asset.File = File;\r\n    function isUrl(x) {\r\n        return (x === null || x === void 0 ? void 0 : x.kind) === 'url';\r\n    }\r\n    Asset.isUrl = isUrl;\r\n    function isFile(x) {\r\n        return (x === null || x === void 0 ? void 0 : x.kind) === 'file';\r\n    }\r\n    Asset.isFile = isFile;\r\n    function Wrapper(data, asset, manager) {\r\n        return {\r\n            data: data,\r\n            dispose: function () {\r\n                manager.release(asset);\r\n            }\r\n        };\r\n    }\r\n    Asset.Wrapper = Wrapper;\r\n    function getUrl(url) {\r\n        return typeof url === 'string' ? url : url.url;\r\n    }\r\n    Asset.getUrl = getUrl;\r\n    function getUrlAsset(manager, url, body) {\r\n        if (typeof url === 'string') {\r\n            var asset = manager.tryFindUrl(url, body);\r\n            return asset || Url(url, { body: body });\r\n        }\r\n        return url;\r\n    }\r\n    Asset.getUrlAsset = getUrlAsset;\r\n})(Asset || (Asset = {}));\r\nvar AssetManager = /** @class */ (function () {\r\n    function AssetManager() {\r\n        // TODO: add URL based ref-counted cache?\r\n        // TODO: when serializing, check for duplicates?\r\n        this._assets = new Map();\r\n    }\r\n    Object.defineProperty(AssetManager.prototype, \"assets\", {\r\n        get: function () {\r\n            return iterableToArray(this._assets.values());\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    AssetManager.prototype.tryFindUrl = function (url, body) {\r\n        var assets = this.assets.values();\r\n        while (true) {\r\n            var v = assets.next();\r\n            if (v.done)\r\n                return;\r\n            var asset = v.value.asset;\r\n            if (Asset.isUrl(asset) && asset.url === url && (asset.body || '') === (body || ''))\r\n                return asset;\r\n        }\r\n    };\r\n    AssetManager.prototype.set = function (asset, file) {\r\n        this._assets.set(asset.id, { asset: asset, file: file, refCount: 0 });\r\n    };\r\n    AssetManager.prototype.resolve = function (asset, type, store) {\r\n        var _this = this;\r\n        if (store === void 0) { store = true; }\r\n        if (Asset.isUrl(asset)) {\r\n            return Task.create(\"Download \" + (asset.title || asset.url), function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n                var entry, _a, _b, _c, _d, data, file, _e, _f;\r\n                return __generator(this, function (_g) {\r\n                    switch (_g.label) {\r\n                        case 0:\r\n                            if (!this._assets.has(asset.id)) return [3 /*break*/, 2];\r\n                            entry = this._assets.get(asset.id);\r\n                            entry.refCount++;\r\n                            _b = (_a = Asset).Wrapper;\r\n                            return [4 /*yield*/, readFromFile(entry.file, type).runInContext(ctx)];\r\n                        case 1: return [2 /*return*/, _b.apply(_a, [_g.sent(), asset, this])];\r\n                        case 2:\r\n                            if (!!store) return [3 /*break*/, 4];\r\n                            _d = (_c = Asset).Wrapper;\r\n                            return [4 /*yield*/, ajaxGet(__assign(__assign({}, asset), { type: type })).runInContext(ctx)];\r\n                        case 3: return [2 /*return*/, _d.apply(_c, [_g.sent(), asset, this])];\r\n                        case 4: return [4 /*yield*/, ajaxGet(__assign(__assign({}, asset), { type: 'binary' })).runInContext(ctx)];\r\n                        case 5:\r\n                            data = _g.sent();\r\n                            file = new File([data], 'raw-data');\r\n                            this._assets.set(asset.id, { asset: asset, file: file, refCount: 1 });\r\n                            _f = (_e = Asset).Wrapper;\r\n                            return [4 /*yield*/, readFromFile(file, type).runInContext(ctx)];\r\n                        case 6: return [2 /*return*/, _f.apply(_e, [_g.sent(), asset, this])];\r\n                    }\r\n                });\r\n            }); });\r\n        }\r\n        else {\r\n            return Task.create(\"Read \" + asset.name, function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n                var entry, _a, _b, _c, _d;\r\n                return __generator(this, function (_e) {\r\n                    switch (_e.label) {\r\n                        case 0:\r\n                            if (!this._assets.has(asset.id)) return [3 /*break*/, 2];\r\n                            entry = this._assets.get(asset.id);\r\n                            entry.refCount++;\r\n                            _b = (_a = Asset).Wrapper;\r\n                            return [4 /*yield*/, readFromFile(entry.file, type).runInContext(ctx)];\r\n                        case 1: return [2 /*return*/, _b.apply(_a, [_e.sent(), asset, this])];\r\n                        case 2:\r\n                            if (!(asset.file instanceof File)) {\r\n                                throw new Error(\"Cannot resolve file asset '\" + asset.name + \"' (\" + asset.id + \")\");\r\n                            }\r\n                            if (store) {\r\n                                this._assets.set(asset.id, { asset: asset, file: asset.file, refCount: 1 });\r\n                            }\r\n                            _d = (_c = Asset).Wrapper;\r\n                            return [4 /*yield*/, readFromFile(asset.file, type).runInContext(ctx)];\r\n                        case 3: return [2 /*return*/, _d.apply(_c, [_e.sent(), asset, this])];\r\n                    }\r\n                });\r\n            }); });\r\n        }\r\n    };\r\n    AssetManager.prototype.release = function (asset) {\r\n        var entry = this._assets.get(asset.id);\r\n        if (!entry)\r\n            return;\r\n        entry.refCount--;\r\n        if (entry.refCount <= 0)\r\n            this._assets.delete(asset.id);\r\n    };\r\n    return AssetManager;\r\n}());\r\n//# sourceMappingURL=assets.js.map"]},"metadata":{},"sourceType":"module"}