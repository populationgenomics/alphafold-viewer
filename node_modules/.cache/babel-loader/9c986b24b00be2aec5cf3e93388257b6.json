{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { StructureProperties, StructureElement, Bond, Model } from '../../mol-model/structure';\nimport { Color } from '../../mol-util/color';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { getPaletteParams, getPalette } from '../../mol-util/color/palette';\nvar DefaultList = 'many-distinct';\nvar DefaultColor = Color(0xFAFAFA);\nvar Description = 'Gives every chain a color based on its `asym_id` value.';\nexport var ChainIdColorThemeParams = __assign({\n  asymId: PD.Select('auth', PD.arrayToOptions(['auth', 'label']))\n}, getPaletteParams({\n  type: 'colors',\n  colorList: DefaultList\n}));\nexport function getChainIdColorThemeParams(ctx) {\n  var _a;\n\n  var params = PD.clone(ChainIdColorThemeParams);\n\n  if ((_a = ctx.structure) === null || _a === void 0 ? void 0 : _a.models.some(function (m) {\n    return m.coarseHierarchy.isDefined;\n  })) {\n    params.asymId.defaultValue = 'label';\n  }\n\n  return params;\n}\n\nfunction getAsymId(unit, type) {\n  switch (unit.kind) {\n    case 0\n    /* Atomic */\n    :\n      return type === 'auth' ? StructureProperties.chain.auth_asym_id : StructureProperties.chain.label_asym_id;\n\n    case 1\n    /* Spheres */\n    :\n    case 2\n    /* Gaussians */\n    :\n      return StructureProperties.coarse.asym_id;\n  }\n}\n\nfunction getAsymIdKey(location, type) {\n  var asymId = getAsymId(location.unit, type)(location);\n  return location.structure.root.models.length > 1 ? getKey(location.unit.model, asymId) : asymId;\n}\n\nfunction getKey(model, asymId) {\n  return asymId + \"|\" + ((Model.Index.get(model).value || 0) + 1);\n}\n\nfunction getAsymIdSerialMap(structure, type) {\n  var map = new Map();\n\n  var _loop_1 = function (m) {\n    var asymIdOffset = Model.AsymIdOffset.get(m).value;\n    var offset = (type === 'auth' ? asymIdOffset === null || asymIdOffset === void 0 ? void 0 : asymIdOffset.auth : asymIdOffset === null || asymIdOffset === void 0 ? void 0 : asymIdOffset.label) || 0;\n    var count = 0;\n    m.properties.structAsymMap.forEach(function (_a, label_id) {\n      var auth_id = _a.auth_id;\n      var asymId = type === 'auth' ? auth_id : label_id;\n      var k = structure.models.length > 1 ? getKey(m, asymId) : asymId;\n\n      if (!map.has(k)) {\n        map.set(k, count + offset);\n        ++count;\n      }\n    });\n  };\n\n  for (var _i = 0, _a = structure.models; _i < _a.length; _i++) {\n    var m = _a[_i];\n\n    _loop_1(m);\n  }\n\n  return map;\n}\n\nexport function ChainIdColorTheme(ctx, props) {\n  var color;\n  var legend;\n\n  if (ctx.structure) {\n    var l_1 = StructureElement.Location.create(ctx.structure.root);\n    var asymIdSerialMap_1 = getAsymIdSerialMap(ctx.structure.root, props.asymId);\n    var labelTable_1 = Array.from(asymIdSerialMap_1.keys());\n\n    var valueLabel = function (i) {\n      return labelTable_1[i];\n    };\n\n    var palette_1 = getPalette(asymIdSerialMap_1.size, props, {\n      valueLabel: valueLabel\n    });\n    legend = palette_1.legend;\n\n    color = function (location) {\n      var serial = undefined;\n\n      if (StructureElement.Location.is(location)) {\n        var k = getAsymIdKey(location, props.asymId);\n        serial = asymIdSerialMap_1.get(k);\n      } else if (Bond.isLocation(location)) {\n        l_1.unit = location.aUnit;\n        l_1.element = location.aUnit.elements[location.aIndex];\n        var k = getAsymIdKey(l_1, props.asymId);\n        serial = asymIdSerialMap_1.get(k);\n      }\n\n      return serial === undefined ? DefaultColor : palette_1.color(serial);\n    };\n  } else {\n    color = function () {\n      return DefaultColor;\n    };\n  }\n\n  return {\n    factory: ChainIdColorTheme,\n    granularity: 'group',\n    color: color,\n    props: props,\n    description: Description,\n    legend: legend\n  };\n}\nexport var ChainIdColorThemeProvider = {\n  name: 'chain-id',\n  label: 'Chain Id',\n  category: \"Chain Property\"\n  /* Chain */\n  ,\n  factory: ChainIdColorTheme,\n  getParams: getChainIdColorThemeParams,\n  defaultValues: PD.getDefaultValues(ChainIdColorThemeParams),\n  isApplicable: function (ctx) {\n    return !!ctx.structure;\n  }\n};","map":{"version":3,"sources":["../../../src/mol-theme/color/chain-id.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { StructureProperties, StructureElement, Bond, Model } from '../../mol-model/structure';\r\nimport { Color } from '../../mol-util/color';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { getPaletteParams, getPalette } from '../../mol-util/color/palette';\r\nvar DefaultList = 'many-distinct';\r\nvar DefaultColor = Color(0xFAFAFA);\r\nvar Description = 'Gives every chain a color based on its `asym_id` value.';\r\nexport var ChainIdColorThemeParams = __assign({ asymId: PD.Select('auth', PD.arrayToOptions(['auth', 'label'])) }, getPaletteParams({ type: 'colors', colorList: DefaultList }));\r\nexport function getChainIdColorThemeParams(ctx) {\r\n    var _a;\r\n    var params = PD.clone(ChainIdColorThemeParams);\r\n    if ((_a = ctx.structure) === null || _a === void 0 ? void 0 : _a.models.some(function (m) { return m.coarseHierarchy.isDefined; })) {\r\n        params.asymId.defaultValue = 'label';\r\n    }\r\n    return params;\r\n}\r\nfunction getAsymId(unit, type) {\r\n    switch (unit.kind) {\r\n        case 0 /* Atomic */:\r\n            return type === 'auth'\r\n                ? StructureProperties.chain.auth_asym_id\r\n                : StructureProperties.chain.label_asym_id;\r\n        case 1 /* Spheres */:\r\n        case 2 /* Gaussians */:\r\n            return StructureProperties.coarse.asym_id;\r\n    }\r\n}\r\nfunction getAsymIdKey(location, type) {\r\n    var asymId = getAsymId(location.unit, type)(location);\r\n    return location.structure.root.models.length > 1\r\n        ? getKey(location.unit.model, asymId)\r\n        : asymId;\r\n}\r\nfunction getKey(model, asymId) {\r\n    return asymId + \"|\" + ((Model.Index.get(model).value || 0) + 1);\r\n}\r\nfunction getAsymIdSerialMap(structure, type) {\r\n    var map = new Map();\r\n    var _loop_1 = function (m) {\r\n        var asymIdOffset = Model.AsymIdOffset.get(m).value;\r\n        var offset = (type === 'auth' ? asymIdOffset === null || asymIdOffset === void 0 ? void 0 : asymIdOffset.auth : asymIdOffset === null || asymIdOffset === void 0 ? void 0 : asymIdOffset.label) || 0;\r\n        var count = 0;\r\n        m.properties.structAsymMap.forEach(function (_a, label_id) {\r\n            var auth_id = _a.auth_id;\r\n            var asymId = type === 'auth' ? auth_id : label_id;\r\n            var k = structure.models.length > 1\r\n                ? getKey(m, asymId)\r\n                : asymId;\r\n            if (!map.has(k)) {\r\n                map.set(k, count + offset);\r\n                ++count;\r\n            }\r\n        });\r\n    };\r\n    for (var _i = 0, _a = structure.models; _i < _a.length; _i++) {\r\n        var m = _a[_i];\r\n        _loop_1(m);\r\n    }\r\n    return map;\r\n}\r\nexport function ChainIdColorTheme(ctx, props) {\r\n    var color;\r\n    var legend;\r\n    if (ctx.structure) {\r\n        var l_1 = StructureElement.Location.create(ctx.structure.root);\r\n        var asymIdSerialMap_1 = getAsymIdSerialMap(ctx.structure.root, props.asymId);\r\n        var labelTable_1 = Array.from(asymIdSerialMap_1.keys());\r\n        var valueLabel = function (i) { return labelTable_1[i]; };\r\n        var palette_1 = getPalette(asymIdSerialMap_1.size, props, { valueLabel: valueLabel });\r\n        legend = palette_1.legend;\r\n        color = function (location) {\r\n            var serial = undefined;\r\n            if (StructureElement.Location.is(location)) {\r\n                var k = getAsymIdKey(location, props.asymId);\r\n                serial = asymIdSerialMap_1.get(k);\r\n            }\r\n            else if (Bond.isLocation(location)) {\r\n                l_1.unit = location.aUnit;\r\n                l_1.element = location.aUnit.elements[location.aIndex];\r\n                var k = getAsymIdKey(l_1, props.asymId);\r\n                serial = asymIdSerialMap_1.get(k);\r\n            }\r\n            return serial === undefined ? DefaultColor : palette_1.color(serial);\r\n        };\r\n    }\r\n    else {\r\n        color = function () { return DefaultColor; };\r\n    }\r\n    return {\r\n        factory: ChainIdColorTheme,\r\n        granularity: 'group',\r\n        color: color,\r\n        props: props,\r\n        description: Description,\r\n        legend: legend\r\n    };\r\n}\r\nexport var ChainIdColorThemeProvider = {\r\n    name: 'chain-id',\r\n    label: 'Chain Id',\r\n    category: \"Chain Property\" /* Chain */,\r\n    factory: ChainIdColorTheme,\r\n    getParams: getChainIdColorThemeParams,\r\n    defaultValues: PD.getDefaultValues(ChainIdColorThemeParams),\r\n    isApplicable: function (ctx) { return !!ctx.structure; }\r\n};\r\n//# sourceMappingURL=chain-id.js.map"]},"metadata":{},"sourceType":"module"}