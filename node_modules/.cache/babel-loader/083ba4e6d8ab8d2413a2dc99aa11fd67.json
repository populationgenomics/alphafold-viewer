{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __assign } from \"tslib\";\nimport { BehaviorSubject } from 'rxjs';\nimport { now } from '../mol-util/now';\nimport { Vec3 } from '../mol-math/linear-algebra';\nimport { InputObserver } from '../mol-util/input/input-observer';\nimport { Renderer, RendererParams } from '../mol-gl/renderer';\nimport { TrackballControls, TrackballControlsParams } from './controls/trackball';\nimport { Viewport } from './camera/util';\nimport { createContext, getGLContext } from '../mol-gl/webgl/context';\nimport { Representation } from '../mol-repr/representation';\nimport { Scene } from '../mol-gl/scene';\nimport { EmptyLoci, isEmptyLoci } from '../mol-model/loci';\nimport { Camera } from './camera';\nimport { ParamDefinition as PD } from '../mol-util/param-definition';\nimport { DebugHelperParams } from './helper/bounding-sphere-helper';\nimport { SetUtils } from '../mol-util/set';\nimport { Canvas3dInteractionHelper, Canvas3dInteractionHelperParams } from './helper/interaction-events';\nimport { PostprocessingParams } from './passes/postprocessing';\nimport { MultiSampleHelper, MultiSampleParams, MultiSamplePass } from './passes/multi-sample';\nimport { PickHelper } from './passes/pick';\nimport { ImagePass } from './passes/image';\nimport { Sphere3D } from '../mol-math/geometry';\nimport { isDebugMode } from '../mol-util/debug';\nimport { CameraHelperParams } from './helper/camera-helper';\nimport { produce } from 'immer';\nimport { HandleHelperParams } from './helper/handle-helper';\nimport { StereoCamera, StereoCameraParams } from './camera/stereo';\nimport { Helper } from './helper/helper';\nimport { Passes } from './passes/passes';\nimport { shallowEqual } from '../mol-util';\nimport { MarkingParams } from './passes/marking';\nexport var Canvas3DParams = {\n  camera: PD.Group({\n    mode: PD.Select('perspective', PD.arrayToOptions(['perspective', 'orthographic']), {\n      label: 'Camera'\n    }),\n    helper: PD.Group(CameraHelperParams, {\n      isFlat: true\n    }),\n    stereo: PD.MappedStatic('off', {\n      on: PD.Group(StereoCameraParams),\n      off: PD.Group({})\n    }, {\n      cycle: true,\n      hideIf: function (p) {\n        return (p === null || p === void 0 ? void 0 : p.mode) !== 'perspective';\n      }\n    }),\n    manualReset: PD.Boolean(false, {\n      isHidden: true\n    })\n  }, {\n    pivot: 'mode'\n  }),\n  cameraFog: PD.MappedStatic('on', {\n    on: PD.Group({\n      intensity: PD.Numeric(15, {\n        min: 1,\n        max: 100,\n        step: 1\n      })\n    }),\n    off: PD.Group({})\n  }, {\n    cycle: true,\n    description: 'Show fog in the distance'\n  }),\n  cameraClipping: PD.Group({\n    radius: PD.Numeric(100, {\n      min: 0,\n      max: 99,\n      step: 1\n    }, {\n      label: 'Clipping',\n      description: 'How much of the scene to show.'\n    }),\n    far: PD.Boolean(true, {\n      description: 'Hide scene in the distance'\n    })\n  }, {\n    pivot: 'radius'\n  }),\n  viewport: PD.MappedStatic('canvas', {\n    canvas: PD.Group({}),\n    'static-frame': PD.Group({\n      x: PD.Numeric(0),\n      y: PD.Numeric(0),\n      width: PD.Numeric(128),\n      height: PD.Numeric(128)\n    }),\n    'relative-frame': PD.Group({\n      x: PD.Numeric(0.33, {\n        min: 0,\n        max: 1,\n        step: 0.01\n      }),\n      y: PD.Numeric(0.33, {\n        min: 0,\n        max: 1,\n        step: 0.01\n      }),\n      width: PD.Numeric(0.5, {\n        min: 0.01,\n        max: 1,\n        step: 0.01\n      }),\n      height: PD.Numeric(0.5, {\n        min: 0.01,\n        max: 1,\n        step: 0.01\n      })\n    })\n  }),\n  cameraResetDurationMs: PD.Numeric(250, {\n    min: 0,\n    max: 1000,\n    step: 1\n  }, {\n    description: 'The time it takes to reset the camera.'\n  }),\n  transparentBackground: PD.Boolean(false),\n  multiSample: PD.Group(MultiSampleParams),\n  postprocessing: PD.Group(PostprocessingParams),\n  marking: PD.Group(MarkingParams),\n  renderer: PD.Group(RendererParams),\n  trackball: PD.Group(TrackballControlsParams),\n  interaction: PD.Group(Canvas3dInteractionHelperParams),\n  debug: PD.Group(DebugHelperParams),\n  handle: PD.Group(HandleHelperParams)\n};\nexport var DefaultCanvas3DParams = PD.getDefaultValues(Canvas3DParams);\nexport { Canvas3DContext };\nvar Canvas3DContext;\n\n(function (Canvas3DContext) {\n  Canvas3DContext.DefaultAttribs = {\n    /** true by default to avoid issues with Safari (Jan 2021) */\n    antialias: true,\n\n    /** true to support multiple Canvas3D objects with a single context */\n    preserveDrawingBuffer: true,\n    pixelScale: 1,\n    pickScale: 0.25,\n\n    /** extra pixels to around target to check in case target is empty */\n    pickPadding: 1,\n    enableWboit: true,\n    preferWebGl1: false\n  };\n\n  function fromCanvas(canvas, attribs) {\n    if (attribs === void 0) {\n      attribs = {};\n    }\n\n    var a = __assign(__assign({}, Canvas3DContext.DefaultAttribs), attribs);\n\n    var antialias = a.antialias,\n        preserveDrawingBuffer = a.preserveDrawingBuffer,\n        pixelScale = a.pixelScale,\n        preferWebGl1 = a.preferWebGl1;\n    var gl = getGLContext(canvas, {\n      antialias: antialias,\n      preserveDrawingBuffer: preserveDrawingBuffer,\n      alpha: true,\n      depth: true,\n      premultipliedAlpha: true,\n      preferWebGl1: preferWebGl1\n    });\n    if (gl === null) throw new Error('Could not create a WebGL rendering context');\n    var input = InputObserver.fromElement(canvas, {\n      pixelScale: pixelScale,\n      preventGestures: true\n    });\n    var webgl = createContext(gl, {\n      pixelScale: pixelScale\n    });\n    var passes = new Passes(webgl, attribs);\n\n    if (isDebugMode) {\n      var loseContextExt_1 = gl.getExtension('WEBGL_lose_context');\n\n      if (loseContextExt_1) {\n        // Hold down shift+ctrl+alt and press any mouse button to call `loseContext`.\n        // After 1 second `restoreContext` will be called.\n        canvas.addEventListener('mousedown', function (e) {\n          if (webgl.isContextLost) return;\n          if (!e.shiftKey || !e.ctrlKey || !e.altKey) return;\n          if (isDebugMode) console.log('lose context');\n          loseContextExt_1.loseContext();\n          setTimeout(function () {\n            if (!webgl.isContextLost) return;\n            if (isDebugMode) console.log('restore context');\n            loseContextExt_1.restoreContext();\n          }, 1000);\n        }, false);\n      }\n    } // https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n\n    var contextLost = new BehaviorSubject(0);\n\n    var handleWebglContextLost = function (e) {\n      webgl.setContextLost();\n      e.preventDefault();\n      if (isDebugMode) console.log('context lost');\n      contextLost.next(now());\n    };\n\n    var handlewWebglContextRestored = function () {\n      if (!webgl.isContextLost) return;\n      webgl.handleContextRestored(function () {\n        passes.draw.reset();\n      });\n      if (isDebugMode) console.log('context restored');\n    };\n\n    canvas.addEventListener('webglcontextlost', handleWebglContextLost, false);\n    canvas.addEventListener('webglcontextrestored', handlewWebglContextRestored, false);\n    return {\n      canvas: canvas,\n      webgl: webgl,\n      input: input,\n      passes: passes,\n      attribs: a,\n      contextLost: contextLost,\n      contextRestored: webgl.contextRestored,\n      dispose: function (options) {\n        input.dispose();\n        canvas.removeEventListener('webglcontextlost', handleWebglContextLost, false);\n        canvas.removeEventListener('webglcontextrestored', handlewWebglContextRestored, false);\n        webgl.destroy(options);\n      }\n    };\n  }\n\n  Canvas3DContext.fromCanvas = fromCanvas;\n})(Canvas3DContext || (Canvas3DContext = {}));\n\nexport { Canvas3D };\nvar requestAnimationFrame = typeof window !== 'undefined' ? window.requestAnimationFrame : function (f) {\n  return setImmediate(function () {\n    return f(Date.now());\n  });\n};\nvar cancelAnimationFrame = typeof window !== 'undefined' ? window.cancelAnimationFrame : function (handle) {\n  return clearImmediate(handle);\n};\nvar Canvas3D;\n\n(function (Canvas3D) {\n  function create(_a, props) {\n    var webgl = _a.webgl,\n        input = _a.input,\n        passes = _a.passes,\n        attribs = _a.attribs;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    var p = __assign(__assign({}, DefaultCanvas3DParams), props);\n\n    var reprRenderObjects = new Map();\n    var reprUpdatedSubscriptions = new Map();\n    var reprCount = new BehaviorSubject(0);\n    var startTime = now();\n    var didDraw = new BehaviorSubject(0);\n    var commited = new BehaviorSubject(0);\n    var gl = webgl.gl,\n        contextRestored = webgl.contextRestored;\n    var x = 0;\n    var y = 0;\n    var width = 128;\n    var height = 128;\n    updateViewport();\n    var scene = Scene.create(webgl);\n    var camera = new Camera({\n      position: Vec3.create(0, 0, 100),\n      mode: p.camera.mode,\n      fog: p.cameraFog.name === 'on' ? p.cameraFog.params.intensity : 0,\n      clipFar: p.cameraClipping.far\n    }, {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }, {\n      pixelScale: attribs.pixelScale\n    });\n    var stereoCamera = new StereoCamera(camera, p.camera.stereo.params);\n    var controls = TrackballControls.create(input, camera, p.trackball);\n    var renderer = Renderer.create(webgl, p.renderer);\n    var helper = new Helper(webgl, scene, p);\n    var pickHelper = new PickHelper(webgl, renderer, scene, helper, passes.pick, {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }, attribs.pickPadding);\n    var interactionHelper = new Canvas3dInteractionHelper(identify, getLoci, input, camera, p.interaction);\n    var multiSampleHelper = new MultiSampleHelper(passes.multiSample);\n    var cameraResetRequested = false;\n    var nextCameraResetDuration = void 0;\n    var nextCameraResetSnapshot = void 0;\n    var resizeRequested = false;\n    var notifyDidDraw = true;\n\n    function getLoci(pickingId) {\n      var loci = EmptyLoci;\n      var repr = Representation.Empty;\n\n      if (pickingId) {\n        var cameraHelperLoci = helper.camera.getLoci(pickingId);\n        if (cameraHelperLoci !== EmptyLoci) return {\n          loci: cameraHelperLoci,\n          repr: repr\n        };\n        loci = helper.handle.getLoci(pickingId);\n        reprRenderObjects.forEach(function (_, _repr) {\n          var _loci = _repr.getLoci(pickingId);\n\n          if (!isEmptyLoci(_loci)) {\n            if (!isEmptyLoci(loci)) {\n              console.warn('found another loci, this should not happen');\n            }\n\n            loci = _loci;\n            repr = _repr;\n          }\n        });\n      }\n\n      return {\n        loci: loci,\n        repr: repr\n      };\n    }\n\n    function mark(reprLoci, action, noDraw) {\n      if (noDraw === void 0) {\n        noDraw = false;\n      }\n\n      var repr = reprLoci.repr,\n          loci = reprLoci.loci;\n      var changed = false;\n\n      if (repr) {\n        changed = repr.mark(loci, action);\n      } else {\n        changed = helper.handle.mark(loci, action);\n        changed = helper.camera.mark(loci, action) || changed;\n        reprRenderObjects.forEach(function (_, _repr) {\n          changed = _repr.mark(loci, action) || changed;\n        });\n      }\n\n      if (changed && !noDraw) {\n        scene.update(void 0, true);\n        helper.handle.scene.update(void 0, true);\n        helper.camera.scene.update(void 0, true);\n        var prevPickDirty = pickHelper.dirty;\n        draw(true);\n        pickHelper.dirty = prevPickDirty; // marking does not change picking buffers\n      }\n    }\n\n    function render(force) {\n      if (webgl.isContextLost) return false;\n      var resized = false;\n\n      if (resizeRequested) {\n        handleResize(false);\n        resizeRequested = false;\n        resized = true;\n      }\n\n      if (x > gl.drawingBufferWidth || x + width < 0 || y > gl.drawingBufferHeight || y + height < 0) return false;\n      var didRender = false;\n      controls.update(currentTime);\n      var cameraChanged = camera.update();\n      var shouldRender = force || cameraChanged || resized || forceNextRender;\n      forceNextRender = false;\n      var multiSampleChanged = multiSampleHelper.update(shouldRender, p.multiSample);\n\n      if (shouldRender || multiSampleChanged) {\n        var cam = camera;\n\n        if (p.camera.stereo.name === 'on') {\n          stereoCamera.update();\n          cam = stereoCamera;\n        }\n\n        if (MultiSamplePass.isEnabled(p.multiSample)) {\n          multiSampleHelper.render(renderer, cam, scene, helper, true, p.transparentBackground, p);\n        } else {\n          passes.draw.render(renderer, cam, scene, helper, true, p.transparentBackground, p.postprocessing, p.marking);\n        }\n\n        pickHelper.dirty = true;\n        didRender = true;\n      }\n\n      return didRender;\n    }\n\n    var forceNextRender = false;\n    var forceDrawAfterAllCommited = false;\n    var currentTime = 0;\n    var drawPaused = false;\n\n    function draw(force) {\n      if (drawPaused) return;\n\n      if (render(!!force) && notifyDidDraw) {\n        didDraw.next(now() - startTime);\n      }\n    }\n\n    function requestDraw(force) {\n      forceNextRender = forceNextRender || !!force;\n    }\n\n    var animationFrameHandle = 0;\n\n    function tick(t, options) {\n      currentTime = t;\n      commit(options === null || options === void 0 ? void 0 : options.isSynchronous);\n      camera.transition.tick(currentTime);\n\n      if (options === null || options === void 0 ? void 0 : options.manualDraw) {\n        return;\n      }\n\n      draw(false);\n\n      if (!camera.transition.inTransition && !webgl.isContextLost) {\n        interactionHelper.tick(currentTime);\n      }\n    }\n\n    function _animate() {\n      tick(now());\n      animationFrameHandle = requestAnimationFrame(_animate);\n    }\n\n    function resetTime(t) {\n      startTime = t;\n      controls.start(t);\n    }\n\n    function animate() {\n      drawPaused = false;\n      controls.start(now());\n      if (animationFrameHandle === 0) _animate();\n    }\n\n    function pause(noDraw) {\n      if (noDraw === void 0) {\n        noDraw = false;\n      }\n\n      drawPaused = noDraw;\n      cancelAnimationFrame(animationFrameHandle);\n      animationFrameHandle = 0;\n    }\n\n    function identify(x, y) {\n      var cam = p.camera.stereo.name === 'on' ? stereoCamera : camera;\n      return webgl.isContextLost ? undefined : pickHelper.identify(x, y, cam);\n    }\n\n    function commit(isSynchronous) {\n      if (isSynchronous === void 0) {\n        isSynchronous = false;\n      }\n\n      var allCommited = commitScene(isSynchronous); // Only reset the camera after the full scene has been commited.\n\n      if (allCommited) {\n        resolveCameraReset();\n\n        if (forceDrawAfterAllCommited) {\n          if (helper.debug.isEnabled) helper.debug.update();\n          draw(true);\n          forceDrawAfterAllCommited = false;\n        }\n\n        commited.next(now());\n      }\n    }\n\n    function resolveCameraReset() {\n      if (!cameraResetRequested) return;\n      var boundingSphere = scene.boundingSphereVisible;\n      var center = boundingSphere.center,\n          radius = boundingSphere.radius;\n      var autoAdjustControls = controls.props.autoAdjustMinMaxDistance;\n\n      if (autoAdjustControls.name === 'on') {\n        var minDistance = autoAdjustControls.params.minDistanceFactor * radius + autoAdjustControls.params.minDistancePadding;\n        var maxDistance = Math.max(autoAdjustControls.params.maxDistanceFactor * radius, autoAdjustControls.params.maxDistanceMin);\n        controls.setProps({\n          minDistance: minDistance,\n          maxDistance: maxDistance\n        });\n      }\n\n      if (radius > 0) {\n        var duration = nextCameraResetDuration === undefined ? p.cameraResetDurationMs : nextCameraResetDuration;\n        var focus_1 = camera.getFocus(center, radius);\n        var next = typeof nextCameraResetSnapshot === 'function' ? nextCameraResetSnapshot(scene, camera) : nextCameraResetSnapshot;\n        var snapshot = next ? __assign(__assign({}, focus_1), next) : focus_1;\n        camera.setState(__assign(__assign({}, snapshot), {\n          radiusMax: scene.boundingSphere.radius\n        }), duration);\n      }\n\n      nextCameraResetDuration = void 0;\n      nextCameraResetSnapshot = void 0;\n      cameraResetRequested = false;\n    }\n\n    var oldBoundingSphereVisible = Sphere3D();\n    var cameraSphere = Sphere3D();\n\n    function shouldResetCamera() {\n      if (camera.state.radiusMax === 0) return true;\n      if (camera.transition.inTransition || nextCameraResetSnapshot) return false;\n      var cameraSphereOverlapsNone = true;\n      Sphere3D.set(cameraSphere, camera.state.target, camera.state.radius); // check if any renderable has moved outside of the old bounding sphere\n      // and if no renderable is overlapping with the camera sphere\n\n      for (var _i = 0, _a = scene.renderables; _i < _a.length; _i++) {\n        var r = _a[_i];\n        if (!r.state.visible) continue;\n        var b = r.values.boundingSphere.ref.value;\n        if (!b.radius) continue;\n        var cameraDist = Vec3.distance(cameraSphere.center, b.center);\n        if ((cameraDist > cameraSphere.radius || cameraDist > b.radius || b.radius > camera.state.radiusMax) && !Sphere3D.includes(oldBoundingSphereVisible, b)) return true;\n        if (Sphere3D.overlaps(cameraSphere, b)) cameraSphereOverlapsNone = false;\n      }\n\n      return cameraSphereOverlapsNone;\n    }\n\n    var sceneCommitTimeoutMs = 250;\n\n    function commitScene(isSynchronous) {\n      if (!scene.needsCommit) return true; // snapshot the current bounding sphere of visible objects\n\n      Sphere3D.copy(oldBoundingSphereVisible, scene.boundingSphereVisible);\n      if (!scene.commit(isSynchronous ? void 0 : sceneCommitTimeoutMs)) return false;\n      if (helper.debug.isEnabled) helper.debug.update();\n\n      if (!p.camera.manualReset && (reprCount.value === 0 || shouldResetCamera())) {\n        cameraResetRequested = true;\n      }\n\n      if (oldBoundingSphereVisible.radius === 0) nextCameraResetDuration = 0;\n      camera.setState({\n        radiusMax: scene.boundingSphere.radius\n      }, 0);\n      reprCount.next(reprRenderObjects.size);\n      if (isDebugMode) consoleStats();\n      return true;\n    }\n\n    function consoleStats() {\n      console.table(scene.renderables.map(function (r) {\n        return {\n          drawCount: r.values.drawCount.ref.value,\n          instanceCount: r.values.instanceCount.ref.value,\n          materialId: r.materialId,\n          renderItemId: r.id\n        };\n      }));\n      console.log(webgl.stats);\n\n      var _a = webgl.resources.getByteCounts(),\n          texture = _a.texture,\n          attribute = _a.attribute,\n          elements = _a.elements;\n\n      console.log({\n        texture: (texture / 1024 / 1024).toFixed(3) + \" MiB\",\n        attribute: (attribute / 1024 / 1024).toFixed(3) + \" MiB\",\n        elements: (elements / 1024 / 1024).toFixed(3) + \" MiB\"\n      });\n    }\n\n    function add(repr) {\n      registerAutoUpdate(repr);\n      var oldRO = reprRenderObjects.get(repr);\n      var newRO = new Set();\n      repr.renderObjects.forEach(function (o) {\n        return newRO.add(o);\n      });\n\n      if (oldRO) {\n        if (!SetUtils.areEqual(newRO, oldRO)) {\n          newRO.forEach(function (o) {\n            if (!oldRO.has(o)) scene.add(o);\n          });\n          oldRO.forEach(function (o) {\n            if (!newRO.has(o)) scene.remove(o);\n          });\n        }\n      } else {\n        repr.renderObjects.forEach(function (o) {\n          return scene.add(o);\n        });\n      }\n\n      reprRenderObjects.set(repr, newRO);\n      scene.update(repr.renderObjects, false);\n      forceDrawAfterAllCommited = true;\n      if (isDebugMode) consoleStats();\n    }\n\n    function remove(repr) {\n      unregisterAutoUpdate(repr);\n      var renderObjects = reprRenderObjects.get(repr);\n\n      if (renderObjects) {\n        renderObjects.forEach(function (o) {\n          return scene.remove(o);\n        });\n        reprRenderObjects.delete(repr);\n        forceDrawAfterAllCommited = true;\n        if (isDebugMode) consoleStats();\n      }\n    }\n\n    function registerAutoUpdate(repr) {\n      if (reprUpdatedSubscriptions.has(repr)) return;\n      reprUpdatedSubscriptions.set(repr, repr.updated.subscribe(function (_) {\n        if (!repr.state.syncManually) add(repr);\n      }));\n    }\n\n    function unregisterAutoUpdate(repr) {\n      var updatedSubscription = reprUpdatedSubscriptions.get(repr);\n\n      if (updatedSubscription) {\n        updatedSubscription.unsubscribe();\n        reprUpdatedSubscriptions.delete(repr);\n      }\n    }\n\n    function getProps() {\n      var radius = scene.boundingSphere.radius > 0 ? 100 - Math.round(camera.transition.target.radius / scene.boundingSphere.radius * 100) : 0;\n      return {\n        camera: {\n          mode: camera.state.mode,\n          helper: __assign({}, helper.camera.props),\n          stereo: __assign({}, p.camera.stereo),\n          manualReset: !!p.camera.manualReset\n        },\n        cameraFog: camera.state.fog > 0 ? {\n          name: 'on',\n          params: {\n            intensity: camera.state.fog\n          }\n        } : {\n          name: 'off',\n          params: {}\n        },\n        cameraClipping: {\n          far: camera.state.clipFar,\n          radius: radius\n        },\n        cameraResetDurationMs: p.cameraResetDurationMs,\n        transparentBackground: p.transparentBackground,\n        viewport: p.viewport,\n        postprocessing: __assign({}, p.postprocessing),\n        marking: __assign({}, p.marking),\n        multiSample: __assign({}, p.multiSample),\n        renderer: __assign({}, renderer.props),\n        trackball: __assign({}, controls.props),\n        interaction: __assign({}, interactionHelper.props),\n        debug: __assign({}, helper.debug.props),\n        handle: __assign({}, helper.handle.props)\n      };\n    }\n\n    var contextRestoredSub = contextRestored.subscribe(function () {\n      pickHelper.dirty = true;\n      draw(true); // Unclear why, but in Chrome with wboit enabled the first `draw` only clears\n      // the drawingBuffer. Note that in Firefox the drawingBuffer is preserved after\n      // context loss so it is unclear if it behaves the same.\n\n      draw(true);\n    });\n    var resized = new BehaviorSubject(0);\n\n    function handleResize(draw) {\n      if (draw === void 0) {\n        draw = true;\n      }\n\n      passes.updateSize();\n      updateViewport();\n      syncViewport();\n      if (draw) requestDraw(true);\n      resized.next(+new Date());\n    }\n\n    return {\n      webgl: webgl,\n      add: add,\n      remove: remove,\n      commit: commit,\n      update: function (repr, keepSphere) {\n        if (repr) {\n          if (!reprRenderObjects.has(repr)) return;\n          scene.update(repr.renderObjects, !!keepSphere);\n        } else {\n          scene.update(void 0, !!keepSphere);\n        }\n\n        forceDrawAfterAllCommited = true;\n      },\n      clear: function () {\n        reprUpdatedSubscriptions.forEach(function (v) {\n          return v.unsubscribe();\n        });\n        reprUpdatedSubscriptions.clear();\n        reprRenderObjects.clear();\n        scene.clear();\n        helper.debug.clear();\n        requestDraw(true);\n        reprCount.next(reprRenderObjects.size);\n      },\n      syncVisibility: function () {\n        if (camera.state.radiusMax === 0) {\n          cameraResetRequested = true;\n          nextCameraResetDuration = 0;\n        }\n\n        if (scene.syncVisibility()) {\n          if (helper.debug.isEnabled) helper.debug.update();\n        }\n\n        requestDraw(true);\n      },\n      requestDraw: requestDraw,\n      tick: tick,\n      animate: animate,\n      resetTime: resetTime,\n      pause: pause,\n      resume: function () {\n        drawPaused = false;\n      },\n      identify: identify,\n      mark: mark,\n      getLoci: getLoci,\n      handleResize: handleResize,\n      requestResize: function () {\n        resizeRequested = true;\n      },\n      requestCameraReset: function (options) {\n        nextCameraResetDuration = options === null || options === void 0 ? void 0 : options.durationMs;\n        nextCameraResetSnapshot = options === null || options === void 0 ? void 0 : options.snapshot;\n        cameraResetRequested = true;\n      },\n      camera: camera,\n      boundingSphere: scene.boundingSphere,\n      boundingSphereVisible: scene.boundingSphereVisible,\n\n      get notifyDidDraw() {\n        return notifyDidDraw;\n      },\n\n      set notifyDidDraw(v) {\n        notifyDidDraw = v;\n      },\n\n      didDraw: didDraw,\n      commited: commited,\n      reprCount: reprCount,\n      resized: resized,\n      setProps: function (properties, doNotRequestDraw) {\n        var _a, _b, _c;\n\n        if (doNotRequestDraw === void 0) {\n          doNotRequestDraw = false;\n        }\n\n        var props = typeof properties === 'function' ? produce(getProps(), properties) : properties;\n        var cameraState = Object.create(null);\n\n        if (props.camera && props.camera.mode !== undefined && props.camera.mode !== camera.state.mode) {\n          cameraState.mode = props.camera.mode;\n        }\n\n        if (props.cameraFog !== undefined && props.cameraFog.params) {\n          var newFog = props.cameraFog.name === 'on' ? props.cameraFog.params.intensity : 0;\n          if (newFog !== camera.state.fog) cameraState.fog = newFog;\n        }\n\n        if (props.cameraClipping !== undefined) {\n          if (props.cameraClipping.far !== undefined && props.cameraClipping.far !== camera.state.clipFar) {\n            cameraState.clipFar = props.cameraClipping.far;\n          }\n\n          if (props.cameraClipping.radius !== undefined) {\n            var radius = scene.boundingSphere.radius / 100 * (100 - props.cameraClipping.radius);\n\n            if (radius > 0 && radius !== cameraState.radius) {\n              // if radius = 0, NaNs happen\n              cameraState.radius = Math.max(radius, 0.01);\n            }\n          }\n        }\n\n        if (Object.keys(cameraState).length > 0) camera.setState(cameraState);\n        if ((_a = props.camera) === null || _a === void 0 ? void 0 : _a.helper) helper.camera.setProps(props.camera.helper);\n        if (((_b = props.camera) === null || _b === void 0 ? void 0 : _b.manualReset) !== undefined) p.camera.manualReset = props.camera.manualReset;\n        if (((_c = props.camera) === null || _c === void 0 ? void 0 : _c.stereo) !== undefined) Object.assign(p.camera.stereo, props.camera.stereo);\n        if (props.cameraResetDurationMs !== undefined) p.cameraResetDurationMs = props.cameraResetDurationMs;\n        if (props.transparentBackground !== undefined) p.transparentBackground = props.transparentBackground;\n\n        if (props.viewport !== undefined) {\n          var doNotUpdate = p.viewport === props.viewport || p.viewport.name === props.viewport.name && shallowEqual(p.viewport.params, props.viewport.params);\n\n          if (!doNotUpdate) {\n            p.viewport = props.viewport;\n            updateViewport();\n            syncViewport();\n          }\n        }\n\n        if (props.postprocessing) Object.assign(p.postprocessing, props.postprocessing);\n        if (props.marking) Object.assign(p.marking, props.marking);\n        if (props.multiSample) Object.assign(p.multiSample, props.multiSample);\n        if (props.renderer) renderer.setProps(props.renderer);\n        if (props.trackball) controls.setProps(props.trackball);\n        if (props.interaction) interactionHelper.setProps(props.interaction);\n        if (props.debug) helper.debug.setProps(props.debug);\n        if (props.handle) helper.handle.setProps(props.handle);\n\n        if (cameraState.mode === 'orthographic') {\n          p.camera.stereo.name = 'off';\n        }\n\n        if (!doNotRequestDraw) {\n          requestDraw(true);\n        }\n      },\n      getImagePass: function (props) {\n        if (props === void 0) {\n          props = {};\n        }\n\n        return new ImagePass(webgl, renderer, scene, camera, helper, passes.draw.wboitEnabled, props);\n      },\n      getRenderObjects: function () {\n        var renderObjects = [];\n        scene.forEach(function (_, ro) {\n          return renderObjects.push(ro);\n        });\n        return renderObjects;\n      },\n\n      get props() {\n        return getProps();\n      },\n\n      get input() {\n        return input;\n      },\n\n      get stats() {\n        return renderer.stats;\n      },\n\n      get interaction() {\n        return interactionHelper.events;\n      },\n\n      dispose: function () {\n        contextRestoredSub.unsubscribe();\n        scene.clear();\n        helper.debug.clear();\n        controls.dispose();\n        renderer.dispose();\n        interactionHelper.dispose();\n      }\n    };\n\n    function updateViewport() {\n      var oldX = x,\n          oldY = y,\n          oldWidth = width,\n          oldHeight = height;\n\n      if (p.viewport.name === 'canvas') {\n        x = 0;\n        y = 0;\n        width = gl.drawingBufferWidth;\n        height = gl.drawingBufferHeight;\n      } else if (p.viewport.name === 'static-frame') {\n        x = p.viewport.params.x * webgl.pixelRatio;\n        height = p.viewport.params.height * webgl.pixelRatio;\n        y = gl.drawingBufferHeight - height - p.viewport.params.y * webgl.pixelRatio;\n        width = p.viewport.params.width * webgl.pixelRatio;\n      } else if (p.viewport.name === 'relative-frame') {\n        x = Math.round(p.viewport.params.x * gl.drawingBufferWidth);\n        height = Math.round(p.viewport.params.height * gl.drawingBufferHeight);\n        y = Math.round(gl.drawingBufferHeight - height - p.viewport.params.y * gl.drawingBufferHeight);\n        width = Math.round(p.viewport.params.width * gl.drawingBufferWidth);\n      }\n\n      if (oldX !== x || oldY !== y || oldWidth !== width || oldHeight !== height) {\n        forceNextRender = true;\n      }\n    }\n\n    function syncViewport() {\n      pickHelper.setViewport(x, y, width, height);\n      renderer.setViewport(x, y, width, height);\n      Viewport.set(camera.viewport, x, y, width, height);\n      Viewport.set(controls.viewport, x, y, width, height);\n    }\n  }\n\n  Canvas3D.create = create;\n})(Canvas3D || (Canvas3D = {}));","map":{"version":3,"sources":["../../src/mol-canvas3d/canvas3d.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { now } from '../mol-util/now';\r\nimport { Vec3 } from '../mol-math/linear-algebra';\r\nimport { InputObserver } from '../mol-util/input/input-observer';\r\nimport { Renderer, RendererParams } from '../mol-gl/renderer';\r\nimport { TrackballControls, TrackballControlsParams } from './controls/trackball';\r\nimport { Viewport } from './camera/util';\r\nimport { createContext, getGLContext } from '../mol-gl/webgl/context';\r\nimport { Representation } from '../mol-repr/representation';\r\nimport { Scene } from '../mol-gl/scene';\r\nimport { EmptyLoci, isEmptyLoci } from '../mol-model/loci';\r\nimport { Camera } from './camera';\r\nimport { ParamDefinition as PD } from '../mol-util/param-definition';\r\nimport { DebugHelperParams } from './helper/bounding-sphere-helper';\r\nimport { SetUtils } from '../mol-util/set';\r\nimport { Canvas3dInteractionHelper, Canvas3dInteractionHelperParams } from './helper/interaction-events';\r\nimport { PostprocessingParams } from './passes/postprocessing';\r\nimport { MultiSampleHelper, MultiSampleParams, MultiSamplePass } from './passes/multi-sample';\r\nimport { PickHelper } from './passes/pick';\r\nimport { ImagePass } from './passes/image';\r\nimport { Sphere3D } from '../mol-math/geometry';\r\nimport { isDebugMode } from '../mol-util/debug';\r\nimport { CameraHelperParams } from './helper/camera-helper';\r\nimport { produce } from 'immer';\r\nimport { HandleHelperParams } from './helper/handle-helper';\r\nimport { StereoCamera, StereoCameraParams } from './camera/stereo';\r\nimport { Helper } from './helper/helper';\r\nimport { Passes } from './passes/passes';\r\nimport { shallowEqual } from '../mol-util';\r\nimport { MarkingParams } from './passes/marking';\r\nexport var Canvas3DParams = {\r\n    camera: PD.Group({\r\n        mode: PD.Select('perspective', PD.arrayToOptions(['perspective', 'orthographic']), { label: 'Camera' }),\r\n        helper: PD.Group(CameraHelperParams, { isFlat: true }),\r\n        stereo: PD.MappedStatic('off', {\r\n            on: PD.Group(StereoCameraParams),\r\n            off: PD.Group({})\r\n        }, { cycle: true, hideIf: function (p) { return (p === null || p === void 0 ? void 0 : p.mode) !== 'perspective'; } }),\r\n        manualReset: PD.Boolean(false, { isHidden: true }),\r\n    }, { pivot: 'mode' }),\r\n    cameraFog: PD.MappedStatic('on', {\r\n        on: PD.Group({\r\n            intensity: PD.Numeric(15, { min: 1, max: 100, step: 1 }),\r\n        }),\r\n        off: PD.Group({})\r\n    }, { cycle: true, description: 'Show fog in the distance' }),\r\n    cameraClipping: PD.Group({\r\n        radius: PD.Numeric(100, { min: 0, max: 99, step: 1 }, { label: 'Clipping', description: 'How much of the scene to show.' }),\r\n        far: PD.Boolean(true, { description: 'Hide scene in the distance' }),\r\n    }, { pivot: 'radius' }),\r\n    viewport: PD.MappedStatic('canvas', {\r\n        canvas: PD.Group({}),\r\n        'static-frame': PD.Group({\r\n            x: PD.Numeric(0),\r\n            y: PD.Numeric(0),\r\n            width: PD.Numeric(128),\r\n            height: PD.Numeric(128)\r\n        }),\r\n        'relative-frame': PD.Group({\r\n            x: PD.Numeric(0.33, { min: 0, max: 1, step: 0.01 }),\r\n            y: PD.Numeric(0.33, { min: 0, max: 1, step: 0.01 }),\r\n            width: PD.Numeric(0.5, { min: 0.01, max: 1, step: 0.01 }),\r\n            height: PD.Numeric(0.5, { min: 0.01, max: 1, step: 0.01 })\r\n        })\r\n    }),\r\n    cameraResetDurationMs: PD.Numeric(250, { min: 0, max: 1000, step: 1 }, { description: 'The time it takes to reset the camera.' }),\r\n    transparentBackground: PD.Boolean(false),\r\n    multiSample: PD.Group(MultiSampleParams),\r\n    postprocessing: PD.Group(PostprocessingParams),\r\n    marking: PD.Group(MarkingParams),\r\n    renderer: PD.Group(RendererParams),\r\n    trackball: PD.Group(TrackballControlsParams),\r\n    interaction: PD.Group(Canvas3dInteractionHelperParams),\r\n    debug: PD.Group(DebugHelperParams),\r\n    handle: PD.Group(HandleHelperParams),\r\n};\r\nexport var DefaultCanvas3DParams = PD.getDefaultValues(Canvas3DParams);\r\nexport { Canvas3DContext };\r\nvar Canvas3DContext;\r\n(function (Canvas3DContext) {\r\n    Canvas3DContext.DefaultAttribs = {\r\n        /** true by default to avoid issues with Safari (Jan 2021) */\r\n        antialias: true,\r\n        /** true to support multiple Canvas3D objects with a single context */\r\n        preserveDrawingBuffer: true,\r\n        pixelScale: 1,\r\n        pickScale: 0.25,\r\n        /** extra pixels to around target to check in case target is empty */\r\n        pickPadding: 1,\r\n        enableWboit: true,\r\n        preferWebGl1: false\r\n    };\r\n    function fromCanvas(canvas, attribs) {\r\n        if (attribs === void 0) { attribs = {}; }\r\n        var a = __assign(__assign({}, Canvas3DContext.DefaultAttribs), attribs);\r\n        var antialias = a.antialias, preserveDrawingBuffer = a.preserveDrawingBuffer, pixelScale = a.pixelScale, preferWebGl1 = a.preferWebGl1;\r\n        var gl = getGLContext(canvas, {\r\n            antialias: antialias,\r\n            preserveDrawingBuffer: preserveDrawingBuffer,\r\n            alpha: true,\r\n            depth: true,\r\n            premultipliedAlpha: true,\r\n            preferWebGl1: preferWebGl1\r\n        });\r\n        if (gl === null)\r\n            throw new Error('Could not create a WebGL rendering context');\r\n        var input = InputObserver.fromElement(canvas, { pixelScale: pixelScale, preventGestures: true });\r\n        var webgl = createContext(gl, { pixelScale: pixelScale });\r\n        var passes = new Passes(webgl, attribs);\r\n        if (isDebugMode) {\r\n            var loseContextExt_1 = gl.getExtension('WEBGL_lose_context');\r\n            if (loseContextExt_1) {\r\n                // Hold down shift+ctrl+alt and press any mouse button to call `loseContext`.\r\n                // After 1 second `restoreContext` will be called.\r\n                canvas.addEventListener('mousedown', function (e) {\r\n                    if (webgl.isContextLost)\r\n                        return;\r\n                    if (!e.shiftKey || !e.ctrlKey || !e.altKey)\r\n                        return;\r\n                    if (isDebugMode)\r\n                        console.log('lose context');\r\n                    loseContextExt_1.loseContext();\r\n                    setTimeout(function () {\r\n                        if (!webgl.isContextLost)\r\n                            return;\r\n                        if (isDebugMode)\r\n                            console.log('restore context');\r\n                        loseContextExt_1.restoreContext();\r\n                    }, 1000);\r\n                }, false);\r\n            }\r\n        }\r\n        // https://www.khronos.org/webgl/wiki/HandlingContextLost\r\n        var contextLost = new BehaviorSubject(0);\r\n        var handleWebglContextLost = function (e) {\r\n            webgl.setContextLost();\r\n            e.preventDefault();\r\n            if (isDebugMode)\r\n                console.log('context lost');\r\n            contextLost.next(now());\r\n        };\r\n        var handlewWebglContextRestored = function () {\r\n            if (!webgl.isContextLost)\r\n                return;\r\n            webgl.handleContextRestored(function () {\r\n                passes.draw.reset();\r\n            });\r\n            if (isDebugMode)\r\n                console.log('context restored');\r\n        };\r\n        canvas.addEventListener('webglcontextlost', handleWebglContextLost, false);\r\n        canvas.addEventListener('webglcontextrestored', handlewWebglContextRestored, false);\r\n        return {\r\n            canvas: canvas,\r\n            webgl: webgl,\r\n            input: input,\r\n            passes: passes,\r\n            attribs: a,\r\n            contextLost: contextLost,\r\n            contextRestored: webgl.contextRestored,\r\n            dispose: function (options) {\r\n                input.dispose();\r\n                canvas.removeEventListener('webglcontextlost', handleWebglContextLost, false);\r\n                canvas.removeEventListener('webglcontextrestored', handlewWebglContextRestored, false);\r\n                webgl.destroy(options);\r\n            }\r\n        };\r\n    }\r\n    Canvas3DContext.fromCanvas = fromCanvas;\r\n})(Canvas3DContext || (Canvas3DContext = {}));\r\nexport { Canvas3D };\r\nvar requestAnimationFrame = typeof window !== 'undefined'\r\n    ? window.requestAnimationFrame\r\n    : function (f) { return setImmediate(function () { return f(Date.now()); }); };\r\nvar cancelAnimationFrame = typeof window !== 'undefined'\r\n    ? window.cancelAnimationFrame\r\n    : function (handle) { return clearImmediate(handle); };\r\nvar Canvas3D;\r\n(function (Canvas3D) {\r\n    function create(_a, props) {\r\n        var webgl = _a.webgl, input = _a.input, passes = _a.passes, attribs = _a.attribs;\r\n        if (props === void 0) { props = {}; }\r\n        var p = __assign(__assign({}, DefaultCanvas3DParams), props);\r\n        var reprRenderObjects = new Map();\r\n        var reprUpdatedSubscriptions = new Map();\r\n        var reprCount = new BehaviorSubject(0);\r\n        var startTime = now();\r\n        var didDraw = new BehaviorSubject(0);\r\n        var commited = new BehaviorSubject(0);\r\n        var gl = webgl.gl, contextRestored = webgl.contextRestored;\r\n        var x = 0;\r\n        var y = 0;\r\n        var width = 128;\r\n        var height = 128;\r\n        updateViewport();\r\n        var scene = Scene.create(webgl);\r\n        var camera = new Camera({\r\n            position: Vec3.create(0, 0, 100),\r\n            mode: p.camera.mode,\r\n            fog: p.cameraFog.name === 'on' ? p.cameraFog.params.intensity : 0,\r\n            clipFar: p.cameraClipping.far\r\n        }, { x: x, y: y, width: width, height: height }, { pixelScale: attribs.pixelScale });\r\n        var stereoCamera = new StereoCamera(camera, p.camera.stereo.params);\r\n        var controls = TrackballControls.create(input, camera, p.trackball);\r\n        var renderer = Renderer.create(webgl, p.renderer);\r\n        var helper = new Helper(webgl, scene, p);\r\n        var pickHelper = new PickHelper(webgl, renderer, scene, helper, passes.pick, { x: x, y: y, width: width, height: height }, attribs.pickPadding);\r\n        var interactionHelper = new Canvas3dInteractionHelper(identify, getLoci, input, camera, p.interaction);\r\n        var multiSampleHelper = new MultiSampleHelper(passes.multiSample);\r\n        var cameraResetRequested = false;\r\n        var nextCameraResetDuration = void 0;\r\n        var nextCameraResetSnapshot = void 0;\r\n        var resizeRequested = false;\r\n        var notifyDidDraw = true;\r\n        function getLoci(pickingId) {\r\n            var loci = EmptyLoci;\r\n            var repr = Representation.Empty;\r\n            if (pickingId) {\r\n                var cameraHelperLoci = helper.camera.getLoci(pickingId);\r\n                if (cameraHelperLoci !== EmptyLoci)\r\n                    return { loci: cameraHelperLoci, repr: repr };\r\n                loci = helper.handle.getLoci(pickingId);\r\n                reprRenderObjects.forEach(function (_, _repr) {\r\n                    var _loci = _repr.getLoci(pickingId);\r\n                    if (!isEmptyLoci(_loci)) {\r\n                        if (!isEmptyLoci(loci)) {\r\n                            console.warn('found another loci, this should not happen');\r\n                        }\r\n                        loci = _loci;\r\n                        repr = _repr;\r\n                    }\r\n                });\r\n            }\r\n            return { loci: loci, repr: repr };\r\n        }\r\n        function mark(reprLoci, action, noDraw) {\r\n            if (noDraw === void 0) { noDraw = false; }\r\n            var repr = reprLoci.repr, loci = reprLoci.loci;\r\n            var changed = false;\r\n            if (repr) {\r\n                changed = repr.mark(loci, action);\r\n            }\r\n            else {\r\n                changed = helper.handle.mark(loci, action);\r\n                changed = helper.camera.mark(loci, action) || changed;\r\n                reprRenderObjects.forEach(function (_, _repr) { changed = _repr.mark(loci, action) || changed; });\r\n            }\r\n            if (changed && !noDraw) {\r\n                scene.update(void 0, true);\r\n                helper.handle.scene.update(void 0, true);\r\n                helper.camera.scene.update(void 0, true);\r\n                var prevPickDirty = pickHelper.dirty;\r\n                draw(true);\r\n                pickHelper.dirty = prevPickDirty; // marking does not change picking buffers\r\n            }\r\n        }\r\n        function render(force) {\r\n            if (webgl.isContextLost)\r\n                return false;\r\n            var resized = false;\r\n            if (resizeRequested) {\r\n                handleResize(false);\r\n                resizeRequested = false;\r\n                resized = true;\r\n            }\r\n            if (x > gl.drawingBufferWidth || x + width < 0 ||\r\n                y > gl.drawingBufferHeight || y + height < 0)\r\n                return false;\r\n            var didRender = false;\r\n            controls.update(currentTime);\r\n            var cameraChanged = camera.update();\r\n            var shouldRender = force || cameraChanged || resized || forceNextRender;\r\n            forceNextRender = false;\r\n            var multiSampleChanged = multiSampleHelper.update(shouldRender, p.multiSample);\r\n            if (shouldRender || multiSampleChanged) {\r\n                var cam = camera;\r\n                if (p.camera.stereo.name === 'on') {\r\n                    stereoCamera.update();\r\n                    cam = stereoCamera;\r\n                }\r\n                if (MultiSamplePass.isEnabled(p.multiSample)) {\r\n                    multiSampleHelper.render(renderer, cam, scene, helper, true, p.transparentBackground, p);\r\n                }\r\n                else {\r\n                    passes.draw.render(renderer, cam, scene, helper, true, p.transparentBackground, p.postprocessing, p.marking);\r\n                }\r\n                pickHelper.dirty = true;\r\n                didRender = true;\r\n            }\r\n            return didRender;\r\n        }\r\n        var forceNextRender = false;\r\n        var forceDrawAfterAllCommited = false;\r\n        var currentTime = 0;\r\n        var drawPaused = false;\r\n        function draw(force) {\r\n            if (drawPaused)\r\n                return;\r\n            if (render(!!force) && notifyDidDraw) {\r\n                didDraw.next(now() - startTime);\r\n            }\r\n        }\r\n        function requestDraw(force) {\r\n            forceNextRender = forceNextRender || !!force;\r\n        }\r\n        var animationFrameHandle = 0;\r\n        function tick(t, options) {\r\n            currentTime = t;\r\n            commit(options === null || options === void 0 ? void 0 : options.isSynchronous);\r\n            camera.transition.tick(currentTime);\r\n            if (options === null || options === void 0 ? void 0 : options.manualDraw) {\r\n                return;\r\n            }\r\n            draw(false);\r\n            if (!camera.transition.inTransition && !webgl.isContextLost) {\r\n                interactionHelper.tick(currentTime);\r\n            }\r\n        }\r\n        function _animate() {\r\n            tick(now());\r\n            animationFrameHandle = requestAnimationFrame(_animate);\r\n        }\r\n        function resetTime(t) {\r\n            startTime = t;\r\n            controls.start(t);\r\n        }\r\n        function animate() {\r\n            drawPaused = false;\r\n            controls.start(now());\r\n            if (animationFrameHandle === 0)\r\n                _animate();\r\n        }\r\n        function pause(noDraw) {\r\n            if (noDraw === void 0) { noDraw = false; }\r\n            drawPaused = noDraw;\r\n            cancelAnimationFrame(animationFrameHandle);\r\n            animationFrameHandle = 0;\r\n        }\r\n        function identify(x, y) {\r\n            var cam = p.camera.stereo.name === 'on' ? stereoCamera : camera;\r\n            return webgl.isContextLost ? undefined : pickHelper.identify(x, y, cam);\r\n        }\r\n        function commit(isSynchronous) {\r\n            if (isSynchronous === void 0) { isSynchronous = false; }\r\n            var allCommited = commitScene(isSynchronous);\r\n            // Only reset the camera after the full scene has been commited.\r\n            if (allCommited) {\r\n                resolveCameraReset();\r\n                if (forceDrawAfterAllCommited) {\r\n                    if (helper.debug.isEnabled)\r\n                        helper.debug.update();\r\n                    draw(true);\r\n                    forceDrawAfterAllCommited = false;\r\n                }\r\n                commited.next(now());\r\n            }\r\n        }\r\n        function resolveCameraReset() {\r\n            if (!cameraResetRequested)\r\n                return;\r\n            var boundingSphere = scene.boundingSphereVisible;\r\n            var center = boundingSphere.center, radius = boundingSphere.radius;\r\n            var autoAdjustControls = controls.props.autoAdjustMinMaxDistance;\r\n            if (autoAdjustControls.name === 'on') {\r\n                var minDistance = autoAdjustControls.params.minDistanceFactor * radius + autoAdjustControls.params.minDistancePadding;\r\n                var maxDistance = Math.max(autoAdjustControls.params.maxDistanceFactor * radius, autoAdjustControls.params.maxDistanceMin);\r\n                controls.setProps({ minDistance: minDistance, maxDistance: maxDistance });\r\n            }\r\n            if (radius > 0) {\r\n                var duration = nextCameraResetDuration === undefined ? p.cameraResetDurationMs : nextCameraResetDuration;\r\n                var focus_1 = camera.getFocus(center, radius);\r\n                var next = typeof nextCameraResetSnapshot === 'function' ? nextCameraResetSnapshot(scene, camera) : nextCameraResetSnapshot;\r\n                var snapshot = next ? __assign(__assign({}, focus_1), next) : focus_1;\r\n                camera.setState(__assign(__assign({}, snapshot), { radiusMax: scene.boundingSphere.radius }), duration);\r\n            }\r\n            nextCameraResetDuration = void 0;\r\n            nextCameraResetSnapshot = void 0;\r\n            cameraResetRequested = false;\r\n        }\r\n        var oldBoundingSphereVisible = Sphere3D();\r\n        var cameraSphere = Sphere3D();\r\n        function shouldResetCamera() {\r\n            if (camera.state.radiusMax === 0)\r\n                return true;\r\n            if (camera.transition.inTransition || nextCameraResetSnapshot)\r\n                return false;\r\n            var cameraSphereOverlapsNone = true;\r\n            Sphere3D.set(cameraSphere, camera.state.target, camera.state.radius);\r\n            // check if any renderable has moved outside of the old bounding sphere\r\n            // and if no renderable is overlapping with the camera sphere\r\n            for (var _i = 0, _a = scene.renderables; _i < _a.length; _i++) {\r\n                var r = _a[_i];\r\n                if (!r.state.visible)\r\n                    continue;\r\n                var b = r.values.boundingSphere.ref.value;\r\n                if (!b.radius)\r\n                    continue;\r\n                var cameraDist = Vec3.distance(cameraSphere.center, b.center);\r\n                if ((cameraDist > cameraSphere.radius || cameraDist > b.radius || b.radius > camera.state.radiusMax) && !Sphere3D.includes(oldBoundingSphereVisible, b))\r\n                    return true;\r\n                if (Sphere3D.overlaps(cameraSphere, b))\r\n                    cameraSphereOverlapsNone = false;\r\n            }\r\n            return cameraSphereOverlapsNone;\r\n        }\r\n        var sceneCommitTimeoutMs = 250;\r\n        function commitScene(isSynchronous) {\r\n            if (!scene.needsCommit)\r\n                return true;\r\n            // snapshot the current bounding sphere of visible objects\r\n            Sphere3D.copy(oldBoundingSphereVisible, scene.boundingSphereVisible);\r\n            if (!scene.commit(isSynchronous ? void 0 : sceneCommitTimeoutMs))\r\n                return false;\r\n            if (helper.debug.isEnabled)\r\n                helper.debug.update();\r\n            if (!p.camera.manualReset && (reprCount.value === 0 || shouldResetCamera())) {\r\n                cameraResetRequested = true;\r\n            }\r\n            if (oldBoundingSphereVisible.radius === 0)\r\n                nextCameraResetDuration = 0;\r\n            camera.setState({ radiusMax: scene.boundingSphere.radius }, 0);\r\n            reprCount.next(reprRenderObjects.size);\r\n            if (isDebugMode)\r\n                consoleStats();\r\n            return true;\r\n        }\r\n        function consoleStats() {\r\n            console.table(scene.renderables.map(function (r) { return ({\r\n                drawCount: r.values.drawCount.ref.value,\r\n                instanceCount: r.values.instanceCount.ref.value,\r\n                materialId: r.materialId,\r\n                renderItemId: r.id,\r\n            }); }));\r\n            console.log(webgl.stats);\r\n            var _a = webgl.resources.getByteCounts(), texture = _a.texture, attribute = _a.attribute, elements = _a.elements;\r\n            console.log({\r\n                texture: (texture / 1024 / 1024).toFixed(3) + \" MiB\",\r\n                attribute: (attribute / 1024 / 1024).toFixed(3) + \" MiB\",\r\n                elements: (elements / 1024 / 1024).toFixed(3) + \" MiB\",\r\n            });\r\n        }\r\n        function add(repr) {\r\n            registerAutoUpdate(repr);\r\n            var oldRO = reprRenderObjects.get(repr);\r\n            var newRO = new Set();\r\n            repr.renderObjects.forEach(function (o) { return newRO.add(o); });\r\n            if (oldRO) {\r\n                if (!SetUtils.areEqual(newRO, oldRO)) {\r\n                    newRO.forEach(function (o) { if (!oldRO.has(o))\r\n                        scene.add(o); });\r\n                    oldRO.forEach(function (o) { if (!newRO.has(o))\r\n                        scene.remove(o); });\r\n                }\r\n            }\r\n            else {\r\n                repr.renderObjects.forEach(function (o) { return scene.add(o); });\r\n            }\r\n            reprRenderObjects.set(repr, newRO);\r\n            scene.update(repr.renderObjects, false);\r\n            forceDrawAfterAllCommited = true;\r\n            if (isDebugMode)\r\n                consoleStats();\r\n        }\r\n        function remove(repr) {\r\n            unregisterAutoUpdate(repr);\r\n            var renderObjects = reprRenderObjects.get(repr);\r\n            if (renderObjects) {\r\n                renderObjects.forEach(function (o) { return scene.remove(o); });\r\n                reprRenderObjects.delete(repr);\r\n                forceDrawAfterAllCommited = true;\r\n                if (isDebugMode)\r\n                    consoleStats();\r\n            }\r\n        }\r\n        function registerAutoUpdate(repr) {\r\n            if (reprUpdatedSubscriptions.has(repr))\r\n                return;\r\n            reprUpdatedSubscriptions.set(repr, repr.updated.subscribe(function (_) {\r\n                if (!repr.state.syncManually)\r\n                    add(repr);\r\n            }));\r\n        }\r\n        function unregisterAutoUpdate(repr) {\r\n            var updatedSubscription = reprUpdatedSubscriptions.get(repr);\r\n            if (updatedSubscription) {\r\n                updatedSubscription.unsubscribe();\r\n                reprUpdatedSubscriptions.delete(repr);\r\n            }\r\n        }\r\n        function getProps() {\r\n            var radius = scene.boundingSphere.radius > 0\r\n                ? 100 - Math.round((camera.transition.target.radius / scene.boundingSphere.radius) * 100)\r\n                : 0;\r\n            return {\r\n                camera: {\r\n                    mode: camera.state.mode,\r\n                    helper: __assign({}, helper.camera.props),\r\n                    stereo: __assign({}, p.camera.stereo),\r\n                    manualReset: !!p.camera.manualReset\r\n                },\r\n                cameraFog: camera.state.fog > 0\r\n                    ? { name: 'on', params: { intensity: camera.state.fog } }\r\n                    : { name: 'off', params: {} },\r\n                cameraClipping: { far: camera.state.clipFar, radius: radius },\r\n                cameraResetDurationMs: p.cameraResetDurationMs,\r\n                transparentBackground: p.transparentBackground,\r\n                viewport: p.viewport,\r\n                postprocessing: __assign({}, p.postprocessing),\r\n                marking: __assign({}, p.marking),\r\n                multiSample: __assign({}, p.multiSample),\r\n                renderer: __assign({}, renderer.props),\r\n                trackball: __assign({}, controls.props),\r\n                interaction: __assign({}, interactionHelper.props),\r\n                debug: __assign({}, helper.debug.props),\r\n                handle: __assign({}, helper.handle.props),\r\n            };\r\n        }\r\n        var contextRestoredSub = contextRestored.subscribe(function () {\r\n            pickHelper.dirty = true;\r\n            draw(true);\r\n            // Unclear why, but in Chrome with wboit enabled the first `draw` only clears\r\n            // the drawingBuffer. Note that in Firefox the drawingBuffer is preserved after\r\n            // context loss so it is unclear if it behaves the same.\r\n            draw(true);\r\n        });\r\n        var resized = new BehaviorSubject(0);\r\n        function handleResize(draw) {\r\n            if (draw === void 0) { draw = true; }\r\n            passes.updateSize();\r\n            updateViewport();\r\n            syncViewport();\r\n            if (draw)\r\n                requestDraw(true);\r\n            resized.next(+new Date());\r\n        }\r\n        return {\r\n            webgl: webgl,\r\n            add: add,\r\n            remove: remove,\r\n            commit: commit,\r\n            update: function (repr, keepSphere) {\r\n                if (repr) {\r\n                    if (!reprRenderObjects.has(repr))\r\n                        return;\r\n                    scene.update(repr.renderObjects, !!keepSphere);\r\n                }\r\n                else {\r\n                    scene.update(void 0, !!keepSphere);\r\n                }\r\n                forceDrawAfterAllCommited = true;\r\n            },\r\n            clear: function () {\r\n                reprUpdatedSubscriptions.forEach(function (v) { return v.unsubscribe(); });\r\n                reprUpdatedSubscriptions.clear();\r\n                reprRenderObjects.clear();\r\n                scene.clear();\r\n                helper.debug.clear();\r\n                requestDraw(true);\r\n                reprCount.next(reprRenderObjects.size);\r\n            },\r\n            syncVisibility: function () {\r\n                if (camera.state.radiusMax === 0) {\r\n                    cameraResetRequested = true;\r\n                    nextCameraResetDuration = 0;\r\n                }\r\n                if (scene.syncVisibility()) {\r\n                    if (helper.debug.isEnabled)\r\n                        helper.debug.update();\r\n                }\r\n                requestDraw(true);\r\n            },\r\n            requestDraw: requestDraw,\r\n            tick: tick,\r\n            animate: animate,\r\n            resetTime: resetTime,\r\n            pause: pause,\r\n            resume: function () { drawPaused = false; },\r\n            identify: identify,\r\n            mark: mark,\r\n            getLoci: getLoci,\r\n            handleResize: handleResize,\r\n            requestResize: function () {\r\n                resizeRequested = true;\r\n            },\r\n            requestCameraReset: function (options) {\r\n                nextCameraResetDuration = options === null || options === void 0 ? void 0 : options.durationMs;\r\n                nextCameraResetSnapshot = options === null || options === void 0 ? void 0 : options.snapshot;\r\n                cameraResetRequested = true;\r\n            },\r\n            camera: camera,\r\n            boundingSphere: scene.boundingSphere,\r\n            boundingSphereVisible: scene.boundingSphereVisible,\r\n            get notifyDidDraw() { return notifyDidDraw; },\r\n            set notifyDidDraw(v) { notifyDidDraw = v; },\r\n            didDraw: didDraw,\r\n            commited: commited,\r\n            reprCount: reprCount,\r\n            resized: resized,\r\n            setProps: function (properties, doNotRequestDraw) {\r\n                var _a, _b, _c;\r\n                if (doNotRequestDraw === void 0) { doNotRequestDraw = false; }\r\n                var props = typeof properties === 'function'\r\n                    ? produce(getProps(), properties)\r\n                    : properties;\r\n                var cameraState = Object.create(null);\r\n                if (props.camera && props.camera.mode !== undefined && props.camera.mode !== camera.state.mode) {\r\n                    cameraState.mode = props.camera.mode;\r\n                }\r\n                if (props.cameraFog !== undefined && props.cameraFog.params) {\r\n                    var newFog = props.cameraFog.name === 'on' ? props.cameraFog.params.intensity : 0;\r\n                    if (newFog !== camera.state.fog)\r\n                        cameraState.fog = newFog;\r\n                }\r\n                if (props.cameraClipping !== undefined) {\r\n                    if (props.cameraClipping.far !== undefined && props.cameraClipping.far !== camera.state.clipFar) {\r\n                        cameraState.clipFar = props.cameraClipping.far;\r\n                    }\r\n                    if (props.cameraClipping.radius !== undefined) {\r\n                        var radius = (scene.boundingSphere.radius / 100) * (100 - props.cameraClipping.radius);\r\n                        if (radius > 0 && radius !== cameraState.radius) {\r\n                            // if radius = 0, NaNs happen\r\n                            cameraState.radius = Math.max(radius, 0.01);\r\n                        }\r\n                    }\r\n                }\r\n                if (Object.keys(cameraState).length > 0)\r\n                    camera.setState(cameraState);\r\n                if ((_a = props.camera) === null || _a === void 0 ? void 0 : _a.helper)\r\n                    helper.camera.setProps(props.camera.helper);\r\n                if (((_b = props.camera) === null || _b === void 0 ? void 0 : _b.manualReset) !== undefined)\r\n                    p.camera.manualReset = props.camera.manualReset;\r\n                if (((_c = props.camera) === null || _c === void 0 ? void 0 : _c.stereo) !== undefined)\r\n                    Object.assign(p.camera.stereo, props.camera.stereo);\r\n                if (props.cameraResetDurationMs !== undefined)\r\n                    p.cameraResetDurationMs = props.cameraResetDurationMs;\r\n                if (props.transparentBackground !== undefined)\r\n                    p.transparentBackground = props.transparentBackground;\r\n                if (props.viewport !== undefined) {\r\n                    var doNotUpdate = p.viewport === props.viewport ||\r\n                        (p.viewport.name === props.viewport.name && shallowEqual(p.viewport.params, props.viewport.params));\r\n                    if (!doNotUpdate) {\r\n                        p.viewport = props.viewport;\r\n                        updateViewport();\r\n                        syncViewport();\r\n                    }\r\n                }\r\n                if (props.postprocessing)\r\n                    Object.assign(p.postprocessing, props.postprocessing);\r\n                if (props.marking)\r\n                    Object.assign(p.marking, props.marking);\r\n                if (props.multiSample)\r\n                    Object.assign(p.multiSample, props.multiSample);\r\n                if (props.renderer)\r\n                    renderer.setProps(props.renderer);\r\n                if (props.trackball)\r\n                    controls.setProps(props.trackball);\r\n                if (props.interaction)\r\n                    interactionHelper.setProps(props.interaction);\r\n                if (props.debug)\r\n                    helper.debug.setProps(props.debug);\r\n                if (props.handle)\r\n                    helper.handle.setProps(props.handle);\r\n                if (cameraState.mode === 'orthographic') {\r\n                    p.camera.stereo.name = 'off';\r\n                }\r\n                if (!doNotRequestDraw) {\r\n                    requestDraw(true);\r\n                }\r\n            },\r\n            getImagePass: function (props) {\r\n                if (props === void 0) { props = {}; }\r\n                return new ImagePass(webgl, renderer, scene, camera, helper, passes.draw.wboitEnabled, props);\r\n            },\r\n            getRenderObjects: function () {\r\n                var renderObjects = [];\r\n                scene.forEach(function (_, ro) { return renderObjects.push(ro); });\r\n                return renderObjects;\r\n            },\r\n            get props() {\r\n                return getProps();\r\n            },\r\n            get input() {\r\n                return input;\r\n            },\r\n            get stats() {\r\n                return renderer.stats;\r\n            },\r\n            get interaction() {\r\n                return interactionHelper.events;\r\n            },\r\n            dispose: function () {\r\n                contextRestoredSub.unsubscribe();\r\n                scene.clear();\r\n                helper.debug.clear();\r\n                controls.dispose();\r\n                renderer.dispose();\r\n                interactionHelper.dispose();\r\n            }\r\n        };\r\n        function updateViewport() {\r\n            var oldX = x, oldY = y, oldWidth = width, oldHeight = height;\r\n            if (p.viewport.name === 'canvas') {\r\n                x = 0;\r\n                y = 0;\r\n                width = gl.drawingBufferWidth;\r\n                height = gl.drawingBufferHeight;\r\n            }\r\n            else if (p.viewport.name === 'static-frame') {\r\n                x = p.viewport.params.x * webgl.pixelRatio;\r\n                height = p.viewport.params.height * webgl.pixelRatio;\r\n                y = gl.drawingBufferHeight - height - p.viewport.params.y * webgl.pixelRatio;\r\n                width = p.viewport.params.width * webgl.pixelRatio;\r\n            }\r\n            else if (p.viewport.name === 'relative-frame') {\r\n                x = Math.round(p.viewport.params.x * gl.drawingBufferWidth);\r\n                height = Math.round(p.viewport.params.height * gl.drawingBufferHeight);\r\n                y = Math.round(gl.drawingBufferHeight - height - p.viewport.params.y * gl.drawingBufferHeight);\r\n                width = Math.round(p.viewport.params.width * gl.drawingBufferWidth);\r\n            }\r\n            if (oldX !== x || oldY !== y || oldWidth !== width || oldHeight !== height) {\r\n                forceNextRender = true;\r\n            }\r\n        }\r\n        function syncViewport() {\r\n            pickHelper.setViewport(x, y, width, height);\r\n            renderer.setViewport(x, y, width, height);\r\n            Viewport.set(camera.viewport, x, y, width, height);\r\n            Viewport.set(controls.viewport, x, y, width, height);\r\n        }\r\n    }\r\n    Canvas3D.create = create;\r\n})(Canvas3D || (Canvas3D = {}));\r\n//# sourceMappingURL=canvas3d.js.map"]},"metadata":{},"sourceType":"module"}