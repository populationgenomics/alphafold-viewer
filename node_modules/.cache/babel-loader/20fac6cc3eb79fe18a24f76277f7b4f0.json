{"ast":null,"code":"/**\r\n * Copyright (c) 2017-2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { CifWriter } from '../../../mol-io/writer/cif';\nimport { _atom_site } from './categories/atom_site';\nvar CifCategory = CifWriter.Category;\nimport { _struct_conf, _struct_sheet_range } from './categories/secondary-structure';\nimport { _chem_comp, _chem_comp_bond, _pdbx_chem_comp_identifier, _pdbx_nonpoly_scheme } from './categories/misc';\nimport { getUniqueEntityIndicesFromStructures, copy_mmCif_category, copy_source_mmCifCategory } from './categories/utils';\nimport { _struct_asym, _entity_poly, _entity_poly_seq } from './categories/sequence';\nimport { CustomPropertyDescriptor } from '../../custom-property';\nimport { atom_site_operator_mapping } from './categories/atom_site_operator_mapping';\nimport { MmcifFormat } from '../../../mol-model-formats/structure/mmcif';\nexport var CifExportContext;\n\n(function (CifExportContext) {\n  function create(structures) {\n    var structureArray = Array.isArray(structures) ? structures : [structures];\n    return {\n      structures: structureArray,\n      firstModel: structureArray[0].model,\n      cache: Object.create(null)\n    };\n  }\n\n  CifExportContext.create = create;\n})(CifExportContext || (CifExportContext = {}));\n\nvar _entity = {\n  name: 'entity',\n  instance: function (_a) {\n    var structures = _a.structures;\n    var indices = getUniqueEntityIndicesFromStructures(structures);\n    return CifCategory.ofTable(structures[0].model.entities.data, indices);\n  }\n};\n\nfunction isWithoutSymmetry(structure) {\n  return structure.units.every(function (u) {\n    return u.conformation.operator.isIdentity;\n  });\n}\n\nvar Categories = [// Basics\ncopy_mmCif_category('entry'), copy_mmCif_category('exptl'), _entity, // Symmetry\ncopy_mmCif_category('cell', isWithoutSymmetry), copy_mmCif_category('symmetry', isWithoutSymmetry), // Assemblies\ncopy_mmCif_category('pdbx_struct_assembly', isWithoutSymmetry), copy_mmCif_category('pdbx_struct_assembly_gen', isWithoutSymmetry), copy_mmCif_category('pdbx_struct_oper_list', isWithoutSymmetry), // Secondary structure\n_struct_conf, _struct_sheet_range, // Sequence\n_struct_asym, _entity_poly, _entity_poly_seq, // Branch\ncopy_mmCif_category('pdbx_entity_branch'), copy_mmCif_category('pdbx_entity_branch_link'), copy_mmCif_category('pdbx_branch_scheme'), // Struct conn\ncopy_mmCif_category('struct_conn'), // Misc\n_chem_comp, _chem_comp_bond, _pdbx_chem_comp_identifier, copy_mmCif_category('atom_sites'), _pdbx_nonpoly_scheme, // Atoms\n_atom_site];\n\nvar _Filters;\n\n(function (_Filters) {\n  _Filters.AtomSitePositionsFieldNames = new Set(['id', 'Cartn_x', 'Cartn_y', 'Cartn_z']);\n})(_Filters || (_Filters = {}));\n\nexport var mmCIF_Export_Filters = {\n  onlyPositions: {\n    includeCategory: function (name) {\n      return name === 'atom_site';\n    },\n    includeField: function (cat, field) {\n      return _Filters.AtomSitePositionsFieldNames.has(field);\n    }\n  }\n};\n\nfunction getCustomPropCategories(customProp, ctx, params) {\n  var _a;\n\n  if (!customProp.cifExport || customProp.cifExport.categories.length === 0) return [];\n  var prefix = customProp.cifExport.prefix;\n  var cats = customProp.cifExport.categories;\n  var propCtx = ctx;\n\n  if (customProp.cifExport.context) {\n    var propId = CustomPropertyDescriptor.getUUID(customProp);\n    if (ctx.cache[propId + '__ctx']) propCtx = ctx.cache[propId + '__ctx'];else {\n      propCtx = customProp.cifExport.context(ctx) || ctx;\n      ctx.cache[propId + '__ctx'] = propCtx;\n    }\n  }\n\n  var ret = [];\n\n  for (var _i = 0, cats_1 = cats; _i < cats_1.length; _i++) {\n    var cat = cats_1[_i];\n    if ((_a = params === null || params === void 0 ? void 0 : params.skipCategoryNames) === null || _a === void 0 ? void 0 : _a.has(cat.name)) continue;\n    if (cat.name.indexOf(prefix) !== 0) throw new Error(\"Custom category '\" + cat.name + \"' name must start with prefix '\" + prefix + \".'\");\n    ret.push([cat, propCtx]);\n  }\n\n  return ret;\n}\n/** Doesn't start a data block */\n\n\nexport function encode_mmCIF_categories(encoder, structures, params) {\n  var first = Array.isArray(structures) ? structures[0] : structures;\n  var models = first.models;\n  if (models.length !== 1) throw new Error('Can\\'t export stucture composed from multiple models.');\n  var ctx = (params === null || params === void 0 ? void 0 : params.exportCtx) || CifExportContext.create(structures);\n\n  if ((params === null || params === void 0 ? void 0 : params.copyAllCategories) && MmcifFormat.is(models[0].sourceData)) {\n    encode_mmCIF_categories_copyAll(encoder, ctx, params);\n  } else {\n    encode_mmCIF_categories_default(encoder, ctx, params);\n  }\n}\n\nfunction encode_mmCIF_categories_default(encoder, ctx, params) {\n  var _a;\n\n  for (var _i = 0, Categories_1 = Categories; _i < Categories_1.length; _i++) {\n    var cat = Categories_1[_i];\n    if ((params === null || params === void 0 ? void 0 : params.skipCategoryNames) && (params === null || params === void 0 ? void 0 : params.skipCategoryNames.has(cat.name))) continue;\n    encoder.writeCategory(cat, ctx);\n  }\n\n  if (!((_a = params === null || params === void 0 ? void 0 : params.skipCategoryNames) === null || _a === void 0 ? void 0 : _a.has('atom_site')) && encoder.isCategoryIncluded('atom_site')) {\n    var info = atom_site_operator_mapping(ctx);\n    if (info) encoder.writeCategory(info[0], info[1], info[2]);\n  }\n\n  var _params = params || {};\n\n  for (var _b = 0, _c = ctx.firstModel.customProperties.all; _b < _c.length; _b++) {\n    var customProp = _c[_b];\n\n    for (var _d = 0, _e = getCustomPropCategories(customProp, ctx, _params); _d < _e.length; _d++) {\n      var _f = _e[_d],\n          cat = _f[0],\n          propCtx = _f[1];\n      encoder.writeCategory(cat, propCtx);\n    }\n  }\n\n  if (params === null || params === void 0 ? void 0 : params.customProperties) {\n    for (var _g = 0, _h = params === null || params === void 0 ? void 0 : params.customProperties; _g < _h.length; _g++) {\n      var customProp = _h[_g];\n\n      for (var _j = 0, _k = getCustomPropCategories(customProp, ctx, _params); _j < _k.length; _j++) {\n        var _l = _k[_j],\n            cat = _l[0],\n            propCtx = _l[1];\n        encoder.writeCategory(cat, propCtx);\n      }\n    }\n  }\n\n  for (var _m = 0, _o = ctx.structures; _m < _o.length; _m++) {\n    var s = _o[_m];\n    if (!s.hasCustomProperties) continue;\n\n    for (var _p = 0, _q = s.customPropertyDescriptors.all; _p < _q.length; _p++) {\n      var customProp = _q[_p];\n\n      for (var _r = 0, _s = getCustomPropCategories(customProp, ctx, _params); _r < _s.length; _r++) {\n        var _t = _s[_r],\n            cat = _t[0],\n            propCtx = _t[1];\n        encoder.writeCategory(cat, propCtx);\n      }\n    }\n  }\n}\n\nfunction encode_mmCIF_categories_copyAll(encoder, ctx, params) {\n  var providedCategories = new Map();\n\n  for (var _i = 0, Categories_2 = Categories; _i < Categories_2.length; _i++) {\n    var cat = Categories_2[_i];\n    providedCategories.set(cat.name, [cat, ctx]);\n  }\n\n  var mapping = atom_site_operator_mapping(ctx);\n  if (mapping) providedCategories.set(mapping[0].name, mapping);\n\n  var _params = params || {};\n\n  for (var _a = 0, _b = ctx.firstModel.customProperties.all; _a < _b.length; _a++) {\n    var customProp = _b[_a];\n\n    for (var _c = 0, _d = getCustomPropCategories(customProp, ctx, _params); _c < _d.length; _c++) {\n      var info = _d[_c];\n      providedCategories.set(info[0].name, info);\n    }\n  }\n\n  if (params === null || params === void 0 ? void 0 : params.customProperties) {\n    for (var _e = 0, _f = params === null || params === void 0 ? void 0 : params.customProperties; _e < _f.length; _e++) {\n      var customProp = _f[_e];\n\n      for (var _g = 0, _h = getCustomPropCategories(customProp, ctx, _params); _g < _h.length; _g++) {\n        var info = _h[_g];\n        providedCategories.set(info[0].name, info);\n      }\n    }\n  }\n\n  for (var _j = 0, _k = ctx.structures; _j < _k.length; _j++) {\n    var s = _k[_j];\n    if (!s.hasCustomProperties) continue;\n\n    for (var _l = 0, _m = s.customPropertyDescriptors.all; _l < _m.length; _l++) {\n      var customProp = _m[_l];\n\n      for (var _o = 0, _p = getCustomPropCategories(customProp, ctx); _o < _p.length; _o++) {\n        var info = _p[_o];\n        providedCategories.set(info[0].name, info);\n      }\n    }\n  }\n\n  var handled = new Set();\n  var data = ctx.firstModel.sourceData.data;\n\n  for (var _q = 0, _r = data.frame.categoryNames; _q < _r.length; _q++) {\n    var catName = _r[_q];\n    handled.add(catName);\n\n    if (providedCategories.has(catName)) {\n      var info = providedCategories.get(catName);\n      encoder.writeCategory(info[0], info[1], info[2]);\n    } else {\n      if (data.db[catName]) {\n        var cat = copy_mmCif_category(catName);\n        encoder.writeCategory(cat, ctx);\n      } else {\n        var cat = copy_source_mmCifCategory(encoder, ctx, data.frame.categories[catName]);\n        if (cat) encoder.writeCategory(cat);\n      }\n    }\n  }\n\n  providedCategories.forEach(function (info, name) {\n    if (!handled.has(name)) encoder.writeCategory(info[0], info[1], info[2]);\n  });\n}\n\nfunction to_mmCIF(name, structure, asBinary) {\n  if (asBinary === void 0) {\n    asBinary = false;\n  }\n\n  var enc = CifWriter.createEncoder({\n    binary: asBinary\n  });\n  enc.startDataBlock(name);\n  encode_mmCIF_categories(enc, structure);\n  return enc.getData();\n}\n\nexport { to_mmCIF };","map":{"version":3,"sources":["../../../../src/mol-model/structure/export/mmcif.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2017-2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { CifWriter } from '../../../mol-io/writer/cif';\r\nimport { _atom_site } from './categories/atom_site';\r\nvar CifCategory = CifWriter.Category;\r\nimport { _struct_conf, _struct_sheet_range } from './categories/secondary-structure';\r\nimport { _chem_comp, _chem_comp_bond, _pdbx_chem_comp_identifier, _pdbx_nonpoly_scheme } from './categories/misc';\r\nimport { getUniqueEntityIndicesFromStructures, copy_mmCif_category, copy_source_mmCifCategory } from './categories/utils';\r\nimport { _struct_asym, _entity_poly, _entity_poly_seq } from './categories/sequence';\r\nimport { CustomPropertyDescriptor } from '../../custom-property';\r\nimport { atom_site_operator_mapping } from './categories/atom_site_operator_mapping';\r\nimport { MmcifFormat } from '../../../mol-model-formats/structure/mmcif';\r\nexport var CifExportContext;\r\n(function (CifExportContext) {\r\n    function create(structures) {\r\n        var structureArray = Array.isArray(structures) ? structures : [structures];\r\n        return {\r\n            structures: structureArray,\r\n            firstModel: structureArray[0].model,\r\n            cache: Object.create(null)\r\n        };\r\n    }\r\n    CifExportContext.create = create;\r\n})(CifExportContext || (CifExportContext = {}));\r\nvar _entity = {\r\n    name: 'entity',\r\n    instance: function (_a) {\r\n        var structures = _a.structures;\r\n        var indices = getUniqueEntityIndicesFromStructures(structures);\r\n        return CifCategory.ofTable(structures[0].model.entities.data, indices);\r\n    }\r\n};\r\nfunction isWithoutSymmetry(structure) {\r\n    return structure.units.every(function (u) { return u.conformation.operator.isIdentity; });\r\n}\r\nvar Categories = [\r\n    // Basics\r\n    copy_mmCif_category('entry'),\r\n    copy_mmCif_category('exptl'),\r\n    _entity,\r\n    // Symmetry\r\n    copy_mmCif_category('cell', isWithoutSymmetry),\r\n    copy_mmCif_category('symmetry', isWithoutSymmetry),\r\n    // Assemblies\r\n    copy_mmCif_category('pdbx_struct_assembly', isWithoutSymmetry),\r\n    copy_mmCif_category('pdbx_struct_assembly_gen', isWithoutSymmetry),\r\n    copy_mmCif_category('pdbx_struct_oper_list', isWithoutSymmetry),\r\n    // Secondary structure\r\n    _struct_conf,\r\n    _struct_sheet_range,\r\n    // Sequence\r\n    _struct_asym,\r\n    _entity_poly,\r\n    _entity_poly_seq,\r\n    // Branch\r\n    copy_mmCif_category('pdbx_entity_branch'),\r\n    copy_mmCif_category('pdbx_entity_branch_link'),\r\n    copy_mmCif_category('pdbx_branch_scheme'),\r\n    // Struct conn\r\n    copy_mmCif_category('struct_conn'),\r\n    // Misc\r\n    _chem_comp,\r\n    _chem_comp_bond,\r\n    _pdbx_chem_comp_identifier,\r\n    copy_mmCif_category('atom_sites'),\r\n    _pdbx_nonpoly_scheme,\r\n    // Atoms\r\n    _atom_site\r\n];\r\nvar _Filters;\r\n(function (_Filters) {\r\n    _Filters.AtomSitePositionsFieldNames = new Set(['id', 'Cartn_x', 'Cartn_y', 'Cartn_z']);\r\n})(_Filters || (_Filters = {}));\r\nexport var mmCIF_Export_Filters = {\r\n    onlyPositions: {\r\n        includeCategory: function (name) { return name === 'atom_site'; },\r\n        includeField: function (cat, field) { return _Filters.AtomSitePositionsFieldNames.has(field); }\r\n    }\r\n};\r\nfunction getCustomPropCategories(customProp, ctx, params) {\r\n    var _a;\r\n    if (!customProp.cifExport || customProp.cifExport.categories.length === 0)\r\n        return [];\r\n    var prefix = customProp.cifExport.prefix;\r\n    var cats = customProp.cifExport.categories;\r\n    var propCtx = ctx;\r\n    if (customProp.cifExport.context) {\r\n        var propId = CustomPropertyDescriptor.getUUID(customProp);\r\n        if (ctx.cache[propId + '__ctx'])\r\n            propCtx = ctx.cache[propId + '__ctx'];\r\n        else {\r\n            propCtx = customProp.cifExport.context(ctx) || ctx;\r\n            ctx.cache[propId + '__ctx'] = propCtx;\r\n        }\r\n    }\r\n    var ret = [];\r\n    for (var _i = 0, cats_1 = cats; _i < cats_1.length; _i++) {\r\n        var cat = cats_1[_i];\r\n        if ((_a = params === null || params === void 0 ? void 0 : params.skipCategoryNames) === null || _a === void 0 ? void 0 : _a.has(cat.name))\r\n            continue;\r\n        if (cat.name.indexOf(prefix) !== 0)\r\n            throw new Error(\"Custom category '\" + cat.name + \"' name must start with prefix '\" + prefix + \".'\");\r\n        ret.push([cat, propCtx]);\r\n    }\r\n    return ret;\r\n}\r\n/** Doesn't start a data block */\r\nexport function encode_mmCIF_categories(encoder, structures, params) {\r\n    var first = Array.isArray(structures) ? structures[0] : structures;\r\n    var models = first.models;\r\n    if (models.length !== 1)\r\n        throw new Error('Can\\'t export stucture composed from multiple models.');\r\n    var ctx = (params === null || params === void 0 ? void 0 : params.exportCtx) || CifExportContext.create(structures);\r\n    if ((params === null || params === void 0 ? void 0 : params.copyAllCategories) && MmcifFormat.is(models[0].sourceData)) {\r\n        encode_mmCIF_categories_copyAll(encoder, ctx, params);\r\n    }\r\n    else {\r\n        encode_mmCIF_categories_default(encoder, ctx, params);\r\n    }\r\n}\r\nfunction encode_mmCIF_categories_default(encoder, ctx, params) {\r\n    var _a;\r\n    for (var _i = 0, Categories_1 = Categories; _i < Categories_1.length; _i++) {\r\n        var cat = Categories_1[_i];\r\n        if ((params === null || params === void 0 ? void 0 : params.skipCategoryNames) && (params === null || params === void 0 ? void 0 : params.skipCategoryNames.has(cat.name)))\r\n            continue;\r\n        encoder.writeCategory(cat, ctx);\r\n    }\r\n    if (!((_a = params === null || params === void 0 ? void 0 : params.skipCategoryNames) === null || _a === void 0 ? void 0 : _a.has('atom_site')) && encoder.isCategoryIncluded('atom_site')) {\r\n        var info = atom_site_operator_mapping(ctx);\r\n        if (info)\r\n            encoder.writeCategory(info[0], info[1], info[2]);\r\n    }\r\n    var _params = params || {};\r\n    for (var _b = 0, _c = ctx.firstModel.customProperties.all; _b < _c.length; _b++) {\r\n        var customProp = _c[_b];\r\n        for (var _d = 0, _e = getCustomPropCategories(customProp, ctx, _params); _d < _e.length; _d++) {\r\n            var _f = _e[_d], cat = _f[0], propCtx = _f[1];\r\n            encoder.writeCategory(cat, propCtx);\r\n        }\r\n    }\r\n    if (params === null || params === void 0 ? void 0 : params.customProperties) {\r\n        for (var _g = 0, _h = params === null || params === void 0 ? void 0 : params.customProperties; _g < _h.length; _g++) {\r\n            var customProp = _h[_g];\r\n            for (var _j = 0, _k = getCustomPropCategories(customProp, ctx, _params); _j < _k.length; _j++) {\r\n                var _l = _k[_j], cat = _l[0], propCtx = _l[1];\r\n                encoder.writeCategory(cat, propCtx);\r\n            }\r\n        }\r\n    }\r\n    for (var _m = 0, _o = ctx.structures; _m < _o.length; _m++) {\r\n        var s = _o[_m];\r\n        if (!s.hasCustomProperties)\r\n            continue;\r\n        for (var _p = 0, _q = s.customPropertyDescriptors.all; _p < _q.length; _p++) {\r\n            var customProp = _q[_p];\r\n            for (var _r = 0, _s = getCustomPropCategories(customProp, ctx, _params); _r < _s.length; _r++) {\r\n                var _t = _s[_r], cat = _t[0], propCtx = _t[1];\r\n                encoder.writeCategory(cat, propCtx);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction encode_mmCIF_categories_copyAll(encoder, ctx, params) {\r\n    var providedCategories = new Map();\r\n    for (var _i = 0, Categories_2 = Categories; _i < Categories_2.length; _i++) {\r\n        var cat = Categories_2[_i];\r\n        providedCategories.set(cat.name, [cat, ctx]);\r\n    }\r\n    var mapping = atom_site_operator_mapping(ctx);\r\n    if (mapping)\r\n        providedCategories.set(mapping[0].name, mapping);\r\n    var _params = params || {};\r\n    for (var _a = 0, _b = ctx.firstModel.customProperties.all; _a < _b.length; _a++) {\r\n        var customProp = _b[_a];\r\n        for (var _c = 0, _d = getCustomPropCategories(customProp, ctx, _params); _c < _d.length; _c++) {\r\n            var info = _d[_c];\r\n            providedCategories.set(info[0].name, info);\r\n        }\r\n    }\r\n    if (params === null || params === void 0 ? void 0 : params.customProperties) {\r\n        for (var _e = 0, _f = params === null || params === void 0 ? void 0 : params.customProperties; _e < _f.length; _e++) {\r\n            var customProp = _f[_e];\r\n            for (var _g = 0, _h = getCustomPropCategories(customProp, ctx, _params); _g < _h.length; _g++) {\r\n                var info = _h[_g];\r\n                providedCategories.set(info[0].name, info);\r\n            }\r\n        }\r\n    }\r\n    for (var _j = 0, _k = ctx.structures; _j < _k.length; _j++) {\r\n        var s = _k[_j];\r\n        if (!s.hasCustomProperties)\r\n            continue;\r\n        for (var _l = 0, _m = s.customPropertyDescriptors.all; _l < _m.length; _l++) {\r\n            var customProp = _m[_l];\r\n            for (var _o = 0, _p = getCustomPropCategories(customProp, ctx); _o < _p.length; _o++) {\r\n                var info = _p[_o];\r\n                providedCategories.set(info[0].name, info);\r\n            }\r\n        }\r\n    }\r\n    var handled = new Set();\r\n    var data = ctx.firstModel.sourceData.data;\r\n    for (var _q = 0, _r = data.frame.categoryNames; _q < _r.length; _q++) {\r\n        var catName = _r[_q];\r\n        handled.add(catName);\r\n        if (providedCategories.has(catName)) {\r\n            var info = providedCategories.get(catName);\r\n            encoder.writeCategory(info[0], info[1], info[2]);\r\n        }\r\n        else {\r\n            if (data.db[catName]) {\r\n                var cat = copy_mmCif_category(catName);\r\n                encoder.writeCategory(cat, ctx);\r\n            }\r\n            else {\r\n                var cat = copy_source_mmCifCategory(encoder, ctx, data.frame.categories[catName]);\r\n                if (cat)\r\n                    encoder.writeCategory(cat);\r\n            }\r\n        }\r\n    }\r\n    providedCategories.forEach(function (info, name) {\r\n        if (!handled.has(name))\r\n            encoder.writeCategory(info[0], info[1], info[2]);\r\n    });\r\n}\r\nfunction to_mmCIF(name, structure, asBinary) {\r\n    if (asBinary === void 0) { asBinary = false; }\r\n    var enc = CifWriter.createEncoder({ binary: asBinary });\r\n    enc.startDataBlock(name);\r\n    encode_mmCIF_categories(enc, structure);\r\n    return enc.getData();\r\n}\r\nexport { to_mmCIF };\r\n//# sourceMappingURL=mmcif.js.map"]},"metadata":{},"sourceType":"module"}