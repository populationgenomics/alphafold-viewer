{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { Representation } from '../../../mol-repr/representation';\nimport { Mesh } from '../../../mol-geo/geometry/mesh/mesh';\nimport { LocationIterator } from '../../../mol-geo/util/location-iterator';\nimport { EmptyLoci } from '../../../mol-model/loci';\nimport { Interval } from '../../../mol-data/int';\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { Structure, StructureElement } from '../../../mol-model/structure';\nimport { createLinkCylinderMesh, LinkCylinderParams } from '../../../mol-repr/structure/visual/util/link';\nimport { ComplexMeshParams, ComplexMeshVisual } from '../../../mol-repr/structure/complex-visual';\nimport { ComplexRepresentation, StructureRepresentationStateBuilder, StructureRepresentationProvider } from '../../../mol-repr/structure/representation';\nimport { CrossLinkRestraintProvider, CrossLinkRestraint } from './property';\n\nfunction createCrossLinkRestraintCylinderMesh(ctx, structure, theme, props, mesh) {\n  var crossLinks = CrossLinkRestraintProvider.get(structure).value;\n  if (!crossLinks.count) return Mesh.createEmpty(mesh);\n  var sizeFactor = props.sizeFactor;\n  var location = StructureElement.Location.create(structure);\n  var builderProps = {\n    linkCount: crossLinks.count,\n    position: function (posA, posB, edgeIndex) {\n      var b = crossLinks.pairs[edgeIndex];\n      var uA = b.unitA,\n          uB = b.unitB;\n      uA.conformation.position(uA.elements[b.indexA], posA);\n      uB.conformation.position(uB.elements[b.indexB], posB);\n    },\n    radius: function (edgeIndex) {\n      var b = crossLinks.pairs[edgeIndex];\n      location.unit = b.unitA;\n      location.element = b.unitA.elements[b.indexA];\n      return theme.size.size(location) * sizeFactor;\n    }\n  };\n  return createLinkCylinderMesh(ctx, builderProps, props, mesh);\n}\n\nexport var CrossLinkRestraintCylinderParams = __assign(__assign(__assign({}, ComplexMeshParams), LinkCylinderParams), {\n  sizeFactor: PD.Numeric(0.5, {\n    min: 0,\n    max: 10,\n    step: 0.1\n  })\n});\nexport function CrossLinkRestraintVisual(materialId) {\n  return ComplexMeshVisual({\n    defaultProps: PD.getDefaultValues(CrossLinkRestraintCylinderParams),\n    createGeometry: createCrossLinkRestraintCylinderMesh,\n    createLocationIterator: createCrossLinkRestraintIterator,\n    getLoci: getLinkLoci,\n    eachLocation: eachCrossLink,\n    setUpdateState: function (state, newProps, currentProps) {\n      state.createGeometry = newProps.sizeFactor !== currentProps.sizeFactor || newProps.radialSegments !== currentProps.radialSegments || newProps.linkCap !== currentProps.linkCap;\n    }\n  }, materialId);\n}\n\nfunction createCrossLinkRestraintIterator(structure) {\n  var crossLinkRestraints = CrossLinkRestraintProvider.get(structure).value;\n  var pairs = crossLinkRestraints.pairs;\n  var groupCount = pairs.length;\n  var instanceCount = 1;\n  var location = CrossLinkRestraint.Location(crossLinkRestraints, structure);\n\n  var getLocation = function (groupIndex) {\n    location.element = groupIndex;\n    return location;\n  };\n\n  return LocationIterator(groupCount, instanceCount, 1, getLocation, true);\n}\n\nfunction getLinkLoci(pickingId, structure, id) {\n  var objectId = pickingId.objectId,\n      groupId = pickingId.groupId;\n\n  if (id === objectId) {\n    var crossLinkRestraints = CrossLinkRestraintProvider.get(structure).value;\n    var pair = crossLinkRestraints.pairs[groupId];\n\n    if (pair) {\n      return CrossLinkRestraint.Loci(structure, crossLinkRestraints, [groupId]);\n    }\n  }\n\n  return EmptyLoci;\n}\n\nfunction eachCrossLink(loci, structure, apply) {\n  var changed = false;\n\n  if (CrossLinkRestraint.isLoci(loci)) {\n    if (!Structure.areEquivalent(loci.data.structure, structure)) return false;\n    var crossLinkRestraints = CrossLinkRestraintProvider.get(structure).value;\n    if (loci.data.crossLinkRestraints !== crossLinkRestraints) return false;\n\n    for (var _i = 0, _a = loci.elements; _i < _a.length; _i++) {\n      var e = _a[_i];\n      if (apply(Interval.ofSingleton(e))) changed = true;\n    }\n  }\n\n  return changed;\n} //\n\n\nvar CrossLinkRestraintVisuals = {\n  'cross-link-restraint': function (ctx, getParams) {\n    return ComplexRepresentation('Cross-link restraint', ctx, getParams, CrossLinkRestraintVisual);\n  }\n};\nexport var CrossLinkRestraintParams = __assign({}, CrossLinkRestraintCylinderParams);\nexport function getCrossLinkRestraintParams(ctx, structure) {\n  return PD.clone(CrossLinkRestraintParams);\n}\nexport function CrossLinkRestraintRepresentation(ctx, getParams) {\n  return Representation.createMulti('CrossLinkRestraint', ctx, getParams, StructureRepresentationStateBuilder, CrossLinkRestraintVisuals);\n}\nexport var CrossLinkRestraintRepresentationProvider = StructureRepresentationProvider({\n  name: CrossLinkRestraint.Tag.CrossLinkRestraint,\n  label: 'Cross Link Restraint',\n  description: 'Displays cross-link restraints.',\n  factory: CrossLinkRestraintRepresentation,\n  getParams: getCrossLinkRestraintParams,\n  defaultValues: PD.getDefaultValues(CrossLinkRestraintParams),\n  defaultColorTheme: {\n    name: CrossLinkRestraint.Tag.CrossLinkRestraint\n  },\n  defaultSizeTheme: {\n    name: 'uniform'\n  },\n  isApplicable: function (structure) {\n    return CrossLinkRestraint.isApplicable(structure);\n  },\n  ensureCustomProperties: {\n    attach: function (ctx, structure) {\n      return CrossLinkRestraintProvider.attach(ctx, structure, void 0, true);\n    },\n    detach: function (data) {\n      return CrossLinkRestraintProvider.ref(data, false);\n    }\n  }\n});","map":{"version":3,"sources":["../../../../src/mol-model-props/integrative/cross-link-restraint/representation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { Representation } from '../../../mol-repr/representation';\r\nimport { Mesh } from '../../../mol-geo/geometry/mesh/mesh';\r\nimport { LocationIterator } from '../../../mol-geo/util/location-iterator';\r\nimport { EmptyLoci } from '../../../mol-model/loci';\r\nimport { Interval } from '../../../mol-data/int';\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { Structure, StructureElement } from '../../../mol-model/structure';\r\nimport { createLinkCylinderMesh, LinkCylinderParams } from '../../../mol-repr/structure/visual/util/link';\r\nimport { ComplexMeshParams, ComplexMeshVisual } from '../../../mol-repr/structure/complex-visual';\r\nimport { ComplexRepresentation, StructureRepresentationStateBuilder, StructureRepresentationProvider } from '../../../mol-repr/structure/representation';\r\nimport { CrossLinkRestraintProvider, CrossLinkRestraint } from './property';\r\nfunction createCrossLinkRestraintCylinderMesh(ctx, structure, theme, props, mesh) {\r\n    var crossLinks = CrossLinkRestraintProvider.get(structure).value;\r\n    if (!crossLinks.count)\r\n        return Mesh.createEmpty(mesh);\r\n    var sizeFactor = props.sizeFactor;\r\n    var location = StructureElement.Location.create(structure);\r\n    var builderProps = {\r\n        linkCount: crossLinks.count,\r\n        position: function (posA, posB, edgeIndex) {\r\n            var b = crossLinks.pairs[edgeIndex];\r\n            var uA = b.unitA, uB = b.unitB;\r\n            uA.conformation.position(uA.elements[b.indexA], posA);\r\n            uB.conformation.position(uB.elements[b.indexB], posB);\r\n        },\r\n        radius: function (edgeIndex) {\r\n            var b = crossLinks.pairs[edgeIndex];\r\n            location.unit = b.unitA;\r\n            location.element = b.unitA.elements[b.indexA];\r\n            return theme.size.size(location) * sizeFactor;\r\n        },\r\n    };\r\n    return createLinkCylinderMesh(ctx, builderProps, props, mesh);\r\n}\r\nexport var CrossLinkRestraintCylinderParams = __assign(__assign(__assign({}, ComplexMeshParams), LinkCylinderParams), { sizeFactor: PD.Numeric(0.5, { min: 0, max: 10, step: 0.1 }) });\r\nexport function CrossLinkRestraintVisual(materialId) {\r\n    return ComplexMeshVisual({\r\n        defaultProps: PD.getDefaultValues(CrossLinkRestraintCylinderParams),\r\n        createGeometry: createCrossLinkRestraintCylinderMesh,\r\n        createLocationIterator: createCrossLinkRestraintIterator,\r\n        getLoci: getLinkLoci,\r\n        eachLocation: eachCrossLink,\r\n        setUpdateState: function (state, newProps, currentProps) {\r\n            state.createGeometry = (newProps.sizeFactor !== currentProps.sizeFactor ||\r\n                newProps.radialSegments !== currentProps.radialSegments ||\r\n                newProps.linkCap !== currentProps.linkCap);\r\n        }\r\n    }, materialId);\r\n}\r\nfunction createCrossLinkRestraintIterator(structure) {\r\n    var crossLinkRestraints = CrossLinkRestraintProvider.get(structure).value;\r\n    var pairs = crossLinkRestraints.pairs;\r\n    var groupCount = pairs.length;\r\n    var instanceCount = 1;\r\n    var location = CrossLinkRestraint.Location(crossLinkRestraints, structure);\r\n    var getLocation = function (groupIndex) {\r\n        location.element = groupIndex;\r\n        return location;\r\n    };\r\n    return LocationIterator(groupCount, instanceCount, 1, getLocation, true);\r\n}\r\nfunction getLinkLoci(pickingId, structure, id) {\r\n    var objectId = pickingId.objectId, groupId = pickingId.groupId;\r\n    if (id === objectId) {\r\n        var crossLinkRestraints = CrossLinkRestraintProvider.get(structure).value;\r\n        var pair = crossLinkRestraints.pairs[groupId];\r\n        if (pair) {\r\n            return CrossLinkRestraint.Loci(structure, crossLinkRestraints, [groupId]);\r\n        }\r\n    }\r\n    return EmptyLoci;\r\n}\r\nfunction eachCrossLink(loci, structure, apply) {\r\n    var changed = false;\r\n    if (CrossLinkRestraint.isLoci(loci)) {\r\n        if (!Structure.areEquivalent(loci.data.structure, structure))\r\n            return false;\r\n        var crossLinkRestraints = CrossLinkRestraintProvider.get(structure).value;\r\n        if (loci.data.crossLinkRestraints !== crossLinkRestraints)\r\n            return false;\r\n        for (var _i = 0, _a = loci.elements; _i < _a.length; _i++) {\r\n            var e = _a[_i];\r\n            if (apply(Interval.ofSingleton(e)))\r\n                changed = true;\r\n        }\r\n    }\r\n    return changed;\r\n}\r\n//\r\nvar CrossLinkRestraintVisuals = {\r\n    'cross-link-restraint': function (ctx, getParams) { return ComplexRepresentation('Cross-link restraint', ctx, getParams, CrossLinkRestraintVisual); },\r\n};\r\nexport var CrossLinkRestraintParams = __assign({}, CrossLinkRestraintCylinderParams);\r\nexport function getCrossLinkRestraintParams(ctx, structure) {\r\n    return PD.clone(CrossLinkRestraintParams);\r\n}\r\nexport function CrossLinkRestraintRepresentation(ctx, getParams) {\r\n    return Representation.createMulti('CrossLinkRestraint', ctx, getParams, StructureRepresentationStateBuilder, CrossLinkRestraintVisuals);\r\n}\r\nexport var CrossLinkRestraintRepresentationProvider = StructureRepresentationProvider({\r\n    name: CrossLinkRestraint.Tag.CrossLinkRestraint,\r\n    label: 'Cross Link Restraint',\r\n    description: 'Displays cross-link restraints.',\r\n    factory: CrossLinkRestraintRepresentation,\r\n    getParams: getCrossLinkRestraintParams,\r\n    defaultValues: PD.getDefaultValues(CrossLinkRestraintParams),\r\n    defaultColorTheme: { name: CrossLinkRestraint.Tag.CrossLinkRestraint },\r\n    defaultSizeTheme: { name: 'uniform' },\r\n    isApplicable: function (structure) { return CrossLinkRestraint.isApplicable(structure); },\r\n    ensureCustomProperties: {\r\n        attach: function (ctx, structure) { return CrossLinkRestraintProvider.attach(ctx, structure, void 0, true); },\r\n        detach: function (data) { return CrossLinkRestraintProvider.ref(data, false); }\r\n    }\r\n});\r\n//# sourceMappingURL=representation.js.map"]},"metadata":{},"sourceType":"module"}