{"ast":null,"code":"/**\r\n * Copyright (c) 2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { StructureProperties, StructureElement, Bond } from '../../mol-model/structure';\nimport { Color } from '../../mol-util/color';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { getPaletteParams, getPalette } from '../../mol-util/color/palette';\nvar DefaultList = 'many-distinct';\nvar DefaultColor = Color(0xFAFAFA);\nvar Description = 'Gives every chain a color based on its `label_entity_id` value.';\nexport var EntityIdColorThemeParams = __assign({}, getPaletteParams({\n  type: 'colors',\n  colorList: DefaultList\n}));\nexport function getEntityIdColorThemeParams(ctx) {\n  var params = PD.clone(EntityIdColorThemeParams);\n  return params;\n}\n\nfunction key(entityId, modelIndex) {\n  return entityId + \"|\" + modelIndex;\n}\n\nfunction getEntityIdSerialMap(structure) {\n  var map = new Map();\n\n  for (var i = 0, il = structure.models.length; i < il; ++i) {\n    var label_entity_id = structure.models[i].atomicHierarchy.chains.label_entity_id;\n\n    for (var j = 0, jl = label_entity_id.rowCount; j < jl; ++j) {\n      var k = key(label_entity_id.value(j), i);\n      if (!map.has(k)) map.set(k, map.size);\n    }\n  }\n\n  return map;\n}\n\nexport function EntityIdColorTheme(ctx, props) {\n  var color;\n  var legend;\n\n  if (ctx.structure) {\n    var l_1 = StructureElement.Location.create(ctx.structure.root);\n    var entityIdSerialMap_1 = getEntityIdSerialMap(ctx.structure.root);\n    var labelTable_1 = Array.from(entityIdSerialMap_1.keys());\n\n    var valueLabel = function (i) {\n      return labelTable_1[i];\n    };\n\n    var palette_1 = getPalette(entityIdSerialMap_1.size, props, {\n      valueLabel: valueLabel\n    });\n    legend = palette_1.legend;\n\n    color = function (location) {\n      var serial = undefined;\n\n      if (StructureElement.Location.is(location)) {\n        var atomId = StructureProperties.chain.label_entity_id(location);\n        var modelIndex = location.structure.models.indexOf(location.unit.model);\n        var k = key(atomId, modelIndex);\n        serial = entityIdSerialMap_1.get(k);\n      } else if (Bond.isLocation(location)) {\n        l_1.unit = location.aUnit;\n        l_1.element = location.aUnit.elements[location.aIndex];\n        var atomId = StructureProperties.chain.label_entity_id(l_1);\n        var modelIndex = l_1.structure.models.indexOf(l_1.unit.model);\n        var k = key(atomId, modelIndex);\n        serial = entityIdSerialMap_1.get(k);\n      }\n\n      return serial === undefined ? DefaultColor : palette_1.color(serial);\n    };\n  } else {\n    color = function () {\n      return DefaultColor;\n    };\n  }\n\n  return {\n    factory: EntityIdColorTheme,\n    granularity: 'group',\n    color: color,\n    props: props,\n    description: Description,\n    legend: legend\n  };\n}\nexport var EntityIdColorThemeProvider = {\n  name: 'entity-id',\n  label: 'Entity Id',\n  category: \"Chain Property\"\n  /* Chain */\n  ,\n  factory: EntityIdColorTheme,\n  getParams: getEntityIdColorThemeParams,\n  defaultValues: PD.getDefaultValues(EntityIdColorThemeParams),\n  isApplicable: function (ctx) {\n    return !!ctx.structure;\n  }\n};","map":{"version":3,"sources":["../../../src/mol-theme/color/entity-id.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { StructureProperties, StructureElement, Bond } from '../../mol-model/structure';\r\nimport { Color } from '../../mol-util/color';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { getPaletteParams, getPalette } from '../../mol-util/color/palette';\r\nvar DefaultList = 'many-distinct';\r\nvar DefaultColor = Color(0xFAFAFA);\r\nvar Description = 'Gives every chain a color based on its `label_entity_id` value.';\r\nexport var EntityIdColorThemeParams = __assign({}, getPaletteParams({ type: 'colors', colorList: DefaultList }));\r\nexport function getEntityIdColorThemeParams(ctx) {\r\n    var params = PD.clone(EntityIdColorThemeParams);\r\n    return params;\r\n}\r\nfunction key(entityId, modelIndex) {\r\n    return entityId + \"|\" + modelIndex;\r\n}\r\nfunction getEntityIdSerialMap(structure) {\r\n    var map = new Map();\r\n    for (var i = 0, il = structure.models.length; i < il; ++i) {\r\n        var label_entity_id = structure.models[i].atomicHierarchy.chains.label_entity_id;\r\n        for (var j = 0, jl = label_entity_id.rowCount; j < jl; ++j) {\r\n            var k = key(label_entity_id.value(j), i);\r\n            if (!map.has(k))\r\n                map.set(k, map.size);\r\n        }\r\n    }\r\n    return map;\r\n}\r\nexport function EntityIdColorTheme(ctx, props) {\r\n    var color;\r\n    var legend;\r\n    if (ctx.structure) {\r\n        var l_1 = StructureElement.Location.create(ctx.structure.root);\r\n        var entityIdSerialMap_1 = getEntityIdSerialMap(ctx.structure.root);\r\n        var labelTable_1 = Array.from(entityIdSerialMap_1.keys());\r\n        var valueLabel = function (i) { return labelTable_1[i]; };\r\n        var palette_1 = getPalette(entityIdSerialMap_1.size, props, { valueLabel: valueLabel });\r\n        legend = palette_1.legend;\r\n        color = function (location) {\r\n            var serial = undefined;\r\n            if (StructureElement.Location.is(location)) {\r\n                var atomId = StructureProperties.chain.label_entity_id(location);\r\n                var modelIndex = location.structure.models.indexOf(location.unit.model);\r\n                var k = key(atomId, modelIndex);\r\n                serial = entityIdSerialMap_1.get(k);\r\n            }\r\n            else if (Bond.isLocation(location)) {\r\n                l_1.unit = location.aUnit;\r\n                l_1.element = location.aUnit.elements[location.aIndex];\r\n                var atomId = StructureProperties.chain.label_entity_id(l_1);\r\n                var modelIndex = l_1.structure.models.indexOf(l_1.unit.model);\r\n                var k = key(atomId, modelIndex);\r\n                serial = entityIdSerialMap_1.get(k);\r\n            }\r\n            return serial === undefined ? DefaultColor : palette_1.color(serial);\r\n        };\r\n    }\r\n    else {\r\n        color = function () { return DefaultColor; };\r\n    }\r\n    return {\r\n        factory: EntityIdColorTheme,\r\n        granularity: 'group',\r\n        color: color,\r\n        props: props,\r\n        description: Description,\r\n        legend: legend\r\n    };\r\n}\r\nexport var EntityIdColorThemeProvider = {\r\n    name: 'entity-id',\r\n    label: 'Entity Id',\r\n    category: \"Chain Property\" /* Chain */,\r\n    factory: EntityIdColorTheme,\r\n    getParams: getEntityIdColorThemeParams,\r\n    defaultValues: PD.getDefaultValues(EntityIdColorThemeParams),\r\n    isApplicable: function (ctx) { return !!ctx.structure; }\r\n};\r\n//# sourceMappingURL=entity-id.js.map"]},"metadata":{},"sourceType":"module"}