{"ast":null,"code":"/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { CifField } from '../../../mol-io/reader/cif';\nimport { TokenBuilder, Tokenizer } from '../../../mol-io/reader/common/text/tokenizer';\nimport { guessElementSymbolTokens } from '../util';\nimport { parseIntSkipLeadingWhitespace as fastParseInt } from '../../../mol-io/reader/common/text/number-parser';\nexport function getAnisotropicTemplate(data, count) {\n  var str = function () {\n    return [];\n  };\n\n  var float = function () {\n    return new Float32Array(count);\n  };\n\n  var ts = function () {\n    return TokenBuilder.create(data, 2 * count);\n  };\n\n  return {\n    index: 0,\n    count: count,\n    id: str(),\n    type_symbol: ts(),\n    pdbx_label_atom_id: ts(),\n    pdbx_label_alt_id: ts(),\n    pdbx_label_comp_id: ts(),\n    pdbx_label_asym_id: ts(),\n    pdbx_label_seq_id: ts(),\n    pdbx_PDB_ins_code: ts(),\n    'U[1][1]': float(),\n    'U[2][2]': float(),\n    'U[3][3]': float(),\n    'U[1][2]': float(),\n    'U[1][3]': float(),\n    'U[2][3]': float(),\n    pdbx_auth_seq_id: ts(),\n    pdbx_auth_comp_id: ts(),\n    pdbx_auth_asym_id: ts(),\n    pdbx_auth_atom_id: ts()\n  };\n}\nexport function getAnisotropic(sites) {\n  var pdbx_auth_seq_id = CifField.ofTokens(sites.pdbx_auth_seq_id);\n  var pdbx_auth_comp_id = CifField.ofTokens(sites.pdbx_auth_comp_id);\n  var pdbx_auth_asym_id = CifField.ofTokens(sites.pdbx_auth_asym_id);\n  var pdbx_auth_atom_id = CifField.ofTokens(sites.pdbx_auth_atom_id);\n  var fields = {\n    id: CifField.ofStrings(sites.id),\n    type_symbol: CifField.ofTokens(sites.type_symbol),\n    pdbx_label_atom_id: pdbx_auth_atom_id,\n    pdbx_label_alt_id: CifField.ofTokens(sites.pdbx_label_alt_id),\n    pdbx_label_comp_id: pdbx_auth_comp_id,\n    pdbx_label_asym_id: pdbx_auth_asym_id,\n    pdbx_label_seq_id: pdbx_auth_seq_id,\n    pdbx_PDB_ins_code: CifField.ofTokens(sites.pdbx_PDB_ins_code),\n    pdbx_auth_seq_id: pdbx_auth_seq_id,\n    pdbx_auth_comp_id: pdbx_auth_comp_id,\n    pdbx_auth_asym_id: pdbx_auth_asym_id,\n    pdbx_auth_atom_id: pdbx_auth_atom_id\n  };\n  fields['U[1][1]'] = CifField.ofNumbers(sites['U[1][1]']);\n  fields['U[2][2]'] = CifField.ofNumbers(sites['U[2][2]']);\n  fields['U[3][3]'] = CifField.ofNumbers(sites['U[3][3]']);\n  fields['U[1][2]'] = CifField.ofNumbers(sites['U[1][2]']);\n  fields['U[1][3]'] = CifField.ofNumbers(sites['U[1][3]']);\n  fields['U[2][3]'] = CifField.ofNumbers(sites['U[2][3]']);\n  return fields;\n}\nexport function addAnisotropic(sites, model, data, s, e) {\n  var str = data.data;\n  var length = e - s; // COLUMNS       DATA  TYPE    FIELD          DEFINITION\n  // -----------------------------------------------------------------\n  // 1 - 6        Record name   \"ANISOU\"\n  // 7 - 11       Integer       serial         Atom serial number.\n\n  Tokenizer.trim(data, s + 6, s + 11);\n  sites.id[sites.index] = str.substring(data.tokenStart, data.tokenEnd); // 13 - 16       Atom          name           Atom name.\n\n  TokenBuilder.addToken(sites.pdbx_auth_atom_id, Tokenizer.trim(data, s + 12, s + 16)); // 17            Character     altLoc         Alternate location indicator\n\n  if (str.charCodeAt(s + 16) === 32) {\n    // ' '\n    TokenBuilder.add(sites.pdbx_label_alt_id, 0, 0);\n  } else {\n    TokenBuilder.add(sites.pdbx_label_alt_id, s + 16, s + 17);\n  } // 18 - 20       Residue name  resName        Residue name.\n\n\n  TokenBuilder.addToken(sites.pdbx_auth_comp_id, Tokenizer.trim(data, s + 17, s + 20)); // 22            Character     chainID        Chain identifier.\n\n  TokenBuilder.add(sites.pdbx_auth_asym_id, s + 21, s + 22); // 23 - 26       Integer       resSeq         Residue sequence number.\n\n  TokenBuilder.addToken(sites.pdbx_auth_seq_id, Tokenizer.trim(data, s + 22, s + 26)); // 27            AChar         iCode          Insertion code.\n\n  if (str.charCodeAt(s + 26) === 32) {\n    // ' '\n    TokenBuilder.add(sites.pdbx_PDB_ins_code, 0, 0);\n  } else {\n    TokenBuilder.add(sites.pdbx_PDB_ins_code, s + 26, s + 27);\n  } // 29 - 35       Integer       u[0][0]        U(1,1)\n\n\n  sites['U[1][1]'][sites.index] = fastParseInt(str, s + 28, s + 35) / 10000; // 36 - 42       Integer       u[1][1]        U(2,2)\n\n  sites['U[2][2]'][sites.index] = fastParseInt(str, s + 35, s + 42) / 10000; // 43 - 49       Integer       u[2][2]        U(3,3)\n\n  sites['U[3][3]'][sites.index] = fastParseInt(str, s + 42, s + 49) / 10000; // 50 - 56       Integer       u[0][1]        U(1,2)\n\n  sites['U[1][2]'][sites.index] = fastParseInt(str, s + 49, s + 56) / 10000; // 57 - 63       Integer       u[0][2]        U(1,3)\n\n  sites['U[1][3]'][sites.index] = fastParseInt(str, s + 56, s + 63) / 10000; // 64 - 70       Integer       u[1][2]        U(2,3)\n\n  sites['U[2][3]'][sites.index] = fastParseInt(str, s + 63, s + 70) / 10000; // 77 - 78       LString(2)    element        Element symbol, right-justified.\n\n  if (length >= 78) {\n    Tokenizer.trim(data, s + 76, s + 78);\n\n    if (data.tokenStart < data.tokenEnd) {\n      TokenBuilder.addToken(sites.type_symbol, data);\n    } else {\n      guessElementSymbolTokens(sites.type_symbol, str, s + 12, s + 16);\n    }\n  } else {\n    guessElementSymbolTokens(sites.type_symbol, str, s + 12, s + 16);\n  } // 79 - 80       LString(2)    charge         Charge on the atom.\n  // TODO\n\n\n  sites.index++;\n}","map":{"version":3,"sources":["../../../../src/mol-model-formats/structure/pdb/anisotropic.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { CifField } from '../../../mol-io/reader/cif';\r\nimport { TokenBuilder, Tokenizer } from '../../../mol-io/reader/common/text/tokenizer';\r\nimport { guessElementSymbolTokens } from '../util';\r\nimport { parseIntSkipLeadingWhitespace as fastParseInt } from '../../../mol-io/reader/common/text/number-parser';\r\nexport function getAnisotropicTemplate(data, count) {\r\n    var str = function () { return []; };\r\n    var float = function () { return new Float32Array(count); };\r\n    var ts = function () { return TokenBuilder.create(data, 2 * count); };\r\n    return {\r\n        index: 0,\r\n        count: count,\r\n        id: str(),\r\n        type_symbol: ts(),\r\n        pdbx_label_atom_id: ts(),\r\n        pdbx_label_alt_id: ts(),\r\n        pdbx_label_comp_id: ts(),\r\n        pdbx_label_asym_id: ts(),\r\n        pdbx_label_seq_id: ts(),\r\n        pdbx_PDB_ins_code: ts(),\r\n        'U[1][1]': float(),\r\n        'U[2][2]': float(),\r\n        'U[3][3]': float(),\r\n        'U[1][2]': float(),\r\n        'U[1][3]': float(),\r\n        'U[2][3]': float(),\r\n        pdbx_auth_seq_id: ts(),\r\n        pdbx_auth_comp_id: ts(),\r\n        pdbx_auth_asym_id: ts(),\r\n        pdbx_auth_atom_id: ts(),\r\n    };\r\n}\r\nexport function getAnisotropic(sites) {\r\n    var pdbx_auth_seq_id = CifField.ofTokens(sites.pdbx_auth_seq_id);\r\n    var pdbx_auth_comp_id = CifField.ofTokens(sites.pdbx_auth_comp_id);\r\n    var pdbx_auth_asym_id = CifField.ofTokens(sites.pdbx_auth_asym_id);\r\n    var pdbx_auth_atom_id = CifField.ofTokens(sites.pdbx_auth_atom_id);\r\n    var fields = {\r\n        id: CifField.ofStrings(sites.id),\r\n        type_symbol: CifField.ofTokens(sites.type_symbol),\r\n        pdbx_label_atom_id: pdbx_auth_atom_id,\r\n        pdbx_label_alt_id: CifField.ofTokens(sites.pdbx_label_alt_id),\r\n        pdbx_label_comp_id: pdbx_auth_comp_id,\r\n        pdbx_label_asym_id: pdbx_auth_asym_id,\r\n        pdbx_label_seq_id: pdbx_auth_seq_id,\r\n        pdbx_PDB_ins_code: CifField.ofTokens(sites.pdbx_PDB_ins_code),\r\n        pdbx_auth_seq_id: pdbx_auth_seq_id,\r\n        pdbx_auth_comp_id: pdbx_auth_comp_id,\r\n        pdbx_auth_asym_id: pdbx_auth_asym_id,\r\n        pdbx_auth_atom_id: pdbx_auth_atom_id,\r\n    };\r\n    fields['U[1][1]'] = CifField.ofNumbers(sites['U[1][1]']);\r\n    fields['U[2][2]'] = CifField.ofNumbers(sites['U[2][2]']);\r\n    fields['U[3][3]'] = CifField.ofNumbers(sites['U[3][3]']);\r\n    fields['U[1][2]'] = CifField.ofNumbers(sites['U[1][2]']);\r\n    fields['U[1][3]'] = CifField.ofNumbers(sites['U[1][3]']);\r\n    fields['U[2][3]'] = CifField.ofNumbers(sites['U[2][3]']);\r\n    return fields;\r\n}\r\nexport function addAnisotropic(sites, model, data, s, e) {\r\n    var str = data.data;\r\n    var length = e - s;\r\n    // COLUMNS       DATA  TYPE    FIELD          DEFINITION\r\n    // -----------------------------------------------------------------\r\n    // 1 - 6        Record name   \"ANISOU\"\r\n    // 7 - 11       Integer       serial         Atom serial number.\r\n    Tokenizer.trim(data, s + 6, s + 11);\r\n    sites.id[sites.index] = str.substring(data.tokenStart, data.tokenEnd);\r\n    // 13 - 16       Atom          name           Atom name.\r\n    TokenBuilder.addToken(sites.pdbx_auth_atom_id, Tokenizer.trim(data, s + 12, s + 16));\r\n    // 17            Character     altLoc         Alternate location indicator\r\n    if (str.charCodeAt(s + 16) === 32) { // ' '\r\n        TokenBuilder.add(sites.pdbx_label_alt_id, 0, 0);\r\n    }\r\n    else {\r\n        TokenBuilder.add(sites.pdbx_label_alt_id, s + 16, s + 17);\r\n    }\r\n    // 18 - 20       Residue name  resName        Residue name.\r\n    TokenBuilder.addToken(sites.pdbx_auth_comp_id, Tokenizer.trim(data, s + 17, s + 20));\r\n    // 22            Character     chainID        Chain identifier.\r\n    TokenBuilder.add(sites.pdbx_auth_asym_id, s + 21, s + 22);\r\n    // 23 - 26       Integer       resSeq         Residue sequence number.\r\n    TokenBuilder.addToken(sites.pdbx_auth_seq_id, Tokenizer.trim(data, s + 22, s + 26));\r\n    // 27            AChar         iCode          Insertion code.\r\n    if (str.charCodeAt(s + 26) === 32) { // ' '\r\n        TokenBuilder.add(sites.pdbx_PDB_ins_code, 0, 0);\r\n    }\r\n    else {\r\n        TokenBuilder.add(sites.pdbx_PDB_ins_code, s + 26, s + 27);\r\n    }\r\n    // 29 - 35       Integer       u[0][0]        U(1,1)\r\n    sites['U[1][1]'][sites.index] = fastParseInt(str, s + 28, s + 35) / 10000;\r\n    // 36 - 42       Integer       u[1][1]        U(2,2)\r\n    sites['U[2][2]'][sites.index] = fastParseInt(str, s + 35, s + 42) / 10000;\r\n    // 43 - 49       Integer       u[2][2]        U(3,3)\r\n    sites['U[3][3]'][sites.index] = fastParseInt(str, s + 42, s + 49) / 10000;\r\n    // 50 - 56       Integer       u[0][1]        U(1,2)\r\n    sites['U[1][2]'][sites.index] = fastParseInt(str, s + 49, s + 56) / 10000;\r\n    // 57 - 63       Integer       u[0][2]        U(1,3)\r\n    sites['U[1][3]'][sites.index] = fastParseInt(str, s + 56, s + 63) / 10000;\r\n    // 64 - 70       Integer       u[1][2]        U(2,3)\r\n    sites['U[2][3]'][sites.index] = fastParseInt(str, s + 63, s + 70) / 10000;\r\n    // 77 - 78       LString(2)    element        Element symbol, right-justified.\r\n    if (length >= 78) {\r\n        Tokenizer.trim(data, s + 76, s + 78);\r\n        if (data.tokenStart < data.tokenEnd) {\r\n            TokenBuilder.addToken(sites.type_symbol, data);\r\n        }\r\n        else {\r\n            guessElementSymbolTokens(sites.type_symbol, str, s + 12, s + 16);\r\n        }\r\n    }\r\n    else {\r\n        guessElementSymbolTokens(sites.type_symbol, str, s + 12, s + 16);\r\n    }\r\n    // 79 - 80       LString(2)    charge         Charge on the atom.\r\n    // TODO\r\n    sites.index++;\r\n}\r\n//# sourceMappingURL=anisotropic.js.map"]},"metadata":{},"sourceType":"module"}