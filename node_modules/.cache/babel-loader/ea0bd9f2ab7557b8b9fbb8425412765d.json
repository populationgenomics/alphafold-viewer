{"ast":null,"code":"/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { ChunkedArray } from '../../../mol-data/util';\nimport { Cylinders } from './cylinders';\nimport { Vec3 } from '../../../mol-math/linear-algebra';\nvar tmpVecA = Vec3();\nvar tmpVecB = Vec3();\nvar tmpDir = Vec3(); // avoiding namespace lookup improved performance in Chrome (Aug 2020)\n\nvar caAdd = ChunkedArray.add;\nvar caAdd3 = ChunkedArray.add3;\nexport var CylindersBuilder;\n\n(function (CylindersBuilder) {\n  function create(initialCount, chunkSize, cylinders) {\n    if (initialCount === void 0) {\n      initialCount = 2048;\n    }\n\n    if (chunkSize === void 0) {\n      chunkSize = 1024;\n    }\n\n    var groups = ChunkedArray.create(Float32Array, 1, chunkSize, cylinders ? cylinders.groupBuffer.ref.value : initialCount);\n    var starts = ChunkedArray.create(Float32Array, 3, chunkSize, cylinders ? cylinders.startBuffer.ref.value : initialCount);\n    var ends = ChunkedArray.create(Float32Array, 3, chunkSize, cylinders ? cylinders.endBuffer.ref.value : initialCount);\n    var scales = ChunkedArray.create(Float32Array, 1, chunkSize, cylinders ? cylinders.scaleBuffer.ref.value : initialCount);\n    var caps = ChunkedArray.create(Float32Array, 1, chunkSize, cylinders ? cylinders.capBuffer.ref.value : initialCount);\n\n    var add = function (startX, startY, startZ, endX, endY, endZ, radiusScale, topCap, bottomCap, group) {\n      for (var i = 0; i < 6; ++i) {\n        caAdd3(starts, startX, startY, startZ);\n        caAdd3(ends, endX, endY, endZ);\n        caAdd(groups, group);\n        caAdd(scales, radiusScale);\n        caAdd(caps, (topCap ? 1 : 0) + (bottomCap ? 2 : 0));\n      }\n    };\n\n    var addFixedCountDashes = function (start, end, segmentCount, radiusScale, topCap, bottomCap, group) {\n      var d = Vec3.distance(start, end);\n      var s = Math.floor(segmentCount / 2);\n      var step = 1 / segmentCount;\n      Vec3.sub(tmpDir, end, start);\n\n      for (var j = 0; j < s; ++j) {\n        var f = step * (j * 2 + 1);\n        Vec3.setMagnitude(tmpDir, tmpDir, d * f);\n        Vec3.add(tmpVecA, start, tmpDir);\n        Vec3.setMagnitude(tmpDir, tmpDir, d * step * ((j + 1) * 2));\n        Vec3.add(tmpVecB, start, tmpDir);\n        add(tmpVecA[0], tmpVecA[1], tmpVecA[2], tmpVecB[0], tmpVecB[1], tmpVecB[2], radiusScale, topCap, bottomCap, group);\n      }\n    };\n\n    return {\n      add: add,\n      addFixedCountDashes: addFixedCountDashes,\n      addFixedLengthDashes: function (start, end, segmentLength, radiusScale, topCap, bottomCap, group) {\n        var d = Vec3.distance(start, end);\n        addFixedCountDashes(start, end, d / segmentLength, radiusScale, topCap, bottomCap, group);\n      },\n      getCylinders: function () {\n        var cylinderCount = groups.elementCount / 6;\n        var gb = ChunkedArray.compact(groups, true);\n        var sb = ChunkedArray.compact(starts, true);\n        var eb = ChunkedArray.compact(ends, true);\n        var ab = ChunkedArray.compact(scales, true);\n        var cb = ChunkedArray.compact(caps, true);\n        var mb = cylinders && cylinderCount <= cylinders.cylinderCount ? cylinders.mappingBuffer.ref.value : new Float32Array(cylinderCount * 18);\n        var ib = cylinders && cylinderCount <= cylinders.cylinderCount ? cylinders.indexBuffer.ref.value : new Uint32Array(cylinderCount * 12);\n        if (!cylinders || cylinderCount > cylinders.cylinderCount) fillMappingAndIndices(cylinderCount, mb, ib);\n        return Cylinders.create(mb, ib, gb, sb, eb, ab, cb, cylinderCount, cylinders);\n      }\n    };\n  }\n\n  CylindersBuilder.create = create;\n})(CylindersBuilder || (CylindersBuilder = {}));\n\nfunction fillMappingAndIndices(n, mb, ib) {\n  for (var i = 0; i < n; ++i) {\n    var mo = i * 18;\n    mb[mo] = -1;\n    mb[mo + 1] = 1;\n    mb[mo + 2] = -1;\n    mb[mo + 3] = -1;\n    mb[mo + 4] = -1;\n    mb[mo + 5] = -1;\n    mb[mo + 6] = 1;\n    mb[mo + 7] = 1;\n    mb[mo + 8] = -1;\n    mb[mo + 9] = 1;\n    mb[mo + 10] = 1;\n    mb[mo + 11] = 1;\n    mb[mo + 12] = 1;\n    mb[mo + 13] = -1;\n    mb[mo + 14] = -1;\n    mb[mo + 15] = 1;\n    mb[mo + 16] = -1;\n    mb[mo + 17] = 1;\n  }\n\n  for (var i = 0; i < n; ++i) {\n    var o = i * 6;\n    var io = i * 12;\n    ib[io] = o;\n    ib[io + 1] = o + 1;\n    ib[io + 2] = o + 2;\n    ib[io + 3] = o + 1;\n    ib[io + 4] = o + 4;\n    ib[io + 5] = o + 2;\n    ib[io + 6] = o + 2;\n    ib[io + 7] = o + 4;\n    ib[io + 8] = o + 3;\n    ib[io + 9] = o + 4;\n    ib[io + 10] = o + 5;\n    ib[io + 11] = o + 3;\n  }\n}","map":{"version":3,"sources":["../../../../src/mol-geo/geometry/cylinders/cylinders-builder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { ChunkedArray } from '../../../mol-data/util';\r\nimport { Cylinders } from './cylinders';\r\nimport { Vec3 } from '../../../mol-math/linear-algebra';\r\nvar tmpVecA = Vec3();\r\nvar tmpVecB = Vec3();\r\nvar tmpDir = Vec3();\r\n// avoiding namespace lookup improved performance in Chrome (Aug 2020)\r\nvar caAdd = ChunkedArray.add;\r\nvar caAdd3 = ChunkedArray.add3;\r\nexport var CylindersBuilder;\r\n(function (CylindersBuilder) {\r\n    function create(initialCount, chunkSize, cylinders) {\r\n        if (initialCount === void 0) { initialCount = 2048; }\r\n        if (chunkSize === void 0) { chunkSize = 1024; }\r\n        var groups = ChunkedArray.create(Float32Array, 1, chunkSize, cylinders ? cylinders.groupBuffer.ref.value : initialCount);\r\n        var starts = ChunkedArray.create(Float32Array, 3, chunkSize, cylinders ? cylinders.startBuffer.ref.value : initialCount);\r\n        var ends = ChunkedArray.create(Float32Array, 3, chunkSize, cylinders ? cylinders.endBuffer.ref.value : initialCount);\r\n        var scales = ChunkedArray.create(Float32Array, 1, chunkSize, cylinders ? cylinders.scaleBuffer.ref.value : initialCount);\r\n        var caps = ChunkedArray.create(Float32Array, 1, chunkSize, cylinders ? cylinders.capBuffer.ref.value : initialCount);\r\n        var add = function (startX, startY, startZ, endX, endY, endZ, radiusScale, topCap, bottomCap, group) {\r\n            for (var i = 0; i < 6; ++i) {\r\n                caAdd3(starts, startX, startY, startZ);\r\n                caAdd3(ends, endX, endY, endZ);\r\n                caAdd(groups, group);\r\n                caAdd(scales, radiusScale);\r\n                caAdd(caps, (topCap ? 1 : 0) + (bottomCap ? 2 : 0));\r\n            }\r\n        };\r\n        var addFixedCountDashes = function (start, end, segmentCount, radiusScale, topCap, bottomCap, group) {\r\n            var d = Vec3.distance(start, end);\r\n            var s = Math.floor(segmentCount / 2);\r\n            var step = 1 / segmentCount;\r\n            Vec3.sub(tmpDir, end, start);\r\n            for (var j = 0; j < s; ++j) {\r\n                var f = step * (j * 2 + 1);\r\n                Vec3.setMagnitude(tmpDir, tmpDir, d * f);\r\n                Vec3.add(tmpVecA, start, tmpDir);\r\n                Vec3.setMagnitude(tmpDir, tmpDir, d * step * ((j + 1) * 2));\r\n                Vec3.add(tmpVecB, start, tmpDir);\r\n                add(tmpVecA[0], tmpVecA[1], tmpVecA[2], tmpVecB[0], tmpVecB[1], tmpVecB[2], radiusScale, topCap, bottomCap, group);\r\n            }\r\n        };\r\n        return {\r\n            add: add,\r\n            addFixedCountDashes: addFixedCountDashes,\r\n            addFixedLengthDashes: function (start, end, segmentLength, radiusScale, topCap, bottomCap, group) {\r\n                var d = Vec3.distance(start, end);\r\n                addFixedCountDashes(start, end, d / segmentLength, radiusScale, topCap, bottomCap, group);\r\n            },\r\n            getCylinders: function () {\r\n                var cylinderCount = groups.elementCount / 6;\r\n                var gb = ChunkedArray.compact(groups, true);\r\n                var sb = ChunkedArray.compact(starts, true);\r\n                var eb = ChunkedArray.compact(ends, true);\r\n                var ab = ChunkedArray.compact(scales, true);\r\n                var cb = ChunkedArray.compact(caps, true);\r\n                var mb = cylinders && cylinderCount <= cylinders.cylinderCount ? cylinders.mappingBuffer.ref.value : new Float32Array(cylinderCount * 18);\r\n                var ib = cylinders && cylinderCount <= cylinders.cylinderCount ? cylinders.indexBuffer.ref.value : new Uint32Array(cylinderCount * 12);\r\n                if (!cylinders || cylinderCount > cylinders.cylinderCount)\r\n                    fillMappingAndIndices(cylinderCount, mb, ib);\r\n                return Cylinders.create(mb, ib, gb, sb, eb, ab, cb, cylinderCount, cylinders);\r\n            }\r\n        };\r\n    }\r\n    CylindersBuilder.create = create;\r\n})(CylindersBuilder || (CylindersBuilder = {}));\r\nfunction fillMappingAndIndices(n, mb, ib) {\r\n    for (var i = 0; i < n; ++i) {\r\n        var mo = i * 18;\r\n        mb[mo] = -1;\r\n        mb[mo + 1] = 1;\r\n        mb[mo + 2] = -1;\r\n        mb[mo + 3] = -1;\r\n        mb[mo + 4] = -1;\r\n        mb[mo + 5] = -1;\r\n        mb[mo + 6] = 1;\r\n        mb[mo + 7] = 1;\r\n        mb[mo + 8] = -1;\r\n        mb[mo + 9] = 1;\r\n        mb[mo + 10] = 1;\r\n        mb[mo + 11] = 1;\r\n        mb[mo + 12] = 1;\r\n        mb[mo + 13] = -1;\r\n        mb[mo + 14] = -1;\r\n        mb[mo + 15] = 1;\r\n        mb[mo + 16] = -1;\r\n        mb[mo + 17] = 1;\r\n    }\r\n    for (var i = 0; i < n; ++i) {\r\n        var o = i * 6;\r\n        var io = i * 12;\r\n        ib[io] = o;\r\n        ib[io + 1] = o + 1;\r\n        ib[io + 2] = o + 2;\r\n        ib[io + 3] = o + 1;\r\n        ib[io + 4] = o + 4;\r\n        ib[io + 5] = o + 2;\r\n        ib[io + 6] = o + 2;\r\n        ib[io + 7] = o + 4;\r\n        ib[io + 8] = o + 3;\r\n        ib[io + 9] = o + 4;\r\n        ib[io + 10] = o + 5;\r\n        ib[io + 11] = o + 3;\r\n    }\r\n}\r\n//# sourceMappingURL=cylinders-builder.js.map"]},"metadata":{},"sourceType":"module"}