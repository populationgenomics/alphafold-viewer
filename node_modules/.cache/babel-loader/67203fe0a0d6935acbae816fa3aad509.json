{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { StructureElement } from './structure';\nimport { Bond } from './structure/structure/unit/bonds';\nimport { Shape, ShapeGroup } from './shape';\nimport { Sphere3D } from '../mol-math/geometry';\nimport { Vec3 } from '../mol-math/linear-algebra';\nimport { Structure } from './structure/structure';\nimport { ParamDefinition } from '../mol-util/param-definition';\nimport { shallowEqual } from '../mol-util';\nimport { BoundaryHelper } from '../mol-math/geometry/boundary-helper';\nimport { stringToWords } from '../mol-util/string';\nimport { Volume } from './volume/volume';\n/** A Loci that includes every loci */\n\nexport var EveryLoci = {\n  kind: 'every-loci'\n};\nexport function isEveryLoci(x) {\n  return !!x && x.kind === 'every-loci';\n}\n/** A Loci that is empty */\n\nexport var EmptyLoci = {\n  kind: 'empty-loci'\n};\nexport function isEmptyLoci(x) {\n  return !!x && x.kind === 'empty-loci';\n}\nexport function isDataLoci(x) {\n  return !!x && x.kind === 'data-loci';\n}\nexport function areDataLociEqual(a, b) {\n  // use shallowEqual to allow simple data objects that are contructed on-the-fly\n  if (!shallowEqual(a.data, b.data) || a.tag !== b.tag) return false;\n  if (a.elements.length !== b.elements.length) return false;\n\n  for (var i = 0, il = a.elements.length; i < il; ++i) {\n    if (!shallowEqual(a.elements[i], b.elements[i])) return false;\n  }\n\n  return true;\n}\nexport function isDataLociEmpty(loci) {\n  return loci.elements.length === 0 ? true : false;\n}\nexport function DataLoci(tag, data, elements, getBoundingSphere, getLabel) {\n  return {\n    kind: 'data-loci',\n    tag: tag,\n    data: data,\n    elements: elements,\n    getBoundingSphere: getBoundingSphere,\n    getLabel: getLabel\n  };\n}\nexport { Loci };\nvar Loci;\n\n(function (Loci) {\n  var boundaryHelper = new BoundaryHelper('98');\n\n  function getBundleBoundingSphere(bundle) {\n    var spheres = bundle.loci.map(function (l) {\n      return getBoundingSphere(l);\n    }).filter(function (s) {\n      return !!s;\n    });\n    boundaryHelper.reset();\n\n    for (var _i = 0, spheres_1 = spheres; _i < spheres_1.length; _i++) {\n      var s = spheres_1[_i];\n      boundaryHelper.includePositionRadius(s.center, s.radius);\n    }\n\n    boundaryHelper.finishedIncludeStep();\n\n    for (var _a = 0, spheres_2 = spheres; _a < spheres_2.length; _a++) {\n      var s = spheres_2[_a];\n      boundaryHelper.radiusPositionRadius(s.center, s.radius);\n    }\n\n    return boundaryHelper.getSphere();\n  }\n\n  Loci.getBundleBoundingSphere = getBundleBoundingSphere;\n\n  function areEqual(lociA, lociB) {\n    if (isEveryLoci(lociA) && isEveryLoci(lociB)) return true;\n    if (isEmptyLoci(lociA) && isEmptyLoci(lociB)) return true;\n\n    if (isDataLoci(lociA) && isDataLoci(lociB)) {\n      return areDataLociEqual(lociA, lociB);\n    }\n\n    if (Structure.isLoci(lociA) && Structure.isLoci(lociB)) {\n      return Structure.areLociEqual(lociA, lociB);\n    }\n\n    if (StructureElement.Loci.is(lociA) && StructureElement.Loci.is(lociB)) {\n      return StructureElement.Loci.areEqual(lociA, lociB);\n    }\n\n    if (Bond.isLoci(lociA) && Bond.isLoci(lociB)) {\n      return Bond.areLociEqual(lociA, lociB);\n    }\n\n    if (Shape.isLoci(lociA) && Shape.isLoci(lociB)) {\n      return Shape.areLociEqual(lociA, lociB);\n    }\n\n    if (ShapeGroup.isLoci(lociA) && ShapeGroup.isLoci(lociB)) {\n      return ShapeGroup.areLociEqual(lociA, lociB);\n    }\n\n    if (Volume.isLoci(lociA) && Volume.isLoci(lociB)) {\n      return Volume.areLociEqual(lociA, lociB);\n    }\n\n    if (Volume.Isosurface.isLoci(lociA) && Volume.Isosurface.isLoci(lociB)) {\n      return Volume.Isosurface.areLociEqual(lociA, lociB);\n    }\n\n    if (Volume.Cell.isLoci(lociA) && Volume.Cell.isLoci(lociB)) {\n      return Volume.Cell.areLociEqual(lociA, lociB);\n    }\n\n    return false;\n  }\n\n  Loci.areEqual = areEqual;\n\n  function isEvery(loci) {\n    return !!loci && loci.kind === 'every-loci';\n  }\n\n  Loci.isEvery = isEvery;\n\n  function isEmpty(loci) {\n    if (isEveryLoci(loci)) return false;\n    if (isEmptyLoci(loci)) return true;\n    if (isDataLoci(loci)) return isDataLociEmpty(loci);\n    if (Structure.isLoci(loci)) return Structure.isLociEmpty(loci);\n    if (StructureElement.Loci.is(loci)) return StructureElement.Loci.isEmpty(loci);\n    if (Bond.isLoci(loci)) return Bond.isLociEmpty(loci);\n    if (Shape.isLoci(loci)) return Shape.isLociEmpty(loci);\n    if (ShapeGroup.isLoci(loci)) return ShapeGroup.isLociEmpty(loci);\n    if (Volume.isLoci(loci)) return Volume.isLociEmpty(loci);\n    if (Volume.Isosurface.isLoci(loci)) return Volume.Isosurface.isLociEmpty(loci);\n    if (Volume.Cell.isLoci(loci)) return Volume.Cell.isLociEmpty(loci);\n    return false;\n  }\n\n  Loci.isEmpty = isEmpty;\n\n  function remap(loci, data) {\n    if (data instanceof Structure) {\n      if (StructureElement.Loci.is(loci)) {\n        loci = StructureElement.Loci.remap(loci, data);\n      } else if (Structure.isLoci(loci)) {\n        loci = Structure.remapLoci(loci, data);\n      } else if (Bond.isLoci(loci)) {\n        loci = Bond.remapLoci(loci, data);\n      }\n    }\n\n    return loci;\n  }\n\n  Loci.remap = remap;\n\n  function getBoundingSphere(loci, boundingSphere) {\n    var _a;\n\n    if (loci.kind === 'every-loci' || loci.kind === 'empty-loci') return void 0;\n    if (!boundingSphere) boundingSphere = Sphere3D();\n\n    if (loci.kind === 'structure-loci') {\n      return Sphere3D.copy(boundingSphere, loci.structure.boundary.sphere);\n    } else if (loci.kind === 'element-loci') {\n      return Sphere3D.copy(boundingSphere, StructureElement.Loci.getBoundary(loci).sphere);\n    } else if (loci.kind === 'bond-loci') {\n      return Bond.getBoundingSphere(loci, boundingSphere);\n    } else if (loci.kind === 'shape-loci') {\n      return Sphere3D.copy(boundingSphere, loci.shape.geometry.boundingSphere);\n    } else if (loci.kind === 'group-loci') {\n      return ShapeGroup.getBoundingSphere(loci, boundingSphere);\n    } else if (loci.kind === 'data-loci') {\n      return (_a = loci.getBoundingSphere) === null || _a === void 0 ? void 0 : _a.call(loci, boundingSphere);\n    } else if (loci.kind === 'volume-loci') {\n      return Volume.getBoundingSphere(loci.volume, boundingSphere);\n    } else if (loci.kind === 'isosurface-loci') {\n      return Volume.Isosurface.getBoundingSphere(loci.volume, loci.isoValue, boundingSphere);\n    } else if (loci.kind === 'cell-loci') {\n      return Volume.Cell.getBoundingSphere(loci.volume, loci.indices, boundingSphere);\n    }\n  }\n\n  Loci.getBoundingSphere = getBoundingSphere;\n  var tmpSphere3D = Sphere3D.zero();\n\n  function getCenter(loci, center) {\n    var boundingSphere = getBoundingSphere(loci, tmpSphere3D);\n    return boundingSphere ? Vec3.copy(center || Vec3(), boundingSphere.center) : undefined;\n  }\n\n  Loci.getCenter = getCenter;\n\n  function getPrincipalAxes(loci) {\n    if (loci.kind === 'every-loci' || loci.kind === 'empty-loci') return void 0;\n\n    if (loci.kind === 'structure-loci') {\n      return StructureElement.Loci.getPrincipalAxes(Structure.toStructureElementLoci(loci.structure));\n    } else if (loci.kind === 'element-loci') {\n      return StructureElement.Loci.getPrincipalAxes(loci);\n    } else if (loci.kind === 'bond-loci') {\n      // TODO\n      return void 0;\n    } else if (loci.kind === 'shape-loci') {\n      // TODO\n      return void 0;\n    } else if (loci.kind === 'group-loci') {\n      // TODO\n      return void 0;\n    } else if (loci.kind === 'data-loci') {\n      // TODO maybe add loci.getPrincipalAxes()???\n      return void 0;\n    } else if (loci.kind === 'volume-loci') {\n      // TODO\n      return void 0;\n    } else if (loci.kind === 'isosurface-loci') {\n      // TODO\n      return void 0;\n    } else if (loci.kind === 'cell-loci') {\n      // TODO\n      return void 0;\n    }\n  }\n\n  Loci.getPrincipalAxes = getPrincipalAxes; //\n\n  var Granularity = {\n    'element': function (loci) {\n      return loci;\n    },\n    'residue': function (loci) {\n      return StructureElement.Loci.is(loci) ? StructureElement.Loci.extendToWholeResidues(loci, true) : loci;\n    },\n    'chain': function (loci) {\n      return StructureElement.Loci.is(loci) ? StructureElement.Loci.extendToWholeChains(loci) : loci;\n    },\n    'entity': function (loci) {\n      return StructureElement.Loci.is(loci) ? StructureElement.Loci.extendToWholeEntities(loci) : loci;\n    },\n    'model': function (loci) {\n      return StructureElement.Loci.is(loci) ? StructureElement.Loci.extendToWholeModels(loci) : loci;\n    },\n    'operator': function (loci) {\n      return StructureElement.Loci.is(loci) ? StructureElement.Loci.extendToWholeOperators(loci) : loci;\n    },\n    'structure': function (loci) {\n      return StructureElement.Loci.is(loci) ? Structure.toStructureElementLoci(loci.structure) : ShapeGroup.isLoci(loci) ? Shape.Loci(loci.shape) : loci;\n    },\n    'elementInstances': function (loci) {\n      return StructureElement.Loci.is(loci) ? StructureElement.Loci.extendToAllInstances(loci) : loci;\n    },\n    'residueInstances': function (loci) {\n      return StructureElement.Loci.is(loci) ? StructureElement.Loci.extendToAllInstances(StructureElement.Loci.extendToWholeResidues(loci, true)) : loci;\n    },\n    'chainInstances': function (loci) {\n      return StructureElement.Loci.is(loci) ? StructureElement.Loci.extendToAllInstances(StructureElement.Loci.extendToWholeChains(loci)) : loci;\n    }\n  };\n  Loci.GranularityOptions = ParamDefinition.objectToOptions(Granularity, function (k) {\n    switch (k) {\n      case 'element':\n        return 'Atom/Coarse Element';\n\n      case 'elementInstances':\n        return ['Atom/Coarse Element Instances', 'With Symmetry'];\n\n      case 'structure':\n        return 'Structure/Shape';\n\n      default:\n        return k.indexOf('Instances') ? [stringToWords(k), 'With Symmetry'] : stringToWords(k);\n    }\n  });\n  /** Exclude `Instances` granularity kinds */\n\n  function simpleGranularity(granularity) {\n    return granularity.replace('Instances', '');\n  }\n\n  Loci.simpleGranularity = simpleGranularity;\n\n  function applyGranularity(loci, granularity) {\n    return Granularity[granularity](loci);\n  }\n\n  Loci.applyGranularity = applyGranularity;\n  /**\r\n   * Converts structure related loci to StructureElement.Loci and applies\r\n   * granularity if given\r\n   */\n\n  function normalize(loci, granularity, alwaysConvertBonds) {\n    if (alwaysConvertBonds === void 0) {\n      alwaysConvertBonds = false;\n    }\n\n    if ((granularity !== 'element' || alwaysConvertBonds) && Bond.isLoci(loci)) {\n      // convert Bond.Loci to a StructureElement.Loci so granularity can be applied\n      loci = Bond.toStructureElementLoci(loci);\n    }\n\n    if (Structure.isLoci(loci)) {\n      // convert to StructureElement.Loci\n      loci = Structure.toStructureElementLoci(loci.structure);\n    }\n\n    if (StructureElement.Loci.is(loci)) {\n      // ensure the root structure is used\n      loci = StructureElement.Loci.remap(loci, loci.structure.root);\n    }\n\n    if (granularity) {\n      // needs to be applied AFTER remapping to root\n      loci = applyGranularity(loci, granularity);\n    }\n\n    return loci;\n  }\n\n  Loci.normalize = normalize;\n})(Loci || (Loci = {}));","map":{"version":3,"sources":["../../src/mol-model/loci.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { StructureElement } from './structure';\r\nimport { Bond } from './structure/structure/unit/bonds';\r\nimport { Shape, ShapeGroup } from './shape';\r\nimport { Sphere3D } from '../mol-math/geometry';\r\nimport { Vec3 } from '../mol-math/linear-algebra';\r\nimport { Structure } from './structure/structure';\r\nimport { ParamDefinition } from '../mol-util/param-definition';\r\nimport { shallowEqual } from '../mol-util';\r\nimport { BoundaryHelper } from '../mol-math/geometry/boundary-helper';\r\nimport { stringToWords } from '../mol-util/string';\r\nimport { Volume } from './volume/volume';\r\n/** A Loci that includes every loci */\r\nexport var EveryLoci = { kind: 'every-loci' };\r\nexport function isEveryLoci(x) {\r\n    return !!x && x.kind === 'every-loci';\r\n}\r\n/** A Loci that is empty */\r\nexport var EmptyLoci = { kind: 'empty-loci' };\r\nexport function isEmptyLoci(x) {\r\n    return !!x && x.kind === 'empty-loci';\r\n}\r\nexport function isDataLoci(x) {\r\n    return !!x && x.kind === 'data-loci';\r\n}\r\nexport function areDataLociEqual(a, b) {\r\n    // use shallowEqual to allow simple data objects that are contructed on-the-fly\r\n    if (!shallowEqual(a.data, b.data) || a.tag !== b.tag)\r\n        return false;\r\n    if (a.elements.length !== b.elements.length)\r\n        return false;\r\n    for (var i = 0, il = a.elements.length; i < il; ++i) {\r\n        if (!shallowEqual(a.elements[i], b.elements[i]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nexport function isDataLociEmpty(loci) {\r\n    return loci.elements.length === 0 ? true : false;\r\n}\r\nexport function DataLoci(tag, data, elements, getBoundingSphere, getLabel) {\r\n    return { kind: 'data-loci', tag: tag, data: data, elements: elements, getBoundingSphere: getBoundingSphere, getLabel: getLabel };\r\n}\r\nexport { Loci };\r\nvar Loci;\r\n(function (Loci) {\r\n    var boundaryHelper = new BoundaryHelper('98');\r\n    function getBundleBoundingSphere(bundle) {\r\n        var spheres = bundle.loci.map(function (l) { return getBoundingSphere(l); }).filter(function (s) { return !!s; });\r\n        boundaryHelper.reset();\r\n        for (var _i = 0, spheres_1 = spheres; _i < spheres_1.length; _i++) {\r\n            var s = spheres_1[_i];\r\n            boundaryHelper.includePositionRadius(s.center, s.radius);\r\n        }\r\n        boundaryHelper.finishedIncludeStep();\r\n        for (var _a = 0, spheres_2 = spheres; _a < spheres_2.length; _a++) {\r\n            var s = spheres_2[_a];\r\n            boundaryHelper.radiusPositionRadius(s.center, s.radius);\r\n        }\r\n        return boundaryHelper.getSphere();\r\n    }\r\n    Loci.getBundleBoundingSphere = getBundleBoundingSphere;\r\n    function areEqual(lociA, lociB) {\r\n        if (isEveryLoci(lociA) && isEveryLoci(lociB))\r\n            return true;\r\n        if (isEmptyLoci(lociA) && isEmptyLoci(lociB))\r\n            return true;\r\n        if (isDataLoci(lociA) && isDataLoci(lociB)) {\r\n            return areDataLociEqual(lociA, lociB);\r\n        }\r\n        if (Structure.isLoci(lociA) && Structure.isLoci(lociB)) {\r\n            return Structure.areLociEqual(lociA, lociB);\r\n        }\r\n        if (StructureElement.Loci.is(lociA) && StructureElement.Loci.is(lociB)) {\r\n            return StructureElement.Loci.areEqual(lociA, lociB);\r\n        }\r\n        if (Bond.isLoci(lociA) && Bond.isLoci(lociB)) {\r\n            return Bond.areLociEqual(lociA, lociB);\r\n        }\r\n        if (Shape.isLoci(lociA) && Shape.isLoci(lociB)) {\r\n            return Shape.areLociEqual(lociA, lociB);\r\n        }\r\n        if (ShapeGroup.isLoci(lociA) && ShapeGroup.isLoci(lociB)) {\r\n            return ShapeGroup.areLociEqual(lociA, lociB);\r\n        }\r\n        if (Volume.isLoci(lociA) && Volume.isLoci(lociB)) {\r\n            return Volume.areLociEqual(lociA, lociB);\r\n        }\r\n        if (Volume.Isosurface.isLoci(lociA) && Volume.Isosurface.isLoci(lociB)) {\r\n            return Volume.Isosurface.areLociEqual(lociA, lociB);\r\n        }\r\n        if (Volume.Cell.isLoci(lociA) && Volume.Cell.isLoci(lociB)) {\r\n            return Volume.Cell.areLociEqual(lociA, lociB);\r\n        }\r\n        return false;\r\n    }\r\n    Loci.areEqual = areEqual;\r\n    function isEvery(loci) {\r\n        return !!loci && loci.kind === 'every-loci';\r\n    }\r\n    Loci.isEvery = isEvery;\r\n    function isEmpty(loci) {\r\n        if (isEveryLoci(loci))\r\n            return false;\r\n        if (isEmptyLoci(loci))\r\n            return true;\r\n        if (isDataLoci(loci))\r\n            return isDataLociEmpty(loci);\r\n        if (Structure.isLoci(loci))\r\n            return Structure.isLociEmpty(loci);\r\n        if (StructureElement.Loci.is(loci))\r\n            return StructureElement.Loci.isEmpty(loci);\r\n        if (Bond.isLoci(loci))\r\n            return Bond.isLociEmpty(loci);\r\n        if (Shape.isLoci(loci))\r\n            return Shape.isLociEmpty(loci);\r\n        if (ShapeGroup.isLoci(loci))\r\n            return ShapeGroup.isLociEmpty(loci);\r\n        if (Volume.isLoci(loci))\r\n            return Volume.isLociEmpty(loci);\r\n        if (Volume.Isosurface.isLoci(loci))\r\n            return Volume.Isosurface.isLociEmpty(loci);\r\n        if (Volume.Cell.isLoci(loci))\r\n            return Volume.Cell.isLociEmpty(loci);\r\n        return false;\r\n    }\r\n    Loci.isEmpty = isEmpty;\r\n    function remap(loci, data) {\r\n        if (data instanceof Structure) {\r\n            if (StructureElement.Loci.is(loci)) {\r\n                loci = StructureElement.Loci.remap(loci, data);\r\n            }\r\n            else if (Structure.isLoci(loci)) {\r\n                loci = Structure.remapLoci(loci, data);\r\n            }\r\n            else if (Bond.isLoci(loci)) {\r\n                loci = Bond.remapLoci(loci, data);\r\n            }\r\n        }\r\n        return loci;\r\n    }\r\n    Loci.remap = remap;\r\n    function getBoundingSphere(loci, boundingSphere) {\r\n        var _a;\r\n        if (loci.kind === 'every-loci' || loci.kind === 'empty-loci')\r\n            return void 0;\r\n        if (!boundingSphere)\r\n            boundingSphere = Sphere3D();\r\n        if (loci.kind === 'structure-loci') {\r\n            return Sphere3D.copy(boundingSphere, loci.structure.boundary.sphere);\r\n        }\r\n        else if (loci.kind === 'element-loci') {\r\n            return Sphere3D.copy(boundingSphere, StructureElement.Loci.getBoundary(loci).sphere);\r\n        }\r\n        else if (loci.kind === 'bond-loci') {\r\n            return Bond.getBoundingSphere(loci, boundingSphere);\r\n        }\r\n        else if (loci.kind === 'shape-loci') {\r\n            return Sphere3D.copy(boundingSphere, loci.shape.geometry.boundingSphere);\r\n        }\r\n        else if (loci.kind === 'group-loci') {\r\n            return ShapeGroup.getBoundingSphere(loci, boundingSphere);\r\n        }\r\n        else if (loci.kind === 'data-loci') {\r\n            return (_a = loci.getBoundingSphere) === null || _a === void 0 ? void 0 : _a.call(loci, boundingSphere);\r\n        }\r\n        else if (loci.kind === 'volume-loci') {\r\n            return Volume.getBoundingSphere(loci.volume, boundingSphere);\r\n        }\r\n        else if (loci.kind === 'isosurface-loci') {\r\n            return Volume.Isosurface.getBoundingSphere(loci.volume, loci.isoValue, boundingSphere);\r\n        }\r\n        else if (loci.kind === 'cell-loci') {\r\n            return Volume.Cell.getBoundingSphere(loci.volume, loci.indices, boundingSphere);\r\n        }\r\n    }\r\n    Loci.getBoundingSphere = getBoundingSphere;\r\n    var tmpSphere3D = Sphere3D.zero();\r\n    function getCenter(loci, center) {\r\n        var boundingSphere = getBoundingSphere(loci, tmpSphere3D);\r\n        return boundingSphere ? Vec3.copy(center || Vec3(), boundingSphere.center) : undefined;\r\n    }\r\n    Loci.getCenter = getCenter;\r\n    function getPrincipalAxes(loci) {\r\n        if (loci.kind === 'every-loci' || loci.kind === 'empty-loci')\r\n            return void 0;\r\n        if (loci.kind === 'structure-loci') {\r\n            return StructureElement.Loci.getPrincipalAxes(Structure.toStructureElementLoci(loci.structure));\r\n        }\r\n        else if (loci.kind === 'element-loci') {\r\n            return StructureElement.Loci.getPrincipalAxes(loci);\r\n        }\r\n        else if (loci.kind === 'bond-loci') {\r\n            // TODO\r\n            return void 0;\r\n        }\r\n        else if (loci.kind === 'shape-loci') {\r\n            // TODO\r\n            return void 0;\r\n        }\r\n        else if (loci.kind === 'group-loci') {\r\n            // TODO\r\n            return void 0;\r\n        }\r\n        else if (loci.kind === 'data-loci') {\r\n            // TODO maybe add loci.getPrincipalAxes()???\r\n            return void 0;\r\n        }\r\n        else if (loci.kind === 'volume-loci') {\r\n            // TODO\r\n            return void 0;\r\n        }\r\n        else if (loci.kind === 'isosurface-loci') {\r\n            // TODO\r\n            return void 0;\r\n        }\r\n        else if (loci.kind === 'cell-loci') {\r\n            // TODO\r\n            return void 0;\r\n        }\r\n    }\r\n    Loci.getPrincipalAxes = getPrincipalAxes;\r\n    //\r\n    var Granularity = {\r\n        'element': function (loci) { return loci; },\r\n        'residue': function (loci) {\r\n            return StructureElement.Loci.is(loci)\r\n                ? StructureElement.Loci.extendToWholeResidues(loci, true)\r\n                : loci;\r\n        },\r\n        'chain': function (loci) {\r\n            return StructureElement.Loci.is(loci)\r\n                ? StructureElement.Loci.extendToWholeChains(loci)\r\n                : loci;\r\n        },\r\n        'entity': function (loci) {\r\n            return StructureElement.Loci.is(loci)\r\n                ? StructureElement.Loci.extendToWholeEntities(loci)\r\n                : loci;\r\n        },\r\n        'model': function (loci) {\r\n            return StructureElement.Loci.is(loci)\r\n                ? StructureElement.Loci.extendToWholeModels(loci)\r\n                : loci;\r\n        },\r\n        'operator': function (loci) {\r\n            return StructureElement.Loci.is(loci)\r\n                ? StructureElement.Loci.extendToWholeOperators(loci)\r\n                : loci;\r\n        },\r\n        'structure': function (loci) {\r\n            return StructureElement.Loci.is(loci)\r\n                ? Structure.toStructureElementLoci(loci.structure)\r\n                : ShapeGroup.isLoci(loci)\r\n                    ? Shape.Loci(loci.shape)\r\n                    : loci;\r\n        },\r\n        'elementInstances': function (loci) {\r\n            return StructureElement.Loci.is(loci)\r\n                ? StructureElement.Loci.extendToAllInstances(loci)\r\n                : loci;\r\n        },\r\n        'residueInstances': function (loci) {\r\n            return StructureElement.Loci.is(loci)\r\n                ? StructureElement.Loci.extendToAllInstances(StructureElement.Loci.extendToWholeResidues(loci, true))\r\n                : loci;\r\n        },\r\n        'chainInstances': function (loci) {\r\n            return StructureElement.Loci.is(loci)\r\n                ? StructureElement.Loci.extendToAllInstances(StructureElement.Loci.extendToWholeChains(loci))\r\n                : loci;\r\n        },\r\n    };\r\n    Loci.GranularityOptions = ParamDefinition.objectToOptions(Granularity, function (k) {\r\n        switch (k) {\r\n            case 'element': return 'Atom/Coarse Element';\r\n            case 'elementInstances': return ['Atom/Coarse Element Instances', 'With Symmetry'];\r\n            case 'structure': return 'Structure/Shape';\r\n            default: return k.indexOf('Instances')\r\n                ? [stringToWords(k), 'With Symmetry'] : stringToWords(k);\r\n        }\r\n    });\r\n    /** Exclude `Instances` granularity kinds */\r\n    function simpleGranularity(granularity) {\r\n        return granularity.replace('Instances', '');\r\n    }\r\n    Loci.simpleGranularity = simpleGranularity;\r\n    function applyGranularity(loci, granularity) {\r\n        return Granularity[granularity](loci);\r\n    }\r\n    Loci.applyGranularity = applyGranularity;\r\n    /**\r\n     * Converts structure related loci to StructureElement.Loci and applies\r\n     * granularity if given\r\n     */\r\n    function normalize(loci, granularity, alwaysConvertBonds) {\r\n        if (alwaysConvertBonds === void 0) { alwaysConvertBonds = false; }\r\n        if ((granularity !== 'element' || alwaysConvertBonds) && Bond.isLoci(loci)) {\r\n            // convert Bond.Loci to a StructureElement.Loci so granularity can be applied\r\n            loci = Bond.toStructureElementLoci(loci);\r\n        }\r\n        if (Structure.isLoci(loci)) {\r\n            // convert to StructureElement.Loci\r\n            loci = Structure.toStructureElementLoci(loci.structure);\r\n        }\r\n        if (StructureElement.Loci.is(loci)) {\r\n            // ensure the root structure is used\r\n            loci = StructureElement.Loci.remap(loci, loci.structure.root);\r\n        }\r\n        if (granularity) {\r\n            // needs to be applied AFTER remapping to root\r\n            loci = applyGranularity(loci, granularity);\r\n        }\r\n        return loci;\r\n    }\r\n    Loci.normalize = normalize;\r\n})(Loci || (Loci = {}));\r\n//# sourceMappingURL=loci.js.map"]},"metadata":{},"sourceType":"module"}