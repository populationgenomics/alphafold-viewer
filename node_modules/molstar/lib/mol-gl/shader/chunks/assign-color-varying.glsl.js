export var assign_color_varying = "\n#if defined(dRenderVariant_color)\n    #if defined(dColorType_attribute)\n        vColor.rgb = aColor;\n    #elif defined(dColorType_instance)\n        vColor.rgb = readFromTexture(tColor, aInstance, uColorTexDim).rgb;\n    #elif defined(dColorType_group)\n        vColor.rgb = readFromTexture(tColor, group, uColorTexDim).rgb;\n    #elif defined(dColorType_groupInstance)\n        vColor.rgb = readFromTexture(tColor, aInstance * float(uGroupCount) + group, uColorTexDim).rgb;\n    #elif defined(dColorType_vertex)\n        vColor.rgb = readFromTexture(tColor, VertexID, uColorTexDim).rgb;\n    #elif defined(dColorType_vertexInstance)\n        vColor.rgb = readFromTexture(tColor, int(aInstance) * uVertexCount + VertexID, uColorTexDim).rgb;\n    #elif defined(dColorType_volume)\n        vec3 gridPos = (uColorGridTransform.w * (position - uColorGridTransform.xyz)) / uColorGridDim;\n        vColor.rgb = texture3dFrom2dLinear(tColorGrid, gridPos, uColorGridDim, uColorTexDim).rgb;\n    #elif defined(dColorType_volumeInstance)\n        vec3 gridPos = (uColorGridTransform.w * (vModelPosition - uColorGridTransform.xyz)) / uColorGridDim;\n        vColor.rgb = texture3dFrom2dLinear(tColorGrid, gridPos, uColorGridDim, uColorTexDim).rgb;\n    #endif\n\n    #ifdef dUsePalette\n        vPaletteV = ((vColor.r * 256.0 * 256.0 * 255.0 + vColor.g * 256.0 * 255.0 + vColor.b * 255.0) - 1.0) / 16777215.0;\n    #endif\n\n    #ifdef dOverpaint\n        vOverpaint = readFromTexture(tOverpaint, aInstance * float(uGroupCount) + group, uOverpaintTexDim);\n    #endif\n#elif defined(dRenderVariant_pick)\n    #if defined(dRenderVariant_pickObject)\n        vColor = vec4(encodeFloatRGB(float(uObjectId)), 1.0);\n    #elif defined(dRenderVariant_pickInstance)\n        vColor = vec4(encodeFloatRGB(aInstance), 1.0);\n    #elif defined(dRenderVariant_pickGroup)\n        vColor = vec4(encodeFloatRGB(group), 1.0);\n    #endif\n#endif\n\n#ifdef dTransparency\n    vGroup = group;\n    vTransparency = readFromTexture(tTransparency, aInstance * float(uGroupCount) + group, uTransparencyTexDim).a;\n#endif\n";
//# sourceMappingURL=assign-color-varying.glsl.js.map