{"ast":null,"code":"/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { createPrimitive } from './primitive';\nimport { createCage } from './cage';\nvar t = (1 + Math.sqrt(5)) / 2;\nvar icosahedronVertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\nvar icosahedronIndices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\nvar icosahedronEdges = [0, 11, 5, 11, 0, 5, 1, 5, 0, 1, 1, 7, 0, 7, 7, 10, 0, 10, 10, 11, 5, 9, 4, 11, 2, 10, 6, 7, 1, 8, 3, 9, 4, 9, 3, 4, 2, 4, 2, 3, 2, 6, 3, 6, 6, 8, 3, 8, 8, 9, 4, 5, 2, 11, 6, 10, 7, 8, 1, 9];\nvar icosahedron;\nexport function Icosahedron() {\n  if (!icosahedron) icosahedron = createPrimitive(icosahedronVertices, icosahedronIndices);\n  return icosahedron;\n}\nvar icosahedronCage = createCage(icosahedronVertices, icosahedronEdges);\nexport function IcosahedronCage() {\n  return icosahedronCage;\n}","map":{"version":3,"sources":["../../../src/mol-geo/primitive/icosahedron.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { createPrimitive } from './primitive';\r\nimport { createCage } from './cage';\r\nvar t = (1 + Math.sqrt(5)) / 2;\r\nvar icosahedronVertices = [\r\n    -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0,\r\n    0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t,\r\n    t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1\r\n];\r\nvar icosahedronIndices = [\r\n    0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11,\r\n    1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8,\r\n    3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9,\r\n    4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1\r\n];\r\nvar icosahedronEdges = [\r\n    0, 11, 5, 11, 0, 5, 1, 5, 0, 1, 1, 7, 0, 7, 7, 10, 0, 10, 10, 11,\r\n    5, 9, 4, 11, 2, 10, 6, 7, 1, 8, 3, 9, 4, 9, 3, 4, 2, 4, 2, 3,\r\n    2, 6, 3, 6, 6, 8, 3, 8, 8, 9, 4, 5, 2, 11, 6, 10, 7, 8, 1, 9\r\n];\r\nvar icosahedron;\r\nexport function Icosahedron() {\r\n    if (!icosahedron)\r\n        icosahedron = createPrimitive(icosahedronVertices, icosahedronIndices);\r\n    return icosahedron;\r\n}\r\nvar icosahedronCage = createCage(icosahedronVertices, icosahedronEdges);\r\nexport function IcosahedronCage() {\r\n    return icosahedronCage;\r\n}\r\n//# sourceMappingURL=icosahedron.js.map"]},"metadata":{},"sourceType":"module"}