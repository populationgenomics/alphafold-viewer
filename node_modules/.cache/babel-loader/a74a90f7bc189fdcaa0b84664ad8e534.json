{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { TokenBuilder } from '../../mol-io/reader/common/text/tokenizer';\nexport function guessElementSymbolTokens(tokens, str, start, end) {\n  var s = start,\n      e = end - 1; // trim spaces and numbers\n\n  var c = str.charCodeAt(s);\n\n  while ((c === 32 || c >= 48 && c <= 57) && s <= e) c = str.charCodeAt(++s);\n\n  c = str.charCodeAt(e);\n\n  while ((c === 32 || c >= 48 && c <= 57) && e >= s) c = str.charCodeAt(--e);\n\n  ++e;\n  if (s === e) return TokenBuilder.add(tokens, s, e); // empty\n\n  if (s + 1 === e) return TokenBuilder.add(tokens, s, e); // one char\n\n  c = str.charCodeAt(s);\n\n  if (s + 2 === e) {\n    // two chars\n    var c2 = str.charCodeAt(s + 1);\n    if ((c === 78 || c === 110) && (c2 === 65 || c2 === 97) || // NA na Na nA\n    (c === 67 || c === 99) && (c2 === 76 || c2 === 108) || // CL\n    (c === 70 || c === 102) && (c2 === 69 || c2 === 101) || // FE\n    (c === 83 || c === 115) && (c2 === 73 || c2 === 105) || // SI\n    (c === 66 || c === 98) && (c2 === 82 || c2 === 114) || // BR\n    (c === 65 || c === 97) && (c2 === 83 || c2 === 115) // AS\n    ) return TokenBuilder.add(tokens, s, s + 2);\n  }\n\n  if (c === 67 || c === 99 || // C c\n  c === 72 || c === 104 || // H h\n  c === 78 || c === 110 || // N n\n  c === 79 || c === 111 || // O o\n  c === 80 || c === 112 || // P p\n  c === 83 || c === 115 // S s\n  ) return TokenBuilder.add(tokens, s, s + 1);\n  TokenBuilder.add(tokens, s, s); // no reasonable guess, add empty token\n}\nvar reTrimSpacesAndNumbers = /^[\\s\\d]+|[\\s\\d]+$/g;\nexport function guessElementSymbolString(str) {\n  // trim spaces and numbers, convert to upper case\n  str = str.replace(reTrimSpacesAndNumbers, '').toUpperCase();\n  var l = str.length;\n  if (l === 0) return str; // empty\n\n  if (l === 1) return str; // one char\n\n  if (l === 2) {\n    // two chars\n    if (str === 'NA' || str === 'CL' || str === 'FE' || str === 'SI' || str === 'BR' || str === 'AS') return str;\n  }\n\n  if (l === 3) {\n    // three chars\n    if (str === 'SOD') return 'NA';\n    if (str === 'POT') return 'K';\n    if (str === 'CES') return 'CS';\n    if (str === 'CAL') return 'CA';\n    if (str === 'CLA') return 'CL';\n  }\n\n  var c = str[0];\n  if (c === 'C' || c === 'H' || c === 'N' || c === 'O' || c === 'P' || c === 'S') return c;\n  return ''; // no reasonable guess, return empty string\n}","map":{"version":3,"sources":["../../../src/mol-model-formats/structure/util.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { TokenBuilder } from '../../mol-io/reader/common/text/tokenizer';\r\nexport function guessElementSymbolTokens(tokens, str, start, end) {\r\n    var s = start, e = end - 1;\r\n    // trim spaces and numbers\r\n    var c = str.charCodeAt(s);\r\n    while ((c === 32 || (c >= 48 && c <= 57)) && s <= e)\r\n        c = str.charCodeAt(++s);\r\n    c = str.charCodeAt(e);\r\n    while ((c === 32 || (c >= 48 && c <= 57)) && e >= s)\r\n        c = str.charCodeAt(--e);\r\n    ++e;\r\n    if (s === e)\r\n        return TokenBuilder.add(tokens, s, e); // empty\r\n    if (s + 1 === e)\r\n        return TokenBuilder.add(tokens, s, e); // one char\r\n    c = str.charCodeAt(s);\r\n    if (s + 2 === e) { // two chars\r\n        var c2 = str.charCodeAt(s + 1);\r\n        if (((c === 78 || c === 110) && (c2 === 65 || c2 === 97)) || // NA na Na nA\r\n            ((c === 67 || c === 99) && (c2 === 76 || c2 === 108)) || // CL\r\n            ((c === 70 || c === 102) && (c2 === 69 || c2 === 101)) || // FE\r\n            ((c === 83 || c === 115) && (c2 === 73 || c2 === 105)) || // SI\r\n            ((c === 66 || c === 98) && (c2 === 82 || c2 === 114)) || // BR\r\n            ((c === 65 || c === 97) && (c2 === 83 || c2 === 115)) // AS\r\n        )\r\n            return TokenBuilder.add(tokens, s, s + 2);\r\n    }\r\n    if (c === 67 || c === 99 || // C c\r\n        c === 72 || c === 104 || // H h\r\n        c === 78 || c === 110 || // N n\r\n        c === 79 || c === 111 || // O o\r\n        c === 80 || c === 112 || // P p\r\n        c === 83 || c === 115 // S s\r\n    )\r\n        return TokenBuilder.add(tokens, s, s + 1);\r\n    TokenBuilder.add(tokens, s, s); // no reasonable guess, add empty token\r\n}\r\nvar reTrimSpacesAndNumbers = /^[\\s\\d]+|[\\s\\d]+$/g;\r\nexport function guessElementSymbolString(str) {\r\n    // trim spaces and numbers, convert to upper case\r\n    str = str.replace(reTrimSpacesAndNumbers, '').toUpperCase();\r\n    var l = str.length;\r\n    if (l === 0)\r\n        return str; // empty\r\n    if (l === 1)\r\n        return str; // one char\r\n    if (l === 2) { // two chars\r\n        if (str === 'NA' || str === 'CL' || str === 'FE' || str === 'SI' ||\r\n            str === 'BR' || str === 'AS')\r\n            return str;\r\n    }\r\n    if (l === 3) { // three chars\r\n        if (str === 'SOD')\r\n            return 'NA';\r\n        if (str === 'POT')\r\n            return 'K';\r\n        if (str === 'CES')\r\n            return 'CS';\r\n        if (str === 'CAL')\r\n            return 'CA';\r\n        if (str === 'CLA')\r\n            return 'CL';\r\n    }\r\n    var c = str[0];\r\n    if (c === 'C' || c === 'H' || c === 'N' || c === 'O' || c === 'P' || c === 'S')\r\n        return c;\r\n    return ''; // no reasonable guess, return empty string\r\n}\r\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}