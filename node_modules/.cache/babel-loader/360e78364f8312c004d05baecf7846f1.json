{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { createRenderable } from '../renderable';\nimport { createGraphicsRenderItem } from '../webgl/render-item';\nimport { AttributeSpec, UniformSpec, GlobalUniformSchema, InternalSchema, TextureSpec, ElementsSpec, DefineSpec, GlobalTextureSchema, BaseSchema } from './schema';\nimport { DirectVolumeShaderCode } from '../shader-code';\nimport { ValueCell } from '../../mol-util';\nexport var DirectVolumeSchema = __assign(__assign({}, BaseSchema), {\n  aPosition: AttributeSpec('float32', 3, 0),\n  elements: ElementsSpec('uint32'),\n  uColor: UniformSpec('v3'),\n  uColorTexDim: UniformSpec('v2'),\n  tColor: TextureSpec('image-uint8', 'rgb', 'ubyte', 'nearest'),\n  dColorType: DefineSpec('string', ['uniform', 'attribute', 'instance', 'group', 'groupInstance', 'vertex', 'vertexInstance']),\n  uIsoValue: UniformSpec('v2'),\n  uBboxMin: UniformSpec('v3'),\n  uBboxMax: UniformSpec('v3'),\n  uBboxSize: UniformSpec('v3'),\n  uMaxSteps: UniformSpec('i'),\n  uStepScale: UniformSpec('f'),\n  uJumpLength: UniformSpec('f'),\n  uTransform: UniformSpec('m4'),\n  uGridDim: UniformSpec('v3'),\n  dRenderMode: DefineSpec('string', ['isosurface', 'volume']),\n  dSingleLayer: DefineSpec('boolean'),\n  tTransferTex: TextureSpec('image-uint8', 'rgba', 'ubyte', 'linear'),\n  uTransferScale: UniformSpec('f'),\n  dGridTexType: DefineSpec('string', ['2d', '3d']),\n  uGridTexDim: UniformSpec('v3'),\n  tGridTex: TextureSpec('texture', 'rgba', 'ubyte', 'linear'),\n  uGridStats: UniformSpec('v4'),\n  uCellDim: UniformSpec('v3'),\n  uCartnToUnit: UniformSpec('m4'),\n  uUnitToCartn: UniformSpec('m4'),\n  dPackedGroup: DefineSpec('boolean'),\n  dDoubleSided: DefineSpec('boolean'),\n  dFlipSided: DefineSpec('boolean'),\n  dFlatShaded: DefineSpec('boolean'),\n  dIgnoreLight: DefineSpec('boolean'),\n  dXrayShaded: DefineSpec('boolean')\n});\nexport function DirectVolumeRenderable(ctx, id, values, state, materialId) {\n  var schema = __assign(__assign(__assign(__assign({}, GlobalUniformSchema), GlobalTextureSchema), InternalSchema), DirectVolumeSchema);\n\n  if (!ctx.isWebGL2) {\n    // workaround for webgl1 limitation that loop counters need to be `const`\n    schema.uMaxSteps = DefineSpec('number');\n  }\n\n  var internalValues = {\n    uObjectId: ValueCell.create(id)\n  };\n  var shaderCode = DirectVolumeShaderCode;\n  var renderItem = createGraphicsRenderItem(ctx, 'triangles', shaderCode, schema, __assign(__assign({}, values), internalValues), materialId);\n  return createRenderable(renderItem, values, state);\n}","map":{"version":3,"sources":["../../../src/mol-gl/renderable/direct-volume.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { createRenderable } from '../renderable';\r\nimport { createGraphicsRenderItem } from '../webgl/render-item';\r\nimport { AttributeSpec, UniformSpec, GlobalUniformSchema, InternalSchema, TextureSpec, ElementsSpec, DefineSpec, GlobalTextureSchema, BaseSchema } from './schema';\r\nimport { DirectVolumeShaderCode } from '../shader-code';\r\nimport { ValueCell } from '../../mol-util';\r\nexport var DirectVolumeSchema = __assign(__assign({}, BaseSchema), { aPosition: AttributeSpec('float32', 3, 0), elements: ElementsSpec('uint32'), uColor: UniformSpec('v3'), uColorTexDim: UniformSpec('v2'), tColor: TextureSpec('image-uint8', 'rgb', 'ubyte', 'nearest'), dColorType: DefineSpec('string', ['uniform', 'attribute', 'instance', 'group', 'groupInstance', 'vertex', 'vertexInstance']), uIsoValue: UniformSpec('v2'), uBboxMin: UniformSpec('v3'), uBboxMax: UniformSpec('v3'), uBboxSize: UniformSpec('v3'), uMaxSteps: UniformSpec('i'), uStepScale: UniformSpec('f'), uJumpLength: UniformSpec('f'), uTransform: UniformSpec('m4'), uGridDim: UniformSpec('v3'), dRenderMode: DefineSpec('string', ['isosurface', 'volume']), dSingleLayer: DefineSpec('boolean'), tTransferTex: TextureSpec('image-uint8', 'rgba', 'ubyte', 'linear'), uTransferScale: UniformSpec('f'), dGridTexType: DefineSpec('string', ['2d', '3d']), uGridTexDim: UniformSpec('v3'), tGridTex: TextureSpec('texture', 'rgba', 'ubyte', 'linear'), uGridStats: UniformSpec('v4'), uCellDim: UniformSpec('v3'), uCartnToUnit: UniformSpec('m4'), uUnitToCartn: UniformSpec('m4'), dPackedGroup: DefineSpec('boolean'), dDoubleSided: DefineSpec('boolean'), dFlipSided: DefineSpec('boolean'), dFlatShaded: DefineSpec('boolean'), dIgnoreLight: DefineSpec('boolean'), dXrayShaded: DefineSpec('boolean') });\r\nexport function DirectVolumeRenderable(ctx, id, values, state, materialId) {\r\n    var schema = __assign(__assign(__assign(__assign({}, GlobalUniformSchema), GlobalTextureSchema), InternalSchema), DirectVolumeSchema);\r\n    if (!ctx.isWebGL2) {\r\n        // workaround for webgl1 limitation that loop counters need to be `const`\r\n        schema.uMaxSteps = DefineSpec('number');\r\n    }\r\n    var internalValues = {\r\n        uObjectId: ValueCell.create(id),\r\n    };\r\n    var shaderCode = DirectVolumeShaderCode;\r\n    var renderItem = createGraphicsRenderItem(ctx, 'triangles', shaderCode, schema, __assign(__assign({}, values), internalValues), materialId);\r\n    return createRenderable(renderItem, values, state);\r\n}\r\n//# sourceMappingURL=direct-volume.js.map"]},"metadata":{},"sourceType":"module"}