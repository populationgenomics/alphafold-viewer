{"ast":null,"code":"/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { Volume } from '../../mol-model/volume';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nexport function createVolumeRepresentationParams(ctx, volume, props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var p = props;\n  if (typeof p.type === 'string' || typeof p.color === 'string' || typeof p.size === 'string') return createParamsByName(ctx, volume || Volume.One, props);\n  return createParamsProvider(ctx, volume || Volume.One, props);\n}\nexport function getVolumeThemeTypes(ctx, volume) {\n  var themeCtx = ctx.representation.volume.themes;\n  if (!volume) return themeCtx.colorThemeRegistry.types;\n  return themeCtx.colorThemeRegistry.getApplicableTypes({\n    volume: volume\n  });\n}\nexport function createVolumeColorThemeParams(ctx, volume, typeName, themeName, params) {\n  var _a = ctx.representation.volume,\n      registry = _a.registry,\n      themes = _a.themes;\n  var repr = registry.get(typeName || registry.default.name);\n  var color = themes.colorThemeRegistry.get(themeName || repr.defaultColorTheme.name);\n  var colorDefaultParams = PD.getDefaultValues(color.getParams({\n    volume: volume || Volume.One\n  }));\n  if (color.name === repr.defaultColorTheme.name) Object.assign(colorDefaultParams, repr.defaultColorTheme.props);\n  return {\n    name: color.name,\n    params: Object.assign(colorDefaultParams, params)\n  };\n}\nexport function createVolumeSizeThemeParams(ctx, volume, typeName, themeName, params) {\n  var _a = ctx.representation.volume,\n      registry = _a.registry,\n      themes = _a.themes;\n  var repr = registry.get(typeName || registry.default.name);\n  var size = themes.sizeThemeRegistry.get(themeName || repr.defaultSizeTheme.name);\n  var sizeDefaultParams = PD.getDefaultValues(size.getParams({\n    volume: volume || Volume.One\n  }));\n  if (size.name === repr.defaultSizeTheme.name) Object.assign(sizeDefaultParams, repr.defaultSizeTheme.props);\n  return {\n    name: size.name,\n    params: Object.assign(sizeDefaultParams, params)\n  };\n}\n\nfunction createParamsByName(ctx, volume, props) {\n  var typeProvider = props.type && ctx.representation.volume.registry.get(props.type) || ctx.representation.volume.registry.default.provider;\n  var colorProvider = props.color && ctx.representation.volume.themes.colorThemeRegistry.get(props.color) || ctx.representation.volume.themes.colorThemeRegistry.get(typeProvider.defaultColorTheme.name);\n  var sizeProvider = props.size && ctx.representation.volume.themes.sizeThemeRegistry.get(props.size) || ctx.representation.volume.themes.sizeThemeRegistry.get(typeProvider.defaultSizeTheme.name);\n  return createParamsProvider(ctx, volume, {\n    type: typeProvider,\n    typeParams: props.typeParams,\n    color: colorProvider,\n    colorParams: props.colorParams,\n    size: sizeProvider,\n    sizeParams: props.sizeParams\n  });\n}\n\nfunction createParamsProvider(ctx, volume, props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var themeCtx = ctx.representation.volume.themes;\n  var themeDataCtx = {\n    volume: volume\n  };\n  var repr = props.type || ctx.representation.volume.registry.default.provider;\n  var reprDefaultParams = PD.getDefaultValues(repr.getParams(themeCtx, volume));\n  var reprParams = Object.assign(reprDefaultParams, props.typeParams);\n  var color = props.color || themeCtx.colorThemeRegistry.get(repr.defaultColorTheme.name);\n  var colorDefaultParams = PD.getDefaultValues(color.getParams(themeDataCtx));\n  if (color.name === repr.defaultColorTheme.name) Object.assign(colorDefaultParams, repr.defaultColorTheme.props);\n  var colorParams = Object.assign(colorDefaultParams, props.colorParams);\n  var size = props.size || themeCtx.sizeThemeRegistry.get(repr.defaultSizeTheme.name);\n  var sizeDefaultParams = PD.getDefaultValues(size.getParams(themeDataCtx));\n  if (size.name === repr.defaultSizeTheme.name) Object.assign(sizeDefaultParams, repr.defaultSizeTheme.props);\n  var sizeParams = Object.assign(sizeDefaultParams, props.sizeParams);\n  return {\n    type: {\n      name: repr.name,\n      params: reprParams\n    },\n    colorTheme: {\n      name: color.name,\n      params: colorParams\n    },\n    sizeTheme: {\n      name: size.name,\n      params: sizeParams\n    }\n  };\n}","map":{"version":3,"sources":["../../../src/mol-plugin-state/helpers/volume-representation-params.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { Volume } from '../../mol-model/volume';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nexport function createVolumeRepresentationParams(ctx, volume, props) {\r\n    if (props === void 0) { props = {}; }\r\n    var p = props;\r\n    if (typeof p.type === 'string' || typeof p.color === 'string' || typeof p.size === 'string')\r\n        return createParamsByName(ctx, volume || Volume.One, props);\r\n    return createParamsProvider(ctx, volume || Volume.One, props);\r\n}\r\nexport function getVolumeThemeTypes(ctx, volume) {\r\n    var themeCtx = ctx.representation.volume.themes;\r\n    if (!volume)\r\n        return themeCtx.colorThemeRegistry.types;\r\n    return themeCtx.colorThemeRegistry.getApplicableTypes({ volume: volume });\r\n}\r\nexport function createVolumeColorThemeParams(ctx, volume, typeName, themeName, params) {\r\n    var _a = ctx.representation.volume, registry = _a.registry, themes = _a.themes;\r\n    var repr = registry.get(typeName || registry.default.name);\r\n    var color = themes.colorThemeRegistry.get(themeName || repr.defaultColorTheme.name);\r\n    var colorDefaultParams = PD.getDefaultValues(color.getParams({ volume: volume || Volume.One }));\r\n    if (color.name === repr.defaultColorTheme.name)\r\n        Object.assign(colorDefaultParams, repr.defaultColorTheme.props);\r\n    return { name: color.name, params: Object.assign(colorDefaultParams, params) };\r\n}\r\nexport function createVolumeSizeThemeParams(ctx, volume, typeName, themeName, params) {\r\n    var _a = ctx.representation.volume, registry = _a.registry, themes = _a.themes;\r\n    var repr = registry.get(typeName || registry.default.name);\r\n    var size = themes.sizeThemeRegistry.get(themeName || repr.defaultSizeTheme.name);\r\n    var sizeDefaultParams = PD.getDefaultValues(size.getParams({ volume: volume || Volume.One }));\r\n    if (size.name === repr.defaultSizeTheme.name)\r\n        Object.assign(sizeDefaultParams, repr.defaultSizeTheme.props);\r\n    return { name: size.name, params: Object.assign(sizeDefaultParams, params) };\r\n}\r\nfunction createParamsByName(ctx, volume, props) {\r\n    var typeProvider = (props.type && ctx.representation.volume.registry.get(props.type))\r\n        || ctx.representation.volume.registry.default.provider;\r\n    var colorProvider = (props.color && ctx.representation.volume.themes.colorThemeRegistry.get(props.color))\r\n        || ctx.representation.volume.themes.colorThemeRegistry.get(typeProvider.defaultColorTheme.name);\r\n    var sizeProvider = (props.size && ctx.representation.volume.themes.sizeThemeRegistry.get(props.size))\r\n        || ctx.representation.volume.themes.sizeThemeRegistry.get(typeProvider.defaultSizeTheme.name);\r\n    return createParamsProvider(ctx, volume, {\r\n        type: typeProvider,\r\n        typeParams: props.typeParams,\r\n        color: colorProvider,\r\n        colorParams: props.colorParams,\r\n        size: sizeProvider,\r\n        sizeParams: props.sizeParams\r\n    });\r\n}\r\nfunction createParamsProvider(ctx, volume, props) {\r\n    if (props === void 0) { props = {}; }\r\n    var themeCtx = ctx.representation.volume.themes;\r\n    var themeDataCtx = { volume: volume };\r\n    var repr = props.type || ctx.representation.volume.registry.default.provider;\r\n    var reprDefaultParams = PD.getDefaultValues(repr.getParams(themeCtx, volume));\r\n    var reprParams = Object.assign(reprDefaultParams, props.typeParams);\r\n    var color = props.color || themeCtx.colorThemeRegistry.get(repr.defaultColorTheme.name);\r\n    var colorDefaultParams = PD.getDefaultValues(color.getParams(themeDataCtx));\r\n    if (color.name === repr.defaultColorTheme.name)\r\n        Object.assign(colorDefaultParams, repr.defaultColorTheme.props);\r\n    var colorParams = Object.assign(colorDefaultParams, props.colorParams);\r\n    var size = props.size || themeCtx.sizeThemeRegistry.get(repr.defaultSizeTheme.name);\r\n    var sizeDefaultParams = PD.getDefaultValues(size.getParams(themeDataCtx));\r\n    if (size.name === repr.defaultSizeTheme.name)\r\n        Object.assign(sizeDefaultParams, repr.defaultSizeTheme.props);\r\n    var sizeParams = Object.assign(sizeDefaultParams, props.sizeParams);\r\n    return ({\r\n        type: { name: repr.name, params: reprParams },\r\n        colorTheme: { name: color.name, params: colorParams },\r\n        sizeTheme: { name: size.name, params: sizeParams }\r\n    });\r\n}\r\n//# sourceMappingURL=volume-representation-params.js.map"]},"metadata":{},"sourceType":"module"}