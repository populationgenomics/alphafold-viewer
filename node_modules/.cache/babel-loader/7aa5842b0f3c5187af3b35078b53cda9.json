{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Vec3, Mat4 } from '../../../../mol-math/linear-algebra';\nimport { Axes3D } from '../../../../mol-math/geometry';\nimport { MeshBuilder } from '../mesh-builder';\nimport { addCylinder } from './cylinder';\nimport { addSphere } from './sphere';\nimport { createCage } from '../../../primitive/cage';\nvar tmpStart = Vec3.zero();\nvar tmpEnd = Vec3.zero();\nvar cylinderProps = {};\nexport function addBoundingBox(state, box, radius, detail, radialSegments) {\n  var min = box.min,\n      max = box.max;\n  cylinderProps.radiusTop = radius;\n  cylinderProps.radiusBottom = radius;\n  cylinderProps.radialSegments = radialSegments;\n  Vec3.set(tmpStart, max[0], max[1], max[2]);\n  addSphere(state, tmpStart, radius, detail);\n  Vec3.set(tmpEnd, max[0], max[1], min[2]);\n  addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\n  Vec3.set(tmpEnd, max[0], min[1], max[2]);\n  addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\n  Vec3.set(tmpEnd, min[0], max[1], max[2]);\n  addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\n  Vec3.set(tmpStart, min[0], min[1], min[2]);\n  addSphere(state, tmpStart, radius, detail);\n  Vec3.set(tmpEnd, min[0], min[1], max[2]);\n  addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\n  Vec3.set(tmpEnd, min[0], max[1], min[2]);\n  addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\n  Vec3.set(tmpEnd, max[0], min[1], min[2]);\n  addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\n  Vec3.set(tmpStart, max[0], min[1], min[2]);\n  addSphere(state, tmpStart, radius, detail);\n  Vec3.set(tmpEnd, max[0], min[1], max[2]);\n  addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\n  Vec3.set(tmpEnd, max[0], max[1], min[2]);\n  addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\n  Vec3.set(tmpStart, min[0], min[1], max[2]);\n  addSphere(state, tmpStart, radius, detail);\n  Vec3.set(tmpEnd, min[0], max[1], max[2]);\n  addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\n  Vec3.set(tmpEnd, max[0], min[1], max[2]);\n  addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\n  Vec3.set(tmpStart, min[0], max[1], min[2]);\n  addSphere(state, tmpStart, radius, detail);\n  Vec3.set(tmpEnd, max[0], max[1], min[2]);\n  addSphere(state, tmpEnd, radius, detail);\n  addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\n  Vec3.set(tmpEnd, min[0], max[1], max[2]);\n  addSphere(state, tmpEnd, radius, detail);\n  addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\n} //\n\nvar tmpBoxVecCorner = Vec3();\nvar tmpBoxVecA = Vec3();\nvar tmpBoxVecB = Vec3();\nvar tmpBoxVecC = Vec3();\nvar tmpMatrix = Mat4.identity();\nvar tmpVertices = new Float32Array(8 * 3);\nvar tmpEdges = new Uint8Array([0, 1, 0, 3, 0, 6, 1, 2, 1, 7, 2, 3, 2, 4, 3, 5, 4, 5, 4, 7, 5, 6, 6, 7]);\nexport function addOrientedBox(state, axes, radiusScale, detail, radialSegments) {\n  var origin = axes.origin,\n      dirA = axes.dirA,\n      dirB = axes.dirB,\n      dirC = axes.dirC;\n  var negDirA = Vec3.negate(tmpBoxVecA, dirA);\n  var negDirB = Vec3.negate(tmpBoxVecB, dirB);\n  var negDirC = Vec3.negate(tmpBoxVecC, dirC);\n  var offset = 0;\n\n  var addCornerHelper = function (v1, v2, v3) {\n    Vec3.copy(tmpBoxVecCorner, origin);\n    Vec3.add(tmpBoxVecCorner, tmpBoxVecCorner, v1);\n    Vec3.add(tmpBoxVecCorner, tmpBoxVecCorner, v2);\n    Vec3.add(tmpBoxVecCorner, tmpBoxVecCorner, v3);\n    Vec3.toArray(tmpBoxVecCorner, tmpVertices, offset);\n    offset += 3;\n  };\n\n  addCornerHelper(dirA, dirB, dirC);\n  addCornerHelper(dirA, dirB, negDirC);\n  addCornerHelper(dirA, negDirB, negDirC);\n  addCornerHelper(dirA, negDirB, dirC);\n  addCornerHelper(negDirA, negDirB, negDirC);\n  addCornerHelper(negDirA, negDirB, dirC);\n  addCornerHelper(negDirA, dirB, dirC);\n  addCornerHelper(negDirA, dirB, negDirC);\n  var cage = createCage(tmpVertices, tmpEdges);\n  var volume = Axes3D.volume(axes);\n  var radius = Math.cbrt(volume) / 300 * radiusScale;\n  MeshBuilder.addCage(state, tmpMatrix, cage, radius, detail, radialSegments);\n}","map":{"version":3,"sources":["../../../../../src/mol-geo/geometry/mesh/builder/box.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Vec3, Mat4 } from '../../../../mol-math/linear-algebra';\r\nimport { Axes3D } from '../../../../mol-math/geometry';\r\nimport { MeshBuilder } from '../mesh-builder';\r\nimport { addCylinder } from './cylinder';\r\nimport { addSphere } from './sphere';\r\nimport { createCage } from '../../../primitive/cage';\r\nvar tmpStart = Vec3.zero();\r\nvar tmpEnd = Vec3.zero();\r\nvar cylinderProps = {};\r\nexport function addBoundingBox(state, box, radius, detail, radialSegments) {\r\n    var min = box.min, max = box.max;\r\n    cylinderProps.radiusTop = radius;\r\n    cylinderProps.radiusBottom = radius;\r\n    cylinderProps.radialSegments = radialSegments;\r\n    Vec3.set(tmpStart, max[0], max[1], max[2]);\r\n    addSphere(state, tmpStart, radius, detail);\r\n    Vec3.set(tmpEnd, max[0], max[1], min[2]);\r\n    addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\r\n    Vec3.set(tmpEnd, max[0], min[1], max[2]);\r\n    addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\r\n    Vec3.set(tmpEnd, min[0], max[1], max[2]);\r\n    addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\r\n    Vec3.set(tmpStart, min[0], min[1], min[2]);\r\n    addSphere(state, tmpStart, radius, detail);\r\n    Vec3.set(tmpEnd, min[0], min[1], max[2]);\r\n    addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\r\n    Vec3.set(tmpEnd, min[0], max[1], min[2]);\r\n    addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\r\n    Vec3.set(tmpEnd, max[0], min[1], min[2]);\r\n    addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\r\n    Vec3.set(tmpStart, max[0], min[1], min[2]);\r\n    addSphere(state, tmpStart, radius, detail);\r\n    Vec3.set(tmpEnd, max[0], min[1], max[2]);\r\n    addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\r\n    Vec3.set(tmpEnd, max[0], max[1], min[2]);\r\n    addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\r\n    Vec3.set(tmpStart, min[0], min[1], max[2]);\r\n    addSphere(state, tmpStart, radius, detail);\r\n    Vec3.set(tmpEnd, min[0], max[1], max[2]);\r\n    addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\r\n    Vec3.set(tmpEnd, max[0], min[1], max[2]);\r\n    addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\r\n    Vec3.set(tmpStart, min[0], max[1], min[2]);\r\n    addSphere(state, tmpStart, radius, detail);\r\n    Vec3.set(tmpEnd, max[0], max[1], min[2]);\r\n    addSphere(state, tmpEnd, radius, detail);\r\n    addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\r\n    Vec3.set(tmpEnd, min[0], max[1], max[2]);\r\n    addSphere(state, tmpEnd, radius, detail);\r\n    addCylinder(state, tmpStart, tmpEnd, 1, cylinderProps);\r\n}\r\n//\r\nvar tmpBoxVecCorner = Vec3();\r\nvar tmpBoxVecA = Vec3();\r\nvar tmpBoxVecB = Vec3();\r\nvar tmpBoxVecC = Vec3();\r\nvar tmpMatrix = Mat4.identity();\r\nvar tmpVertices = new Float32Array(8 * 3);\r\nvar tmpEdges = new Uint8Array([\r\n    0, 1, 0, 3, 0, 6, 1, 2, 1, 7, 2, 3,\r\n    2, 4, 3, 5, 4, 5, 4, 7, 5, 6, 6, 7\r\n]);\r\nexport function addOrientedBox(state, axes, radiusScale, detail, radialSegments) {\r\n    var origin = axes.origin, dirA = axes.dirA, dirB = axes.dirB, dirC = axes.dirC;\r\n    var negDirA = Vec3.negate(tmpBoxVecA, dirA);\r\n    var negDirB = Vec3.negate(tmpBoxVecB, dirB);\r\n    var negDirC = Vec3.negate(tmpBoxVecC, dirC);\r\n    var offset = 0;\r\n    var addCornerHelper = function (v1, v2, v3) {\r\n        Vec3.copy(tmpBoxVecCorner, origin);\r\n        Vec3.add(tmpBoxVecCorner, tmpBoxVecCorner, v1);\r\n        Vec3.add(tmpBoxVecCorner, tmpBoxVecCorner, v2);\r\n        Vec3.add(tmpBoxVecCorner, tmpBoxVecCorner, v3);\r\n        Vec3.toArray(tmpBoxVecCorner, tmpVertices, offset);\r\n        offset += 3;\r\n    };\r\n    addCornerHelper(dirA, dirB, dirC);\r\n    addCornerHelper(dirA, dirB, negDirC);\r\n    addCornerHelper(dirA, negDirB, negDirC);\r\n    addCornerHelper(dirA, negDirB, dirC);\r\n    addCornerHelper(negDirA, negDirB, negDirC);\r\n    addCornerHelper(negDirA, negDirB, dirC);\r\n    addCornerHelper(negDirA, dirB, dirC);\r\n    addCornerHelper(negDirA, dirB, negDirC);\r\n    var cage = createCage(tmpVertices, tmpEdges);\r\n    var volume = Axes3D.volume(axes);\r\n    var radius = (Math.cbrt(volume) / 300) * radiusScale;\r\n    MeshBuilder.addCage(state, tmpMatrix, cage, radius, detail, radialSegments);\r\n}\r\n//# sourceMappingURL=box.js.map"]},"metadata":{},"sourceType":"module"}