{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { createPrimitive } from './primitive';\nimport { createCage } from './cage';\nexport var octahedronVertices = [0.5, 0, 0, -0.5, 0, 0, 0, 0.5, 0, 0, -0.5, 0, 0, 0, 0.5, 0, 0, -0.5];\nexport var octahedronIndices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\nexport var perforatedOctahedronIndices = [0, 2, 4, 0, 4, 3, // 0, 3, 5,   0, 5, 2,\n1, 2, 5, 1, 5, 3 // 1, 3, 4,   1, 4, 2\n];\nvar octahedronEdges = [0, 2, 1, 3, 2, 1, 3, 0, 0, 4, 1, 4, 2, 4, 3, 4, 0, 5, 1, 5, 2, 5, 3, 5];\nvar octahedron;\nexport function Octahedron() {\n  if (!octahedron) octahedron = createPrimitive(octahedronVertices, octahedronIndices);\n  return octahedron;\n}\nvar perforatedOctahedron;\nexport function PerforatedOctahedron() {\n  if (!perforatedOctahedron) perforatedOctahedron = createPrimitive(octahedronVertices, perforatedOctahedronIndices);\n  return perforatedOctahedron;\n}\nvar octahedronCage = createCage(octahedronVertices, octahedronEdges);\nexport function OctahedronCage() {\n  return octahedronCage;\n}","map":{"version":3,"sources":["../../../src/mol-geo/primitive/octahedron.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAEH,SAAS,eAAT,QAA2C,aAA3C;AACA,SAAS,UAAT,QAAiC,QAAjC;AAEA,OAAO,IAAM,kBAAkB,GAA0B,CACrD,GADqD,EAChD,CADgD,EAC7C,CAD6C,EAC1C,CAAC,GADyC,EACpC,CADoC,EACjC,CADiC,EAC9B,CAD8B,EAC3B,GAD2B,EACtB,CADsB,EAErD,CAFqD,EAElD,CAAC,GAFiD,EAE5C,CAF4C,EAEzC,CAFyC,EAEtC,CAFsC,EAEnC,GAFmC,EAE9B,CAF8B,EAE3B,CAF2B,EAExB,CAAC,GAFuB,CAAlD;AAKP,OAAO,IAAM,iBAAiB,GAA0B,CACpD,CADoD,EACjD,CADiD,EAC9C,CAD8C,EAC3C,CAD2C,EACxC,CADwC,EACrC,CADqC,EAClC,CADkC,EAC/B,CAD+B,EAC5B,CAD4B,EAEpD,CAFoD,EAEjD,CAFiD,EAE9C,CAF8C,EAE3C,CAF2C,EAExC,CAFwC,EAErC,CAFqC,EAElC,CAFkC,EAE/B,CAF+B,EAE5B,CAF4B,EAGpD,CAHoD,EAGjD,CAHiD,EAG9C,CAH8C,EAG3C,CAH2C,EAGxC,CAHwC,EAGrC,CAHqC,CAAjD;AAMP,OAAO,IAAM,2BAA2B,GAA0B,CAC9D,CAD8D,EAC3D,CAD2D,EACxD,CADwD,EACrD,CADqD,EAClD,CADkD,EAC/C,CAD+C,EAE9D;AACA,CAH8D,EAG3D,CAH2D,EAGxD,CAHwD,EAGrD,CAHqD,EAGlD,CAHkD,EAG/C,CAH+C,CAI9D;AAJ8D,CAA3D;AAOP,IAAM,eAAe,GAA0B,CAC3C,CAD2C,EACxC,CADwC,EACrC,CADqC,EAClC,CADkC,EAC/B,CAD+B,EAC5B,CAD4B,EACzB,CADyB,EACtB,CADsB,EAE3C,CAF2C,EAExC,CAFwC,EAErC,CAFqC,EAElC,CAFkC,EAE/B,CAF+B,EAE5B,CAF4B,EAEzB,CAFyB,EAEtB,CAFsB,EAG3C,CAH2C,EAGxC,CAHwC,EAGrC,CAHqC,EAGlC,CAHkC,EAG/B,CAH+B,EAG5B,CAH4B,EAGzB,CAHyB,EAGtB,CAHsB,CAA/C;AAMA,IAAI,UAAJ;AACA,OAAM,SAAU,UAAV,GAAoB;AACtB,MAAI,CAAC,UAAL,EAAiB,UAAU,GAAG,eAAe,CAAC,kBAAD,EAAqB,iBAArB,CAA5B;AACjB,SAAO,UAAP;AACH;AAED,IAAI,oBAAJ;AACA,OAAM,SAAU,oBAAV,GAA8B;AAChC,MAAI,CAAC,oBAAL,EAA2B,oBAAoB,GAAG,eAAe,CAAC,kBAAD,EAAqB,2BAArB,CAAtC;AAC3B,SAAO,oBAAP;AACH;AAED,IAAM,cAAc,GAAG,UAAU,CAAC,kBAAD,EAAqB,eAArB,CAAjC;AACA,OAAM,SAAU,cAAV,GAAwB;AAC1B,SAAO,cAAP;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { createPrimitive } from './primitive';\r\nimport { createCage } from './cage';\r\nexport var octahedronVertices = [\r\n    0.5, 0, 0, -0.5, 0, 0, 0, 0.5, 0,\r\n    0, -0.5, 0, 0, 0, 0.5, 0, 0, -0.5\r\n];\r\nexport var octahedronIndices = [\r\n    0, 2, 4, 0, 4, 3, 0, 3, 5,\r\n    0, 5, 2, 1, 2, 5, 1, 5, 3,\r\n    1, 3, 4, 1, 4, 2\r\n];\r\nexport var perforatedOctahedronIndices = [\r\n    0, 2, 4, 0, 4, 3,\r\n    // 0, 3, 5,   0, 5, 2,\r\n    1, 2, 5, 1, 5, 3,\r\n    // 1, 3, 4,   1, 4, 2\r\n];\r\nvar octahedronEdges = [\r\n    0, 2, 1, 3, 2, 1, 3, 0,\r\n    0, 4, 1, 4, 2, 4, 3, 4,\r\n    0, 5, 1, 5, 2, 5, 3, 5,\r\n];\r\nvar octahedron;\r\nexport function Octahedron() {\r\n    if (!octahedron)\r\n        octahedron = createPrimitive(octahedronVertices, octahedronIndices);\r\n    return octahedron;\r\n}\r\nvar perforatedOctahedron;\r\nexport function PerforatedOctahedron() {\r\n    if (!perforatedOctahedron)\r\n        perforatedOctahedron = createPrimitive(octahedronVertices, perforatedOctahedronIndices);\r\n    return perforatedOctahedron;\r\n}\r\nvar octahedronCage = createCage(octahedronVertices, octahedronEdges);\r\nexport function OctahedronCage() {\r\n    return octahedronCage;\r\n}\r\n//# sourceMappingURL=octahedron.js.map"]},"metadata":{},"sourceType":"module"}