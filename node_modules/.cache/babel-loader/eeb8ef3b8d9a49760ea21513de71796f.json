{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2021 Mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { IntAdjacencyGraph } from '../../../../mol-math/graph';\nimport { FormatPropertyProvider } from '../../common/property';\nimport { DefaultBondMaxRadius } from '../../../../mol-model/structure/structure/unit/bonds/common';\n\nfunction getGraph(indexA, indexB, props, count) {\n  var builder = new IntAdjacencyGraph.EdgeBuilder(count, indexA, indexB);\n  var order = new Int8Array(builder.slotCount);\n  var distance = new Array(builder.slotCount);\n  var flag = new Array(builder.slotCount);\n\n  for (var i = 0, _i = builder.edgeCount; i < _i; i++) {\n    builder.addNextEdge();\n    builder.assignProperty(order, props.order ? props.order[i] : 1);\n    builder.assignProperty(distance, props.distance ? props.distance[i] : -1);\n    builder.assignProperty(flag, props.flag ? props.flag[i] : 1\n    /* Covalent */\n    );\n  }\n\n  return builder.createGraph({\n    order: order,\n    distance: distance,\n    flag: flag\n  });\n}\n\nexport var IndexPairBonds;\n\n(function (IndexPairBonds) {\n  IndexPairBonds.Descriptor = {\n    name: 'index_pair_bonds'\n  };\n  IndexPairBonds.Provider = FormatPropertyProvider.create(IndexPairBonds.Descriptor);\n  IndexPairBonds.DefaultProps = {\n    maxDistance: DefaultBondMaxRadius\n  };\n\n  function fromData(data, props) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    var p = __assign(__assign({}, IndexPairBonds.DefaultProps), props);\n\n    var pairs = data.pairs,\n        count = data.count;\n    var indexA = pairs.indexA.toArray();\n    var indexB = pairs.indexB.toArray();\n    var order = pairs.order && pairs.order.toArray();\n    var distance = pairs.distance && pairs.distance.toArray();\n    var flag = pairs.flag && pairs.flag.toArray();\n    return {\n      bonds: getGraph(indexA, indexB, {\n        order: order,\n        distance: distance,\n        flag: flag\n      }, count),\n      maxDistance: p.maxDistance\n    };\n  }\n\n  IndexPairBonds.fromData = fromData;\n})(IndexPairBonds || (IndexPairBonds = {}));","map":{"version":3,"sources":["../../../../../src/mol-model-formats/structure/property/bonds/index-pair.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2021 Mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { IntAdjacencyGraph } from '../../../../mol-math/graph';\r\nimport { FormatPropertyProvider } from '../../common/property';\r\nimport { DefaultBondMaxRadius } from '../../../../mol-model/structure/structure/unit/bonds/common';\r\nfunction getGraph(indexA, indexB, props, count) {\r\n    var builder = new IntAdjacencyGraph.EdgeBuilder(count, indexA, indexB);\r\n    var order = new Int8Array(builder.slotCount);\r\n    var distance = new Array(builder.slotCount);\r\n    var flag = new Array(builder.slotCount);\r\n    for (var i = 0, _i = builder.edgeCount; i < _i; i++) {\r\n        builder.addNextEdge();\r\n        builder.assignProperty(order, props.order ? props.order[i] : 1);\r\n        builder.assignProperty(distance, props.distance ? props.distance[i] : -1);\r\n        builder.assignProperty(flag, props.flag ? props.flag[i] : 1 /* Covalent */);\r\n    }\r\n    return builder.createGraph({ order: order, distance: distance, flag: flag });\r\n}\r\nexport var IndexPairBonds;\r\n(function (IndexPairBonds) {\r\n    IndexPairBonds.Descriptor = {\r\n        name: 'index_pair_bonds',\r\n    };\r\n    IndexPairBonds.Provider = FormatPropertyProvider.create(IndexPairBonds.Descriptor);\r\n    IndexPairBonds.DefaultProps = { maxDistance: DefaultBondMaxRadius };\r\n    function fromData(data, props) {\r\n        if (props === void 0) { props = {}; }\r\n        var p = __assign(__assign({}, IndexPairBonds.DefaultProps), props);\r\n        var pairs = data.pairs, count = data.count;\r\n        var indexA = pairs.indexA.toArray();\r\n        var indexB = pairs.indexB.toArray();\r\n        var order = pairs.order && pairs.order.toArray();\r\n        var distance = pairs.distance && pairs.distance.toArray();\r\n        var flag = pairs.flag && pairs.flag.toArray();\r\n        return {\r\n            bonds: getGraph(indexA, indexB, { order: order, distance: distance, flag: flag }, count),\r\n            maxDistance: p.maxDistance\r\n        };\r\n    }\r\n    IndexPairBonds.fromData = fromData;\r\n})(IndexPairBonds || (IndexPairBonds = {}));\r\n//# sourceMappingURL=index-pair.js.map"]},"metadata":{},"sourceType":"module"}