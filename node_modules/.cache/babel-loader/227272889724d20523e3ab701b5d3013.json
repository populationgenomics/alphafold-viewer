{"ast":null,"code":"/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign, __awaiter, __extends, __generator } from \"tslib\";\nimport { setSubtreeVisibility } from '../../../mol-plugin/behavior/static/state';\nimport { PluginCommands } from '../../../mol-plugin/commands';\nimport { StateTree } from '../../../mol-state';\nimport { SetUtils } from '../../../mol-util/set';\nimport { PluginComponent } from '../../component';\nimport { buildStructureHierarchy, StructureHierarchy } from './hierarchy-state';\n\nvar StructureHierarchyManager =\n/** @class */\nfunction (_super) {\n  __extends(StructureHierarchyManager, _super);\n\n  function StructureHierarchyManager(plugin) {\n    var _this = _super.call(this) || this;\n\n    _this.plugin = plugin;\n    _this.state = {\n      syncedTree: _this.dataState.tree,\n      notified: false,\n      hierarchy: StructureHierarchy(),\n      selection: {\n        trajectories: [],\n        models: [],\n        structures: []\n      }\n    };\n    _this.behaviors = {\n      selection: _this.ev.behavior({\n        hierarchy: _this.current,\n        trajectories: _this.selection.trajectories,\n        models: _this.selection.models,\n        structures: _this.selection.structures\n      })\n    };\n    _this._currentComponentGroups = void 0;\n    _this._currentSelectionSet = void 0;\n\n    _this.subscribe(plugin.state.data.events.changed, function (e) {\n      if (e.inTransaction || plugin.behaviors.state.isAnimating.value) return;\n\n      _this.sync(true);\n    });\n\n    _this.subscribe(plugin.behaviors.state.isAnimating, function (isAnimating) {\n      if (!isAnimating && !plugin.behaviors.state.isUpdating.value) _this.sync(true);\n    });\n\n    return _this;\n  }\n\n  Object.defineProperty(StructureHierarchyManager.prototype, \"dataState\", {\n    get: function () {\n      return this.plugin.state.data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StructureHierarchyManager.prototype, \"currentComponentGroups\", {\n    get: function () {\n      if (this._currentComponentGroups) return this._currentComponentGroups;\n      this._currentComponentGroups = StructureHierarchyManager.getComponentGroups(this.selection.structures);\n      return this._currentComponentGroups;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StructureHierarchyManager.prototype, \"seletionSet\", {\n    get: function () {\n      if (this._currentSelectionSet) return this._currentSelectionSet;\n      this._currentSelectionSet = new Set();\n\n      for (var _i = 0, _a = this.selection.trajectories; _i < _a.length; _i++) {\n        var r = _a[_i];\n\n        this._currentSelectionSet.add(r.cell.transform.ref);\n      }\n\n      for (var _b = 0, _c = this.selection.models; _b < _c.length; _b++) {\n        var r = _c[_b];\n\n        this._currentSelectionSet.add(r.cell.transform.ref);\n      }\n\n      for (var _d = 0, _e = this.selection.structures; _d < _e.length; _d++) {\n        var r = _e[_d];\n\n        this._currentSelectionSet.add(r.cell.transform.ref);\n      }\n\n      return this._currentSelectionSet;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StructureHierarchyManager.prototype, \"current\", {\n    get: function () {\n      this.sync(false);\n      return this.state.hierarchy;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StructureHierarchyManager.prototype, \"selection\", {\n    get: function () {\n      this.sync(false);\n      return this.state.selection;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StructureHierarchyManager.prototype.getStructuresWithSelection = function () {\n    var xs = this.plugin.managers.structure.hierarchy.current.structures;\n    var ret = [];\n\n    for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\n      var s = xs_1[_i];\n\n      if (this.plugin.managers.structure.selection.structureHasSelection(s)) {\n        ret.push(s);\n      }\n    }\n\n    return ret;\n  };\n\n  StructureHierarchyManager.prototype.syncCurrent = function (all, added) {\n    var current = this.seletionSet;\n    var newCurrent = [];\n\n    for (var _i = 0, all_1 = all; _i < all_1.length; _i++) {\n      var r = all_1[_i];\n      var ref = r.cell.transform.ref;\n      if (current.has(ref) || added.has(ref)) newCurrent.push(r);\n    }\n\n    if (newCurrent.length === 0) return all.length > 0 ? [all[0]] : [];\n    return newCurrent;\n  };\n\n  StructureHierarchyManager.prototype.sync = function (notify) {\n    if (!notify && this.dataState.inUpdate) return;\n\n    if (this.state.syncedTree === this.dataState.tree) {\n      if (notify && !this.state.notified) {\n        this.state.notified = true;\n        this.behaviors.selection.next(__assign({\n          hierarchy: this.state.hierarchy\n        }, this.state.selection));\n      }\n\n      return;\n    }\n\n    this.state.syncedTree = this.dataState.tree;\n    var update = buildStructureHierarchy(this.plugin.state.data, this.current);\n\n    if (!update.changed) {\n      return;\n    }\n\n    var hierarchy = update.hierarchy;\n    var trajectories = this.syncCurrent(hierarchy.trajectories, update.added);\n    var models = this.syncCurrent(hierarchy.models, update.added);\n    var structures = this.syncCurrent(hierarchy.structures, update.added);\n    this._currentComponentGroups = void 0;\n    this._currentSelectionSet = void 0;\n    this.state.hierarchy = hierarchy;\n    this.state.selection.trajectories = trajectories;\n    this.state.selection.models = models;\n    this.state.selection.structures = structures;\n\n    if (notify) {\n      this.state.notified = true;\n      this.behaviors.selection.next({\n        hierarchy: hierarchy,\n        trajectories: trajectories,\n        models: models,\n        structures: structures\n      });\n    } else {\n      this.state.notified = false;\n    }\n  };\n\n  StructureHierarchyManager.prototype.updateCurrent = function (refs, action) {\n    var hierarchy = this.current;\n    var set = action === 'add' ? SetUtils.union(this.seletionSet, new Set(refs.map(function (r) {\n      return r.cell.transform.ref;\n    }))) : SetUtils.difference(this.seletionSet, new Set(refs.map(function (r) {\n      return r.cell.transform.ref;\n    })));\n    var trajectories = [];\n    var models = [];\n    var structures = [];\n\n    for (var _i = 0, _a = hierarchy.trajectories; _i < _a.length; _i++) {\n      var t = _a[_i];\n      if (set.has(t.cell.transform.ref)) trajectories.push(t);\n    }\n\n    for (var _b = 0, _c = hierarchy.models; _b < _c.length; _b++) {\n      var m = _c[_b];\n      if (set.has(m.cell.transform.ref)) models.push(m);\n    }\n\n    for (var _d = 0, _e = hierarchy.structures; _d < _e.length; _d++) {\n      var s = _e[_d];\n      if (set.has(s.cell.transform.ref)) structures.push(s);\n    }\n\n    this._currentComponentGroups = void 0;\n    this._currentSelectionSet = void 0;\n    this.state.selection.trajectories = trajectories;\n    this.state.selection.models = models;\n    this.state.selection.structures = structures;\n    this.behaviors.selection.next({\n      hierarchy: hierarchy,\n      trajectories: trajectories,\n      models: models,\n      structures: structures\n    });\n  };\n\n  StructureHierarchyManager.prototype.remove = function (refs, canUndo) {\n    if (refs.length === 0) return;\n    var deletes = this.plugin.state.data.build();\n\n    for (var _i = 0, refs_1 = refs; _i < refs_1.length; _i++) {\n      var r = refs_1[_i];\n      deletes.delete(typeof r === 'string' ? r : r.cell.transform.ref);\n    }\n\n    return deletes.commit({\n      canUndo: canUndo ? 'Remove' : false\n    });\n  };\n\n  StructureHierarchyManager.prototype.toggleVisibility = function (refs, action) {\n    if (refs.length === 0) return;\n    var isHidden = action !== void 0 ? action === 'show' ? false : true : !refs[0].cell.state.isHidden;\n\n    for (var _i = 0, refs_2 = refs; _i < refs_2.length; _i++) {\n      var c = refs_2[_i];\n      setSubtreeVisibility(this.dataState, c.cell.transform.ref, isHidden);\n    }\n  };\n\n  StructureHierarchyManager.prototype.applyPreset = function (trajectories, provider, params) {\n    var _this = this;\n\n    return this.plugin.dataTransaction(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _i, trajectories_1, t;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _i = 0, trajectories_1 = trajectories;\n              _a.label = 1;\n\n            case 1:\n              if (!(_i < trajectories_1.length)) return [3\n              /*break*/\n              , 6];\n              t = trajectories_1[_i];\n              if (!(t.models.length > 0)) return [3\n              /*break*/\n              , 3];\n              return [4\n              /*yield*/\n              , this.clearTrajectory(t)];\n\n            case 2:\n              _a.sent();\n\n              _a.label = 3;\n\n            case 3:\n              return [4\n              /*yield*/\n              , this.plugin.builders.structure.hierarchy.applyPreset(t.cell, provider, params)];\n\n            case 4:\n              _a.sent();\n\n              _a.label = 5;\n\n            case 5:\n              _i++;\n              return [3\n              /*break*/\n              , 1];\n\n            case 6:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n\n  StructureHierarchyManager.prototype.updateStructure = function (s, params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.plugin.dataTransaction(function () {\n              return __awaiter(_this, void 0, void 0, function () {\n                var root, children;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      root = StateTree.getDecoratorRoot(this.dataState.tree, s.cell.transform.ref);\n                      children = this.dataState.tree.children.get(root).toArray();\n                      return [4\n                      /*yield*/\n                      , this.remove(children, false)];\n\n                    case 1:\n                      _a.sent();\n\n                      return [4\n                      /*yield*/\n                      , this.plugin.state.updateTransform(this.plugin.state.data, s.cell.transform.ref, params, 'Structure Type')];\n\n                    case 2:\n                      _a.sent();\n\n                      return [4\n                      /*yield*/\n                      , this.plugin.builders.structure.representation.applyPreset(s.cell.transform.ref, 'auto')];\n\n                    case 3:\n                      _a.sent();\n\n                      return [2\n                      /*return*/\n                      ];\n                  }\n                });\n              });\n            }, {\n              canUndo: 'Structure Type'\n            })];\n\n          case 1:\n            _a.sent();\n\n            PluginCommands.Camera.Reset(this.plugin);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  StructureHierarchyManager.prototype.clearTrajectory = function (trajectory) {\n    var builder = this.dataState.build();\n\n    for (var _i = 0, _a = trajectory.models; _i < _a.length; _i++) {\n      var m = _a[_i];\n      builder.delete(m.cell);\n    }\n\n    return builder.commit();\n  };\n\n  return StructureHierarchyManager;\n}(PluginComponent);\n\nexport { StructureHierarchyManager };\n\n(function (StructureHierarchyManager) {\n  function getComponentGroups(structures) {\n    if (!structures.length) return [];\n    if (structures.length === 1) return structures[0].components.map(function (c) {\n      return [c];\n    });\n    var groups = [];\n    var map = new Map();\n\n    for (var _i = 0, structures_1 = structures; _i < structures_1.length; _i++) {\n      var s = structures_1[_i];\n\n      for (var _a = 0, _b = s.components; _a < _b.length; _a++) {\n        var c = _b[_a];\n        var key = c.key;\n        if (!key) continue;\n        var component = map.get(key);\n\n        if (!component) {\n          component = [];\n          map.set(key, component);\n          groups.push(component);\n        }\n\n        component.push(c);\n      }\n    }\n\n    return groups;\n  }\n\n  StructureHierarchyManager.getComponentGroups = getComponentGroups;\n\n  function getSelectedStructuresDescription(plugin) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n    var structures = plugin.managers.structure.hierarchy.selection.structures;\n    if (structures.length === 0) return '';\n\n    if (structures.length === 1) {\n      var s = structures[0];\n      var data = (_a = s.cell.obj) === null || _a === void 0 ? void 0 : _a.data;\n      if (!data) return ((_b = s.cell.obj) === null || _b === void 0 ? void 0 : _b.label) || 'Structure';\n      var model = data.models[0] || data.representativeModel || data.masterModel;\n      if (!model) return ((_c = s.cell.obj) === null || _c === void 0 ? void 0 : _c.label) || 'Structure';\n      var entryId = model.entryId;\n      if (((_e = (_d = s.model) === null || _d === void 0 ? void 0 : _d.trajectory) === null || _e === void 0 ? void 0 : _e.models) && s.model.trajectory.models.length === 1) return entryId;\n      if (s.model) return ((_f = s.model.cell.obj) === null || _f === void 0 ? void 0 : _f.label) + \" | \" + entryId;\n      return entryId;\n    }\n\n    var p = structures[0];\n    var t = (_g = p === null || p === void 0 ? void 0 : p.model) === null || _g === void 0 ? void 0 : _g.trajectory;\n    var sameTraj = true;\n\n    for (var _i = 0, structures_2 = structures; _i < structures_2.length; _i++) {\n      var s = structures_2[_i];\n\n      if (((_h = s === null || s === void 0 ? void 0 : s.model) === null || _h === void 0 ? void 0 : _h.trajectory) !== t) {\n        sameTraj = false;\n        break;\n      }\n    }\n\n    return sameTraj && t ? ((_j = t.cell.obj) === null || _j === void 0 ? void 0 : _j.label) + \" | \" + structures.length + \" structures\" : structures.length + \" structures\";\n  }\n\n  StructureHierarchyManager.getSelectedStructuresDescription = getSelectedStructuresDescription;\n})(StructureHierarchyManager || (StructureHierarchyManager = {}));","map":{"version":3,"sources":["../../../../src/mol-plugin-state/manager/structure/hierarchy.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign, __awaiter, __extends, __generator } from \"tslib\";\r\nimport { setSubtreeVisibility } from '../../../mol-plugin/behavior/static/state';\r\nimport { PluginCommands } from '../../../mol-plugin/commands';\r\nimport { StateTree } from '../../../mol-state';\r\nimport { SetUtils } from '../../../mol-util/set';\r\nimport { PluginComponent } from '../../component';\r\nimport { buildStructureHierarchy, StructureHierarchy } from './hierarchy-state';\r\nvar StructureHierarchyManager = /** @class */ (function (_super) {\r\n    __extends(StructureHierarchyManager, _super);\r\n    function StructureHierarchyManager(plugin) {\r\n        var _this = _super.call(this) || this;\r\n        _this.plugin = plugin;\r\n        _this.state = {\r\n            syncedTree: _this.dataState.tree,\r\n            notified: false,\r\n            hierarchy: StructureHierarchy(),\r\n            selection: {\r\n                trajectories: [],\r\n                models: [],\r\n                structures: []\r\n            }\r\n        };\r\n        _this.behaviors = {\r\n            selection: _this.ev.behavior({\r\n                hierarchy: _this.current,\r\n                trajectories: _this.selection.trajectories,\r\n                models: _this.selection.models,\r\n                structures: _this.selection.structures\r\n            })\r\n        };\r\n        _this._currentComponentGroups = void 0;\r\n        _this._currentSelectionSet = void 0;\r\n        _this.subscribe(plugin.state.data.events.changed, function (e) {\r\n            if (e.inTransaction || plugin.behaviors.state.isAnimating.value)\r\n                return;\r\n            _this.sync(true);\r\n        });\r\n        _this.subscribe(plugin.behaviors.state.isAnimating, function (isAnimating) {\r\n            if (!isAnimating && !plugin.behaviors.state.isUpdating.value)\r\n                _this.sync(true);\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(StructureHierarchyManager.prototype, \"dataState\", {\r\n        get: function () {\r\n            return this.plugin.state.data;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StructureHierarchyManager.prototype, \"currentComponentGroups\", {\r\n        get: function () {\r\n            if (this._currentComponentGroups)\r\n                return this._currentComponentGroups;\r\n            this._currentComponentGroups = StructureHierarchyManager.getComponentGroups(this.selection.structures);\r\n            return this._currentComponentGroups;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StructureHierarchyManager.prototype, \"seletionSet\", {\r\n        get: function () {\r\n            if (this._currentSelectionSet)\r\n                return this._currentSelectionSet;\r\n            this._currentSelectionSet = new Set();\r\n            for (var _i = 0, _a = this.selection.trajectories; _i < _a.length; _i++) {\r\n                var r = _a[_i];\r\n                this._currentSelectionSet.add(r.cell.transform.ref);\r\n            }\r\n            for (var _b = 0, _c = this.selection.models; _b < _c.length; _b++) {\r\n                var r = _c[_b];\r\n                this._currentSelectionSet.add(r.cell.transform.ref);\r\n            }\r\n            for (var _d = 0, _e = this.selection.structures; _d < _e.length; _d++) {\r\n                var r = _e[_d];\r\n                this._currentSelectionSet.add(r.cell.transform.ref);\r\n            }\r\n            return this._currentSelectionSet;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StructureHierarchyManager.prototype, \"current\", {\r\n        get: function () {\r\n            this.sync(false);\r\n            return this.state.hierarchy;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StructureHierarchyManager.prototype, \"selection\", {\r\n        get: function () {\r\n            this.sync(false);\r\n            return this.state.selection;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StructureHierarchyManager.prototype.getStructuresWithSelection = function () {\r\n        var xs = this.plugin.managers.structure.hierarchy.current.structures;\r\n        var ret = [];\r\n        for (var _i = 0, xs_1 = xs; _i < xs_1.length; _i++) {\r\n            var s = xs_1[_i];\r\n            if (this.plugin.managers.structure.selection.structureHasSelection(s)) {\r\n                ret.push(s);\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    StructureHierarchyManager.prototype.syncCurrent = function (all, added) {\r\n        var current = this.seletionSet;\r\n        var newCurrent = [];\r\n        for (var _i = 0, all_1 = all; _i < all_1.length; _i++) {\r\n            var r = all_1[_i];\r\n            var ref = r.cell.transform.ref;\r\n            if (current.has(ref) || added.has(ref))\r\n                newCurrent.push(r);\r\n        }\r\n        if (newCurrent.length === 0)\r\n            return all.length > 0 ? [all[0]] : [];\r\n        return newCurrent;\r\n    };\r\n    StructureHierarchyManager.prototype.sync = function (notify) {\r\n        if (!notify && this.dataState.inUpdate)\r\n            return;\r\n        if (this.state.syncedTree === this.dataState.tree) {\r\n            if (notify && !this.state.notified) {\r\n                this.state.notified = true;\r\n                this.behaviors.selection.next(__assign({ hierarchy: this.state.hierarchy }, this.state.selection));\r\n            }\r\n            return;\r\n        }\r\n        this.state.syncedTree = this.dataState.tree;\r\n        var update = buildStructureHierarchy(this.plugin.state.data, this.current);\r\n        if (!update.changed) {\r\n            return;\r\n        }\r\n        var hierarchy = update.hierarchy;\r\n        var trajectories = this.syncCurrent(hierarchy.trajectories, update.added);\r\n        var models = this.syncCurrent(hierarchy.models, update.added);\r\n        var structures = this.syncCurrent(hierarchy.structures, update.added);\r\n        this._currentComponentGroups = void 0;\r\n        this._currentSelectionSet = void 0;\r\n        this.state.hierarchy = hierarchy;\r\n        this.state.selection.trajectories = trajectories;\r\n        this.state.selection.models = models;\r\n        this.state.selection.structures = structures;\r\n        if (notify) {\r\n            this.state.notified = true;\r\n            this.behaviors.selection.next({ hierarchy: hierarchy, trajectories: trajectories, models: models, structures: structures });\r\n        }\r\n        else {\r\n            this.state.notified = false;\r\n        }\r\n    };\r\n    StructureHierarchyManager.prototype.updateCurrent = function (refs, action) {\r\n        var hierarchy = this.current;\r\n        var set = action === 'add'\r\n            ? SetUtils.union(this.seletionSet, new Set(refs.map(function (r) { return r.cell.transform.ref; })))\r\n            : SetUtils.difference(this.seletionSet, new Set(refs.map(function (r) { return r.cell.transform.ref; })));\r\n        var trajectories = [];\r\n        var models = [];\r\n        var structures = [];\r\n        for (var _i = 0, _a = hierarchy.trajectories; _i < _a.length; _i++) {\r\n            var t = _a[_i];\r\n            if (set.has(t.cell.transform.ref))\r\n                trajectories.push(t);\r\n        }\r\n        for (var _b = 0, _c = hierarchy.models; _b < _c.length; _b++) {\r\n            var m = _c[_b];\r\n            if (set.has(m.cell.transform.ref))\r\n                models.push(m);\r\n        }\r\n        for (var _d = 0, _e = hierarchy.structures; _d < _e.length; _d++) {\r\n            var s = _e[_d];\r\n            if (set.has(s.cell.transform.ref))\r\n                structures.push(s);\r\n        }\r\n        this._currentComponentGroups = void 0;\r\n        this._currentSelectionSet = void 0;\r\n        this.state.selection.trajectories = trajectories;\r\n        this.state.selection.models = models;\r\n        this.state.selection.structures = structures;\r\n        this.behaviors.selection.next({ hierarchy: hierarchy, trajectories: trajectories, models: models, structures: structures });\r\n    };\r\n    StructureHierarchyManager.prototype.remove = function (refs, canUndo) {\r\n        if (refs.length === 0)\r\n            return;\r\n        var deletes = this.plugin.state.data.build();\r\n        for (var _i = 0, refs_1 = refs; _i < refs_1.length; _i++) {\r\n            var r = refs_1[_i];\r\n            deletes.delete(typeof r === 'string' ? r : r.cell.transform.ref);\r\n        }\r\n        return deletes.commit({ canUndo: canUndo ? 'Remove' : false });\r\n    };\r\n    StructureHierarchyManager.prototype.toggleVisibility = function (refs, action) {\r\n        if (refs.length === 0)\r\n            return;\r\n        var isHidden = action !== void 0\r\n            ? (action === 'show' ? false : true)\r\n            : !refs[0].cell.state.isHidden;\r\n        for (var _i = 0, refs_2 = refs; _i < refs_2.length; _i++) {\r\n            var c = refs_2[_i];\r\n            setSubtreeVisibility(this.dataState, c.cell.transform.ref, isHidden);\r\n        }\r\n    };\r\n    StructureHierarchyManager.prototype.applyPreset = function (trajectories, provider, params) {\r\n        var _this = this;\r\n        return this.plugin.dataTransaction(function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var _i, trajectories_1, t;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _i = 0, trajectories_1 = trajectories;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!(_i < trajectories_1.length)) return [3 /*break*/, 6];\r\n                        t = trajectories_1[_i];\r\n                        if (!(t.models.length > 0)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.clearTrajectory(t)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3: return [4 /*yield*/, this.plugin.builders.structure.hierarchy.applyPreset(t.cell, provider, params)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    StructureHierarchyManager.prototype.updateStructure = function (s, params) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.plugin.dataTransaction(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            var root, children;\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0:\r\n                                        root = StateTree.getDecoratorRoot(this.dataState.tree, s.cell.transform.ref);\r\n                                        children = this.dataState.tree.children.get(root).toArray();\r\n                                        return [4 /*yield*/, this.remove(children, false)];\r\n                                    case 1:\r\n                                        _a.sent();\r\n                                        return [4 /*yield*/, this.plugin.state.updateTransform(this.plugin.state.data, s.cell.transform.ref, params, 'Structure Type')];\r\n                                    case 2:\r\n                                        _a.sent();\r\n                                        return [4 /*yield*/, this.plugin.builders.structure.representation.applyPreset(s.cell.transform.ref, 'auto')];\r\n                                    case 3:\r\n                                        _a.sent();\r\n                                        return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); }, { canUndo: 'Structure Type' })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        PluginCommands.Camera.Reset(this.plugin);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    StructureHierarchyManager.prototype.clearTrajectory = function (trajectory) {\r\n        var builder = this.dataState.build();\r\n        for (var _i = 0, _a = trajectory.models; _i < _a.length; _i++) {\r\n            var m = _a[_i];\r\n            builder.delete(m.cell);\r\n        }\r\n        return builder.commit();\r\n    };\r\n    return StructureHierarchyManager;\r\n}(PluginComponent));\r\nexport { StructureHierarchyManager };\r\n(function (StructureHierarchyManager) {\r\n    function getComponentGroups(structures) {\r\n        if (!structures.length)\r\n            return [];\r\n        if (structures.length === 1)\r\n            return structures[0].components.map(function (c) { return [c]; });\r\n        var groups = [];\r\n        var map = new Map();\r\n        for (var _i = 0, structures_1 = structures; _i < structures_1.length; _i++) {\r\n            var s = structures_1[_i];\r\n            for (var _a = 0, _b = s.components; _a < _b.length; _a++) {\r\n                var c = _b[_a];\r\n                var key = c.key;\r\n                if (!key)\r\n                    continue;\r\n                var component = map.get(key);\r\n                if (!component) {\r\n                    component = [];\r\n                    map.set(key, component);\r\n                    groups.push(component);\r\n                }\r\n                component.push(c);\r\n            }\r\n        }\r\n        return groups;\r\n    }\r\n    StructureHierarchyManager.getComponentGroups = getComponentGroups;\r\n    function getSelectedStructuresDescription(plugin) {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n        var structures = plugin.managers.structure.hierarchy.selection.structures;\r\n        if (structures.length === 0)\r\n            return '';\r\n        if (structures.length === 1) {\r\n            var s = structures[0];\r\n            var data = (_a = s.cell.obj) === null || _a === void 0 ? void 0 : _a.data;\r\n            if (!data)\r\n                return ((_b = s.cell.obj) === null || _b === void 0 ? void 0 : _b.label) || 'Structure';\r\n            var model = data.models[0] || data.representativeModel || data.masterModel;\r\n            if (!model)\r\n                return ((_c = s.cell.obj) === null || _c === void 0 ? void 0 : _c.label) || 'Structure';\r\n            var entryId = model.entryId;\r\n            if (((_e = (_d = s.model) === null || _d === void 0 ? void 0 : _d.trajectory) === null || _e === void 0 ? void 0 : _e.models) && s.model.trajectory.models.length === 1)\r\n                return entryId;\r\n            if (s.model)\r\n                return ((_f = s.model.cell.obj) === null || _f === void 0 ? void 0 : _f.label) + \" | \" + entryId;\r\n            return entryId;\r\n        }\r\n        var p = structures[0];\r\n        var t = (_g = p === null || p === void 0 ? void 0 : p.model) === null || _g === void 0 ? void 0 : _g.trajectory;\r\n        var sameTraj = true;\r\n        for (var _i = 0, structures_2 = structures; _i < structures_2.length; _i++) {\r\n            var s = structures_2[_i];\r\n            if (((_h = s === null || s === void 0 ? void 0 : s.model) === null || _h === void 0 ? void 0 : _h.trajectory) !== t) {\r\n                sameTraj = false;\r\n                break;\r\n            }\r\n        }\r\n        return sameTraj && t ? ((_j = t.cell.obj) === null || _j === void 0 ? void 0 : _j.label) + \" | \" + structures.length + \" structures\" : structures.length + \" structures\";\r\n    }\r\n    StructureHierarchyManager.getSelectedStructuresDescription = getSelectedStructuresDescription;\r\n})(StructureHierarchyManager || (StructureHierarchyManager = {}));\r\n//# sourceMappingURL=hierarchy.js.map"]},"metadata":{},"sourceType":"module"}