{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __awaiter, __generator } from \"tslib\";\nimport { ParamDefinition as PD } from '../mol-util/param-definition';\nimport { Theme } from '../mol-theme/theme';\nimport { Subject } from 'rxjs';\nimport { Task } from '../mol-task';\nimport { MarkerActions } from '../mol-util/marker-action';\nimport { Loci as ModelLoci, EmptyLoci, isEmptyLoci } from '../mol-model/loci';\nimport { Overpaint } from '../mol-theme/overpaint';\nimport { Transparency } from '../mol-theme/transparency';\nimport { Mat4 } from '../mol-math/linear-algebra';\nimport { getQualityProps } from './util';\nimport { BaseGeometry } from '../mol-geo/geometry/base';\nimport { Visual } from './visual';\nimport { Clipping } from '../mol-theme/clipping';\nexport var RepresentationProvider;\n\n(function (RepresentationProvider) {\n  function getDetaultParams(r, ctx, data) {\n    return PD.getDefaultValues(r.getParams(ctx, data));\n  }\n\n  RepresentationProvider.getDetaultParams = getDetaultParams;\n})(RepresentationProvider || (RepresentationProvider = {}));\n\nvar EmptyRepresentationProvider = {\n  label: '',\n  description: '',\n  factory: function () {\n    return Representation.Empty;\n  },\n  getParams: function () {\n    return {};\n  },\n  defaultValues: {}\n};\n\nfunction getTypes(list) {\n  return list.map(function (e) {\n    return [e.name, e.provider.label];\n  });\n}\n\nvar RepresentationRegistry =\n/** @class */\nfunction () {\n  function RepresentationRegistry() {\n    this._list = [];\n    this._map = new Map();\n    this._name = new Map();\n  }\n\n  Object.defineProperty(RepresentationRegistry.prototype, \"default\", {\n    get: function () {\n      return this._list[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RepresentationRegistry.prototype, \"types\", {\n    get: function () {\n      return getTypes(this._list);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ;\n\n  RepresentationRegistry.prototype.add = function (provider) {\n    if (this._map.has(provider.name)) {\n      throw new Error(provider.name + \" already registered.\");\n    }\n\n    this._list.push({\n      name: provider.name,\n      provider: provider\n    });\n\n    this._map.set(provider.name, provider);\n\n    this._name.set(provider, provider.name);\n  };\n\n  RepresentationRegistry.prototype.getName = function (provider) {\n    if (!this._name.has(provider)) throw new Error(\"'\" + provider.label + \"' is not a registered represenatation provider.\");\n    return this._name.get(provider);\n  };\n\n  RepresentationRegistry.prototype.remove = function (provider) {\n    var name = provider.name;\n\n    this._list.splice(this._list.findIndex(function (e) {\n      return e.name === name;\n    }), 1);\n\n    var p = this._map.get(name);\n\n    if (p) {\n      this._map.delete(name);\n\n      this._name.delete(p);\n    }\n  };\n\n  RepresentationRegistry.prototype.get = function (name) {\n    return this._map.get(name) || EmptyRepresentationProvider;\n  };\n\n  Object.defineProperty(RepresentationRegistry.prototype, \"list\", {\n    get: function () {\n      return this._list;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RepresentationRegistry.prototype.getApplicableList = function (data) {\n    return this._list.filter(function (e) {\n      return e.provider.isApplicable(data);\n    });\n  };\n\n  RepresentationRegistry.prototype.getApplicableTypes = function (data) {\n    return getTypes(this.getApplicableList(data));\n  };\n\n  return RepresentationRegistry;\n}();\n\nexport { RepresentationRegistry }; //\n\nexport { Representation };\nvar Representation;\n\n(function (Representation) {\n  var Loci;\n\n  (function (Loci) {\n    function areEqual(a, b) {\n      return a.repr === b.repr && ModelLoci.areEqual(a.loci, b.loci);\n    }\n\n    Loci.areEqual = areEqual;\n\n    function isEmpty(a) {\n      return ModelLoci.isEmpty(a.loci);\n    }\n\n    Loci.isEmpty = isEmpty;\n    Loci.Empty = {\n      loci: EmptyLoci\n    };\n  })(Loci = Representation.Loci || (Representation.Loci = {}));\n\n  function createState() {\n    return {\n      visible: true,\n      alphaFactor: 1,\n      pickable: true,\n      colorOnly: false,\n      syncManually: false,\n      transform: Mat4.identity(),\n      overpaint: Overpaint.Empty,\n      transparency: Transparency.Empty,\n      clipping: Clipping.Empty,\n      markerActions: MarkerActions.All\n    };\n  }\n\n  Representation.createState = createState;\n\n  function updateState(state, update) {\n    if (update.visible !== undefined) state.visible = update.visible;\n    if (update.alphaFactor !== undefined) state.alphaFactor = update.alphaFactor;\n    if (update.pickable !== undefined) state.pickable = update.pickable;\n    if (update.colorOnly !== undefined) state.colorOnly = update.colorOnly;\n    if (update.overpaint !== undefined) state.overpaint = update.overpaint;\n    if (update.transparency !== undefined) state.transparency = update.transparency;\n    if (update.clipping !== undefined) state.clipping = update.clipping;\n    if (update.syncManually !== undefined) state.syncManually = update.syncManually;\n    if (update.transform !== undefined) Mat4.copy(state.transform, update.transform);\n    if (update.markerActions !== undefined) state.markerActions = update.markerActions;\n  }\n\n  Representation.updateState = updateState;\n  Representation.StateBuilder = {\n    create: createState,\n    update: updateState\n  };\n  Representation.Empty = {\n    label: '',\n    groupCount: 0,\n    renderObjects: [],\n    props: {},\n    params: {},\n    updated: new Subject(),\n    state: createState(),\n    theme: Theme.createEmpty(),\n    createOrUpdate: function () {\n      return Task.constant('', undefined);\n    },\n    setState: function () {},\n    setTheme: function () {},\n    getLoci: function () {\n      return EmptyLoci;\n    },\n    mark: function () {\n      return false;\n    },\n    destroy: function () {}\n  };\n\n  function createMulti(label, ctx, getParams, stateBuilder, reprDefs) {\n    var _this = this;\n\n    var version = 0;\n    var updated = new Subject();\n    var currentState = stateBuilder.create();\n    var currentTheme = Theme.createEmpty();\n    var currentParams;\n    var currentProps;\n    var currentData;\n    var reprMap = {};\n    var reprList = Object.keys(reprDefs).map(function (name, i) {\n      reprMap[i] = name;\n      var repr = reprDefs[name](ctx, getParams);\n      repr.setState(currentState);\n      return repr;\n    });\n    return {\n      label: label,\n      updated: updated,\n\n      get groupCount() {\n        var groupCount = 0;\n\n        if (currentProps) {\n          var visuals = currentProps.visuals;\n\n          for (var i = 0, il = reprList.length; i < il; ++i) {\n            if (!visuals || visuals.includes(reprMap[i])) {\n              groupCount += reprList[i].groupCount;\n            }\n          }\n        }\n\n        return groupCount;\n      },\n\n      get renderObjects() {\n        var renderObjects = [];\n\n        if (currentProps) {\n          var visuals = currentProps.visuals;\n\n          for (var i = 0, il = reprList.length; i < il; ++i) {\n            if (!visuals || visuals.includes(reprMap[i])) {\n              renderObjects.push.apply(renderObjects, reprList[i].renderObjects);\n            }\n          }\n        }\n\n        return renderObjects;\n      },\n\n      get props() {\n        return currentProps;\n      },\n\n      get params() {\n        return currentParams;\n      },\n\n      createOrUpdate: function (props, data) {\n        if (props === void 0) {\n          props = {};\n        }\n\n        if (data && data !== currentData) {\n          currentParams = getParams(ctx, data);\n          currentData = data;\n          if (!currentProps) currentProps = PD.getDefaultValues(currentParams);\n        }\n\n        var qualityProps = getQualityProps(Object.assign({}, currentProps, props), currentData);\n        Object.assign(currentProps, props, qualityProps);\n        var visuals = currentProps.visuals;\n        return Task.create(\"Creating or updating '\" + label + \"' representation\", function (runtime) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var i, il;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  i = 0, il = reprList.length;\n                  _a.label = 1;\n\n                case 1:\n                  if (!(i < il)) return [3\n                  /*break*/\n                  , 4];\n                  if (!(!visuals || visuals.includes(reprMap[i]))) return [3\n                  /*break*/\n                  , 3];\n                  return [4\n                  /*yield*/\n                  , reprList[i].createOrUpdate(currentProps, currentData).runInContext(runtime)];\n\n                case 2:\n                  _a.sent();\n\n                  _a.label = 3;\n\n                case 3:\n                  ++i;\n                  return [3\n                  /*break*/\n                  , 1];\n\n                case 4:\n                  updated.next(version++);\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        });\n      },\n\n      get state() {\n        return currentState;\n      },\n\n      get theme() {\n        return currentTheme;\n      },\n\n      getLoci: function (pickingId) {\n        var visuals = currentProps.visuals;\n\n        for (var i = 0, il = reprList.length; i < il; ++i) {\n          if (!visuals || visuals.includes(reprMap[i])) {\n            var loci = reprList[i].getLoci(pickingId);\n            if (!isEmptyLoci(loci)) return loci;\n          }\n        }\n\n        return EmptyLoci;\n      },\n      mark: function (loci, action) {\n        var marked = false;\n\n        for (var i = 0, il = reprList.length; i < il; ++i) {\n          marked = reprList[i].mark(loci, action) || marked;\n        }\n\n        return marked;\n      },\n      setState: function (state) {\n        stateBuilder.update(currentState, state);\n\n        for (var i = 0, il = reprList.length; i < il; ++i) {\n          reprList[i].setState(currentState);\n        }\n      },\n      setTheme: function (theme) {\n        currentTheme = theme;\n\n        for (var i = 0, il = reprList.length; i < il; ++i) {\n          reprList[i].setTheme(theme);\n        }\n      },\n      destroy: function () {\n        for (var i = 0, il = reprList.length; i < il; ++i) {\n          reprList[i].destroy();\n        }\n      }\n    };\n  }\n\n  Representation.createMulti = createMulti;\n\n  function fromRenderObject(label, renderObject) {\n    var _this = this;\n\n    var version = 0;\n    var updated = new Subject();\n    var currentState = Representation.createState();\n    var currentTheme = Theme.createEmpty();\n    var currentParams = PD.clone(BaseGeometry.Params);\n    var currentProps = PD.getDefaultValues(BaseGeometry.Params);\n    return {\n      label: label,\n      updated: updated,\n\n      get groupCount() {\n        return renderObject.values.uGroupCount.ref.value;\n      },\n\n      get renderObjects() {\n        return [renderObject];\n      },\n\n      get props() {\n        return currentProps;\n      },\n\n      get params() {\n        return currentParams;\n      },\n\n      createOrUpdate: function (props) {\n        if (props === void 0) {\n          props = {};\n        }\n\n        var qualityProps = getQualityProps(Object.assign({}, currentProps, props));\n        Object.assign(currentProps, props, qualityProps);\n        return Task.create(\"Updating '\" + label + \"' representation\", function (runtime) {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              // TODO\n              updated.next(version++);\n              return [2\n              /*return*/\n              ];\n            });\n          });\n        });\n      },\n\n      get state() {\n        return currentState;\n      },\n\n      get theme() {\n        return currentTheme;\n      },\n\n      getLoci: function () {\n        // TODO\n        return EmptyLoci;\n      },\n      mark: function (loci, action) {\n        // TODO\n        return false;\n      },\n      setState: function (state) {\n        if (state.visible !== undefined) Visual.setVisibility(renderObject, state.visible);\n        if (state.alphaFactor !== undefined) Visual.setAlphaFactor(renderObject, state.alphaFactor);\n        if (state.pickable !== undefined) Visual.setPickable(renderObject, state.pickable);\n        if (state.colorOnly !== undefined) Visual.setColorOnly(renderObject, state.colorOnly);\n\n        if (state.overpaint !== undefined) {// TODO\n        }\n\n        if (state.transparency !== undefined) {// TODO\n        }\n\n        if (state.transform !== undefined) Visual.setTransform(renderObject, state.transform);\n        Representation.updateState(currentState, state);\n      },\n      setTheme: function () {},\n      destroy: function () {}\n    };\n  }\n\n  Representation.fromRenderObject = fromRenderObject;\n})(Representation || (Representation = {}));","map":{"version":3,"sources":["../../src/mol-repr/representation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { ParamDefinition as PD } from '../mol-util/param-definition';\r\nimport { Theme } from '../mol-theme/theme';\r\nimport { Subject } from 'rxjs';\r\nimport { Task } from '../mol-task';\r\nimport { MarkerActions } from '../mol-util/marker-action';\r\nimport { Loci as ModelLoci, EmptyLoci, isEmptyLoci } from '../mol-model/loci';\r\nimport { Overpaint } from '../mol-theme/overpaint';\r\nimport { Transparency } from '../mol-theme/transparency';\r\nimport { Mat4 } from '../mol-math/linear-algebra';\r\nimport { getQualityProps } from './util';\r\nimport { BaseGeometry } from '../mol-geo/geometry/base';\r\nimport { Visual } from './visual';\r\nimport { Clipping } from '../mol-theme/clipping';\r\nexport var RepresentationProvider;\r\n(function (RepresentationProvider) {\r\n    function getDetaultParams(r, ctx, data) {\r\n        return PD.getDefaultValues(r.getParams(ctx, data));\r\n    }\r\n    RepresentationProvider.getDetaultParams = getDetaultParams;\r\n})(RepresentationProvider || (RepresentationProvider = {}));\r\nvar EmptyRepresentationProvider = {\r\n    label: '',\r\n    description: '',\r\n    factory: function () { return Representation.Empty; },\r\n    getParams: function () { return ({}); },\r\n    defaultValues: {}\r\n};\r\nfunction getTypes(list) {\r\n    return list.map(function (e) { return [e.name, e.provider.label]; });\r\n}\r\nvar RepresentationRegistry = /** @class */ (function () {\r\n    function RepresentationRegistry() {\r\n        this._list = [];\r\n        this._map = new Map();\r\n        this._name = new Map();\r\n    }\r\n    Object.defineProperty(RepresentationRegistry.prototype, \"default\", {\r\n        get: function () { return this._list[0]; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RepresentationRegistry.prototype, \"types\", {\r\n        get: function () { return getTypes(this._list); },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ;\r\n    RepresentationRegistry.prototype.add = function (provider) {\r\n        if (this._map.has(provider.name)) {\r\n            throw new Error(provider.name + \" already registered.\");\r\n        }\r\n        this._list.push({ name: provider.name, provider: provider });\r\n        this._map.set(provider.name, provider);\r\n        this._name.set(provider, provider.name);\r\n    };\r\n    RepresentationRegistry.prototype.getName = function (provider) {\r\n        if (!this._name.has(provider))\r\n            throw new Error(\"'\" + provider.label + \"' is not a registered represenatation provider.\");\r\n        return this._name.get(provider);\r\n    };\r\n    RepresentationRegistry.prototype.remove = function (provider) {\r\n        var name = provider.name;\r\n        this._list.splice(this._list.findIndex(function (e) { return e.name === name; }), 1);\r\n        var p = this._map.get(name);\r\n        if (p) {\r\n            this._map.delete(name);\r\n            this._name.delete(p);\r\n        }\r\n    };\r\n    RepresentationRegistry.prototype.get = function (name) {\r\n        return this._map.get(name) || EmptyRepresentationProvider;\r\n    };\r\n    Object.defineProperty(RepresentationRegistry.prototype, \"list\", {\r\n        get: function () {\r\n            return this._list;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RepresentationRegistry.prototype.getApplicableList = function (data) {\r\n        return this._list.filter(function (e) { return e.provider.isApplicable(data); });\r\n    };\r\n    RepresentationRegistry.prototype.getApplicableTypes = function (data) {\r\n        return getTypes(this.getApplicableList(data));\r\n    };\r\n    return RepresentationRegistry;\r\n}());\r\nexport { RepresentationRegistry };\r\n//\r\nexport { Representation };\r\nvar Representation;\r\n(function (Representation) {\r\n    var Loci;\r\n    (function (Loci) {\r\n        function areEqual(a, b) {\r\n            return a.repr === b.repr && ModelLoci.areEqual(a.loci, b.loci);\r\n        }\r\n        Loci.areEqual = areEqual;\r\n        function isEmpty(a) {\r\n            return ModelLoci.isEmpty(a.loci);\r\n        }\r\n        Loci.isEmpty = isEmpty;\r\n        Loci.Empty = { loci: EmptyLoci };\r\n    })(Loci = Representation.Loci || (Representation.Loci = {}));\r\n    function createState() {\r\n        return { visible: true, alphaFactor: 1, pickable: true, colorOnly: false, syncManually: false, transform: Mat4.identity(), overpaint: Overpaint.Empty, transparency: Transparency.Empty, clipping: Clipping.Empty, markerActions: MarkerActions.All };\r\n    }\r\n    Representation.createState = createState;\r\n    function updateState(state, update) {\r\n        if (update.visible !== undefined)\r\n            state.visible = update.visible;\r\n        if (update.alphaFactor !== undefined)\r\n            state.alphaFactor = update.alphaFactor;\r\n        if (update.pickable !== undefined)\r\n            state.pickable = update.pickable;\r\n        if (update.colorOnly !== undefined)\r\n            state.colorOnly = update.colorOnly;\r\n        if (update.overpaint !== undefined)\r\n            state.overpaint = update.overpaint;\r\n        if (update.transparency !== undefined)\r\n            state.transparency = update.transparency;\r\n        if (update.clipping !== undefined)\r\n            state.clipping = update.clipping;\r\n        if (update.syncManually !== undefined)\r\n            state.syncManually = update.syncManually;\r\n        if (update.transform !== undefined)\r\n            Mat4.copy(state.transform, update.transform);\r\n        if (update.markerActions !== undefined)\r\n            state.markerActions = update.markerActions;\r\n    }\r\n    Representation.updateState = updateState;\r\n    Representation.StateBuilder = { create: createState, update: updateState };\r\n    Representation.Empty = {\r\n        label: '', groupCount: 0, renderObjects: [], props: {}, params: {}, updated: new Subject(), state: createState(), theme: Theme.createEmpty(),\r\n        createOrUpdate: function () { return Task.constant('', undefined); },\r\n        setState: function () { },\r\n        setTheme: function () { },\r\n        getLoci: function () { return EmptyLoci; },\r\n        mark: function () { return false; },\r\n        destroy: function () { }\r\n    };\r\n    function createMulti(label, ctx, getParams, stateBuilder, reprDefs) {\r\n        var _this = this;\r\n        var version = 0;\r\n        var updated = new Subject();\r\n        var currentState = stateBuilder.create();\r\n        var currentTheme = Theme.createEmpty();\r\n        var currentParams;\r\n        var currentProps;\r\n        var currentData;\r\n        var reprMap = {};\r\n        var reprList = Object.keys(reprDefs).map(function (name, i) {\r\n            reprMap[i] = name;\r\n            var repr = reprDefs[name](ctx, getParams);\r\n            repr.setState(currentState);\r\n            return repr;\r\n        });\r\n        return {\r\n            label: label,\r\n            updated: updated,\r\n            get groupCount() {\r\n                var groupCount = 0;\r\n                if (currentProps) {\r\n                    var visuals = currentProps.visuals;\r\n                    for (var i = 0, il = reprList.length; i < il; ++i) {\r\n                        if (!visuals || visuals.includes(reprMap[i])) {\r\n                            groupCount += reprList[i].groupCount;\r\n                        }\r\n                    }\r\n                }\r\n                return groupCount;\r\n            },\r\n            get renderObjects() {\r\n                var renderObjects = [];\r\n                if (currentProps) {\r\n                    var visuals = currentProps.visuals;\r\n                    for (var i = 0, il = reprList.length; i < il; ++i) {\r\n                        if (!visuals || visuals.includes(reprMap[i])) {\r\n                            renderObjects.push.apply(renderObjects, reprList[i].renderObjects);\r\n                        }\r\n                    }\r\n                }\r\n                return renderObjects;\r\n            },\r\n            get props() { return currentProps; },\r\n            get params() { return currentParams; },\r\n            createOrUpdate: function (props, data) {\r\n                if (props === void 0) { props = {}; }\r\n                if (data && data !== currentData) {\r\n                    currentParams = getParams(ctx, data);\r\n                    currentData = data;\r\n                    if (!currentProps)\r\n                        currentProps = PD.getDefaultValues(currentParams);\r\n                }\r\n                var qualityProps = getQualityProps(Object.assign({}, currentProps, props), currentData);\r\n                Object.assign(currentProps, props, qualityProps);\r\n                var visuals = currentProps.visuals;\r\n                return Task.create(\"Creating or updating '\" + label + \"' representation\", function (runtime) { return __awaiter(_this, void 0, void 0, function () {\r\n                    var i, il;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                i = 0, il = reprList.length;\r\n                                _a.label = 1;\r\n                            case 1:\r\n                                if (!(i < il)) return [3 /*break*/, 4];\r\n                                if (!(!visuals || visuals.includes(reprMap[i]))) return [3 /*break*/, 3];\r\n                                return [4 /*yield*/, reprList[i].createOrUpdate(currentProps, currentData).runInContext(runtime)];\r\n                            case 2:\r\n                                _a.sent();\r\n                                _a.label = 3;\r\n                            case 3:\r\n                                ++i;\r\n                                return [3 /*break*/, 1];\r\n                            case 4:\r\n                                updated.next(version++);\r\n                                return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); });\r\n            },\r\n            get state() { return currentState; },\r\n            get theme() { return currentTheme; },\r\n            getLoci: function (pickingId) {\r\n                var visuals = currentProps.visuals;\r\n                for (var i = 0, il = reprList.length; i < il; ++i) {\r\n                    if (!visuals || visuals.includes(reprMap[i])) {\r\n                        var loci = reprList[i].getLoci(pickingId);\r\n                        if (!isEmptyLoci(loci))\r\n                            return loci;\r\n                    }\r\n                }\r\n                return EmptyLoci;\r\n            },\r\n            mark: function (loci, action) {\r\n                var marked = false;\r\n                for (var i = 0, il = reprList.length; i < il; ++i) {\r\n                    marked = reprList[i].mark(loci, action) || marked;\r\n                }\r\n                return marked;\r\n            },\r\n            setState: function (state) {\r\n                stateBuilder.update(currentState, state);\r\n                for (var i = 0, il = reprList.length; i < il; ++i) {\r\n                    reprList[i].setState(currentState);\r\n                }\r\n            },\r\n            setTheme: function (theme) {\r\n                currentTheme = theme;\r\n                for (var i = 0, il = reprList.length; i < il; ++i) {\r\n                    reprList[i].setTheme(theme);\r\n                }\r\n            },\r\n            destroy: function () {\r\n                for (var i = 0, il = reprList.length; i < il; ++i) {\r\n                    reprList[i].destroy();\r\n                }\r\n            }\r\n        };\r\n    }\r\n    Representation.createMulti = createMulti;\r\n    function fromRenderObject(label, renderObject) {\r\n        var _this = this;\r\n        var version = 0;\r\n        var updated = new Subject();\r\n        var currentState = Representation.createState();\r\n        var currentTheme = Theme.createEmpty();\r\n        var currentParams = PD.clone(BaseGeometry.Params);\r\n        var currentProps = PD.getDefaultValues(BaseGeometry.Params);\r\n        return {\r\n            label: label,\r\n            updated: updated,\r\n            get groupCount() { return renderObject.values.uGroupCount.ref.value; },\r\n            get renderObjects() { return [renderObject]; },\r\n            get props() { return currentProps; },\r\n            get params() { return currentParams; },\r\n            createOrUpdate: function (props) {\r\n                if (props === void 0) { props = {}; }\r\n                var qualityProps = getQualityProps(Object.assign({}, currentProps, props));\r\n                Object.assign(currentProps, props, qualityProps);\r\n                return Task.create(\"Updating '\" + label + \"' representation\", function (runtime) { return __awaiter(_this, void 0, void 0, function () {\r\n                    return __generator(this, function (_a) {\r\n                        // TODO\r\n                        updated.next(version++);\r\n                        return [2 /*return*/];\r\n                    });\r\n                }); });\r\n            },\r\n            get state() { return currentState; },\r\n            get theme() { return currentTheme; },\r\n            getLoci: function () {\r\n                // TODO\r\n                return EmptyLoci;\r\n            },\r\n            mark: function (loci, action) {\r\n                // TODO\r\n                return false;\r\n            },\r\n            setState: function (state) {\r\n                if (state.visible !== undefined)\r\n                    Visual.setVisibility(renderObject, state.visible);\r\n                if (state.alphaFactor !== undefined)\r\n                    Visual.setAlphaFactor(renderObject, state.alphaFactor);\r\n                if (state.pickable !== undefined)\r\n                    Visual.setPickable(renderObject, state.pickable);\r\n                if (state.colorOnly !== undefined)\r\n                    Visual.setColorOnly(renderObject, state.colorOnly);\r\n                if (state.overpaint !== undefined) {\r\n                    // TODO\r\n                }\r\n                if (state.transparency !== undefined) {\r\n                    // TODO\r\n                }\r\n                if (state.transform !== undefined)\r\n                    Visual.setTransform(renderObject, state.transform);\r\n                Representation.updateState(currentState, state);\r\n            },\r\n            setTheme: function () { },\r\n            destroy: function () { }\r\n        };\r\n    }\r\n    Representation.fromRenderObject = fromRenderObject;\r\n})(Representation || (Representation = {}));\r\n//# sourceMappingURL=representation.js.map"]},"metadata":{},"sourceType":"module"}