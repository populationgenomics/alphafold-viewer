{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Loci } from '../mol-model/loci';\nimport { StructureElement } from '../mol-model/structure';\nimport { Script } from '../mol-script/script';\nexport { Transparency };\n\nfunction Transparency(kind, layers) {\n  return {\n    kind: kind,\n    layers: layers\n  };\n}\n\n(function (Transparency) {\n  Transparency.Empty = {\n    kind: 'empty-loci',\n    layers: []\n  };\n\n  function areEqual(tA, tB) {\n    if (tA.layers.length === 0 && tB.layers.length === 0) return true;\n    if (tA.layers.length !== tB.layers.length) return false;\n\n    for (var i = 0, il = tA.layers.length; i < il; ++i) {\n      if (tA.layers[i].value !== tB.layers[i].value) return false;\n      if (!Loci.areEqual(tA.layers[i].loci, tB.layers[i].loci)) return false;\n    }\n\n    return true;\n  }\n\n  Transparency.areEqual = areEqual;\n\n  function isEmpty(transparency) {\n    return transparency.layers.length === 0;\n  }\n\n  Transparency.isEmpty = isEmpty;\n\n  function remap(transparency, structure) {\n    if (transparency.kind === 'element-loci') {\n      var layers = [];\n\n      for (var _i = 0, _a = transparency.layers; _i < _a.length; _i++) {\n        var layer = _a[_i];\n        var loci = StructureElement.Loci.remap(layer.loci, structure);\n\n        if (!StructureElement.Loci.isEmpty(loci)) {\n          layers.push({\n            loci: loci,\n            value: layer.value\n          });\n        }\n      }\n\n      return {\n        kind: 'element-loci',\n        layers: layers\n      };\n    } else {\n      return transparency;\n    }\n  }\n\n  Transparency.remap = remap;\n\n  function merge(transparency) {\n    if (isEmpty(transparency)) return transparency;\n\n    if (transparency.kind === 'element-loci') {\n      var structure = transparency.layers[0].loci.structure;\n      var map = new Map();\n      var shadowed = StructureElement.Loci.none(structure);\n\n      for (var i = 0, il = transparency.layers.length; i < il; ++i) {\n        var _a = transparency.layers[il - i - 1],\n            loci = _a.loci,\n            value = _a.value; // process from end\n\n        loci = StructureElement.Loci.subtract(loci, shadowed);\n        shadowed = StructureElement.Loci.union(loci, shadowed);\n\n        if (!StructureElement.Loci.isEmpty(loci)) {\n          if (map.has(value)) {\n            loci = StructureElement.Loci.union(loci, map.get(value));\n          }\n\n          map.set(value, loci);\n        }\n      }\n\n      var layers_1 = [];\n      map.forEach(function (loci, value) {\n        layers_1.push({\n          loci: loci,\n          value: value\n        });\n      });\n      return {\n        kind: 'element-loci',\n        layers: layers_1\n      };\n    } else {\n      return transparency;\n    }\n  }\n\n  Transparency.merge = merge;\n\n  function filter(transparency, filter) {\n    if (isEmpty(transparency)) return transparency;\n\n    if (transparency.kind === 'element-loci') {\n      var structure = transparency.layers[0].loci.structure;\n      var layers = [];\n\n      for (var _i = 0, _a = transparency.layers; _i < _a.length; _i++) {\n        var layer = _a[_i];\n        var loci = layer.loci,\n            value = layer.value; // filter by first map to the `filter` structure and\n        // then map back to the original structure of the transparency loci\n\n        var filtered = StructureElement.Loci.remap(loci, filter);\n        loci = StructureElement.Loci.remap(filtered, structure);\n\n        if (!StructureElement.Loci.isEmpty(loci)) {\n          layers.push({\n            loci: loci,\n            value: value\n          });\n        }\n      }\n\n      return {\n        kind: 'element-loci',\n        layers: layers\n      };\n    } else {\n      return transparency;\n    }\n  }\n\n  Transparency.filter = filter;\n\n  function ofScript(scriptLayers, structure) {\n    var layers = [];\n\n    for (var i = 0, il = scriptLayers.length; i < il; ++i) {\n      var _a = scriptLayers[i],\n          script = _a.script,\n          value = _a.value;\n      var loci = Script.toLoci(script, structure);\n\n      if (!StructureElement.Loci.isEmpty(loci)) {\n        layers.push({\n          loci: loci,\n          value: value\n        });\n      }\n    }\n\n    return {\n      kind: 'element-loci',\n      layers: layers\n    };\n  }\n\n  Transparency.ofScript = ofScript;\n\n  function ofBundle(bundleLayers, structure) {\n    var layers = [];\n\n    for (var i = 0, il = bundleLayers.length; i < il; ++i) {\n      var _a = bundleLayers[i],\n          bundle = _a.bundle,\n          value = _a.value;\n      var loci = StructureElement.Bundle.toLoci(bundle, structure.root);\n      layers.push({\n        loci: loci,\n        value: value\n      });\n    }\n\n    return {\n      kind: 'element-loci',\n      layers: layers\n    };\n  }\n\n  Transparency.ofBundle = ofBundle;\n\n  function toBundle(transparency) {\n    var layers = [];\n\n    for (var i = 0, il = transparency.layers.length; i < il; ++i) {\n      var _a = transparency.layers[i],\n          loci = _a.loci,\n          value = _a.value;\n      var bundle = StructureElement.Bundle.fromLoci(loci);\n      layers.push({\n        bundle: bundle,\n        value: value\n      });\n    }\n\n    return {\n      kind: 'element-loci',\n      layers: layers\n    };\n  }\n\n  Transparency.toBundle = toBundle;\n})(Transparency || (Transparency = {}));","map":{"version":3,"sources":["../../src/mol-theme/transparency.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Loci } from '../mol-model/loci';\r\nimport { StructureElement } from '../mol-model/structure';\r\nimport { Script } from '../mol-script/script';\r\nexport { Transparency };\r\nfunction Transparency(kind, layers) {\r\n    return { kind: kind, layers: layers };\r\n}\r\n(function (Transparency) {\r\n    Transparency.Empty = { kind: 'empty-loci', layers: [] };\r\n    function areEqual(tA, tB) {\r\n        if (tA.layers.length === 0 && tB.layers.length === 0)\r\n            return true;\r\n        if (tA.layers.length !== tB.layers.length)\r\n            return false;\r\n        for (var i = 0, il = tA.layers.length; i < il; ++i) {\r\n            if (tA.layers[i].value !== tB.layers[i].value)\r\n                return false;\r\n            if (!Loci.areEqual(tA.layers[i].loci, tB.layers[i].loci))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    Transparency.areEqual = areEqual;\r\n    function isEmpty(transparency) {\r\n        return transparency.layers.length === 0;\r\n    }\r\n    Transparency.isEmpty = isEmpty;\r\n    function remap(transparency, structure) {\r\n        if (transparency.kind === 'element-loci') {\r\n            var layers = [];\r\n            for (var _i = 0, _a = transparency.layers; _i < _a.length; _i++) {\r\n                var layer = _a[_i];\r\n                var loci = StructureElement.Loci.remap(layer.loci, structure);\r\n                if (!StructureElement.Loci.isEmpty(loci)) {\r\n                    layers.push({ loci: loci, value: layer.value });\r\n                }\r\n            }\r\n            return { kind: 'element-loci', layers: layers };\r\n        }\r\n        else {\r\n            return transparency;\r\n        }\r\n    }\r\n    Transparency.remap = remap;\r\n    function merge(transparency) {\r\n        if (isEmpty(transparency))\r\n            return transparency;\r\n        if (transparency.kind === 'element-loci') {\r\n            var structure = transparency.layers[0].loci.structure;\r\n            var map = new Map();\r\n            var shadowed = StructureElement.Loci.none(structure);\r\n            for (var i = 0, il = transparency.layers.length; i < il; ++i) {\r\n                var _a = transparency.layers[il - i - 1], loci = _a.loci, value = _a.value; // process from end\r\n                loci = StructureElement.Loci.subtract(loci, shadowed);\r\n                shadowed = StructureElement.Loci.union(loci, shadowed);\r\n                if (!StructureElement.Loci.isEmpty(loci)) {\r\n                    if (map.has(value)) {\r\n                        loci = StructureElement.Loci.union(loci, map.get(value));\r\n                    }\r\n                    map.set(value, loci);\r\n                }\r\n            }\r\n            var layers_1 = [];\r\n            map.forEach(function (loci, value) {\r\n                layers_1.push({ loci: loci, value: value });\r\n            });\r\n            return { kind: 'element-loci', layers: layers_1 };\r\n        }\r\n        else {\r\n            return transparency;\r\n        }\r\n    }\r\n    Transparency.merge = merge;\r\n    function filter(transparency, filter) {\r\n        if (isEmpty(transparency))\r\n            return transparency;\r\n        if (transparency.kind === 'element-loci') {\r\n            var structure = transparency.layers[0].loci.structure;\r\n            var layers = [];\r\n            for (var _i = 0, _a = transparency.layers; _i < _a.length; _i++) {\r\n                var layer = _a[_i];\r\n                var loci = layer.loci, value = layer.value;\r\n                // filter by first map to the `filter` structure and\r\n                // then map back to the original structure of the transparency loci\r\n                var filtered = StructureElement.Loci.remap(loci, filter);\r\n                loci = StructureElement.Loci.remap(filtered, structure);\r\n                if (!StructureElement.Loci.isEmpty(loci)) {\r\n                    layers.push({ loci: loci, value: value });\r\n                }\r\n            }\r\n            return { kind: 'element-loci', layers: layers };\r\n        }\r\n        else {\r\n            return transparency;\r\n        }\r\n    }\r\n    Transparency.filter = filter;\r\n    function ofScript(scriptLayers, structure) {\r\n        var layers = [];\r\n        for (var i = 0, il = scriptLayers.length; i < il; ++i) {\r\n            var _a = scriptLayers[i], script = _a.script, value = _a.value;\r\n            var loci = Script.toLoci(script, structure);\r\n            if (!StructureElement.Loci.isEmpty(loci)) {\r\n                layers.push({ loci: loci, value: value });\r\n            }\r\n        }\r\n        return { kind: 'element-loci', layers: layers };\r\n    }\r\n    Transparency.ofScript = ofScript;\r\n    function ofBundle(bundleLayers, structure) {\r\n        var layers = [];\r\n        for (var i = 0, il = bundleLayers.length; i < il; ++i) {\r\n            var _a = bundleLayers[i], bundle = _a.bundle, value = _a.value;\r\n            var loci = StructureElement.Bundle.toLoci(bundle, structure.root);\r\n            layers.push({ loci: loci, value: value });\r\n        }\r\n        return { kind: 'element-loci', layers: layers };\r\n    }\r\n    Transparency.ofBundle = ofBundle;\r\n    function toBundle(transparency) {\r\n        var layers = [];\r\n        for (var i = 0, il = transparency.layers.length; i < il; ++i) {\r\n            var _a = transparency.layers[i], loci = _a.loci, value = _a.value;\r\n            var bundle = StructureElement.Bundle.fromLoci(loci);\r\n            layers.push({ bundle: bundle, value: value });\r\n        }\r\n        return { kind: 'element-loci', layers: layers };\r\n    }\r\n    Transparency.toBundle = toBundle;\r\n})(Transparency || (Transparency = {}));\r\n//# sourceMappingURL=transparency.js.map"]},"metadata":{},"sourceType":"module"}