/**
 * Copyright (c) 2019-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 */
import { PluginStateObject as PSO } from '../../mol-plugin-state/objects';
import { ParamDefinition as PD } from '../../mol-util/param-definition';
import { CellPack as _CellPack } from './data';
import { Asset } from '../../mol-util/assets';
export declare const DefaultCellPackBaseUrl = "https://mesoscope.scripps.edu/data/cellPACK_data/cellPACK_database_1.1.0/";
declare const CellPack_base: {
    new (data: _CellPack, props?: {
        label: string;
        description?: string | undefined;
    } | undefined): {
        id: import("../../mol-util/uuid").UUID;
        type: PSO.TypeInfo;
        label: string;
        description?: string | undefined;
        data: _CellPack;
    };
    type: PSO.TypeInfo;
    is(obj?: import("../../mol-state/object").StateObject<any, import("../../mol-state/object").StateObject.Type<any>> | undefined): obj is {
        id: import("../../mol-util/uuid").UUID;
        type: PSO.TypeInfo;
        label: string;
        description?: string | undefined;
        data: _CellPack;
    };
};
export declare class CellPack extends CellPack_base {
}
export { ParseCellPack };
declare type ParseCellPack = typeof ParseCellPack;
declare const ParseCellPack: import("../../mol-state/transformer").StateTransformer<PSO.Format.Json, CellPack, PD.Normalize<{}>>;
export { StructureFromCellpack };
declare type StructureFromCellpack = typeof ParseCellPack;
declare const StructureFromCellpack: import("../../mol-state/transformer").StateTransformer<CellPack, PSO.Molecule.Structure, PD.Normalize<{
    packing: number;
    baseUrl: string;
    ingredientFiles: Asset.File[] | null;
}>>;
export { StructureFromAssemblies };
declare type StructureFromAssemblies = typeof StructureFromAssemblies;
declare const StructureFromAssemblies: import("../../mol-state/transformer").StateTransformer<PSO.Molecule.Model, PSO.Molecule.Structure, PD.Normalize<{}>>;
