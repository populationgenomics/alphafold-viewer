{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { Structure, StructureElement } from '../../mol-model/structure';\nimport { Volume } from '../../mol-model/volume';\nimport { StateTransformer, StateObject } from '../../mol-state';\nimport { Task } from '../../mol-task';\nimport { Theme } from '../../mol-theme/theme';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { PluginStateObject as SO, PluginStateTransform } from '../objects';\nimport { ColorNames } from '../../mol-util/color/names';\nimport { ShapeRepresentation } from '../../mol-repr/shape/representation';\nimport { StructureUnitTransforms } from '../../mol-model/structure/structure/util/unit-transforms';\nimport { unwindStructureAssembly, explodeStructure, spinStructure, SpinStructureParams, getSpinStructureAxisAndOrigin } from '../animation/helpers';\nimport { Color } from '../../mol-util/color';\nimport { Overpaint } from '../../mol-theme/overpaint';\nimport { Transparency } from '../../mol-theme/transparency';\nimport { BaseGeometry } from '../../mol-geo/geometry/base';\nimport { Script } from '../../mol-script/script';\nimport { UnitcellParams, UnitcellRepresentation, getUnitcellData } from '../../mol-repr/shape/model/unitcell';\nimport { DistanceParams, DistanceRepresentation } from '../../mol-repr/shape/loci/distance';\nimport { getDistanceDataFromStructureSelections, getLabelDataFromStructureSelections, getOrientationDataFromStructureSelections, getAngleDataFromStructureSelections, getDihedralDataFromStructureSelections } from './helpers';\nimport { LabelParams, LabelRepresentation } from '../../mol-repr/shape/loci/label';\nimport { OrientationRepresentation, OrientationParams } from '../../mol-repr/shape/loci/orientation';\nimport { AngleParams, AngleRepresentation } from '../../mol-repr/shape/loci/angle';\nimport { DihedralParams, DihedralRepresentation } from '../../mol-repr/shape/loci/dihedral';\nimport { ModelSymmetry } from '../../mol-model-formats/structure/property/symmetry';\nimport { Clipping } from '../../mol-theme/clipping';\nimport { ObjectKeys } from '../../mol-util/type-helpers';\nimport { Mesh } from '../../mol-geo/geometry/mesh/mesh';\nimport { getBoxMesh } from './shape';\nimport { Shape } from '../../mol-model/shape';\nexport { StructureRepresentation3D };\nexport { ExplodeStructureRepresentation3D };\nexport { SpinStructureRepresentation3D };\nexport { UnwindStructureAssemblyRepresentation3D };\nexport { OverpaintStructureRepresentation3DFromScript };\nexport { OverpaintStructureRepresentation3DFromBundle };\nexport { TransparencyStructureRepresentation3DFromScript };\nexport { TransparencyStructureRepresentation3DFromBundle };\nexport { ClippingStructureRepresentation3DFromScript };\nexport { ClippingStructureRepresentation3DFromBundle };\nexport { VolumeRepresentation3D };\nvar StructureRepresentation3D = PluginStateTransform.BuiltIn({\n  name: 'structure-representation-3d',\n  display: '3D Representation',\n  from: SO.Molecule.Structure,\n  to: SO.Molecule.Structure.Representation3D,\n  params: function (a, ctx) {\n    var _a = ctx.representation.structure,\n        registry = _a.registry,\n        themeCtx = _a.themes;\n    var type = registry.get(registry.default.name);\n\n    if (!a) {\n      var colorThemeInfo_1 = {\n        help: function (value) {\n          var name = value.name,\n              params = value.params;\n          var p = themeCtx.colorThemeRegistry.get(name);\n          var ct = p.factory({}, params);\n          return {\n            description: ct.description,\n            legend: ct.legend\n          };\n        }\n      };\n      return {\n        type: PD.Mapped(registry.default.name, registry.types, function (name) {\n          return PD.Group(registry.get(name).getParams(themeCtx, Structure.Empty));\n        }),\n        colorTheme: PD.Mapped(type.defaultColorTheme.name, themeCtx.colorThemeRegistry.types, function (name) {\n          return PD.Group(themeCtx.colorThemeRegistry.get(name).getParams({\n            structure: Structure.Empty\n          }));\n        }, colorThemeInfo_1),\n        sizeTheme: PD.Mapped(type.defaultSizeTheme.name, themeCtx.sizeThemeRegistry.types, function (name) {\n          return PD.Group(themeCtx.sizeThemeRegistry.get(name).getParams({\n            structure: Structure.Empty\n          }));\n        })\n      };\n    }\n\n    var dataCtx = {\n      structure: a.data\n    };\n    var colorThemeInfo = {\n      help: function (value) {\n        var name = value.name,\n            params = value.params;\n        var p = themeCtx.colorThemeRegistry.get(name);\n        var ct = p.factory(dataCtx, params);\n        return {\n          description: ct.description,\n          legend: ct.legend\n        };\n      }\n    };\n    return {\n      type: PD.Mapped(registry.default.name, registry.getApplicableTypes(a.data), function (name) {\n        return PD.Group(registry.get(name).getParams(themeCtx, a.data));\n      }),\n      colorTheme: PD.Mapped(type.defaultColorTheme.name, themeCtx.colorThemeRegistry.getApplicableTypes(dataCtx), function (name) {\n        return PD.Group(themeCtx.colorThemeRegistry.get(name).getParams(dataCtx));\n      }, colorThemeInfo),\n      sizeTheme: PD.Mapped(type.defaultSizeTheme.name, themeCtx.sizeThemeRegistry.types, function (name) {\n        return PD.Group(themeCtx.sizeThemeRegistry.get(name).getParams(dataCtx));\n      })\n    };\n  }\n})({\n  canAutoUpdate: function (_a) {\n    var a = _a.a,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams; // TODO: other criteria as well?\n\n    return a.data.elementCount < 10000 || oldParams.type.name === newParams.type.name && newParams.type.params.quality !== 'custom';\n  },\n  apply: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params,\n        cache = _a.cache;\n    return Task.create('Structure Representation', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var propertyCtx, provider, data, repr, props;\n\n        var _a, _b;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              propertyCtx = {\n                runtime: ctx,\n                assetManager: plugin.managers.asset\n              };\n              provider = plugin.representation.structure.registry.get(params.type.name);\n              data = ((_a = provider.getData) === null || _a === void 0 ? void 0 : _a.call(provider, a.data, params.type.params)) || a.data;\n              if (!provider.ensureCustomProperties) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , provider.ensureCustomProperties.attach(propertyCtx, data)];\n\n            case 1:\n              _c.sent();\n\n              _c.label = 2;\n\n            case 2:\n              repr = provider.factory(__assign({\n                webgl: (_b = plugin.canvas3d) === null || _b === void 0 ? void 0 : _b.webgl\n              }, plugin.representation.structure.themes), provider.getParams);\n              return [4\n              /*yield*/\n              , Theme.ensureDependencies(propertyCtx, plugin.representation.structure.themes, {\n                structure: data\n              }, params)];\n\n            case 3:\n              _c.sent();\n\n              repr.setTheme(Theme.create(plugin.representation.structure.themes, {\n                structure: data\n              }, params));\n              props = params.type.params || {};\n              return [4\n              /*yield*/\n              , repr.createOrUpdate(props, data).runInContext(ctx)];\n\n            case 4:\n              _c.sent();\n\n              return [2\n              /*return*/\n              , new SO.Molecule.Structure.Representation3D({\n                repr: repr,\n                sourceData: a.data\n              }, {\n                label: provider.label\n              })];\n          }\n        });\n      });\n    });\n  },\n  update: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams,\n        cache = _a.cache;\n    return Task.create('Structure Representation', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var provider, data, propertyCtx, props;\n\n        var _a, _b;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              if (newParams.type.name !== oldParams.type.name) return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Recreate];\n              provider = plugin.representation.structure.registry.get(newParams.type.name);\n              if ((_a = provider.mustRecreate) === null || _a === void 0 ? void 0 : _a.call(provider, oldParams.type.params, newParams.type.params)) return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Recreate];\n              data = ((_b = provider.getData) === null || _b === void 0 ? void 0 : _b.call(provider, a.data, newParams.type.params)) || a.data;\n              propertyCtx = {\n                runtime: ctx,\n                assetManager: plugin.managers.asset\n              };\n              if (!provider.ensureCustomProperties) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , provider.ensureCustomProperties.attach(propertyCtx, data)];\n\n            case 1:\n              _c.sent();\n\n              _c.label = 2;\n\n            case 2:\n              // TODO: if themes had a .needsUpdate method the following block could\n              //       be optimized and only executed conditionally\n              Theme.releaseDependencies(plugin.representation.structure.themes, {\n                structure: b.data.sourceData\n              }, oldParams);\n              return [4\n              /*yield*/\n              , Theme.ensureDependencies(propertyCtx, plugin.representation.structure.themes, {\n                structure: data\n              }, newParams)];\n\n            case 3:\n              _c.sent();\n\n              b.data.repr.setTheme(Theme.create(plugin.representation.structure.themes, {\n                structure: data\n              }, newParams));\n              props = __assign(__assign({}, b.data.repr.props), newParams.type.params);\n              return [4\n              /*yield*/\n              , b.data.repr.createOrUpdate(props, data).runInContext(ctx)];\n\n            case 4:\n              _c.sent();\n\n              b.data.sourceData = a.data;\n              return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Updated];\n          }\n        });\n      });\n    });\n  },\n  dispose: function (_a, plugin) {\n    var b = _a.b,\n        params = _a.params;\n    if (!b || !params) return;\n    var structure = b.data.sourceData;\n    var provider = plugin.representation.structure.registry.get(params.type.name);\n    if (provider.ensureCustomProperties) provider.ensureCustomProperties.detach(structure);\n    Theme.releaseDependencies(plugin.representation.structure.themes, {\n      structure: structure\n    }, params);\n  },\n  interpolate: function (src, tar, t) {\n    if (src.colorTheme.name !== 'uniform' || tar.colorTheme.name !== 'uniform') {\n      return t <= 0.5 ? src : tar;\n    }\n\n    var from = src.colorTheme.params.value,\n        to = tar.colorTheme.params.value;\n    var value = Color.interpolate(from, to, t);\n    return {\n      type: t <= 0.5 ? src.type : tar.type,\n      colorTheme: {\n        name: 'uniform',\n        params: {\n          value: value\n        }\n      },\n      sizeTheme: t <= 0.5 ? src.sizeTheme : tar.sizeTheme\n    };\n  }\n});\nvar UnwindStructureAssemblyRepresentation3D = PluginStateTransform.BuiltIn({\n  name: 'unwind-structure-assembly-representation-3d',\n  display: 'Unwind Assembly 3D Representation',\n  from: SO.Molecule.Structure.Representation3D,\n  to: SO.Molecule.Structure.Representation3DState,\n  params: {\n    t: PD.Numeric(0, {\n      min: 0,\n      max: 1,\n      step: 0.01\n    })\n  }\n})({\n  canAutoUpdate: function () {\n    return true;\n  },\n  apply: function (_a) {\n    var a = _a.a,\n        params = _a.params;\n    var structure = a.data.sourceData;\n    var unitTransforms = new StructureUnitTransforms(structure);\n    unwindStructureAssembly(structure, unitTransforms, params.t);\n    return new SO.Molecule.Structure.Representation3DState({\n      state: {\n        unitTransforms: unitTransforms\n      },\n      initialState: {\n        unitTransforms: new StructureUnitTransforms(structure)\n      },\n      info: structure,\n      repr: a.data.repr\n    }, {\n      label: \"Unwind T = \" + params.t.toFixed(2)\n    });\n  },\n  update: function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        newParams = _a.newParams,\n        oldParams = _a.oldParams;\n    var structure = b.data.info;\n    if (a.data.sourceData !== structure) return StateTransformer.UpdateResult.Recreate;\n    if (a.data.repr !== b.data.repr) return StateTransformer.UpdateResult.Recreate;\n    if (oldParams.t === newParams.t) return StateTransformer.UpdateResult.Unchanged;\n    var unitTransforms = b.data.state.unitTransforms;\n    unwindStructureAssembly(structure, unitTransforms, newParams.t);\n    b.label = \"Unwind T = \" + newParams.t.toFixed(2);\n    b.data.repr = a.data.repr;\n    return StateTransformer.UpdateResult.Updated;\n  }\n});\nvar ExplodeStructureRepresentation3D = PluginStateTransform.BuiltIn({\n  name: 'explode-structure-representation-3d',\n  display: 'Explode 3D Representation',\n  from: SO.Molecule.Structure.Representation3D,\n  to: SO.Molecule.Structure.Representation3DState,\n  params: {\n    t: PD.Numeric(0, {\n      min: 0,\n      max: 1,\n      step: 0.01\n    })\n  }\n})({\n  canAutoUpdate: function () {\n    return true;\n  },\n  apply: function (_a) {\n    var a = _a.a,\n        params = _a.params;\n    var structure = a.data.sourceData;\n    var unitTransforms = new StructureUnitTransforms(structure);\n    explodeStructure(structure, unitTransforms, params.t, structure.root.boundary.sphere);\n    return new SO.Molecule.Structure.Representation3DState({\n      state: {\n        unitTransforms: unitTransforms\n      },\n      initialState: {\n        unitTransforms: new StructureUnitTransforms(structure)\n      },\n      info: structure,\n      repr: a.data.repr\n    }, {\n      label: \"Explode T = \" + params.t.toFixed(2)\n    });\n  },\n  update: function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        newParams = _a.newParams,\n        oldParams = _a.oldParams;\n    var structure = a.data.sourceData;\n    if (b.data.info !== structure) return StateTransformer.UpdateResult.Recreate;\n    if (a.data.repr !== b.data.repr) return StateTransformer.UpdateResult.Recreate;\n    if (oldParams.t === newParams.t) return StateTransformer.UpdateResult.Unchanged;\n    var unitTransforms = b.data.state.unitTransforms;\n    explodeStructure(structure, unitTransforms, newParams.t, structure.root.boundary.sphere);\n    b.label = \"Explode T = \" + newParams.t.toFixed(2);\n    b.data.repr = a.data.repr;\n    return StateTransformer.UpdateResult.Updated;\n  }\n});\nvar SpinStructureRepresentation3D = PluginStateTransform.BuiltIn({\n  name: 'spin-structure-representation-3d',\n  display: 'Spin 3D Representation',\n  from: SO.Molecule.Structure.Representation3D,\n  to: SO.Molecule.Structure.Representation3DState,\n  params: __assign({\n    t: PD.Numeric(0, {\n      min: 0,\n      max: 1,\n      step: 0.01\n    })\n  }, SpinStructureParams)\n})({\n  canAutoUpdate: function () {\n    return true;\n  },\n  apply: function (_a) {\n    var a = _a.a,\n        params = _a.params;\n    var structure = a.data.sourceData;\n    var unitTransforms = new StructureUnitTransforms(structure);\n\n    var _b = getSpinStructureAxisAndOrigin(structure.root, params),\n        axis = _b.axis,\n        origin = _b.origin;\n\n    spinStructure(structure, unitTransforms, params.t, axis, origin);\n    return new SO.Molecule.Structure.Representation3DState({\n      state: {\n        unitTransforms: unitTransforms\n      },\n      initialState: {\n        unitTransforms: new StructureUnitTransforms(structure)\n      },\n      info: structure,\n      repr: a.data.repr\n    }, {\n      label: \"Spin T = \" + params.t.toFixed(2)\n    });\n  },\n  update: function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        newParams = _a.newParams,\n        oldParams = _a.oldParams;\n    var structure = a.data.sourceData;\n    if (b.data.info !== structure) return StateTransformer.UpdateResult.Recreate;\n    if (a.data.repr !== b.data.repr) return StateTransformer.UpdateResult.Recreate;\n    if (oldParams.t === newParams.t && oldParams.axis === newParams.axis && oldParams.origin === newParams.origin) return StateTransformer.UpdateResult.Unchanged;\n    var unitTransforms = b.data.state.unitTransforms;\n\n    var _b = getSpinStructureAxisAndOrigin(structure.root, newParams),\n        axis = _b.axis,\n        origin = _b.origin;\n\n    spinStructure(structure, unitTransforms, newParams.t, axis, origin);\n    b.label = \"Spin T = \" + newParams.t.toFixed(2);\n    b.data.repr = a.data.repr;\n    return StateTransformer.UpdateResult.Updated;\n  }\n});\nvar OverpaintStructureRepresentation3DFromScript = PluginStateTransform.BuiltIn({\n  name: 'overpaint-structure-representation-3d-from-script',\n  display: 'Overpaint 3D Representation',\n  from: SO.Molecule.Structure.Representation3D,\n  to: SO.Molecule.Structure.Representation3DState,\n  params: function () {\n    return {\n      layers: PD.ObjectList({\n        script: PD.Script(Script('(sel.atom.all)', 'mol-script')),\n        color: PD.Color(ColorNames.blueviolet),\n        clear: PD.Boolean(false)\n      }, function (e) {\n        return \"\" + (e.clear ? 'Clear' : Color.toRgbString(e.color));\n      }, {\n        defaultValue: [{\n          script: Script('(sel.atom.all)', 'mol-script'),\n          color: ColorNames.blueviolet,\n          clear: false\n        }]\n      })\n    };\n  }\n})({\n  canAutoUpdate: function () {\n    return true;\n  },\n  apply: function (_a) {\n    var a = _a.a,\n        params = _a.params;\n    var structure = a.data.sourceData;\n    var overpaint = Overpaint.ofScript(params.layers, structure);\n    return new SO.Molecule.Structure.Representation3DState({\n      state: {\n        overpaint: overpaint\n      },\n      initialState: {\n        overpaint: Overpaint.Empty\n      },\n      info: structure,\n      repr: a.data.repr\n    }, {\n      label: \"Overpaint (\" + overpaint.layers.length + \" Layers)\"\n    });\n  },\n  update: function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        newParams = _a.newParams,\n        oldParams = _a.oldParams;\n    var oldStructure = b.data.info;\n    var newStructure = a.data.sourceData;\n    if (newStructure !== oldStructure) return StateTransformer.UpdateResult.Recreate;\n    if (a.data.repr !== b.data.repr) return StateTransformer.UpdateResult.Recreate;\n    var oldOverpaint = b.data.state.overpaint;\n    var newOverpaint = Overpaint.ofScript(newParams.layers, newStructure);\n    if (Overpaint.areEqual(oldOverpaint, newOverpaint)) return StateTransformer.UpdateResult.Unchanged;\n    b.data.state.overpaint = newOverpaint;\n    b.data.repr = a.data.repr;\n    b.label = \"Overpaint (\" + newOverpaint.layers.length + \" Layers)\";\n    return StateTransformer.UpdateResult.Updated;\n  }\n});\nvar OverpaintStructureRepresentation3DFromBundle = PluginStateTransform.BuiltIn({\n  name: 'overpaint-structure-representation-3d-from-bundle',\n  display: 'Overpaint 3D Representation',\n  from: SO.Molecule.Structure.Representation3D,\n  to: SO.Molecule.Structure.Representation3DState,\n  params: function () {\n    return {\n      layers: PD.ObjectList({\n        bundle: PD.Value(StructureElement.Bundle.Empty),\n        color: PD.Color(ColorNames.blueviolet),\n        clear: PD.Boolean(false)\n      }, function (e) {\n        return \"\" + (e.clear ? 'Clear' : Color.toRgbString(e.color));\n      }, {\n        defaultValue: [{\n          bundle: StructureElement.Bundle.Empty,\n          color: ColorNames.blueviolet,\n          clear: false\n        }],\n        isHidden: true\n      })\n    };\n  }\n})({\n  canAutoUpdate: function () {\n    return true;\n  },\n  apply: function (_a) {\n    var a = _a.a,\n        params = _a.params;\n    var structure = a.data.sourceData;\n    var overpaint = Overpaint.ofBundle(params.layers, structure);\n    return new SO.Molecule.Structure.Representation3DState({\n      state: {\n        overpaint: overpaint\n      },\n      initialState: {\n        overpaint: Overpaint.Empty\n      },\n      info: structure,\n      repr: a.data.repr\n    }, {\n      label: \"Overpaint (\" + overpaint.layers.length + \" Layers)\"\n    });\n  },\n  update: function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        newParams = _a.newParams,\n        oldParams = _a.oldParams;\n    var oldStructure = b.data.info;\n    var newStructure = a.data.sourceData;\n    if (newStructure !== oldStructure) return StateTransformer.UpdateResult.Recreate;\n    if (a.data.repr !== b.data.repr) return StateTransformer.UpdateResult.Recreate;\n    var oldOverpaint = b.data.state.overpaint;\n    var newOverpaint = Overpaint.ofBundle(newParams.layers, newStructure);\n    if (Overpaint.areEqual(oldOverpaint, newOverpaint)) return StateTransformer.UpdateResult.Unchanged;\n    b.data.state.overpaint = newOverpaint;\n    b.data.repr = a.data.repr;\n    b.label = \"Overpaint (\" + newOverpaint.layers.length + \" Layers)\";\n    return StateTransformer.UpdateResult.Updated;\n  }\n});\nvar TransparencyStructureRepresentation3DFromScript = PluginStateTransform.BuiltIn({\n  name: 'transparency-structure-representation-3d-from-script',\n  display: 'Transparency 3D Representation',\n  from: SO.Molecule.Structure.Representation3D,\n  to: SO.Molecule.Structure.Representation3DState,\n  params: function () {\n    return {\n      layers: PD.ObjectList({\n        script: PD.Script(Script('(sel.atom.all)', 'mol-script')),\n        value: PD.Numeric(0.5, {\n          min: 0,\n          max: 1,\n          step: 0.01\n        }, {\n          label: 'Transparency'\n        })\n      }, function (e) {\n        return \"Transparency (\" + e.value + \")\";\n      }, {\n        defaultValue: [{\n          script: Script('(sel.atom.all)', 'mol-script'),\n          value: 0.5\n        }]\n      })\n    };\n  }\n})({\n  canAutoUpdate: function () {\n    return true;\n  },\n  apply: function (_a) {\n    var a = _a.a,\n        params = _a.params;\n    var structure = a.data.sourceData;\n    var transparency = Transparency.ofScript(params.layers, structure);\n    return new SO.Molecule.Structure.Representation3DState({\n      state: {\n        transparency: transparency\n      },\n      initialState: {\n        transparency: Transparency.Empty\n      },\n      info: structure,\n      repr: a.data.repr\n    }, {\n      label: \"Transparency (\" + transparency.layers.length + \" Layers)\"\n    });\n  },\n  update: function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        newParams = _a.newParams,\n        oldParams = _a.oldParams;\n    var structure = b.data.info;\n    if (a.data.sourceData !== structure) return StateTransformer.UpdateResult.Recreate;\n    if (a.data.repr !== b.data.repr) return StateTransformer.UpdateResult.Recreate;\n    var oldTransparency = b.data.state.transparency;\n    var newTransparency = Transparency.ofScript(newParams.layers, structure);\n    if (Transparency.areEqual(oldTransparency, newTransparency)) return StateTransformer.UpdateResult.Unchanged;\n    b.data.state.transparency = newTransparency;\n    b.data.repr = a.data.repr;\n    b.label = \"Transparency (\" + newTransparency.layers.length + \" Layers)\";\n    return StateTransformer.UpdateResult.Updated;\n  }\n});\nvar TransparencyStructureRepresentation3DFromBundle = PluginStateTransform.BuiltIn({\n  name: 'transparency-structure-representation-3d-from-bundle',\n  display: 'Transparency 3D Representation',\n  from: SO.Molecule.Structure.Representation3D,\n  to: SO.Molecule.Structure.Representation3DState,\n  params: function () {\n    return {\n      layers: PD.ObjectList({\n        bundle: PD.Value(StructureElement.Bundle.Empty),\n        value: PD.Numeric(0.5, {\n          min: 0,\n          max: 1,\n          step: 0.01\n        }, {\n          label: 'Transparency'\n        })\n      }, function (e) {\n        return \"Transparency (\" + e.value + \")\";\n      }, {\n        defaultValue: [{\n          bundle: StructureElement.Bundle.Empty,\n          value: 0.5\n        }],\n        isHidden: true\n      })\n    };\n  }\n})({\n  canAutoUpdate: function () {\n    return true;\n  },\n  apply: function (_a) {\n    var a = _a.a,\n        params = _a.params;\n    var structure = a.data.sourceData;\n    var transparency = Transparency.ofBundle(params.layers, structure);\n    return new SO.Molecule.Structure.Representation3DState({\n      state: {\n        transparency: transparency\n      },\n      initialState: {\n        transparency: Transparency.Empty\n      },\n      info: structure,\n      repr: a.data.repr\n    }, {\n      label: \"Transparency (\" + transparency.layers.length + \" Layers)\"\n    });\n  },\n  update: function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        newParams = _a.newParams,\n        oldParams = _a.oldParams;\n    var structure = b.data.info;\n    if (a.data.sourceData !== structure) return StateTransformer.UpdateResult.Recreate;\n    if (a.data.repr !== b.data.repr) return StateTransformer.UpdateResult.Recreate;\n    var oldTransparency = b.data.state.transparency;\n    var newTransparency = Transparency.ofBundle(newParams.layers, structure);\n    if (Transparency.areEqual(oldTransparency, newTransparency)) return StateTransformer.UpdateResult.Unchanged;\n    b.data.state.transparency = newTransparency;\n    b.data.repr = a.data.repr;\n    b.label = \"Transparency (\" + newTransparency.layers.length + \" Layers)\";\n    return StateTransformer.UpdateResult.Updated;\n  }\n});\nvar ClippingStructureRepresentation3DFromScript = PluginStateTransform.BuiltIn({\n  name: 'clipping-structure-representation-3d-from-script',\n  display: 'Clipping 3D Representation',\n  from: SO.Molecule.Structure.Representation3D,\n  to: SO.Molecule.Structure.Representation3DState,\n  params: function () {\n    return {\n      layers: PD.ObjectList({\n        script: PD.Script(Script('(sel.atom.all)', 'mol-script')),\n        groups: PD.Converted(function (g) {\n          return Clipping.Groups.toNames(g);\n        }, function (n) {\n          return Clipping.Groups.fromNames(n);\n        }, PD.MultiSelect(ObjectKeys(Clipping.Groups.Names), PD.objectToOptions(Clipping.Groups.Names)))\n      }, function (e) {\n        return Clipping.Groups.toNames(e.groups).length + \" group(s)\";\n      }, {\n        defaultValue: [{\n          script: Script('(sel.atom.all)', 'mol-script'),\n          groups: 0\n          /* None */\n\n        }]\n      })\n    };\n  }\n})({\n  canAutoUpdate: function () {\n    return true;\n  },\n  apply: function (_a) {\n    var a = _a.a,\n        params = _a.params;\n    var structure = a.data.sourceData;\n    var clipping = Clipping.ofScript(params.layers, structure);\n    return new SO.Molecule.Structure.Representation3DState({\n      state: {\n        clipping: clipping\n      },\n      initialState: {\n        clipping: Clipping.Empty\n      },\n      info: structure,\n      repr: a.data.repr\n    }, {\n      label: \"Clipping (\" + clipping.layers.length + \" Layers)\"\n    });\n  },\n  update: function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        newParams = _a.newParams,\n        oldParams = _a.oldParams;\n    var structure = b.data.info;\n    if (a.data.sourceData !== structure) return StateTransformer.UpdateResult.Recreate;\n    if (a.data.repr !== b.data.repr) return StateTransformer.UpdateResult.Recreate;\n    var oldClipping = b.data.state.clipping;\n    var newClipping = Clipping.ofScript(newParams.layers, structure);\n    if (Clipping.areEqual(oldClipping, newClipping)) return StateTransformer.UpdateResult.Unchanged;\n    b.data.state.clipping = newClipping;\n    b.data.repr = a.data.repr;\n    b.label = \"Clipping (\" + newClipping.layers.length + \" Layers)\";\n    return StateTransformer.UpdateResult.Updated;\n  }\n});\nvar ClippingStructureRepresentation3DFromBundle = PluginStateTransform.BuiltIn({\n  name: 'clipping-structure-representation-3d-from-bundle',\n  display: 'Clipping 3D Representation',\n  from: SO.Molecule.Structure.Representation3D,\n  to: SO.Molecule.Structure.Representation3DState,\n  params: function () {\n    return {\n      layers: PD.ObjectList({\n        bundle: PD.Value(StructureElement.Bundle.Empty),\n        groups: PD.Converted(function (g) {\n          return Clipping.Groups.toNames(g);\n        }, function (n) {\n          return Clipping.Groups.fromNames(n);\n        }, PD.MultiSelect(ObjectKeys(Clipping.Groups.Names), PD.objectToOptions(Clipping.Groups.Names)))\n      }, function (e) {\n        return Clipping.Groups.toNames(e.groups).length + \" group(s)\";\n      }, {\n        defaultValue: [{\n          bundle: StructureElement.Bundle.Empty,\n          groups: 0\n          /* None */\n\n        }],\n        isHidden: true\n      })\n    };\n  }\n})({\n  canAutoUpdate: function () {\n    return true;\n  },\n  apply: function (_a) {\n    var a = _a.a,\n        params = _a.params;\n    var structure = a.data.sourceData;\n    var clipping = Clipping.ofBundle(params.layers, structure);\n    return new SO.Molecule.Structure.Representation3DState({\n      state: {\n        clipping: clipping\n      },\n      initialState: {\n        clipping: Clipping.Empty\n      },\n      info: structure,\n      repr: a.data.repr\n    }, {\n      label: \"Clipping (\" + clipping.layers.length + \" Layers)\"\n    });\n  },\n  update: function (_a) {\n    var a = _a.a,\n        b = _a.b,\n        newParams = _a.newParams,\n        oldParams = _a.oldParams;\n    var structure = b.data.info;\n    if (a.data.sourceData !== structure) return StateTransformer.UpdateResult.Recreate;\n    if (a.data.repr !== b.data.repr) return StateTransformer.UpdateResult.Recreate;\n    var oldClipping = b.data.state.clipping;\n    var newClipping = Clipping.ofBundle(newParams.layers, structure);\n    if (Clipping.areEqual(oldClipping, newClipping)) return StateTransformer.UpdateResult.Unchanged;\n    b.data.state.clipping = newClipping;\n    b.data.repr = a.data.repr;\n    b.label = \"Clipping (\" + newClipping.layers.length + \" Layers)\";\n    return StateTransformer.UpdateResult.Updated;\n  }\n}); //\n\nexport var VolumeRepresentation3DHelpers;\n\n(function (VolumeRepresentation3DHelpers) {\n  function getDefaultParams(ctx, name, volume, volumeParams) {\n    var type = ctx.representation.volume.registry.get(name);\n    var themeDataCtx = {\n      volume: volume\n    };\n    var colorParams = ctx.representation.volume.themes.colorThemeRegistry.get(type.defaultColorTheme.name).getParams(themeDataCtx);\n    var sizeParams = ctx.representation.volume.themes.sizeThemeRegistry.get(type.defaultSizeTheme.name).getParams(themeDataCtx);\n    var volumeDefaultParams = PD.getDefaultValues(type.getParams(ctx.representation.volume.themes, volume));\n    return {\n      type: {\n        name: name,\n        params: volumeParams ? __assign(__assign({}, volumeDefaultParams), volumeParams) : volumeDefaultParams\n      },\n      colorTheme: {\n        name: type.defaultColorTheme.name,\n        params: PD.getDefaultValues(colorParams)\n      },\n      sizeTheme: {\n        name: type.defaultSizeTheme.name,\n        params: PD.getDefaultValues(sizeParams)\n      }\n    };\n  }\n\n  VolumeRepresentation3DHelpers.getDefaultParams = getDefaultParams;\n\n  function getDefaultParamsStatic(ctx, name, volumeParams, colorName, colorParams, sizeName, sizeParams) {\n    var type = ctx.representation.volume.registry.get(name);\n    var colorType = ctx.representation.volume.themes.colorThemeRegistry.get(colorName || type.defaultColorTheme.name);\n    var sizeType = ctx.representation.volume.themes.sizeThemeRegistry.get(sizeName || type.defaultSizeTheme.name);\n    return {\n      type: {\n        name: name,\n        params: volumeParams ? __assign(__assign({}, type.defaultValues), volumeParams) : type.defaultValues\n      },\n      colorTheme: {\n        name: type.defaultColorTheme.name,\n        params: colorParams ? __assign(__assign({}, colorType.defaultValues), colorParams) : colorType.defaultValues\n      },\n      sizeTheme: {\n        name: type.defaultSizeTheme.name,\n        params: sizeParams ? __assign(__assign({}, sizeType.defaultValues), sizeParams) : sizeType.defaultValues\n      }\n    };\n  }\n\n  VolumeRepresentation3DHelpers.getDefaultParamsStatic = getDefaultParamsStatic;\n\n  function getDescription(props) {\n    var _a, _b, _c, _d;\n\n    if (props.isoValue) {\n      return Volume.IsoValue.toString(props.isoValue);\n    } else if ((_b = (_a = props.renderMode) === null || _a === void 0 ? void 0 : _a.params) === null || _b === void 0 ? void 0 : _b.isoValue) {\n      return Volume.IsoValue.toString((_d = (_c = props.renderMode) === null || _c === void 0 ? void 0 : _c.params) === null || _d === void 0 ? void 0 : _d.isoValue);\n    }\n  }\n\n  VolumeRepresentation3DHelpers.getDescription = getDescription;\n})(VolumeRepresentation3DHelpers || (VolumeRepresentation3DHelpers = {}));\n\nvar VolumeRepresentation3D = PluginStateTransform.BuiltIn({\n  name: 'volume-representation-3d',\n  display: '3D Representation',\n  from: SO.Volume.Data,\n  to: SO.Volume.Representation3D,\n  params: function (a, ctx) {\n    var _a = ctx.representation.volume,\n        registry = _a.registry,\n        themeCtx = _a.themes;\n    var type = registry.get(registry.default.name);\n\n    if (!a) {\n      return {\n        type: PD.Mapped(registry.default.name, registry.types, function (name) {\n          return PD.Group(registry.get(name).getParams(themeCtx, Volume.One));\n        }),\n        colorTheme: PD.Mapped(type.defaultColorTheme.name, themeCtx.colorThemeRegistry.types, function (name) {\n          return PD.Group(themeCtx.colorThemeRegistry.get(name).getParams({\n            volume: Volume.One\n          }));\n        }),\n        sizeTheme: PD.Mapped(type.defaultSizeTheme.name, themeCtx.sizeThemeRegistry.types, function (name) {\n          return PD.Group(themeCtx.sizeThemeRegistry.get(name).getParams({\n            volume: Volume.One\n          }));\n        })\n      };\n    }\n\n    var dataCtx = {\n      volume: a.data\n    };\n    return {\n      type: PD.Mapped(registry.default.name, registry.types, function (name) {\n        return PD.Group(registry.get(name).getParams(themeCtx, a.data));\n      }),\n      colorTheme: PD.Mapped(type.defaultColorTheme.name, themeCtx.colorThemeRegistry.getApplicableTypes(dataCtx), function (name) {\n        return PD.Group(themeCtx.colorThemeRegistry.get(name).getParams(dataCtx));\n      }),\n      sizeTheme: PD.Mapped(type.defaultSizeTheme.name, themeCtx.sizeThemeRegistry.types, function (name) {\n        return PD.Group(themeCtx.sizeThemeRegistry.get(name).getParams(dataCtx));\n      })\n    };\n  }\n})({\n  canAutoUpdate: function (_a) {\n    var oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return oldParams.type.name === newParams.type.name;\n  },\n  apply: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Volume Representation', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var propertyCtx, provider, repr, props;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              propertyCtx = {\n                runtime: ctx,\n                assetManager: plugin.managers.asset\n              };\n              provider = plugin.representation.volume.registry.get(params.type.name);\n              if (!provider.ensureCustomProperties) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , provider.ensureCustomProperties.attach(propertyCtx, a.data)];\n\n            case 1:\n              _b.sent();\n\n              _b.label = 2;\n\n            case 2:\n              repr = provider.factory(__assign({\n                webgl: (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.webgl\n              }, plugin.representation.volume.themes), provider.getParams);\n              repr.setTheme(Theme.create(plugin.representation.volume.themes, {\n                volume: a.data\n              }, params));\n              props = params.type.params || {};\n              return [4\n              /*yield*/\n              , repr.createOrUpdate(props, a.data).runInContext(ctx)];\n\n            case 3:\n              _b.sent();\n\n              return [2\n              /*return*/\n              , new SO.Volume.Representation3D({\n                repr: repr,\n                sourceData: a.data\n              }, {\n                label: provider.label,\n                description: VolumeRepresentation3DHelpers.getDescription(props)\n              })];\n          }\n        });\n      });\n    });\n  },\n  update: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return Task.create('Volume Representation', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var oldProvider, props;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (newParams.type.name !== oldParams.type.name) {\n                oldProvider = plugin.representation.volume.registry.get(oldParams.type.name);\n                (_a = oldProvider.ensureCustomProperties) === null || _a === void 0 ? void 0 : _a.detach(a.data);\n                return [2\n                /*return*/\n                , StateTransformer.UpdateResult.Recreate];\n              }\n\n              props = __assign(__assign({}, b.data.repr.props), newParams.type.params);\n              b.data.repr.setTheme(Theme.create(plugin.representation.volume.themes, {\n                volume: a.data\n              }, newParams));\n              return [4\n              /*yield*/\n              , b.data.repr.createOrUpdate(props, a.data).runInContext(ctx)];\n\n            case 1:\n              _b.sent();\n\n              b.data.sourceData = a.data;\n              b.description = VolumeRepresentation3DHelpers.getDescription(props);\n              return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Updated];\n          }\n        });\n      });\n    });\n  }\n}); //\n\nexport { ShapeRepresentation3D };\nvar ShapeRepresentation3D = PluginStateTransform.BuiltIn({\n  name: 'shape-representation-3d',\n  display: '3D Representation',\n  from: SO.Shape.Provider,\n  to: SO.Shape.Representation3D,\n  params: function (a, ctx) {\n    return a ? a.data.params : BaseGeometry.Params;\n  }\n})({\n  canAutoUpdate: function () {\n    return true;\n  },\n  apply: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Shape Representation', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var props, repr;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              props = __assign(__assign({}, PD.getDefaultValues(a.data.params)), params);\n              repr = ShapeRepresentation(a.data.getShape, a.data.geometryUtils);\n              return [4\n              /*yield*/\n              , repr.createOrUpdate(props, a.data.data).runInContext(ctx)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              , new SO.Shape.Representation3D({\n                repr: repr,\n                sourceData: a.data\n              }, {\n                label: a.data.label\n              })];\n          }\n        });\n      });\n    });\n  },\n  update: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return Task.create('Shape Representation', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var props;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              props = __assign(__assign({}, b.data.repr.props), newParams);\n              return [4\n              /*yield*/\n              , b.data.repr.createOrUpdate(props, a.data.data).runInContext(ctx)];\n\n            case 1:\n              _a.sent();\n\n              b.data.sourceData = a.data;\n              return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Updated];\n          }\n        });\n      });\n    });\n  }\n});\nexport { ModelUnitcell3D };\nvar ModelUnitcell3D = PluginStateTransform.BuiltIn({\n  name: 'model-unitcell-3d',\n  display: 'Model Unit Cell',\n  from: SO.Molecule.Model,\n  to: SO.Shape.Representation3D,\n  params: function () {\n    return __assign({}, UnitcellParams);\n  }\n})({\n  isApplicable: function (a) {\n    return !!ModelSymmetry.Provider.get(a.data);\n  },\n  canAutoUpdate: function (_a) {\n    var oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return true;\n  },\n  apply: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Model Unit Cell', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var symmetry, data, repr;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              symmetry = ModelSymmetry.Provider.get(a.data);\n              if (!symmetry) return [2\n              /*return*/\n              , StateObject.Null];\n              data = getUnitcellData(a.data, symmetry, params);\n              repr = UnitcellRepresentation(__assign({\n                webgl: (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.webgl\n              }, plugin.representation.structure.themes), function () {\n                return UnitcellParams;\n              });\n              return [4\n              /*yield*/\n              , repr.createOrUpdate(params, data).runInContext(ctx)];\n\n            case 1:\n              _b.sent();\n\n              return [2\n              /*return*/\n              , new SO.Shape.Representation3D({\n                repr: repr,\n                sourceData: data\n              }, {\n                label: \"Unit Cell\",\n                description: symmetry.spacegroup.name\n              })];\n          }\n        });\n      });\n    });\n  },\n  update: function (_a) {\n    var _this = this;\n\n    var a = _a.a,\n        b = _a.b,\n        newParams = _a.newParams;\n    return Task.create('Model Unit Cell', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var symmetry, props, data;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              symmetry = ModelSymmetry.Provider.get(a.data);\n              if (!symmetry) return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Null];\n              props = __assign(__assign({}, b.data.repr.props), newParams);\n              data = getUnitcellData(a.data, symmetry, props);\n              return [4\n              /*yield*/\n              , b.data.repr.createOrUpdate(props, data).runInContext(ctx)];\n\n            case 1:\n              _a.sent();\n\n              b.data.sourceData = data;\n              return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Updated];\n          }\n        });\n      });\n    });\n  }\n});\nexport { StructureBoundingBox3D };\nvar StructureBoundingBox3D = PluginStateTransform.BuiltIn({\n  name: 'structure-bounding-box-3d',\n  display: 'Bounding Box',\n  from: SO.Molecule.Structure,\n  to: SO.Shape.Representation3D,\n  params: __assign({\n    radius: PD.Numeric(0.05, {\n      min: 0.01,\n      max: 4,\n      step: 0.01\n    }, {\n      isEssential: true\n    }),\n    color: PD.Color(ColorNames.red, {\n      isEssential: true\n    })\n  }, Mesh.Params)\n})({\n  canAutoUpdate: function () {\n    return true;\n  },\n  apply: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Bounding Box', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var repr;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              repr = ShapeRepresentation(function (_, data, __, shape) {\n                var mesh = getBoxMesh(data.box, data.radius, shape === null || shape === void 0 ? void 0 : shape.geometry);\n                return Shape.create('Bouding Box', data, mesh, function () {\n                  return data.color;\n                }, function () {\n                  return 1;\n                }, function () {\n                  return 'Bounding Box';\n                });\n              }, Mesh.Utils);\n              return [4\n              /*yield*/\n              , repr.createOrUpdate(params, {\n                box: a.data.boundary.box,\n                radius: params.radius,\n                color: params.color\n              }).runInContext(ctx)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              , new SO.Shape.Representation3D({\n                repr: repr,\n                sourceData: a.data\n              }, {\n                label: \"Bounding Box\"\n              })];\n          }\n        });\n      });\n    });\n  },\n  update: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return Task.create('Bounding Box', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , b.data.repr.createOrUpdate(newParams, {\n                box: a.data.boundary.box,\n                radius: newParams.radius,\n                color: newParams.color\n              }).runInContext(ctx)];\n\n            case 1:\n              _a.sent();\n\n              b.data.sourceData = a.data;\n              return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Updated];\n          }\n        });\n      });\n    });\n  }\n});\nexport { StructureSelectionsDistance3D };\nvar StructureSelectionsDistance3D = PluginStateTransform.BuiltIn({\n  name: 'structure-selections-distance-3d',\n  display: '3D Distance',\n  from: SO.Molecule.Structure.Selections,\n  to: SO.Shape.Representation3D,\n  params: function () {\n    return __assign({}, DistanceParams);\n  }\n})({\n  canAutoUpdate: function (_a) {\n    var oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return true;\n  },\n  apply: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Structure Distance', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var data, repr;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              data = getDistanceDataFromStructureSelections(a.data);\n              repr = DistanceRepresentation(__assign({\n                webgl: (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.webgl\n              }, plugin.representation.structure.themes), function () {\n                return DistanceParams;\n              });\n              return [4\n              /*yield*/\n              , repr.createOrUpdate(params, data).runInContext(ctx)];\n\n            case 1:\n              _b.sent();\n\n              return [2\n              /*return*/\n              , new SO.Shape.Representation3D({\n                repr: repr,\n                sourceData: data\n              }, {\n                label: \"Distance\"\n              })];\n          }\n        });\n      });\n    });\n  },\n  update: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return Task.create('Structure Distance', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var props, data;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              props = __assign(__assign({}, b.data.repr.props), newParams);\n              data = getDistanceDataFromStructureSelections(a.data);\n              return [4\n              /*yield*/\n              , b.data.repr.createOrUpdate(props, data).runInContext(ctx)];\n\n            case 1:\n              _a.sent();\n\n              b.data.sourceData = data;\n              return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Updated];\n          }\n        });\n      });\n    });\n  }\n});\nexport { StructureSelectionsAngle3D };\nvar StructureSelectionsAngle3D = PluginStateTransform.BuiltIn({\n  name: 'structure-selections-angle-3d',\n  display: '3D Angle',\n  from: SO.Molecule.Structure.Selections,\n  to: SO.Shape.Representation3D,\n  params: function () {\n    return __assign({}, AngleParams);\n  }\n})({\n  canAutoUpdate: function (_a) {\n    var oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return true;\n  },\n  apply: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Structure Angle', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var data, repr;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              data = getAngleDataFromStructureSelections(a.data);\n              repr = AngleRepresentation(__assign({\n                webgl: (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.webgl\n              }, plugin.representation.structure.themes), function () {\n                return AngleParams;\n              });\n              return [4\n              /*yield*/\n              , repr.createOrUpdate(params, data).runInContext(ctx)];\n\n            case 1:\n              _b.sent();\n\n              return [2\n              /*return*/\n              , new SO.Shape.Representation3D({\n                repr: repr,\n                sourceData: data\n              }, {\n                label: \"Angle\"\n              })];\n          }\n        });\n      });\n    });\n  },\n  update: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return Task.create('Structure Angle', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var props, data;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              props = __assign(__assign({}, b.data.repr.props), newParams);\n              data = getAngleDataFromStructureSelections(a.data);\n              return [4\n              /*yield*/\n              , b.data.repr.createOrUpdate(props, data).runInContext(ctx)];\n\n            case 1:\n              _a.sent();\n\n              b.data.sourceData = data;\n              return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Updated];\n          }\n        });\n      });\n    });\n  }\n});\nexport { StructureSelectionsDihedral3D };\nvar StructureSelectionsDihedral3D = PluginStateTransform.BuiltIn({\n  name: 'structure-selections-dihedral-3d',\n  display: '3D Dihedral',\n  from: SO.Molecule.Structure.Selections,\n  to: SO.Shape.Representation3D,\n  params: function () {\n    return __assign({}, DihedralParams);\n  }\n})({\n  canAutoUpdate: function (_a) {\n    var oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return true;\n  },\n  apply: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Structure Dihedral', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var data, repr;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              data = getDihedralDataFromStructureSelections(a.data);\n              repr = DihedralRepresentation(__assign({\n                webgl: (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.webgl\n              }, plugin.representation.structure.themes), function () {\n                return DihedralParams;\n              });\n              return [4\n              /*yield*/\n              , repr.createOrUpdate(params, data).runInContext(ctx)];\n\n            case 1:\n              _b.sent();\n\n              return [2\n              /*return*/\n              , new SO.Shape.Representation3D({\n                repr: repr,\n                sourceData: data\n              }, {\n                label: \"Dihedral\"\n              })];\n          }\n        });\n      });\n    });\n  },\n  update: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return Task.create('Structure Dihedral', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var props, data;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              props = __assign(__assign({}, b.data.repr.props), newParams);\n              data = getDihedralDataFromStructureSelections(a.data);\n              return [4\n              /*yield*/\n              , b.data.repr.createOrUpdate(props, data).runInContext(ctx)];\n\n            case 1:\n              _a.sent();\n\n              b.data.sourceData = data;\n              return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Updated];\n          }\n        });\n      });\n    });\n  }\n});\nexport { StructureSelectionsLabel3D };\nvar StructureSelectionsLabel3D = PluginStateTransform.BuiltIn({\n  name: 'structure-selections-label-3d',\n  display: '3D Label',\n  from: SO.Molecule.Structure.Selections,\n  to: SO.Shape.Representation3D,\n  params: function () {\n    return __assign({}, LabelParams);\n  }\n})({\n  canAutoUpdate: function (_a) {\n    var oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return true;\n  },\n  apply: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Structure Label', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var data, repr;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              data = getLabelDataFromStructureSelections(a.data);\n              repr = LabelRepresentation(__assign({\n                webgl: (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.webgl\n              }, plugin.representation.structure.themes), function () {\n                return LabelParams;\n              });\n              return [4\n              /*yield*/\n              , repr.createOrUpdate(params, data).runInContext(ctx)];\n\n            case 1:\n              _b.sent();\n\n              return [2\n              /*return*/\n              , new SO.Shape.Representation3D({\n                repr: repr,\n                sourceData: data\n              }, {\n                label: \"Label\"\n              })];\n          }\n        });\n      });\n    });\n  },\n  update: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return Task.create('Structure Label', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var props, data;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              props = __assign(__assign({}, b.data.repr.props), newParams);\n              data = getLabelDataFromStructureSelections(a.data);\n              return [4\n              /*yield*/\n              , b.data.repr.createOrUpdate(props, data).runInContext(ctx)];\n\n            case 1:\n              _a.sent();\n\n              b.data.sourceData = data;\n              return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Updated];\n          }\n        });\n      });\n    });\n  }\n});\nexport { StructureSelectionsOrientation3D };\nvar StructureSelectionsOrientation3D = PluginStateTransform.BuiltIn({\n  name: 'structure-selections-orientation-3d',\n  display: '3D Orientation',\n  from: SO.Molecule.Structure.Selections,\n  to: SO.Shape.Representation3D,\n  params: function () {\n    return __assign({}, OrientationParams);\n  }\n})({\n  canAutoUpdate: function (_a) {\n    var oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return true;\n  },\n  apply: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        params = _a.params;\n    return Task.create('Structure Orientation', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var data, repr;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              data = getOrientationDataFromStructureSelections(a.data);\n              repr = OrientationRepresentation(__assign({\n                webgl: (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.webgl\n              }, plugin.representation.structure.themes), function () {\n                return OrientationParams;\n              });\n              return [4\n              /*yield*/\n              , repr.createOrUpdate(params, data).runInContext(ctx)];\n\n            case 1:\n              _b.sent();\n\n              return [2\n              /*return*/\n              , new SO.Shape.Representation3D({\n                repr: repr,\n                sourceData: data\n              }, {\n                label: \"Orientation\"\n              })];\n          }\n        });\n      });\n    });\n  },\n  update: function (_a, plugin) {\n    var _this = this;\n\n    var a = _a.a,\n        b = _a.b,\n        oldParams = _a.oldParams,\n        newParams = _a.newParams;\n    return Task.create('Structure Orientation', function (ctx) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var props, data;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              props = __assign(__assign({}, b.data.repr.props), newParams);\n              data = getOrientationDataFromStructureSelections(a.data);\n              return [4\n              /*yield*/\n              , b.data.repr.createOrUpdate(props, data).runInContext(ctx)];\n\n            case 1:\n              _a.sent();\n\n              b.data.sourceData = data;\n              return [2\n              /*return*/\n              , StateTransformer.UpdateResult.Updated];\n          }\n        });\n      });\n    });\n  }\n});","map":{"version":3,"sources":["../../../src/mol-plugin-state/transforms/representation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { Structure, StructureElement } from '../../mol-model/structure';\r\nimport { Volume } from '../../mol-model/volume';\r\nimport { StateTransformer, StateObject } from '../../mol-state';\r\nimport { Task } from '../../mol-task';\r\nimport { Theme } from '../../mol-theme/theme';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { PluginStateObject as SO, PluginStateTransform } from '../objects';\r\nimport { ColorNames } from '../../mol-util/color/names';\r\nimport { ShapeRepresentation } from '../../mol-repr/shape/representation';\r\nimport { StructureUnitTransforms } from '../../mol-model/structure/structure/util/unit-transforms';\r\nimport { unwindStructureAssembly, explodeStructure, spinStructure, SpinStructureParams, getSpinStructureAxisAndOrigin } from '../animation/helpers';\r\nimport { Color } from '../../mol-util/color';\r\nimport { Overpaint } from '../../mol-theme/overpaint';\r\nimport { Transparency } from '../../mol-theme/transparency';\r\nimport { BaseGeometry } from '../../mol-geo/geometry/base';\r\nimport { Script } from '../../mol-script/script';\r\nimport { UnitcellParams, UnitcellRepresentation, getUnitcellData } from '../../mol-repr/shape/model/unitcell';\r\nimport { DistanceParams, DistanceRepresentation } from '../../mol-repr/shape/loci/distance';\r\nimport { getDistanceDataFromStructureSelections, getLabelDataFromStructureSelections, getOrientationDataFromStructureSelections, getAngleDataFromStructureSelections, getDihedralDataFromStructureSelections } from './helpers';\r\nimport { LabelParams, LabelRepresentation } from '../../mol-repr/shape/loci/label';\r\nimport { OrientationRepresentation, OrientationParams } from '../../mol-repr/shape/loci/orientation';\r\nimport { AngleParams, AngleRepresentation } from '../../mol-repr/shape/loci/angle';\r\nimport { DihedralParams, DihedralRepresentation } from '../../mol-repr/shape/loci/dihedral';\r\nimport { ModelSymmetry } from '../../mol-model-formats/structure/property/symmetry';\r\nimport { Clipping } from '../../mol-theme/clipping';\r\nimport { ObjectKeys } from '../../mol-util/type-helpers';\r\nimport { Mesh } from '../../mol-geo/geometry/mesh/mesh';\r\nimport { getBoxMesh } from './shape';\r\nimport { Shape } from '../../mol-model/shape';\r\nexport { StructureRepresentation3D };\r\nexport { ExplodeStructureRepresentation3D };\r\nexport { SpinStructureRepresentation3D };\r\nexport { UnwindStructureAssemblyRepresentation3D };\r\nexport { OverpaintStructureRepresentation3DFromScript };\r\nexport { OverpaintStructureRepresentation3DFromBundle };\r\nexport { TransparencyStructureRepresentation3DFromScript };\r\nexport { TransparencyStructureRepresentation3DFromBundle };\r\nexport { ClippingStructureRepresentation3DFromScript };\r\nexport { ClippingStructureRepresentation3DFromBundle };\r\nexport { VolumeRepresentation3D };\r\nvar StructureRepresentation3D = PluginStateTransform.BuiltIn({\r\n    name: 'structure-representation-3d',\r\n    display: '3D Representation',\r\n    from: SO.Molecule.Structure,\r\n    to: SO.Molecule.Structure.Representation3D,\r\n    params: function (a, ctx) {\r\n        var _a = ctx.representation.structure, registry = _a.registry, themeCtx = _a.themes;\r\n        var type = registry.get(registry.default.name);\r\n        if (!a) {\r\n            var colorThemeInfo_1 = {\r\n                help: function (value) {\r\n                    var name = value.name, params = value.params;\r\n                    var p = themeCtx.colorThemeRegistry.get(name);\r\n                    var ct = p.factory({}, params);\r\n                    return { description: ct.description, legend: ct.legend };\r\n                }\r\n            };\r\n            return {\r\n                type: PD.Mapped(registry.default.name, registry.types, function (name) { return PD.Group(registry.get(name).getParams(themeCtx, Structure.Empty)); }),\r\n                colorTheme: PD.Mapped(type.defaultColorTheme.name, themeCtx.colorThemeRegistry.types, function (name) { return PD.Group(themeCtx.colorThemeRegistry.get(name).getParams({ structure: Structure.Empty })); }, colorThemeInfo_1),\r\n                sizeTheme: PD.Mapped(type.defaultSizeTheme.name, themeCtx.sizeThemeRegistry.types, function (name) { return PD.Group(themeCtx.sizeThemeRegistry.get(name).getParams({ structure: Structure.Empty })); })\r\n            };\r\n        }\r\n        var dataCtx = { structure: a.data };\r\n        var colorThemeInfo = {\r\n            help: function (value) {\r\n                var name = value.name, params = value.params;\r\n                var p = themeCtx.colorThemeRegistry.get(name);\r\n                var ct = p.factory(dataCtx, params);\r\n                return { description: ct.description, legend: ct.legend };\r\n            }\r\n        };\r\n        return ({\r\n            type: PD.Mapped(registry.default.name, registry.getApplicableTypes(a.data), function (name) { return PD.Group(registry.get(name).getParams(themeCtx, a.data)); }),\r\n            colorTheme: PD.Mapped(type.defaultColorTheme.name, themeCtx.colorThemeRegistry.getApplicableTypes(dataCtx), function (name) { return PD.Group(themeCtx.colorThemeRegistry.get(name).getParams(dataCtx)); }, colorThemeInfo),\r\n            sizeTheme: PD.Mapped(type.defaultSizeTheme.name, themeCtx.sizeThemeRegistry.types, function (name) { return PD.Group(themeCtx.sizeThemeRegistry.get(name).getParams(dataCtx)); })\r\n        });\r\n    }\r\n})({\r\n    canAutoUpdate: function (_a) {\r\n        var a = _a.a, oldParams = _a.oldParams, newParams = _a.newParams;\r\n        // TODO: other criteria as well?\r\n        return a.data.elementCount < 10000 || (oldParams.type.name === newParams.type.name && newParams.type.params.quality !== 'custom');\r\n    },\r\n    apply: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params, cache = _a.cache;\r\n        return Task.create('Structure Representation', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var propertyCtx, provider, data, repr, props;\r\n            var _a, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        propertyCtx = { runtime: ctx, assetManager: plugin.managers.asset };\r\n                        provider = plugin.representation.structure.registry.get(params.type.name);\r\n                        data = ((_a = provider.getData) === null || _a === void 0 ? void 0 : _a.call(provider, a.data, params.type.params)) || a.data;\r\n                        if (!provider.ensureCustomProperties) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, provider.ensureCustomProperties.attach(propertyCtx, data)];\r\n                    case 1:\r\n                        _c.sent();\r\n                        _c.label = 2;\r\n                    case 2:\r\n                        repr = provider.factory(__assign({ webgl: (_b = plugin.canvas3d) === null || _b === void 0 ? void 0 : _b.webgl }, plugin.representation.structure.themes), provider.getParams);\r\n                        return [4 /*yield*/, Theme.ensureDependencies(propertyCtx, plugin.representation.structure.themes, { structure: data }, params)];\r\n                    case 3:\r\n                        _c.sent();\r\n                        repr.setTheme(Theme.create(plugin.representation.structure.themes, { structure: data }, params));\r\n                        props = params.type.params || {};\r\n                        return [4 /*yield*/, repr.createOrUpdate(props, data).runInContext(ctx)];\r\n                    case 4:\r\n                        _c.sent();\r\n                        return [2 /*return*/, new SO.Molecule.Structure.Representation3D({ repr: repr, sourceData: a.data }, { label: provider.label })];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    update: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams, cache = _a.cache;\r\n        return Task.create('Structure Representation', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var provider, data, propertyCtx, props;\r\n            var _a, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        if (newParams.type.name !== oldParams.type.name)\r\n                            return [2 /*return*/, StateTransformer.UpdateResult.Recreate];\r\n                        provider = plugin.representation.structure.registry.get(newParams.type.name);\r\n                        if ((_a = provider.mustRecreate) === null || _a === void 0 ? void 0 : _a.call(provider, oldParams.type.params, newParams.type.params))\r\n                            return [2 /*return*/, StateTransformer.UpdateResult.Recreate];\r\n                        data = ((_b = provider.getData) === null || _b === void 0 ? void 0 : _b.call(provider, a.data, newParams.type.params)) || a.data;\r\n                        propertyCtx = { runtime: ctx, assetManager: plugin.managers.asset };\r\n                        if (!provider.ensureCustomProperties) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, provider.ensureCustomProperties.attach(propertyCtx, data)];\r\n                    case 1:\r\n                        _c.sent();\r\n                        _c.label = 2;\r\n                    case 2:\r\n                        // TODO: if themes had a .needsUpdate method the following block could\r\n                        //       be optimized and only executed conditionally\r\n                        Theme.releaseDependencies(plugin.representation.structure.themes, { structure: b.data.sourceData }, oldParams);\r\n                        return [4 /*yield*/, Theme.ensureDependencies(propertyCtx, plugin.representation.structure.themes, { structure: data }, newParams)];\r\n                    case 3:\r\n                        _c.sent();\r\n                        b.data.repr.setTheme(Theme.create(plugin.representation.structure.themes, { structure: data }, newParams));\r\n                        props = __assign(__assign({}, b.data.repr.props), newParams.type.params);\r\n                        return [4 /*yield*/, b.data.repr.createOrUpdate(props, data).runInContext(ctx)];\r\n                    case 4:\r\n                        _c.sent();\r\n                        b.data.sourceData = a.data;\r\n                        return [2 /*return*/, StateTransformer.UpdateResult.Updated];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    dispose: function (_a, plugin) {\r\n        var b = _a.b, params = _a.params;\r\n        if (!b || !params)\r\n            return;\r\n        var structure = b.data.sourceData;\r\n        var provider = plugin.representation.structure.registry.get(params.type.name);\r\n        if (provider.ensureCustomProperties)\r\n            provider.ensureCustomProperties.detach(structure);\r\n        Theme.releaseDependencies(plugin.representation.structure.themes, { structure: structure }, params);\r\n    },\r\n    interpolate: function (src, tar, t) {\r\n        if (src.colorTheme.name !== 'uniform' || tar.colorTheme.name !== 'uniform') {\r\n            return t <= 0.5 ? src : tar;\r\n        }\r\n        var from = src.colorTheme.params.value, to = tar.colorTheme.params.value;\r\n        var value = Color.interpolate(from, to, t);\r\n        return {\r\n            type: t <= 0.5 ? src.type : tar.type,\r\n            colorTheme: { name: 'uniform', params: { value: value } },\r\n            sizeTheme: t <= 0.5 ? src.sizeTheme : tar.sizeTheme,\r\n        };\r\n    }\r\n});\r\nvar UnwindStructureAssemblyRepresentation3D = PluginStateTransform.BuiltIn({\r\n    name: 'unwind-structure-assembly-representation-3d',\r\n    display: 'Unwind Assembly 3D Representation',\r\n    from: SO.Molecule.Structure.Representation3D,\r\n    to: SO.Molecule.Structure.Representation3DState,\r\n    params: { t: PD.Numeric(0, { min: 0, max: 1, step: 0.01 }) }\r\n})({\r\n    canAutoUpdate: function () {\r\n        return true;\r\n    },\r\n    apply: function (_a) {\r\n        var a = _a.a, params = _a.params;\r\n        var structure = a.data.sourceData;\r\n        var unitTransforms = new StructureUnitTransforms(structure);\r\n        unwindStructureAssembly(structure, unitTransforms, params.t);\r\n        return new SO.Molecule.Structure.Representation3DState({\r\n            state: { unitTransforms: unitTransforms },\r\n            initialState: { unitTransforms: new StructureUnitTransforms(structure) },\r\n            info: structure,\r\n            repr: a.data.repr\r\n        }, { label: \"Unwind T = \" + params.t.toFixed(2) });\r\n    },\r\n    update: function (_a) {\r\n        var a = _a.a, b = _a.b, newParams = _a.newParams, oldParams = _a.oldParams;\r\n        var structure = b.data.info;\r\n        if (a.data.sourceData !== structure)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        if (a.data.repr !== b.data.repr)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        if (oldParams.t === newParams.t)\r\n            return StateTransformer.UpdateResult.Unchanged;\r\n        var unitTransforms = b.data.state.unitTransforms;\r\n        unwindStructureAssembly(structure, unitTransforms, newParams.t);\r\n        b.label = \"Unwind T = \" + newParams.t.toFixed(2);\r\n        b.data.repr = a.data.repr;\r\n        return StateTransformer.UpdateResult.Updated;\r\n    }\r\n});\r\nvar ExplodeStructureRepresentation3D = PluginStateTransform.BuiltIn({\r\n    name: 'explode-structure-representation-3d',\r\n    display: 'Explode 3D Representation',\r\n    from: SO.Molecule.Structure.Representation3D,\r\n    to: SO.Molecule.Structure.Representation3DState,\r\n    params: { t: PD.Numeric(0, { min: 0, max: 1, step: 0.01 }) }\r\n})({\r\n    canAutoUpdate: function () {\r\n        return true;\r\n    },\r\n    apply: function (_a) {\r\n        var a = _a.a, params = _a.params;\r\n        var structure = a.data.sourceData;\r\n        var unitTransforms = new StructureUnitTransforms(structure);\r\n        explodeStructure(structure, unitTransforms, params.t, structure.root.boundary.sphere);\r\n        return new SO.Molecule.Structure.Representation3DState({\r\n            state: { unitTransforms: unitTransforms },\r\n            initialState: { unitTransforms: new StructureUnitTransforms(structure) },\r\n            info: structure,\r\n            repr: a.data.repr\r\n        }, { label: \"Explode T = \" + params.t.toFixed(2) });\r\n    },\r\n    update: function (_a) {\r\n        var a = _a.a, b = _a.b, newParams = _a.newParams, oldParams = _a.oldParams;\r\n        var structure = a.data.sourceData;\r\n        if (b.data.info !== structure)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        if (a.data.repr !== b.data.repr)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        if (oldParams.t === newParams.t)\r\n            return StateTransformer.UpdateResult.Unchanged;\r\n        var unitTransforms = b.data.state.unitTransforms;\r\n        explodeStructure(structure, unitTransforms, newParams.t, structure.root.boundary.sphere);\r\n        b.label = \"Explode T = \" + newParams.t.toFixed(2);\r\n        b.data.repr = a.data.repr;\r\n        return StateTransformer.UpdateResult.Updated;\r\n    }\r\n});\r\nvar SpinStructureRepresentation3D = PluginStateTransform.BuiltIn({\r\n    name: 'spin-structure-representation-3d',\r\n    display: 'Spin 3D Representation',\r\n    from: SO.Molecule.Structure.Representation3D,\r\n    to: SO.Molecule.Structure.Representation3DState,\r\n    params: __assign({ t: PD.Numeric(0, { min: 0, max: 1, step: 0.01 }) }, SpinStructureParams)\r\n})({\r\n    canAutoUpdate: function () {\r\n        return true;\r\n    },\r\n    apply: function (_a) {\r\n        var a = _a.a, params = _a.params;\r\n        var structure = a.data.sourceData;\r\n        var unitTransforms = new StructureUnitTransforms(structure);\r\n        var _b = getSpinStructureAxisAndOrigin(structure.root, params), axis = _b.axis, origin = _b.origin;\r\n        spinStructure(structure, unitTransforms, params.t, axis, origin);\r\n        return new SO.Molecule.Structure.Representation3DState({\r\n            state: { unitTransforms: unitTransforms },\r\n            initialState: { unitTransforms: new StructureUnitTransforms(structure) },\r\n            info: structure,\r\n            repr: a.data.repr\r\n        }, { label: \"Spin T = \" + params.t.toFixed(2) });\r\n    },\r\n    update: function (_a) {\r\n        var a = _a.a, b = _a.b, newParams = _a.newParams, oldParams = _a.oldParams;\r\n        var structure = a.data.sourceData;\r\n        if (b.data.info !== structure)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        if (a.data.repr !== b.data.repr)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        if (oldParams.t === newParams.t && oldParams.axis === newParams.axis && oldParams.origin === newParams.origin)\r\n            return StateTransformer.UpdateResult.Unchanged;\r\n        var unitTransforms = b.data.state.unitTransforms;\r\n        var _b = getSpinStructureAxisAndOrigin(structure.root, newParams), axis = _b.axis, origin = _b.origin;\r\n        spinStructure(structure, unitTransforms, newParams.t, axis, origin);\r\n        b.label = \"Spin T = \" + newParams.t.toFixed(2);\r\n        b.data.repr = a.data.repr;\r\n        return StateTransformer.UpdateResult.Updated;\r\n    }\r\n});\r\nvar OverpaintStructureRepresentation3DFromScript = PluginStateTransform.BuiltIn({\r\n    name: 'overpaint-structure-representation-3d-from-script',\r\n    display: 'Overpaint 3D Representation',\r\n    from: SO.Molecule.Structure.Representation3D,\r\n    to: SO.Molecule.Structure.Representation3DState,\r\n    params: function () { return ({\r\n        layers: PD.ObjectList({\r\n            script: PD.Script(Script('(sel.atom.all)', 'mol-script')),\r\n            color: PD.Color(ColorNames.blueviolet),\r\n            clear: PD.Boolean(false)\r\n        }, function (e) { return \"\" + (e.clear ? 'Clear' : Color.toRgbString(e.color)); }, {\r\n            defaultValue: [{\r\n                    script: Script('(sel.atom.all)', 'mol-script'),\r\n                    color: ColorNames.blueviolet,\r\n                    clear: false\r\n                }]\r\n        }),\r\n    }); }\r\n})({\r\n    canAutoUpdate: function () {\r\n        return true;\r\n    },\r\n    apply: function (_a) {\r\n        var a = _a.a, params = _a.params;\r\n        var structure = a.data.sourceData;\r\n        var overpaint = Overpaint.ofScript(params.layers, structure);\r\n        return new SO.Molecule.Structure.Representation3DState({\r\n            state: { overpaint: overpaint },\r\n            initialState: { overpaint: Overpaint.Empty },\r\n            info: structure,\r\n            repr: a.data.repr\r\n        }, { label: \"Overpaint (\" + overpaint.layers.length + \" Layers)\" });\r\n    },\r\n    update: function (_a) {\r\n        var a = _a.a, b = _a.b, newParams = _a.newParams, oldParams = _a.oldParams;\r\n        var oldStructure = b.data.info;\r\n        var newStructure = a.data.sourceData;\r\n        if (newStructure !== oldStructure)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        if (a.data.repr !== b.data.repr)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        var oldOverpaint = b.data.state.overpaint;\r\n        var newOverpaint = Overpaint.ofScript(newParams.layers, newStructure);\r\n        if (Overpaint.areEqual(oldOverpaint, newOverpaint))\r\n            return StateTransformer.UpdateResult.Unchanged;\r\n        b.data.state.overpaint = newOverpaint;\r\n        b.data.repr = a.data.repr;\r\n        b.label = \"Overpaint (\" + newOverpaint.layers.length + \" Layers)\";\r\n        return StateTransformer.UpdateResult.Updated;\r\n    }\r\n});\r\nvar OverpaintStructureRepresentation3DFromBundle = PluginStateTransform.BuiltIn({\r\n    name: 'overpaint-structure-representation-3d-from-bundle',\r\n    display: 'Overpaint 3D Representation',\r\n    from: SO.Molecule.Structure.Representation3D,\r\n    to: SO.Molecule.Structure.Representation3DState,\r\n    params: function () { return ({\r\n        layers: PD.ObjectList({\r\n            bundle: PD.Value(StructureElement.Bundle.Empty),\r\n            color: PD.Color(ColorNames.blueviolet),\r\n            clear: PD.Boolean(false)\r\n        }, function (e) { return \"\" + (e.clear ? 'Clear' : Color.toRgbString(e.color)); }, {\r\n            defaultValue: [{\r\n                    bundle: StructureElement.Bundle.Empty,\r\n                    color: ColorNames.blueviolet,\r\n                    clear: false\r\n                }],\r\n            isHidden: true\r\n        }),\r\n    }); }\r\n})({\r\n    canAutoUpdate: function () {\r\n        return true;\r\n    },\r\n    apply: function (_a) {\r\n        var a = _a.a, params = _a.params;\r\n        var structure = a.data.sourceData;\r\n        var overpaint = Overpaint.ofBundle(params.layers, structure);\r\n        return new SO.Molecule.Structure.Representation3DState({\r\n            state: { overpaint: overpaint },\r\n            initialState: { overpaint: Overpaint.Empty },\r\n            info: structure,\r\n            repr: a.data.repr\r\n        }, { label: \"Overpaint (\" + overpaint.layers.length + \" Layers)\" });\r\n    },\r\n    update: function (_a) {\r\n        var a = _a.a, b = _a.b, newParams = _a.newParams, oldParams = _a.oldParams;\r\n        var oldStructure = b.data.info;\r\n        var newStructure = a.data.sourceData;\r\n        if (newStructure !== oldStructure)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        if (a.data.repr !== b.data.repr)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        var oldOverpaint = b.data.state.overpaint;\r\n        var newOverpaint = Overpaint.ofBundle(newParams.layers, newStructure);\r\n        if (Overpaint.areEqual(oldOverpaint, newOverpaint))\r\n            return StateTransformer.UpdateResult.Unchanged;\r\n        b.data.state.overpaint = newOverpaint;\r\n        b.data.repr = a.data.repr;\r\n        b.label = \"Overpaint (\" + newOverpaint.layers.length + \" Layers)\";\r\n        return StateTransformer.UpdateResult.Updated;\r\n    }\r\n});\r\nvar TransparencyStructureRepresentation3DFromScript = PluginStateTransform.BuiltIn({\r\n    name: 'transparency-structure-representation-3d-from-script',\r\n    display: 'Transparency 3D Representation',\r\n    from: SO.Molecule.Structure.Representation3D,\r\n    to: SO.Molecule.Structure.Representation3DState,\r\n    params: function () { return ({\r\n        layers: PD.ObjectList({\r\n            script: PD.Script(Script('(sel.atom.all)', 'mol-script')),\r\n            value: PD.Numeric(0.5, { min: 0, max: 1, step: 0.01 }, { label: 'Transparency' }),\r\n        }, function (e) { return \"Transparency (\" + e.value + \")\"; }, {\r\n            defaultValue: [{\r\n                    script: Script('(sel.atom.all)', 'mol-script'),\r\n                    value: 0.5,\r\n                }]\r\n        })\r\n    }); }\r\n})({\r\n    canAutoUpdate: function () {\r\n        return true;\r\n    },\r\n    apply: function (_a) {\r\n        var a = _a.a, params = _a.params;\r\n        var structure = a.data.sourceData;\r\n        var transparency = Transparency.ofScript(params.layers, structure);\r\n        return new SO.Molecule.Structure.Representation3DState({\r\n            state: { transparency: transparency },\r\n            initialState: { transparency: Transparency.Empty },\r\n            info: structure,\r\n            repr: a.data.repr\r\n        }, { label: \"Transparency (\" + transparency.layers.length + \" Layers)\" });\r\n    },\r\n    update: function (_a) {\r\n        var a = _a.a, b = _a.b, newParams = _a.newParams, oldParams = _a.oldParams;\r\n        var structure = b.data.info;\r\n        if (a.data.sourceData !== structure)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        if (a.data.repr !== b.data.repr)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        var oldTransparency = b.data.state.transparency;\r\n        var newTransparency = Transparency.ofScript(newParams.layers, structure);\r\n        if (Transparency.areEqual(oldTransparency, newTransparency))\r\n            return StateTransformer.UpdateResult.Unchanged;\r\n        b.data.state.transparency = newTransparency;\r\n        b.data.repr = a.data.repr;\r\n        b.label = \"Transparency (\" + newTransparency.layers.length + \" Layers)\";\r\n        return StateTransformer.UpdateResult.Updated;\r\n    }\r\n});\r\nvar TransparencyStructureRepresentation3DFromBundle = PluginStateTransform.BuiltIn({\r\n    name: 'transparency-structure-representation-3d-from-bundle',\r\n    display: 'Transparency 3D Representation',\r\n    from: SO.Molecule.Structure.Representation3D,\r\n    to: SO.Molecule.Structure.Representation3DState,\r\n    params: function () { return ({\r\n        layers: PD.ObjectList({\r\n            bundle: PD.Value(StructureElement.Bundle.Empty),\r\n            value: PD.Numeric(0.5, { min: 0, max: 1, step: 0.01 }, { label: 'Transparency' }),\r\n        }, function (e) { return \"Transparency (\" + e.value + \")\"; }, {\r\n            defaultValue: [{\r\n                    bundle: StructureElement.Bundle.Empty,\r\n                    value: 0.5,\r\n                }],\r\n            isHidden: true\r\n        })\r\n    }); }\r\n})({\r\n    canAutoUpdate: function () {\r\n        return true;\r\n    },\r\n    apply: function (_a) {\r\n        var a = _a.a, params = _a.params;\r\n        var structure = a.data.sourceData;\r\n        var transparency = Transparency.ofBundle(params.layers, structure);\r\n        return new SO.Molecule.Structure.Representation3DState({\r\n            state: { transparency: transparency },\r\n            initialState: { transparency: Transparency.Empty },\r\n            info: structure,\r\n            repr: a.data.repr\r\n        }, { label: \"Transparency (\" + transparency.layers.length + \" Layers)\" });\r\n    },\r\n    update: function (_a) {\r\n        var a = _a.a, b = _a.b, newParams = _a.newParams, oldParams = _a.oldParams;\r\n        var structure = b.data.info;\r\n        if (a.data.sourceData !== structure)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        if (a.data.repr !== b.data.repr)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        var oldTransparency = b.data.state.transparency;\r\n        var newTransparency = Transparency.ofBundle(newParams.layers, structure);\r\n        if (Transparency.areEqual(oldTransparency, newTransparency))\r\n            return StateTransformer.UpdateResult.Unchanged;\r\n        b.data.state.transparency = newTransparency;\r\n        b.data.repr = a.data.repr;\r\n        b.label = \"Transparency (\" + newTransparency.layers.length + \" Layers)\";\r\n        return StateTransformer.UpdateResult.Updated;\r\n    }\r\n});\r\nvar ClippingStructureRepresentation3DFromScript = PluginStateTransform.BuiltIn({\r\n    name: 'clipping-structure-representation-3d-from-script',\r\n    display: 'Clipping 3D Representation',\r\n    from: SO.Molecule.Structure.Representation3D,\r\n    to: SO.Molecule.Structure.Representation3DState,\r\n    params: function () { return ({\r\n        layers: PD.ObjectList({\r\n            script: PD.Script(Script('(sel.atom.all)', 'mol-script')),\r\n            groups: PD.Converted(function (g) { return Clipping.Groups.toNames(g); }, function (n) { return Clipping.Groups.fromNames(n); }, PD.MultiSelect(ObjectKeys(Clipping.Groups.Names), PD.objectToOptions(Clipping.Groups.Names))),\r\n        }, function (e) { return Clipping.Groups.toNames(e.groups).length + \" group(s)\"; }, {\r\n            defaultValue: [{\r\n                    script: Script('(sel.atom.all)', 'mol-script'),\r\n                    groups: 0 /* None */,\r\n                }]\r\n        }),\r\n    }); }\r\n})({\r\n    canAutoUpdate: function () {\r\n        return true;\r\n    },\r\n    apply: function (_a) {\r\n        var a = _a.a, params = _a.params;\r\n        var structure = a.data.sourceData;\r\n        var clipping = Clipping.ofScript(params.layers, structure);\r\n        return new SO.Molecule.Structure.Representation3DState({\r\n            state: { clipping: clipping },\r\n            initialState: { clipping: Clipping.Empty },\r\n            info: structure,\r\n            repr: a.data.repr\r\n        }, { label: \"Clipping (\" + clipping.layers.length + \" Layers)\" });\r\n    },\r\n    update: function (_a) {\r\n        var a = _a.a, b = _a.b, newParams = _a.newParams, oldParams = _a.oldParams;\r\n        var structure = b.data.info;\r\n        if (a.data.sourceData !== structure)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        if (a.data.repr !== b.data.repr)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        var oldClipping = b.data.state.clipping;\r\n        var newClipping = Clipping.ofScript(newParams.layers, structure);\r\n        if (Clipping.areEqual(oldClipping, newClipping))\r\n            return StateTransformer.UpdateResult.Unchanged;\r\n        b.data.state.clipping = newClipping;\r\n        b.data.repr = a.data.repr;\r\n        b.label = \"Clipping (\" + newClipping.layers.length + \" Layers)\";\r\n        return StateTransformer.UpdateResult.Updated;\r\n    }\r\n});\r\nvar ClippingStructureRepresentation3DFromBundle = PluginStateTransform.BuiltIn({\r\n    name: 'clipping-structure-representation-3d-from-bundle',\r\n    display: 'Clipping 3D Representation',\r\n    from: SO.Molecule.Structure.Representation3D,\r\n    to: SO.Molecule.Structure.Representation3DState,\r\n    params: function () { return ({\r\n        layers: PD.ObjectList({\r\n            bundle: PD.Value(StructureElement.Bundle.Empty),\r\n            groups: PD.Converted(function (g) { return Clipping.Groups.toNames(g); }, function (n) { return Clipping.Groups.fromNames(n); }, PD.MultiSelect(ObjectKeys(Clipping.Groups.Names), PD.objectToOptions(Clipping.Groups.Names))),\r\n        }, function (e) { return Clipping.Groups.toNames(e.groups).length + \" group(s)\"; }, {\r\n            defaultValue: [{\r\n                    bundle: StructureElement.Bundle.Empty,\r\n                    groups: 0 /* None */,\r\n                }],\r\n            isHidden: true\r\n        }),\r\n    }); }\r\n})({\r\n    canAutoUpdate: function () {\r\n        return true;\r\n    },\r\n    apply: function (_a) {\r\n        var a = _a.a, params = _a.params;\r\n        var structure = a.data.sourceData;\r\n        var clipping = Clipping.ofBundle(params.layers, structure);\r\n        return new SO.Molecule.Structure.Representation3DState({\r\n            state: { clipping: clipping },\r\n            initialState: { clipping: Clipping.Empty },\r\n            info: structure,\r\n            repr: a.data.repr\r\n        }, { label: \"Clipping (\" + clipping.layers.length + \" Layers)\" });\r\n    },\r\n    update: function (_a) {\r\n        var a = _a.a, b = _a.b, newParams = _a.newParams, oldParams = _a.oldParams;\r\n        var structure = b.data.info;\r\n        if (a.data.sourceData !== structure)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        if (a.data.repr !== b.data.repr)\r\n            return StateTransformer.UpdateResult.Recreate;\r\n        var oldClipping = b.data.state.clipping;\r\n        var newClipping = Clipping.ofBundle(newParams.layers, structure);\r\n        if (Clipping.areEqual(oldClipping, newClipping))\r\n            return StateTransformer.UpdateResult.Unchanged;\r\n        b.data.state.clipping = newClipping;\r\n        b.data.repr = a.data.repr;\r\n        b.label = \"Clipping (\" + newClipping.layers.length + \" Layers)\";\r\n        return StateTransformer.UpdateResult.Updated;\r\n    }\r\n});\r\n//\r\nexport var VolumeRepresentation3DHelpers;\r\n(function (VolumeRepresentation3DHelpers) {\r\n    function getDefaultParams(ctx, name, volume, volumeParams) {\r\n        var type = ctx.representation.volume.registry.get(name);\r\n        var themeDataCtx = { volume: volume };\r\n        var colorParams = ctx.representation.volume.themes.colorThemeRegistry.get(type.defaultColorTheme.name).getParams(themeDataCtx);\r\n        var sizeParams = ctx.representation.volume.themes.sizeThemeRegistry.get(type.defaultSizeTheme.name).getParams(themeDataCtx);\r\n        var volumeDefaultParams = PD.getDefaultValues(type.getParams(ctx.representation.volume.themes, volume));\r\n        return ({\r\n            type: { name: name, params: volumeParams ? __assign(__assign({}, volumeDefaultParams), volumeParams) : volumeDefaultParams },\r\n            colorTheme: { name: type.defaultColorTheme.name, params: PD.getDefaultValues(colorParams) },\r\n            sizeTheme: { name: type.defaultSizeTheme.name, params: PD.getDefaultValues(sizeParams) }\r\n        });\r\n    }\r\n    VolumeRepresentation3DHelpers.getDefaultParams = getDefaultParams;\r\n    function getDefaultParamsStatic(ctx, name, volumeParams, colorName, colorParams, sizeName, sizeParams) {\r\n        var type = ctx.representation.volume.registry.get(name);\r\n        var colorType = ctx.representation.volume.themes.colorThemeRegistry.get(colorName || type.defaultColorTheme.name);\r\n        var sizeType = ctx.representation.volume.themes.sizeThemeRegistry.get(sizeName || type.defaultSizeTheme.name);\r\n        return ({\r\n            type: { name: name, params: volumeParams ? __assign(__assign({}, type.defaultValues), volumeParams) : type.defaultValues },\r\n            colorTheme: { name: type.defaultColorTheme.name, params: colorParams ? __assign(__assign({}, colorType.defaultValues), colorParams) : colorType.defaultValues },\r\n            sizeTheme: { name: type.defaultSizeTheme.name, params: sizeParams ? __assign(__assign({}, sizeType.defaultValues), sizeParams) : sizeType.defaultValues }\r\n        });\r\n    }\r\n    VolumeRepresentation3DHelpers.getDefaultParamsStatic = getDefaultParamsStatic;\r\n    function getDescription(props) {\r\n        var _a, _b, _c, _d;\r\n        if (props.isoValue) {\r\n            return Volume.IsoValue.toString(props.isoValue);\r\n        }\r\n        else if ((_b = (_a = props.renderMode) === null || _a === void 0 ? void 0 : _a.params) === null || _b === void 0 ? void 0 : _b.isoValue) {\r\n            return Volume.IsoValue.toString((_d = (_c = props.renderMode) === null || _c === void 0 ? void 0 : _c.params) === null || _d === void 0 ? void 0 : _d.isoValue);\r\n        }\r\n    }\r\n    VolumeRepresentation3DHelpers.getDescription = getDescription;\r\n})(VolumeRepresentation3DHelpers || (VolumeRepresentation3DHelpers = {}));\r\nvar VolumeRepresentation3D = PluginStateTransform.BuiltIn({\r\n    name: 'volume-representation-3d',\r\n    display: '3D Representation',\r\n    from: SO.Volume.Data,\r\n    to: SO.Volume.Representation3D,\r\n    params: function (a, ctx) {\r\n        var _a = ctx.representation.volume, registry = _a.registry, themeCtx = _a.themes;\r\n        var type = registry.get(registry.default.name);\r\n        if (!a) {\r\n            return {\r\n                type: PD.Mapped(registry.default.name, registry.types, function (name) { return PD.Group(registry.get(name).getParams(themeCtx, Volume.One)); }),\r\n                colorTheme: PD.Mapped(type.defaultColorTheme.name, themeCtx.colorThemeRegistry.types, function (name) { return PD.Group(themeCtx.colorThemeRegistry.get(name).getParams({ volume: Volume.One })); }),\r\n                sizeTheme: PD.Mapped(type.defaultSizeTheme.name, themeCtx.sizeThemeRegistry.types, function (name) { return PD.Group(themeCtx.sizeThemeRegistry.get(name).getParams({ volume: Volume.One })); })\r\n            };\r\n        }\r\n        var dataCtx = { volume: a.data };\r\n        return ({\r\n            type: PD.Mapped(registry.default.name, registry.types, function (name) { return PD.Group(registry.get(name).getParams(themeCtx, a.data)); }),\r\n            colorTheme: PD.Mapped(type.defaultColorTheme.name, themeCtx.colorThemeRegistry.getApplicableTypes(dataCtx), function (name) { return PD.Group(themeCtx.colorThemeRegistry.get(name).getParams(dataCtx)); }),\r\n            sizeTheme: PD.Mapped(type.defaultSizeTheme.name, themeCtx.sizeThemeRegistry.types, function (name) { return PD.Group(themeCtx.sizeThemeRegistry.get(name).getParams(dataCtx)); })\r\n        });\r\n    }\r\n})({\r\n    canAutoUpdate: function (_a) {\r\n        var oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return oldParams.type.name === newParams.type.name;\r\n    },\r\n    apply: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Volume Representation', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var propertyCtx, provider, repr, props;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        propertyCtx = { runtime: ctx, assetManager: plugin.managers.asset };\r\n                        provider = plugin.representation.volume.registry.get(params.type.name);\r\n                        if (!provider.ensureCustomProperties) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, provider.ensureCustomProperties.attach(propertyCtx, a.data)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        repr = provider.factory(__assign({ webgl: (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.webgl }, plugin.representation.volume.themes), provider.getParams);\r\n                        repr.setTheme(Theme.create(plugin.representation.volume.themes, { volume: a.data }, params));\r\n                        props = params.type.params || {};\r\n                        return [4 /*yield*/, repr.createOrUpdate(props, a.data).runInContext(ctx)];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [2 /*return*/, new SO.Volume.Representation3D({ repr: repr, sourceData: a.data }, { label: provider.label, description: VolumeRepresentation3DHelpers.getDescription(props) })];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    update: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return Task.create('Volume Representation', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var oldProvider, props;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (newParams.type.name !== oldParams.type.name) {\r\n                            oldProvider = plugin.representation.volume.registry.get(oldParams.type.name);\r\n                            (_a = oldProvider.ensureCustomProperties) === null || _a === void 0 ? void 0 : _a.detach(a.data);\r\n                            return [2 /*return*/, StateTransformer.UpdateResult.Recreate];\r\n                        }\r\n                        props = __assign(__assign({}, b.data.repr.props), newParams.type.params);\r\n                        b.data.repr.setTheme(Theme.create(plugin.representation.volume.themes, { volume: a.data }, newParams));\r\n                        return [4 /*yield*/, b.data.repr.createOrUpdate(props, a.data).runInContext(ctx)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        b.data.sourceData = a.data;\r\n                        b.description = VolumeRepresentation3DHelpers.getDescription(props);\r\n                        return [2 /*return*/, StateTransformer.UpdateResult.Updated];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\n//\r\nexport { ShapeRepresentation3D };\r\nvar ShapeRepresentation3D = PluginStateTransform.BuiltIn({\r\n    name: 'shape-representation-3d',\r\n    display: '3D Representation',\r\n    from: SO.Shape.Provider,\r\n    to: SO.Shape.Representation3D,\r\n    params: function (a, ctx) {\r\n        return a ? a.data.params : BaseGeometry.Params;\r\n    }\r\n})({\r\n    canAutoUpdate: function () {\r\n        return true;\r\n    },\r\n    apply: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Shape Representation', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var props, repr;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        props = __assign(__assign({}, PD.getDefaultValues(a.data.params)), params);\r\n                        repr = ShapeRepresentation(a.data.getShape, a.data.geometryUtils);\r\n                        return [4 /*yield*/, repr.createOrUpdate(props, a.data.data).runInContext(ctx)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, new SO.Shape.Representation3D({ repr: repr, sourceData: a.data }, { label: a.data.label })];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    update: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return Task.create('Shape Representation', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var props;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        props = __assign(__assign({}, b.data.repr.props), newParams);\r\n                        return [4 /*yield*/, b.data.repr.createOrUpdate(props, a.data.data).runInContext(ctx)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        b.data.sourceData = a.data;\r\n                        return [2 /*return*/, StateTransformer.UpdateResult.Updated];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nexport { ModelUnitcell3D };\r\nvar ModelUnitcell3D = PluginStateTransform.BuiltIn({\r\n    name: 'model-unitcell-3d',\r\n    display: 'Model Unit Cell',\r\n    from: SO.Molecule.Model,\r\n    to: SO.Shape.Representation3D,\r\n    params: function () { return (__assign({}, UnitcellParams)); }\r\n})({\r\n    isApplicable: function (a) { return !!ModelSymmetry.Provider.get(a.data); },\r\n    canAutoUpdate: function (_a) {\r\n        var oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return true;\r\n    },\r\n    apply: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Model Unit Cell', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var symmetry, data, repr;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        symmetry = ModelSymmetry.Provider.get(a.data);\r\n                        if (!symmetry)\r\n                            return [2 /*return*/, StateObject.Null];\r\n                        data = getUnitcellData(a.data, symmetry, params);\r\n                        repr = UnitcellRepresentation(__assign({ webgl: (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.webgl }, plugin.representation.structure.themes), function () { return UnitcellParams; });\r\n                        return [4 /*yield*/, repr.createOrUpdate(params, data).runInContext(ctx)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [2 /*return*/, new SO.Shape.Representation3D({ repr: repr, sourceData: data }, { label: \"Unit Cell\", description: symmetry.spacegroup.name })];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    update: function (_a) {\r\n        var _this = this;\r\n        var a = _a.a, b = _a.b, newParams = _a.newParams;\r\n        return Task.create('Model Unit Cell', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var symmetry, props, data;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        symmetry = ModelSymmetry.Provider.get(a.data);\r\n                        if (!symmetry)\r\n                            return [2 /*return*/, StateTransformer.UpdateResult.Null];\r\n                        props = __assign(__assign({}, b.data.repr.props), newParams);\r\n                        data = getUnitcellData(a.data, symmetry, props);\r\n                        return [4 /*yield*/, b.data.repr.createOrUpdate(props, data).runInContext(ctx)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        b.data.sourceData = data;\r\n                        return [2 /*return*/, StateTransformer.UpdateResult.Updated];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nexport { StructureBoundingBox3D };\r\nvar StructureBoundingBox3D = PluginStateTransform.BuiltIn({\r\n    name: 'structure-bounding-box-3d',\r\n    display: 'Bounding Box',\r\n    from: SO.Molecule.Structure,\r\n    to: SO.Shape.Representation3D,\r\n    params: __assign({ radius: PD.Numeric(0.05, { min: 0.01, max: 4, step: 0.01 }, { isEssential: true }), color: PD.Color(ColorNames.red, { isEssential: true }) }, Mesh.Params)\r\n})({\r\n    canAutoUpdate: function () {\r\n        return true;\r\n    },\r\n    apply: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Bounding Box', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var repr;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        repr = ShapeRepresentation(function (_, data, __, shape) {\r\n                            var mesh = getBoxMesh(data.box, data.radius, shape === null || shape === void 0 ? void 0 : shape.geometry);\r\n                            return Shape.create('Bouding Box', data, mesh, function () { return data.color; }, function () { return 1; }, function () { return 'Bounding Box'; });\r\n                        }, Mesh.Utils);\r\n                        return [4 /*yield*/, repr.createOrUpdate(params, { box: a.data.boundary.box, radius: params.radius, color: params.color }).runInContext(ctx)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, new SO.Shape.Representation3D({ repr: repr, sourceData: a.data }, { label: \"Bounding Box\" })];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    update: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return Task.create('Bounding Box', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, b.data.repr.createOrUpdate(newParams, { box: a.data.boundary.box, radius: newParams.radius, color: newParams.color }).runInContext(ctx)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        b.data.sourceData = a.data;\r\n                        return [2 /*return*/, StateTransformer.UpdateResult.Updated];\r\n                }\r\n            });\r\n        }); });\r\n    }\r\n});\r\nexport { StructureSelectionsDistance3D };\r\nvar StructureSelectionsDistance3D = PluginStateTransform.BuiltIn({\r\n    name: 'structure-selections-distance-3d',\r\n    display: '3D Distance',\r\n    from: SO.Molecule.Structure.Selections,\r\n    to: SO.Shape.Representation3D,\r\n    params: function () { return (__assign({}, DistanceParams)); }\r\n})({\r\n    canAutoUpdate: function (_a) {\r\n        var oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return true;\r\n    },\r\n    apply: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Structure Distance', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var data, repr;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        data = getDistanceDataFromStructureSelections(a.data);\r\n                        repr = DistanceRepresentation(__assign({ webgl: (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.webgl }, plugin.representation.structure.themes), function () { return DistanceParams; });\r\n                        return [4 /*yield*/, repr.createOrUpdate(params, data).runInContext(ctx)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [2 /*return*/, new SO.Shape.Representation3D({ repr: repr, sourceData: data }, { label: \"Distance\" })];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    update: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return Task.create('Structure Distance', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var props, data;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        props = __assign(__assign({}, b.data.repr.props), newParams);\r\n                        data = getDistanceDataFromStructureSelections(a.data);\r\n                        return [4 /*yield*/, b.data.repr.createOrUpdate(props, data).runInContext(ctx)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        b.data.sourceData = data;\r\n                        return [2 /*return*/, StateTransformer.UpdateResult.Updated];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n});\r\nexport { StructureSelectionsAngle3D };\r\nvar StructureSelectionsAngle3D = PluginStateTransform.BuiltIn({\r\n    name: 'structure-selections-angle-3d',\r\n    display: '3D Angle',\r\n    from: SO.Molecule.Structure.Selections,\r\n    to: SO.Shape.Representation3D,\r\n    params: function () { return (__assign({}, AngleParams)); }\r\n})({\r\n    canAutoUpdate: function (_a) {\r\n        var oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return true;\r\n    },\r\n    apply: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Structure Angle', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var data, repr;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        data = getAngleDataFromStructureSelections(a.data);\r\n                        repr = AngleRepresentation(__assign({ webgl: (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.webgl }, plugin.representation.structure.themes), function () { return AngleParams; });\r\n                        return [4 /*yield*/, repr.createOrUpdate(params, data).runInContext(ctx)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [2 /*return*/, new SO.Shape.Representation3D({ repr: repr, sourceData: data }, { label: \"Angle\" })];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    update: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return Task.create('Structure Angle', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var props, data;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        props = __assign(__assign({}, b.data.repr.props), newParams);\r\n                        data = getAngleDataFromStructureSelections(a.data);\r\n                        return [4 /*yield*/, b.data.repr.createOrUpdate(props, data).runInContext(ctx)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        b.data.sourceData = data;\r\n                        return [2 /*return*/, StateTransformer.UpdateResult.Updated];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n});\r\nexport { StructureSelectionsDihedral3D };\r\nvar StructureSelectionsDihedral3D = PluginStateTransform.BuiltIn({\r\n    name: 'structure-selections-dihedral-3d',\r\n    display: '3D Dihedral',\r\n    from: SO.Molecule.Structure.Selections,\r\n    to: SO.Shape.Representation3D,\r\n    params: function () { return (__assign({}, DihedralParams)); }\r\n})({\r\n    canAutoUpdate: function (_a) {\r\n        var oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return true;\r\n    },\r\n    apply: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Structure Dihedral', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var data, repr;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        data = getDihedralDataFromStructureSelections(a.data);\r\n                        repr = DihedralRepresentation(__assign({ webgl: (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.webgl }, plugin.representation.structure.themes), function () { return DihedralParams; });\r\n                        return [4 /*yield*/, repr.createOrUpdate(params, data).runInContext(ctx)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [2 /*return*/, new SO.Shape.Representation3D({ repr: repr, sourceData: data }, { label: \"Dihedral\" })];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    update: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return Task.create('Structure Dihedral', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var props, data;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        props = __assign(__assign({}, b.data.repr.props), newParams);\r\n                        data = getDihedralDataFromStructureSelections(a.data);\r\n                        return [4 /*yield*/, b.data.repr.createOrUpdate(props, data).runInContext(ctx)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        b.data.sourceData = data;\r\n                        return [2 /*return*/, StateTransformer.UpdateResult.Updated];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n});\r\nexport { StructureSelectionsLabel3D };\r\nvar StructureSelectionsLabel3D = PluginStateTransform.BuiltIn({\r\n    name: 'structure-selections-label-3d',\r\n    display: '3D Label',\r\n    from: SO.Molecule.Structure.Selections,\r\n    to: SO.Shape.Representation3D,\r\n    params: function () { return (__assign({}, LabelParams)); }\r\n})({\r\n    canAutoUpdate: function (_a) {\r\n        var oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return true;\r\n    },\r\n    apply: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Structure Label', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var data, repr;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        data = getLabelDataFromStructureSelections(a.data);\r\n                        repr = LabelRepresentation(__assign({ webgl: (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.webgl }, plugin.representation.structure.themes), function () { return LabelParams; });\r\n                        return [4 /*yield*/, repr.createOrUpdate(params, data).runInContext(ctx)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [2 /*return*/, new SO.Shape.Representation3D({ repr: repr, sourceData: data }, { label: \"Label\" })];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    update: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return Task.create('Structure Label', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var props, data;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        props = __assign(__assign({}, b.data.repr.props), newParams);\r\n                        data = getLabelDataFromStructureSelections(a.data);\r\n                        return [4 /*yield*/, b.data.repr.createOrUpdate(props, data).runInContext(ctx)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        b.data.sourceData = data;\r\n                        return [2 /*return*/, StateTransformer.UpdateResult.Updated];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n});\r\nexport { StructureSelectionsOrientation3D };\r\nvar StructureSelectionsOrientation3D = PluginStateTransform.BuiltIn({\r\n    name: 'structure-selections-orientation-3d',\r\n    display: '3D Orientation',\r\n    from: SO.Molecule.Structure.Selections,\r\n    to: SO.Shape.Representation3D,\r\n    params: function () { return (__assign({}, OrientationParams)); }\r\n})({\r\n    canAutoUpdate: function (_a) {\r\n        var oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return true;\r\n    },\r\n    apply: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, params = _a.params;\r\n        return Task.create('Structure Orientation', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var data, repr;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        data = getOrientationDataFromStructureSelections(a.data);\r\n                        repr = OrientationRepresentation(__assign({ webgl: (_a = plugin.canvas3d) === null || _a === void 0 ? void 0 : _a.webgl }, plugin.representation.structure.themes), function () { return OrientationParams; });\r\n                        return [4 /*yield*/, repr.createOrUpdate(params, data).runInContext(ctx)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        return [2 /*return*/, new SO.Shape.Representation3D({ repr: repr, sourceData: data }, { label: \"Orientation\" })];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n    update: function (_a, plugin) {\r\n        var _this = this;\r\n        var a = _a.a, b = _a.b, oldParams = _a.oldParams, newParams = _a.newParams;\r\n        return Task.create('Structure Orientation', function (ctx) { return __awaiter(_this, void 0, void 0, function () {\r\n            var props, data;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        props = __assign(__assign({}, b.data.repr.props), newParams);\r\n                        data = getOrientationDataFromStructureSelections(a.data);\r\n                        return [4 /*yield*/, b.data.repr.createOrUpdate(props, data).runInContext(ctx)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        b.data.sourceData = data;\r\n                        return [2 /*return*/, StateTransformer.UpdateResult.Updated];\r\n                }\r\n            });\r\n        }); });\r\n    },\r\n});\r\n//# sourceMappingURL=representation.js.map"]},"metadata":{},"sourceType":"module"}