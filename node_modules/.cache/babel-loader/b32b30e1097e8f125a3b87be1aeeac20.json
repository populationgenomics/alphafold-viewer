{"ast":null,"code":"/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __extends } from \"tslib\";\nimport { StructureSelection, StructureQuery, Structure, Queries, StructureProperties as SP, StructureElement, Unit } from '../../mol-model/structure';\nimport { SequenceWrapper } from './wrapper';\nimport { OrderedSet, Interval, SortedArray } from '../../mol-data/int';\nimport { ColorNames } from '../../mol-util/color/names';\nimport { applyMarkerAction, applyMarkerActionAtPosition } from '../../mol-util/marker-action';\n\nvar PolymerSequenceWrapper =\n/** @class */\nfunction (_super) {\n  __extends(PolymerSequenceWrapper, _super);\n\n  function PolymerSequenceWrapper(data) {\n    var _this = this;\n\n    var l = StructureElement.Location.create(data.structure, data.units[0], data.units[0].elements[0]);\n    var entitySeq = data.units[0].model.sequence.byEntityKey[SP.entity.key(l)];\n    var length = entitySeq.sequence.length;\n    var markerArray = new Uint8Array(length);\n    _this = _super.call(this, data, markerArray, length) || this;\n    _this.unitMap = new Map();\n\n    for (var _i = 0, _a = data.units; _i < _a.length; _i++) {\n      var unit = _a[_i];\n\n      _this.unitMap.set(unit.id, unit);\n    }\n\n    _this.sequence = entitySeq.sequence;\n    _this.missing = data.units[0].model.properties.missingResidues;\n    _this.modelNum = data.units[0].model.modelNum;\n    _this.asymId = Unit.isAtomic(data.units[0]) ? SP.chain.label_asym_id(l) : SP.coarse.asym_id(l);\n    var missing = [];\n\n    for (var i = 0; i < length; ++i) {\n      if (_this.missing.has(_this.modelNum, _this.asymId, _this.seqId(i))) missing.push(i);\n    }\n\n    _this.observed = OrderedSet.subtract(Interval.ofBounds(0, length), SortedArray.ofSortedArray(missing));\n    return _this;\n  }\n\n  PolymerSequenceWrapper.prototype.seqId = function (seqIdx) {\n    return this.sequence.seqId.value(seqIdx);\n  };\n\n  PolymerSequenceWrapper.prototype.residueLabel = function (seqIdx) {\n    return this.sequence.label.value(seqIdx) || this.sequence.code.value(seqIdx);\n  };\n\n  PolymerSequenceWrapper.prototype.residueColor = function (seqIdx) {\n    return this.missing.has(this.modelNum, this.asymId, this.seqId(seqIdx)) ? ColorNames.grey : ColorNames.black;\n  };\n\n  PolymerSequenceWrapper.prototype.residueClass = function (seqIdx) {\n    return this.missing.has(this.modelNum, this.asymId, this.seqId(seqIdx)) ? 'msp-sequence-missing' : 'msp-sequence-present';\n  };\n\n  PolymerSequenceWrapper.prototype.mark = function (loci, action) {\n    var _this = this;\n\n    var changed = false;\n    var structure = this.data.structure;\n\n    var index = function (seqId) {\n      return _this.sequence.index(seqId);\n    };\n\n    if (StructureElement.Loci.is(loci)) {\n      if (!Structure.areRootsEquivalent(loci.structure, structure)) return false;\n      loci = StructureElement.Loci.remap(loci, structure);\n\n      for (var _i = 0, _a = loci.elements; _i < _a.length; _i++) {\n        var e = _a[_i];\n        if (!this.unitMap.has(e.unit.id)) continue;\n\n        if (Unit.isAtomic(e.unit)) {\n          changed = applyMarkerAtomic(e, action, this.markerArray, index) || changed;\n        } else {\n          changed = applyMarkerCoarse(e, action, this.markerArray, index) || changed;\n        }\n      }\n    } else if (Structure.isLoci(loci)) {\n      if (!Structure.areRootsEquivalent(loci.structure, structure)) return false;\n      if (applyMarkerAction(this.markerArray, this.observed, action)) changed = true;\n    }\n\n    return changed;\n  };\n\n  PolymerSequenceWrapper.prototype.getLoci = function (seqIdx) {\n    var query = createResidueQuery(this.data.units[0].chainGroupId, this.data.units[0].conformation.operator.name, this.seqId(seqIdx));\n    return StructureSelection.toLociWithSourceUnits(StructureQuery.run(query, this.data.structure));\n  };\n\n  return PolymerSequenceWrapper;\n}(SequenceWrapper);\n\nexport { PolymerSequenceWrapper };\n\nfunction createResidueQuery(chainGroupId, operatorName, label_seq_id) {\n  return Queries.generators.atoms({\n    unitTest: function (ctx) {\n      return SP.unit.chainGroupId(ctx.element) === chainGroupId && SP.unit.operator_name(ctx.element) === operatorName;\n    },\n    residueTest: function (ctx) {\n      if (ctx.element.unit.kind === 0\n      /* Atomic */\n      ) {\n        return SP.residue.label_seq_id(ctx.element) === label_seq_id;\n      } else {\n        return SP.coarse.seq_id_begin(ctx.element) <= label_seq_id && SP.coarse.seq_id_end(ctx.element) >= label_seq_id;\n      }\n    }\n  });\n}\n\nfunction applyMarkerAtomic(e, action, markerArray, index) {\n  var _a = e.unit,\n      model = _a.model,\n      elements = _a.elements;\n  var residueIndex = model.atomicHierarchy.residueAtomSegments.index;\n  var label_seq_id = model.atomicHierarchy.residues.label_seq_id;\n  OrderedSet.forEachSegment(e.indices, function (i) {\n    return residueIndex[elements[i]];\n  }, function (rI) {\n    var seqId = label_seq_id.value(rI);\n    applyMarkerActionAtPosition(markerArray, index(seqId), action);\n  });\n  return true;\n}\n\nfunction applyMarkerCoarse(e, action, markerArray, index) {\n  var _a = e.unit,\n      model = _a.model,\n      elements = _a.elements;\n  var begin = Unit.isSpheres(e.unit) ? model.coarseHierarchy.spheres.seq_id_begin : model.coarseHierarchy.gaussians.seq_id_begin;\n  var end = Unit.isSpheres(e.unit) ? model.coarseHierarchy.spheres.seq_id_end : model.coarseHierarchy.gaussians.seq_id_end;\n  OrderedSet.forEach(e.indices, function (i) {\n    var eI = elements[i];\n\n    for (var s = index(begin.value(eI)), e_1 = index(end.value(eI)); s <= e_1; s++) {\n      applyMarkerActionAtPosition(markerArray, s, action);\n    }\n  });\n  return true;\n}","map":{"version":3,"sources":["../../../src/mol-plugin-ui/sequence/polymer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { StructureSelection, StructureQuery, Structure, Queries, StructureProperties as SP, StructureElement, Unit } from '../../mol-model/structure';\r\nimport { SequenceWrapper } from './wrapper';\r\nimport { OrderedSet, Interval, SortedArray } from '../../mol-data/int';\r\nimport { ColorNames } from '../../mol-util/color/names';\r\nimport { applyMarkerAction, applyMarkerActionAtPosition } from '../../mol-util/marker-action';\r\nvar PolymerSequenceWrapper = /** @class */ (function (_super) {\r\n    __extends(PolymerSequenceWrapper, _super);\r\n    function PolymerSequenceWrapper(data) {\r\n        var _this = this;\r\n        var l = StructureElement.Location.create(data.structure, data.units[0], data.units[0].elements[0]);\r\n        var entitySeq = data.units[0].model.sequence.byEntityKey[SP.entity.key(l)];\r\n        var length = entitySeq.sequence.length;\r\n        var markerArray = new Uint8Array(length);\r\n        _this = _super.call(this, data, markerArray, length) || this;\r\n        _this.unitMap = new Map();\r\n        for (var _i = 0, _a = data.units; _i < _a.length; _i++) {\r\n            var unit = _a[_i];\r\n            _this.unitMap.set(unit.id, unit);\r\n        }\r\n        _this.sequence = entitySeq.sequence;\r\n        _this.missing = data.units[0].model.properties.missingResidues;\r\n        _this.modelNum = data.units[0].model.modelNum;\r\n        _this.asymId = Unit.isAtomic(data.units[0]) ? SP.chain.label_asym_id(l) : SP.coarse.asym_id(l);\r\n        var missing = [];\r\n        for (var i = 0; i < length; ++i) {\r\n            if (_this.missing.has(_this.modelNum, _this.asymId, _this.seqId(i)))\r\n                missing.push(i);\r\n        }\r\n        _this.observed = OrderedSet.subtract(Interval.ofBounds(0, length), SortedArray.ofSortedArray(missing));\r\n        return _this;\r\n    }\r\n    PolymerSequenceWrapper.prototype.seqId = function (seqIdx) {\r\n        return this.sequence.seqId.value(seqIdx);\r\n    };\r\n    PolymerSequenceWrapper.prototype.residueLabel = function (seqIdx) {\r\n        return this.sequence.label.value(seqIdx) || this.sequence.code.value(seqIdx);\r\n    };\r\n    PolymerSequenceWrapper.prototype.residueColor = function (seqIdx) {\r\n        return this.missing.has(this.modelNum, this.asymId, this.seqId(seqIdx))\r\n            ? ColorNames.grey\r\n            : ColorNames.black;\r\n    };\r\n    PolymerSequenceWrapper.prototype.residueClass = function (seqIdx) {\r\n        return this.missing.has(this.modelNum, this.asymId, this.seqId(seqIdx))\r\n            ? 'msp-sequence-missing'\r\n            : 'msp-sequence-present';\r\n    };\r\n    PolymerSequenceWrapper.prototype.mark = function (loci, action) {\r\n        var _this = this;\r\n        var changed = false;\r\n        var structure = this.data.structure;\r\n        var index = function (seqId) { return _this.sequence.index(seqId); };\r\n        if (StructureElement.Loci.is(loci)) {\r\n            if (!Structure.areRootsEquivalent(loci.structure, structure))\r\n                return false;\r\n            loci = StructureElement.Loci.remap(loci, structure);\r\n            for (var _i = 0, _a = loci.elements; _i < _a.length; _i++) {\r\n                var e = _a[_i];\r\n                if (!this.unitMap.has(e.unit.id))\r\n                    continue;\r\n                if (Unit.isAtomic(e.unit)) {\r\n                    changed = applyMarkerAtomic(e, action, this.markerArray, index) || changed;\r\n                }\r\n                else {\r\n                    changed = applyMarkerCoarse(e, action, this.markerArray, index) || changed;\r\n                }\r\n            }\r\n        }\r\n        else if (Structure.isLoci(loci)) {\r\n            if (!Structure.areRootsEquivalent(loci.structure, structure))\r\n                return false;\r\n            if (applyMarkerAction(this.markerArray, this.observed, action))\r\n                changed = true;\r\n        }\r\n        return changed;\r\n    };\r\n    PolymerSequenceWrapper.prototype.getLoci = function (seqIdx) {\r\n        var query = createResidueQuery(this.data.units[0].chainGroupId, this.data.units[0].conformation.operator.name, this.seqId(seqIdx));\r\n        return StructureSelection.toLociWithSourceUnits(StructureQuery.run(query, this.data.structure));\r\n    };\r\n    return PolymerSequenceWrapper;\r\n}(SequenceWrapper));\r\nexport { PolymerSequenceWrapper };\r\nfunction createResidueQuery(chainGroupId, operatorName, label_seq_id) {\r\n    return Queries.generators.atoms({\r\n        unitTest: function (ctx) {\r\n            return (SP.unit.chainGroupId(ctx.element) === chainGroupId &&\r\n                SP.unit.operator_name(ctx.element) === operatorName);\r\n        },\r\n        residueTest: function (ctx) {\r\n            if (ctx.element.unit.kind === 0 /* Atomic */) {\r\n                return SP.residue.label_seq_id(ctx.element) === label_seq_id;\r\n            }\r\n            else {\r\n                return (SP.coarse.seq_id_begin(ctx.element) <= label_seq_id &&\r\n                    SP.coarse.seq_id_end(ctx.element) >= label_seq_id);\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction applyMarkerAtomic(e, action, markerArray, index) {\r\n    var _a = e.unit, model = _a.model, elements = _a.elements;\r\n    var residueIndex = model.atomicHierarchy.residueAtomSegments.index;\r\n    var label_seq_id = model.atomicHierarchy.residues.label_seq_id;\r\n    OrderedSet.forEachSegment(e.indices, function (i) { return residueIndex[elements[i]]; }, function (rI) {\r\n        var seqId = label_seq_id.value(rI);\r\n        applyMarkerActionAtPosition(markerArray, index(seqId), action);\r\n    });\r\n    return true;\r\n}\r\nfunction applyMarkerCoarse(e, action, markerArray, index) {\r\n    var _a = e.unit, model = _a.model, elements = _a.elements;\r\n    var begin = Unit.isSpheres(e.unit) ? model.coarseHierarchy.spheres.seq_id_begin : model.coarseHierarchy.gaussians.seq_id_begin;\r\n    var end = Unit.isSpheres(e.unit) ? model.coarseHierarchy.spheres.seq_id_end : model.coarseHierarchy.gaussians.seq_id_end;\r\n    OrderedSet.forEach(e.indices, function (i) {\r\n        var eI = elements[i];\r\n        for (var s = index(begin.value(eI)), e_1 = index(end.value(eI)); s <= e_1; s++) {\r\n            applyMarkerActionAtPosition(markerArray, s, action);\r\n        }\r\n    });\r\n    return true;\r\n}\r\n//# sourceMappingURL=polymer.js.map"]},"metadata":{},"sourceType":"module"}