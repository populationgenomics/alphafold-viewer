{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Áron Samuel Kovács <aron.kovacs@mail.muni.cz>\r\n */\nimport { __assign } from \"tslib\";\nimport { QuadSchema, QuadValues } from '../../mol-gl/compute/util';\nimport { TextureSpec, UniformSpec, DefineSpec } from '../../mol-gl/renderable/schema';\nimport { ShaderCode } from '../../mol-gl/shader-code';\nimport { ValueCell } from '../../mol-util';\nimport { createComputeRenderItem } from '../../mol-gl/webgl/render-item';\nimport { createComputeRenderable } from '../../mol-gl/renderable';\nimport { Mat4, Vec2, Vec3, Vec4 } from '../../mol-math/linear-algebra';\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\nimport { quad_vert } from '../../mol-gl/shader/quad.vert';\nimport { outlines_frag } from '../../mol-gl/shader/outlines.frag';\nimport { ssao_frag } from '../../mol-gl/shader/ssao.frag';\nimport { ssaoBlur_frag } from '../../mol-gl/shader/ssao-blur.frag';\nimport { postprocessing_frag } from '../../mol-gl/shader/postprocessing.frag';\nimport { Color } from '../../mol-util/color';\nimport { FxaaParams, FxaaPass } from './fxaa';\nimport { SmaaParams, SmaaPass } from './smaa';\n\nvar OutlinesSchema = __assign(__assign({}, QuadSchema), {\n  tDepth: TextureSpec('texture', 'rgba', 'ubyte', 'nearest'),\n  uTexSize: UniformSpec('v2'),\n  dOrthographic: DefineSpec('number'),\n  uNear: UniformSpec('f'),\n  uFar: UniformSpec('f'),\n  uMaxPossibleViewZDiff: UniformSpec('f')\n});\n\nfunction getOutlinesRenderable(ctx, depthTexture) {\n  var values = __assign(__assign({}, QuadValues), {\n    tDepth: ValueCell.create(depthTexture),\n    uTexSize: ValueCell.create(Vec2.create(depthTexture.getWidth(), depthTexture.getHeight())),\n    dOrthographic: ValueCell.create(0),\n    uNear: ValueCell.create(1),\n    uFar: ValueCell.create(10000),\n    uMaxPossibleViewZDiff: ValueCell.create(0.5)\n  });\n\n  var schema = __assign({}, OutlinesSchema);\n\n  var shaderCode = ShaderCode('outlines', quad_vert, outlines_frag);\n  var renderItem = createComputeRenderItem(ctx, 'triangles', shaderCode, schema, values);\n  return createComputeRenderable(renderItem, values);\n}\n\nvar SsaoSchema = __assign(__assign({}, QuadSchema), {\n  tDepth: TextureSpec('texture', 'rgba', 'ubyte', 'nearest'),\n  uSamples: UniformSpec('v3[]'),\n  dNSamples: DefineSpec('number'),\n  uProjection: UniformSpec('m4'),\n  uInvProjection: UniformSpec('m4'),\n  uBounds: UniformSpec('v4'),\n  uTexSize: UniformSpec('v2'),\n  uRadius: UniformSpec('f'),\n  uBias: UniformSpec('f')\n});\n\nfunction getSsaoRenderable(ctx, depthTexture) {\n  var values = __assign(__assign({}, QuadValues), {\n    tDepth: ValueCell.create(depthTexture),\n    uSamples: ValueCell.create([0.0, 0.0, 1.0]),\n    dNSamples: ValueCell.create(1),\n    uProjection: ValueCell.create(Mat4.identity()),\n    uInvProjection: ValueCell.create(Mat4.identity()),\n    uBounds: ValueCell.create(Vec4()),\n    uTexSize: ValueCell.create(Vec2.create(ctx.gl.drawingBufferWidth, ctx.gl.drawingBufferHeight)),\n    uRadius: ValueCell.create(8.0),\n    uBias: ValueCell.create(0.025)\n  });\n\n  var schema = __assign({}, SsaoSchema);\n\n  var shaderCode = ShaderCode('ssao', quad_vert, ssao_frag);\n  var renderItem = createComputeRenderItem(ctx, 'triangles', shaderCode, schema, values);\n  return createComputeRenderable(renderItem, values);\n}\n\nvar SsaoBlurSchema = __assign(__assign({}, QuadSchema), {\n  tSsaoDepth: TextureSpec('texture', 'rgba', 'ubyte', 'nearest'),\n  uTexSize: UniformSpec('v2'),\n  uKernel: UniformSpec('f[]'),\n  dOcclusionKernelSize: DefineSpec('number'),\n  uBlurDirectionX: UniformSpec('f'),\n  uBlurDirectionY: UniformSpec('f'),\n  uMaxPossibleViewZDiff: UniformSpec('f'),\n  uNear: UniformSpec('f'),\n  uFar: UniformSpec('f'),\n  uBounds: UniformSpec('v4'),\n  dOrthographic: DefineSpec('number')\n});\n\nfunction getSsaoBlurRenderable(ctx, ssaoDepthTexture, direction) {\n  var values = __assign(__assign({}, QuadValues), {\n    tSsaoDepth: ValueCell.create(ssaoDepthTexture),\n    uTexSize: ValueCell.create(Vec2.create(ssaoDepthTexture.getWidth(), ssaoDepthTexture.getHeight())),\n    uKernel: ValueCell.create([0.0]),\n    dOcclusionKernelSize: ValueCell.create(1),\n    uBlurDirectionX: ValueCell.create(direction === 'horizontal' ? 1 : 0),\n    uBlurDirectionY: ValueCell.create(direction === 'vertical' ? 1 : 0),\n    uMaxPossibleViewZDiff: ValueCell.create(0.5),\n    uNear: ValueCell.create(0.0),\n    uFar: ValueCell.create(10000.0),\n    uBounds: ValueCell.create(Vec4()),\n    dOrthographic: ValueCell.create(0)\n  });\n\n  var schema = __assign({}, SsaoBlurSchema);\n\n  var shaderCode = ShaderCode('ssao_blur', quad_vert, ssaoBlur_frag);\n  var renderItem = createComputeRenderItem(ctx, 'triangles', shaderCode, schema, values);\n  return createComputeRenderable(renderItem, values);\n}\n\nfunction getBlurKernel(kernelSize) {\n  var sigma = kernelSize / 3.0;\n  var halfKernelSize = Math.floor((kernelSize + 1) / 2);\n  var kernel = [];\n\n  for (var x = 0; x < halfKernelSize; x++) {\n    kernel.push(1.0 / (Math.sqrt(2 * Math.PI) * sigma) * Math.exp(-x * x / (2 * sigma * sigma)));\n  }\n\n  return kernel;\n}\n\nfunction getSamples(vectorSamples, nSamples) {\n  var samples = [];\n\n  for (var i = 0; i < nSamples; i++) {\n    var scale = (i * i + 2.0 * i + 1) / (nSamples * nSamples);\n    scale = 0.1 + scale * (1.0 - 0.1);\n    samples.push(vectorSamples[i][0] * scale);\n    samples.push(vectorSamples[i][1] * scale);\n    samples.push(vectorSamples[i][2] * scale);\n  }\n\n  return samples;\n}\n\nvar PostprocessingSchema = __assign(__assign({}, QuadSchema), {\n  tSsaoDepth: TextureSpec('texture', 'rgba', 'ubyte', 'nearest'),\n  tColor: TextureSpec('texture', 'rgba', 'ubyte', 'nearest'),\n  tDepth: TextureSpec('texture', 'rgba', 'ubyte', 'nearest'),\n  tOutlines: TextureSpec('texture', 'rgba', 'ubyte', 'nearest'),\n  uTexSize: UniformSpec('v2'),\n  dOrthographic: DefineSpec('number'),\n  uNear: UniformSpec('f'),\n  uFar: UniformSpec('f'),\n  uFogNear: UniformSpec('f'),\n  uFogFar: UniformSpec('f'),\n  uFogColor: UniformSpec('v3'),\n  uTransparentBackground: UniformSpec('b'),\n  uMaxPossibleViewZDiff: UniformSpec('f'),\n  dOcclusionEnable: DefineSpec('boolean'),\n  dOutlineEnable: DefineSpec('boolean'),\n  dOutlineScale: DefineSpec('number'),\n  uOutlineThreshold: UniformSpec('f')\n});\n\nfunction getPostprocessingRenderable(ctx, colorTexture, depthTexture, outlinesTexture, ssaoDepthTexture) {\n  var values = __assign(__assign({}, QuadValues), {\n    tSsaoDepth: ValueCell.create(ssaoDepthTexture),\n    tColor: ValueCell.create(colorTexture),\n    tDepth: ValueCell.create(depthTexture),\n    tOutlines: ValueCell.create(outlinesTexture),\n    uTexSize: ValueCell.create(Vec2.create(colorTexture.getWidth(), colorTexture.getHeight())),\n    dOrthographic: ValueCell.create(0),\n    uNear: ValueCell.create(1),\n    uFar: ValueCell.create(10000),\n    uFogNear: ValueCell.create(10000),\n    uFogFar: ValueCell.create(10000),\n    uFogColor: ValueCell.create(Vec3.create(1, 1, 1)),\n    uTransparentBackground: ValueCell.create(false),\n    uMaxPossibleViewZDiff: ValueCell.create(0.5),\n    dOcclusionEnable: ValueCell.create(false),\n    dOutlineEnable: ValueCell.create(false),\n    dOutlineScale: ValueCell.create(1),\n    uOutlineThreshold: ValueCell.create(0.33)\n  });\n\n  var schema = __assign({}, PostprocessingSchema);\n\n  var shaderCode = ShaderCode('postprocessing', quad_vert, postprocessing_frag);\n  var renderItem = createComputeRenderItem(ctx, 'triangles', shaderCode, schema, values);\n  return createComputeRenderable(renderItem, values);\n}\n\nexport var PostprocessingParams = {\n  occlusion: PD.MappedStatic('on', {\n    on: PD.Group({\n      samples: PD.Numeric(32, {\n        min: 1,\n        max: 256,\n        step: 1\n      }),\n      radius: PD.Numeric(5, {\n        min: 0,\n        max: 10,\n        step: 0.1\n      }, {\n        description: 'Final radius is 2^x.'\n      }),\n      bias: PD.Numeric(0.8, {\n        min: 0,\n        max: 3,\n        step: 0.1\n      }),\n      blurKernelSize: PD.Numeric(15, {\n        min: 1,\n        max: 25,\n        step: 2\n      })\n    }),\n    off: PD.Group({})\n  }, {\n    cycle: true,\n    description: 'Darken occluded crevices with the ambient occlusion effect'\n  }),\n  outline: PD.MappedStatic('off', {\n    on: PD.Group({\n      scale: PD.Numeric(1, {\n        min: 1,\n        max: 5,\n        step: 1\n      }),\n      threshold: PD.Numeric(0.33, {\n        min: 0.01,\n        max: 1,\n        step: 0.01\n      })\n    }),\n    off: PD.Group({})\n  }, {\n    cycle: true,\n    description: 'Draw outline around 3D objects'\n  }),\n  antialiasing: PD.MappedStatic('smaa', {\n    fxaa: PD.Group(FxaaParams),\n    smaa: PD.Group(SmaaParams),\n    off: PD.Group({})\n  }, {\n    options: [['fxaa', 'FXAA'], ['smaa', 'SMAA'], ['off', 'Off']],\n    description: 'Smooth pixel edges'\n  })\n};\n\nvar PostprocessingPass =\n/** @class */\nfunction () {\n  function PostprocessingPass(webgl, drawPass) {\n    this.webgl = webgl;\n    this.ssaoScale = this.calcSsaoScale();\n    var colorTarget = drawPass.colorTarget,\n        depthTexture = drawPass.depthTexture;\n    var width = colorTarget.getWidth();\n    var height = colorTarget.getHeight();\n    this.nSamples = 1;\n    this.blurKernelSize = 1; // needs to be linear for anti-aliasing pass\n\n    this.target = webgl.createRenderTarget(width, height, false, 'uint8', 'linear');\n    this.outlinesTarget = webgl.createRenderTarget(width, height, false);\n    this.outlinesRenderable = getOutlinesRenderable(webgl, depthTexture);\n    this.randomHemisphereVector = [];\n\n    for (var i = 0; i < 256; i++) {\n      var v = Vec3();\n      v[0] = Math.random() * 2.0 - 1.0;\n      v[1] = Math.random() * 2.0 - 1.0;\n      v[2] = Math.random();\n      Vec3.normalize(v, v);\n      Vec3.scale(v, v, Math.random());\n      this.randomHemisphereVector.push(v);\n    }\n\n    this.ssaoFramebuffer = webgl.resources.framebuffer();\n    this.ssaoBlurFirstPassFramebuffer = webgl.resources.framebuffer();\n    this.ssaoBlurSecondPassFramebuffer = webgl.resources.framebuffer();\n    var sw = Math.floor(width * this.ssaoScale);\n    var sh = Math.floor(height * this.ssaoScale);\n    this.ssaoDepthTexture = webgl.resources.texture('image-uint8', 'rgba', 'ubyte', 'nearest');\n    this.ssaoDepthTexture.define(sw, sh);\n    this.ssaoDepthTexture.attachFramebuffer(this.ssaoFramebuffer, 'color0');\n    this.ssaoDepthBlurProxyTexture = webgl.resources.texture('image-uint8', 'rgba', 'ubyte', 'nearest');\n    this.ssaoDepthBlurProxyTexture.define(sw, sh);\n    this.ssaoDepthBlurProxyTexture.attachFramebuffer(this.ssaoBlurFirstPassFramebuffer, 'color0');\n    this.ssaoDepthTexture.attachFramebuffer(this.ssaoBlurSecondPassFramebuffer, 'color0');\n    this.ssaoRenderable = getSsaoRenderable(webgl, depthTexture);\n    this.ssaoBlurFirstPassRenderable = getSsaoBlurRenderable(webgl, this.ssaoDepthTexture, 'horizontal');\n    this.ssaoBlurSecondPassRenderable = getSsaoBlurRenderable(webgl, this.ssaoDepthBlurProxyTexture, 'vertical');\n    this.renderable = getPostprocessingRenderable(webgl, colorTarget.texture, depthTexture, this.outlinesTarget.texture, this.ssaoDepthTexture);\n  }\n\n  PostprocessingPass.isEnabled = function (props) {\n    return props.occlusion.name === 'on' || props.outline.name === 'on';\n  };\n\n  PostprocessingPass.prototype.calcSsaoScale = function () {\n    // downscale ssao for high pixel-ratios\n    return Math.min(1, 1 / this.webgl.pixelRatio);\n  };\n\n  PostprocessingPass.prototype.setSize = function (width, height) {\n    var _a = this.renderable.values.uTexSize.ref.value,\n        w = _a[0],\n        h = _a[1];\n    var ssaoScale = this.calcSsaoScale();\n\n    if (width !== w || height !== h || this.ssaoScale !== ssaoScale) {\n      this.ssaoScale = ssaoScale;\n      var sw = Math.floor(width * this.ssaoScale);\n      var sh = Math.floor(height * this.ssaoScale);\n      this.target.setSize(width, height);\n      this.outlinesTarget.setSize(width, height);\n      this.ssaoDepthTexture.define(sw, sh);\n      this.ssaoDepthBlurProxyTexture.define(sw, sh);\n      ValueCell.update(this.renderable.values.uTexSize, Vec2.set(this.renderable.values.uTexSize.ref.value, width, height));\n      ValueCell.update(this.outlinesRenderable.values.uTexSize, Vec2.set(this.outlinesRenderable.values.uTexSize.ref.value, width, height));\n      ValueCell.update(this.ssaoRenderable.values.uTexSize, Vec2.set(this.ssaoRenderable.values.uTexSize.ref.value, sw, sh));\n      ValueCell.update(this.ssaoBlurFirstPassRenderable.values.uTexSize, Vec2.set(this.ssaoBlurFirstPassRenderable.values.uTexSize.ref.value, sw, sh));\n      ValueCell.update(this.ssaoBlurSecondPassRenderable.values.uTexSize, Vec2.set(this.ssaoBlurSecondPassRenderable.values.uTexSize.ref.value, sw, sh));\n    }\n  };\n\n  PostprocessingPass.prototype.updateState = function (camera, transparentBackground, backgroundColor, props) {\n    var needsUpdateMain = false;\n    var needsUpdateSsao = false;\n    var needsUpdateSsaoBlur = false;\n    var orthographic = camera.state.mode === 'orthographic' ? 1 : 0;\n    var outlinesEnabled = props.outline.name === 'on';\n    var occlusionEnabled = props.occlusion.name === 'on';\n    var invProjection = Mat4.identity();\n    Mat4.invert(invProjection, camera.projection);\n\n    if (props.occlusion.name === 'on') {\n      ValueCell.update(this.ssaoRenderable.values.uProjection, camera.projection);\n      ValueCell.update(this.ssaoRenderable.values.uInvProjection, invProjection);\n      var _a = this.renderable.values.uTexSize.ref.value,\n          w = _a[0],\n          h = _a[1];\n      var b = this.ssaoRenderable.values.uBounds;\n      var v = camera.viewport;\n      var s = this.ssaoScale;\n      Vec4.set(b.ref.value, Math.floor(v.x * s) / (w * s), Math.floor(v.y * s) / (h * s), Math.ceil((v.x + v.width) * s) / (w * s), Math.ceil((v.y + v.height) * s) / (h * s));\n      ValueCell.update(b, b.ref.value);\n      ValueCell.update(this.ssaoBlurFirstPassRenderable.values.uBounds, b.ref.value);\n      ValueCell.update(this.ssaoBlurSecondPassRenderable.values.uBounds, b.ref.value);\n      ValueCell.updateIfChanged(this.ssaoBlurFirstPassRenderable.values.uNear, camera.near);\n      ValueCell.updateIfChanged(this.ssaoBlurSecondPassRenderable.values.uNear, camera.near);\n      ValueCell.updateIfChanged(this.ssaoBlurFirstPassRenderable.values.uFar, camera.far);\n      ValueCell.updateIfChanged(this.ssaoBlurSecondPassRenderable.values.uFar, camera.far);\n\n      if (this.ssaoBlurFirstPassRenderable.values.dOrthographic.ref.value !== orthographic) {\n        needsUpdateSsaoBlur = true;\n      }\n\n      ValueCell.updateIfChanged(this.ssaoBlurFirstPassRenderable.values.dOrthographic, orthographic);\n      ValueCell.updateIfChanged(this.ssaoBlurSecondPassRenderable.values.dOrthographic, orthographic);\n\n      if (this.nSamples !== props.occlusion.params.samples) {\n        needsUpdateSsao = true;\n        this.nSamples = props.occlusion.params.samples;\n        ValueCell.update(this.ssaoRenderable.values.uSamples, getSamples(this.randomHemisphereVector, this.nSamples));\n        ValueCell.updateIfChanged(this.ssaoRenderable.values.dNSamples, this.nSamples);\n      }\n\n      ValueCell.updateIfChanged(this.ssaoRenderable.values.uRadius, Math.pow(2, props.occlusion.params.radius));\n      ValueCell.updateIfChanged(this.ssaoRenderable.values.uBias, props.occlusion.params.bias);\n\n      if (this.blurKernelSize !== props.occlusion.params.blurKernelSize) {\n        needsUpdateSsaoBlur = true;\n        this.blurKernelSize = props.occlusion.params.blurKernelSize;\n        var kernel = getBlurKernel(this.blurKernelSize);\n        ValueCell.update(this.ssaoBlurFirstPassRenderable.values.uKernel, kernel);\n        ValueCell.update(this.ssaoBlurSecondPassRenderable.values.uKernel, kernel);\n        ValueCell.updateIfChanged(this.ssaoBlurFirstPassRenderable.values.dOcclusionKernelSize, this.blurKernelSize);\n        ValueCell.updateIfChanged(this.ssaoBlurSecondPassRenderable.values.dOcclusionKernelSize, this.blurKernelSize);\n      }\n    }\n\n    if (props.outline.name === 'on') {\n      var threshold = props.outline.params.threshold; // orthographic needs lower threshold\n\n      if (camera.state.mode === 'orthographic') threshold /= 5;\n      var factor = Math.pow(1000, threshold) / 1000; // use radiusMax for stable outlines when zooming\n\n      var maxPossibleViewZDiff = factor * camera.state.radiusMax;\n      var outlineScale = props.outline.params.scale - 1;\n      ValueCell.updateIfChanged(this.outlinesRenderable.values.uNear, camera.near);\n      ValueCell.updateIfChanged(this.outlinesRenderable.values.uFar, camera.far);\n      ValueCell.updateIfChanged(this.outlinesRenderable.values.uMaxPossibleViewZDiff, maxPossibleViewZDiff);\n      ValueCell.updateIfChanged(this.renderable.values.uMaxPossibleViewZDiff, maxPossibleViewZDiff);\n\n      if (this.renderable.values.dOutlineScale.ref.value !== outlineScale) {\n        needsUpdateMain = true;\n      }\n\n      ValueCell.updateIfChanged(this.renderable.values.dOutlineScale, outlineScale);\n    }\n\n    ValueCell.updateIfChanged(this.renderable.values.uFar, camera.far);\n    ValueCell.updateIfChanged(this.renderable.values.uNear, camera.near);\n    ValueCell.updateIfChanged(this.renderable.values.uFogFar, camera.fogFar);\n    ValueCell.updateIfChanged(this.renderable.values.uFogNear, camera.fogNear);\n    ValueCell.update(this.renderable.values.uFogColor, Color.toVec3Normalized(this.renderable.values.uFogColor.ref.value, backgroundColor));\n    ValueCell.updateIfChanged(this.renderable.values.uTransparentBackground, transparentBackground);\n\n    if (this.renderable.values.dOrthographic.ref.value !== orthographic) {\n      needsUpdateMain = true;\n    }\n\n    ValueCell.updateIfChanged(this.renderable.values.dOrthographic, orthographic);\n\n    if (this.renderable.values.dOutlineEnable.ref.value !== outlinesEnabled) {\n      needsUpdateMain = true;\n    }\n\n    ValueCell.updateIfChanged(this.renderable.values.dOutlineEnable, outlinesEnabled);\n\n    if (this.renderable.values.dOcclusionEnable.ref.value !== occlusionEnabled) {\n      needsUpdateMain = true;\n    }\n\n    ValueCell.updateIfChanged(this.renderable.values.dOcclusionEnable, occlusionEnabled);\n\n    if (needsUpdateSsao) {\n      this.ssaoRenderable.update();\n    }\n\n    if (needsUpdateSsaoBlur) {\n      this.ssaoBlurFirstPassRenderable.update();\n      this.ssaoBlurSecondPassRenderable.update();\n    }\n\n    if (needsUpdateMain) {\n      this.renderable.update();\n    }\n\n    var _b = this.webgl,\n        gl = _b.gl,\n        state = _b.state;\n    state.enable(gl.SCISSOR_TEST);\n    state.disable(gl.BLEND);\n    state.disable(gl.DEPTH_TEST);\n    state.depthMask(false);\n    var _c = camera.viewport,\n        x = _c.x,\n        y = _c.y,\n        width = _c.width,\n        height = _c.height;\n    gl.viewport(x, y, width, height);\n    gl.scissor(x, y, width, height);\n  };\n\n  PostprocessingPass.prototype.render = function (camera, toDrawingBuffer, transparentBackground, backgroundColor, props) {\n    this.updateState(camera, transparentBackground, backgroundColor, props);\n\n    if (props.outline.name === 'on') {\n      this.outlinesTarget.bind();\n      this.outlinesRenderable.render();\n    }\n\n    if (props.occlusion.name === 'on') {\n      var _a = camera.viewport,\n          x = _a.x,\n          y = _a.y,\n          width = _a.width,\n          height = _a.height;\n      var sx = Math.floor(x * this.ssaoScale);\n      var sy = Math.floor(y * this.ssaoScale);\n      var sw = Math.ceil(width * this.ssaoScale);\n      var sh = Math.ceil(height * this.ssaoScale);\n      this.webgl.gl.viewport(sx, sy, sw, sh);\n      this.webgl.gl.scissor(sx, sy, sw, sh);\n      this.ssaoFramebuffer.bind();\n      this.ssaoRenderable.render();\n      this.ssaoBlurFirstPassFramebuffer.bind();\n      this.ssaoBlurFirstPassRenderable.render();\n      this.ssaoBlurSecondPassFramebuffer.bind();\n      this.ssaoBlurSecondPassRenderable.render();\n      this.webgl.gl.viewport(x, y, width, height);\n      this.webgl.gl.scissor(x, y, width, height);\n    }\n\n    if (toDrawingBuffer) {\n      this.webgl.unbindFramebuffer();\n    } else {\n      this.target.bind();\n    }\n\n    var _b = this.webgl,\n        gl = _b.gl,\n        state = _b.state;\n    state.clearColor(0, 0, 0, 1);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    this.renderable.render();\n  };\n\n  return PostprocessingPass;\n}();\n\nexport { PostprocessingPass };\n\nvar AntialiasingPass =\n/** @class */\nfunction () {\n  function AntialiasingPass(webgl, drawPass) {\n    this.drawPass = drawPass;\n    var colorTarget = drawPass.colorTarget;\n    var width = colorTarget.getWidth();\n    var height = colorTarget.getHeight();\n    this.target = webgl.createRenderTarget(width, height, false);\n    this.fxaa = new FxaaPass(webgl, this.target.texture);\n    this.smaa = new SmaaPass(webgl, this.target.texture);\n  }\n\n  AntialiasingPass.isEnabled = function (props) {\n    return props.antialiasing.name !== 'off';\n  };\n\n  AntialiasingPass.prototype.setSize = function (width, height) {\n    var w = this.target.texture.getWidth();\n    var h = this.target.texture.getHeight();\n\n    if (width !== w || height !== h) {\n      this.target.setSize(width, height);\n      this.fxaa.setSize(width, height);\n      if (this.smaa.supported) this.smaa.setSize(width, height);\n    }\n  };\n\n  AntialiasingPass.prototype._renderFxaa = function (camera, toDrawingBuffer, props) {\n    if (props.antialiasing.name !== 'fxaa') return;\n    var input = PostprocessingPass.isEnabled(props) ? this.drawPass.postprocessing.target.texture : this.drawPass.colorTarget.texture;\n    this.fxaa.update(input, props.antialiasing.params);\n    this.fxaa.render(camera.viewport, toDrawingBuffer ? undefined : this.target);\n  };\n\n  AntialiasingPass.prototype._renderSmaa = function (camera, toDrawingBuffer, props) {\n    if (props.antialiasing.name !== 'smaa') return;\n    var input = PostprocessingPass.isEnabled(props) ? this.drawPass.postprocessing.target.texture : this.drawPass.colorTarget.texture;\n    this.smaa.update(input, props.antialiasing.params);\n    this.smaa.render(camera.viewport, toDrawingBuffer ? undefined : this.target);\n  };\n\n  AntialiasingPass.prototype.render = function (camera, toDrawingBuffer, props) {\n    if (props.antialiasing.name === 'off') return;\n\n    if (props.antialiasing.name === 'fxaa') {\n      this._renderFxaa(camera, toDrawingBuffer, props);\n    } else if (props.antialiasing.name === 'smaa') {\n      if (!this.smaa.supported) {\n        throw new Error('SMAA not supported, missing \"HTMLImageElement\"');\n      }\n\n      this._renderSmaa(camera, toDrawingBuffer, props);\n    }\n  };\n\n  return AntialiasingPass;\n}();\n\nexport { AntialiasingPass };","map":{"version":3,"sources":["../../../src/mol-canvas3d/passes/postprocessing.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;;AAEH,SAAS,UAAT,EAAqB,UAArB,QAAuC,2BAAvC;AACA,SAAS,WAAT,EAA8B,WAA9B,EAA2C,UAA3C,QAA6D,gCAA7D;AACA,SAAS,UAAT,QAA2B,0BAA3B;AAGA,SAAS,SAAT,QAA0B,gBAA1B;AACA,SAAS,uBAAT,QAAwC,gCAAxC;AACA,SAAS,uBAAT,QAA2D,yBAA3D;AACA,SAAS,IAAT,EAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,QAAuC,+BAAvC;AACA,SAAS,eAAe,IAAI,EAA5B,QAAsC,iCAAtC;AAIA,SAAS,SAAT,QAA0B,+BAA1B;AACA,SAAS,aAAT,QAA8B,mCAA9B;AACA,SAAS,SAAT,QAA0B,+BAA1B;AACA,SAAS,aAAT,QAA8B,oCAA9B;AACA,SAAS,mBAAT,QAAoC,yCAApC;AAEA,SAAS,KAAT,QAAsB,sBAAtB;AACA,SAAS,UAAT,EAAqB,QAArB,QAAqC,QAArC;AACA,SAAS,UAAT,EAAqB,QAArB,QAAqC,QAArC;;AAEA,IAAM,cAAc,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACb,UADa,CAAA,EACH;AACb,EAAA,MAAM,EAAE,WAAW,CAAC,SAAD,EAAY,MAAZ,EAAoB,OAApB,EAA6B,SAA7B,CADN;AAEb,EAAA,QAAQ,EAAE,WAAW,CAAC,IAAD,CAFR;AAIb,EAAA,aAAa,EAAE,UAAU,CAAC,QAAD,CAJZ;AAKb,EAAA,KAAK,EAAE,WAAW,CAAC,GAAD,CALL;AAMb,EAAA,IAAI,EAAE,WAAW,CAAC,GAAD,CANJ;AAQb,EAAA,qBAAqB,EAAE,WAAW,CAAC,GAAD;AARrB,CADG,CAApB;;AAaA,SAAS,qBAAT,CAA+B,GAA/B,EAAkD,YAAlD,EAAuE;AACnE,MAAM,MAAM,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACL,UADK,CAAA,EACK;AACb,IAAA,MAAM,EAAE,SAAS,CAAC,MAAV,CAAiB,YAAjB,CADK;AAEb,IAAA,QAAQ,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,MAAL,CAAY,YAAY,CAAC,QAAb,EAAZ,EAAqC,YAAY,CAAC,SAAb,EAArC,CAAjB,CAFG;AAIb,IAAA,aAAa,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAjB,CAJF;AAKb,IAAA,KAAK,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAjB,CALM;AAMb,IAAA,IAAI,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAjB,CANO;AAQb,IAAA,qBAAqB,EAAE,SAAS,CAAC,MAAV,CAAiB,GAAjB;AARV,GADL,CAAZ;;AAYA,MAAM,MAAM,GAAA,QAAA,CAAA,EAAA,EAAQ,cAAR,CAAZ;;AACA,MAAM,UAAU,GAAG,UAAU,CAAC,UAAD,EAAa,SAAb,EAAwB,aAAxB,CAA7B;AACA,MAAM,UAAU,GAAG,uBAAuB,CAAC,GAAD,EAAM,WAAN,EAAmB,UAAnB,EAA+B,MAA/B,EAAuC,MAAvC,CAA1C;AAEA,SAAO,uBAAuB,CAAC,UAAD,EAAa,MAAb,CAA9B;AACH;;AAED,IAAM,UAAU,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACT,UADS,CAAA,EACC;AACb,EAAA,MAAM,EAAE,WAAW,CAAC,SAAD,EAAY,MAAZ,EAAoB,OAApB,EAA6B,SAA7B,CADN;AAGb,EAAA,QAAQ,EAAE,WAAW,CAAC,MAAD,CAHR;AAIb,EAAA,SAAS,EAAE,UAAU,CAAC,QAAD,CAJR;AAMb,EAAA,WAAW,EAAE,WAAW,CAAC,IAAD,CANX;AAOb,EAAA,cAAc,EAAE,WAAW,CAAC,IAAD,CAPd;AAQb,EAAA,OAAO,EAAE,WAAW,CAAC,IAAD,CARP;AAUb,EAAA,QAAQ,EAAE,WAAW,CAAC,IAAD,CAVR;AAYb,EAAA,OAAO,EAAE,WAAW,CAAC,GAAD,CAZP;AAab,EAAA,KAAK,EAAE,WAAW,CAAC,GAAD;AAbL,CADD,CAAhB;;AAmBA,SAAS,iBAAT,CAA2B,GAA3B,EAA8C,YAA9C,EAAmE;AAC/D,MAAM,MAAM,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACL,UADK,CAAA,EACK;AACb,IAAA,MAAM,EAAE,SAAS,CAAC,MAAV,CAAiB,YAAjB,CADK;AAGb,IAAA,QAAQ,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAjB,CAHG;AAIb,IAAA,SAAS,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAjB,CAJE;AAMb,IAAA,WAAW,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,QAAL,EAAjB,CANA;AAOb,IAAA,cAAc,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,QAAL,EAAjB,CAPH;AAQb,IAAA,OAAO,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,EAArB,CARI;AAUb,IAAA,QAAQ,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,MAAL,CAAY,GAAG,CAAC,EAAJ,CAAO,kBAAnB,EAAuC,GAAG,CAAC,EAAJ,CAAO,mBAA9C,CAAjB,CAVG;AAYb,IAAA,OAAO,EAAE,SAAS,CAAC,MAAV,CAAiB,GAAjB,CAZI;AAab,IAAA,KAAK,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAjB;AAbM,GADL,CAAZ;;AAiBA,MAAM,MAAM,GAAA,QAAA,CAAA,EAAA,EAAQ,UAAR,CAAZ;;AACA,MAAM,UAAU,GAAG,UAAU,CAAC,MAAD,EAAS,SAAT,EAAoB,SAApB,CAA7B;AACA,MAAM,UAAU,GAAG,uBAAuB,CAAC,GAAD,EAAM,WAAN,EAAmB,UAAnB,EAA+B,MAA/B,EAAuC,MAAvC,CAA1C;AAEA,SAAO,uBAAuB,CAAC,UAAD,EAAa,MAAb,CAA9B;AACH;;AAED,IAAM,cAAc,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACb,UADa,CAAA,EACH;AACb,EAAA,UAAU,EAAE,WAAW,CAAC,SAAD,EAAY,MAAZ,EAAoB,OAApB,EAA6B,SAA7B,CADV;AAEb,EAAA,QAAQ,EAAE,WAAW,CAAC,IAAD,CAFR;AAIb,EAAA,OAAO,EAAE,WAAW,CAAC,KAAD,CAJP;AAKb,EAAA,oBAAoB,EAAE,UAAU,CAAC,QAAD,CALnB;AAOb,EAAA,eAAe,EAAE,WAAW,CAAC,GAAD,CAPf;AAQb,EAAA,eAAe,EAAE,WAAW,CAAC,GAAD,CARf;AAUb,EAAA,qBAAqB,EAAE,WAAW,CAAC,GAAD,CAVrB;AAYb,EAAA,KAAK,EAAE,WAAW,CAAC,GAAD,CAZL;AAab,EAAA,IAAI,EAAE,WAAW,CAAC,GAAD,CAbJ;AAcb,EAAA,OAAO,EAAE,WAAW,CAAC,IAAD,CAdP;AAeb,EAAA,aAAa,EAAE,UAAU,CAAC,QAAD;AAfZ,CADG,CAApB;;AAqBA,SAAS,qBAAT,CAA+B,GAA/B,EAAkD,gBAAlD,EAA6E,SAA7E,EAAiH;AAC7G,MAAM,MAAM,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACL,UADK,CAAA,EACK;AACb,IAAA,UAAU,EAAE,SAAS,CAAC,MAAV,CAAiB,gBAAjB,CADC;AAEb,IAAA,QAAQ,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,MAAL,CAAY,gBAAgB,CAAC,QAAjB,EAAZ,EAAyC,gBAAgB,CAAC,SAAjB,EAAzC,CAAjB,CAFG;AAIb,IAAA,OAAO,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAC,GAAD,CAAjB,CAJI;AAKb,IAAA,oBAAoB,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAjB,CALT;AAOb,IAAA,eAAe,EAAE,SAAS,CAAC,MAAV,CAAiB,SAAS,KAAK,YAAd,GAA6B,CAA7B,GAAiC,CAAlD,CAPJ;AAQb,IAAA,eAAe,EAAE,SAAS,CAAC,MAAV,CAAiB,SAAS,KAAK,UAAd,GAA2B,CAA3B,GAA+B,CAAhD,CARJ;AAUb,IAAA,qBAAqB,EAAE,SAAS,CAAC,MAAV,CAAiB,GAAjB,CAVV;AAYb,IAAA,KAAK,EAAE,SAAS,CAAC,MAAV,CAAiB,GAAjB,CAZM;AAab,IAAA,IAAI,EAAE,SAAS,CAAC,MAAV,CAAiB,OAAjB,CAbO;AAcb,IAAA,OAAO,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,EAArB,CAdI;AAeb,IAAA,aAAa,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAjB;AAfF,GADL,CAAZ;;AAmBA,MAAM,MAAM,GAAA,QAAA,CAAA,EAAA,EAAQ,cAAR,CAAZ;;AACA,MAAM,UAAU,GAAG,UAAU,CAAC,WAAD,EAAc,SAAd,EAAyB,aAAzB,CAA7B;AACA,MAAM,UAAU,GAAG,uBAAuB,CAAC,GAAD,EAAM,WAAN,EAAmB,UAAnB,EAA+B,MAA/B,EAAuC,MAAvC,CAA1C;AAEA,SAAO,uBAAuB,CAAC,UAAD,EAAa,MAAb,CAA9B;AACH;;AAED,SAAS,aAAT,CAAuB,UAAvB,EAAyC;AACrC,MAAM,KAAK,GAAG,UAAU,GAAG,GAA3B;AACA,MAAM,cAAc,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,UAAU,GAAG,CAAd,IAAmB,CAA9B,CAAvB;AAEA,MAAM,MAAM,GAAG,EAAf;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,cAApB,EAAoC,CAAC,EAArC,EAAyC;AACrC,IAAA,MAAM,CAAC,IAAP,CAAa,OAAQ,IAAI,CAAC,IAAL,CAAU,IAAI,IAAI,CAAC,EAAnB,CAAD,GAA2B,KAAlC,CAAD,GAA6C,IAAI,CAAC,GAAL,CAAS,CAAC,CAAD,GAAK,CAAL,IAAU,IAAI,KAAJ,GAAY,KAAtB,CAAT,CAAzD;AACH;;AAED,SAAO,MAAP;AACH;;AAED,SAAS,UAAT,CAAoB,aAApB,EAA2C,QAA3C,EAA2D;AACvD,MAAM,OAAO,GAAG,EAAhB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAApB,EAA8B,CAAC,EAA/B,EAAmC;AAC/B,QAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAJ,GAAQ,MAAM,CAAd,GAAkB,CAAnB,KAAyB,QAAQ,GAAG,QAApC,CAAZ;AACA,IAAA,KAAK,GAAG,MAAM,KAAK,IAAI,MAAM,GAAV,CAAnB;AAEA,IAAA,OAAO,CAAC,IAAR,CAAa,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,IAAsB,KAAnC;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,IAAsB,KAAnC;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,IAAsB,KAAnC;AACH;;AAED,SAAO,OAAP;AACH;;AAED,IAAM,oBAAoB,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACnB,UADmB,CAAA,EACT;AACb,EAAA,UAAU,EAAE,WAAW,CAAC,SAAD,EAAY,MAAZ,EAAoB,OAApB,EAA6B,SAA7B,CADV;AAEb,EAAA,MAAM,EAAE,WAAW,CAAC,SAAD,EAAY,MAAZ,EAAoB,OAApB,EAA6B,SAA7B,CAFN;AAGb,EAAA,MAAM,EAAE,WAAW,CAAC,SAAD,EAAY,MAAZ,EAAoB,OAApB,EAA6B,SAA7B,CAHN;AAIb,EAAA,SAAS,EAAE,WAAW,CAAC,SAAD,EAAY,MAAZ,EAAoB,OAApB,EAA6B,SAA7B,CAJT;AAKb,EAAA,QAAQ,EAAE,WAAW,CAAC,IAAD,CALR;AAOb,EAAA,aAAa,EAAE,UAAU,CAAC,QAAD,CAPZ;AAQb,EAAA,KAAK,EAAE,WAAW,CAAC,GAAD,CARL;AASb,EAAA,IAAI,EAAE,WAAW,CAAC,GAAD,CATJ;AAUb,EAAA,QAAQ,EAAE,WAAW,CAAC,GAAD,CAVR;AAWb,EAAA,OAAO,EAAE,WAAW,CAAC,GAAD,CAXP;AAYb,EAAA,SAAS,EAAE,WAAW,CAAC,IAAD,CAZT;AAab,EAAA,sBAAsB,EAAE,WAAW,CAAC,GAAD,CAbtB;AAeb,EAAA,qBAAqB,EAAE,WAAW,CAAC,GAAD,CAfrB;AAiBb,EAAA,gBAAgB,EAAE,UAAU,CAAC,SAAD,CAjBf;AAmBb,EAAA,cAAc,EAAE,UAAU,CAAC,SAAD,CAnBb;AAoBb,EAAA,aAAa,EAAE,UAAU,CAAC,QAAD,CApBZ;AAqBb,EAAA,iBAAiB,EAAE,WAAW,CAAC,GAAD;AArBjB,CADS,CAA1B;;AA0BA,SAAS,2BAAT,CAAqC,GAArC,EAAwD,YAAxD,EAA+E,YAA/E,EAAsG,eAAtG,EAAgI,gBAAhI,EAAyJ;AACrJ,MAAM,MAAM,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACL,UADK,CAAA,EACK;AACb,IAAA,UAAU,EAAE,SAAS,CAAC,MAAV,CAAiB,gBAAjB,CADC;AAEb,IAAA,MAAM,EAAE,SAAS,CAAC,MAAV,CAAiB,YAAjB,CAFK;AAGb,IAAA,MAAM,EAAE,SAAS,CAAC,MAAV,CAAiB,YAAjB,CAHK;AAIb,IAAA,SAAS,EAAE,SAAS,CAAC,MAAV,CAAiB,eAAjB,CAJE;AAKb,IAAA,QAAQ,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,MAAL,CAAY,YAAY,CAAC,QAAb,EAAZ,EAAqC,YAAY,CAAC,SAAb,EAArC,CAAjB,CALG;AAOb,IAAA,aAAa,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAjB,CAPF;AAQb,IAAA,KAAK,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAjB,CARM;AASb,IAAA,IAAI,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAjB,CATO;AAUb,IAAA,QAAQ,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAjB,CAVG;AAWb,IAAA,OAAO,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAjB,CAXI;AAYb,IAAA,SAAS,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAI,CAAC,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAjB,CAZE;AAab,IAAA,sBAAsB,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAjB,CAbX;AAeb,IAAA,qBAAqB,EAAE,SAAS,CAAC,MAAV,CAAiB,GAAjB,CAfV;AAiBb,IAAA,gBAAgB,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAjB,CAjBL;AAmBb,IAAA,cAAc,EAAE,SAAS,CAAC,MAAV,CAAiB,KAAjB,CAnBH;AAoBb,IAAA,aAAa,EAAE,SAAS,CAAC,MAAV,CAAiB,CAAjB,CApBF;AAqBb,IAAA,iBAAiB,EAAE,SAAS,CAAC,MAAV,CAAiB,IAAjB;AArBN,GADL,CAAZ;;AAyBA,MAAM,MAAM,GAAA,QAAA,CAAA,EAAA,EAAQ,oBAAR,CAAZ;;AACA,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAD,EAAmB,SAAnB,EAA8B,mBAA9B,CAA7B;AACA,MAAM,UAAU,GAAG,uBAAuB,CAAC,GAAD,EAAM,WAAN,EAAmB,UAAnB,EAA+B,MAA/B,EAAuC,MAAvC,CAA1C;AAEA,SAAO,uBAAuB,CAAC,UAAD,EAAa,MAAb,CAA9B;AACH;;AAED,OAAO,IAAM,oBAAoB,GAAG;AAChC,EAAA,SAAS,EAAE,EAAE,CAAC,YAAH,CAAgB,IAAhB,EAAsB;AAC7B,IAAA,EAAE,EAAE,EAAE,CAAC,KAAH,CAAS;AACT,MAAA,OAAO,EAAE,EAAE,CAAC,OAAH,CAAW,EAAX,EAAe;AAAE,QAAA,GAAG,EAAE,CAAP;AAAU,QAAA,GAAG,EAAE,GAAf;AAAoB,QAAA,IAAI,EAAE;AAA1B,OAAf,CADA;AAET,MAAA,MAAM,EAAE,EAAE,CAAC,OAAH,CAAW,CAAX,EAAc;AAAE,QAAA,GAAG,EAAE,CAAP;AAAU,QAAA,GAAG,EAAE,EAAf;AAAmB,QAAA,IAAI,EAAE;AAAzB,OAAd,EAA8C;AAAE,QAAA,WAAW,EAAE;AAAf,OAA9C,CAFC;AAGT,MAAA,IAAI,EAAE,EAAE,CAAC,OAAH,CAAW,GAAX,EAAgB;AAAE,QAAA,GAAG,EAAE,CAAP;AAAU,QAAA,GAAG,EAAE,CAAf;AAAkB,QAAA,IAAI,EAAE;AAAxB,OAAhB,CAHG;AAIT,MAAA,cAAc,EAAE,EAAE,CAAC,OAAH,CAAW,EAAX,EAAe;AAAE,QAAA,GAAG,EAAE,CAAP;AAAU,QAAA,GAAG,EAAE,EAAf;AAAmB,QAAA,IAAI,EAAE;AAAzB,OAAf;AAJP,KAAT,CADyB;AAO7B,IAAA,GAAG,EAAE,EAAE,CAAC,KAAH,CAAS,EAAT;AAPwB,GAAtB,EAQR;AAAE,IAAA,KAAK,EAAE,IAAT;AAAe,IAAA,WAAW,EAAE;AAA5B,GARQ,CADqB;AAUhC,EAAA,OAAO,EAAE,EAAE,CAAC,YAAH,CAAgB,KAAhB,EAAuB;AAC5B,IAAA,EAAE,EAAE,EAAE,CAAC,KAAH,CAAS;AACT,MAAA,KAAK,EAAE,EAAE,CAAC,OAAH,CAAW,CAAX,EAAc;AAAE,QAAA,GAAG,EAAE,CAAP;AAAU,QAAA,GAAG,EAAE,CAAf;AAAkB,QAAA,IAAI,EAAE;AAAxB,OAAd,CADE;AAET,MAAA,SAAS,EAAE,EAAE,CAAC,OAAH,CAAW,IAAX,EAAiB;AAAE,QAAA,GAAG,EAAE,IAAP;AAAa,QAAA,GAAG,EAAE,CAAlB;AAAqB,QAAA,IAAI,EAAE;AAA3B,OAAjB;AAFF,KAAT,CADwB;AAK5B,IAAA,GAAG,EAAE,EAAE,CAAC,KAAH,CAAS,EAAT;AALuB,GAAvB,EAMN;AAAE,IAAA,KAAK,EAAE,IAAT;AAAe,IAAA,WAAW,EAAE;AAA5B,GANM,CAVuB;AAiBhC,EAAA,YAAY,EAAE,EAAE,CAAC,YAAH,CAAgB,MAAhB,EAAwB;AAClC,IAAA,IAAI,EAAE,EAAE,CAAC,KAAH,CAAS,UAAT,CAD4B;AAElC,IAAA,IAAI,EAAE,EAAE,CAAC,KAAH,CAAS,UAAT,CAF4B;AAGlC,IAAA,GAAG,EAAE,EAAE,CAAC,KAAH,CAAS,EAAT;AAH6B,GAAxB,EAIX;AAAE,IAAA,OAAO,EAAE,CAAC,CAAC,MAAD,EAAS,MAAT,CAAD,EAAmB,CAAC,MAAD,EAAS,MAAT,CAAnB,EAAqC,CAAC,KAAD,EAAQ,KAAR,CAArC,CAAX;AAAiE,IAAA,WAAW,EAAE;AAA9E,GAJW;AAjBkB,CAA7B;;AAyBP,IAAA,kBAAA;AAAA;AAAA,YAAA;AAiCI,WAAA,kBAAA,CAAoB,KAApB,EAAyC,QAAzC,EAA2D;AAAvC,SAAA,KAAA,GAAA,KAAA;AAChB,SAAK,SAAL,GAAiB,KAAK,aAAL,EAAjB;AAEQ,QAAA,WAAW,GAAmB,QAAQ,CAA3B,WAAX;AAAA,QAAa,YAAY,GAAK,QAAQ,CAAb,YAAzB;AACR,QAAM,KAAK,GAAG,WAAW,CAAC,QAAZ,EAAd;AACA,QAAM,MAAM,GAAG,WAAW,CAAC,SAAZ,EAAf;AAEA,SAAK,QAAL,GAAgB,CAAhB;AACA,SAAK,cAAL,GAAsB,CAAtB,CARuD,CAUvD;;AACA,SAAK,MAAL,GAAc,KAAK,CAAC,kBAAN,CAAyB,KAAzB,EAAgC,MAAhC,EAAwC,KAAxC,EAA+C,OAA/C,EAAwD,QAAxD,CAAd;AAEA,SAAK,cAAL,GAAsB,KAAK,CAAC,kBAAN,CAAyB,KAAzB,EAAgC,MAAhC,EAAwC,KAAxC,CAAtB;AACA,SAAK,kBAAL,GAA0B,qBAAqB,CAAC,KAAD,EAAQ,YAAR,CAA/C;AAEA,SAAK,sBAAL,GAA8B,EAA9B;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAApB,EAAyB,CAAC,EAA1B,EAA8B;AAC1B,UAAM,CAAC,GAAG,IAAI,EAAd;AACA,MAAA,CAAC,CAAC,CAAD,CAAD,GAAO,IAAI,CAAC,MAAL,KAAgB,GAAhB,GAAsB,GAA7B;AACA,MAAA,CAAC,CAAC,CAAD,CAAD,GAAO,IAAI,CAAC,MAAL,KAAgB,GAAhB,GAAsB,GAA7B;AACA,MAAA,CAAC,CAAC,CAAD,CAAD,GAAO,IAAI,CAAC,MAAL,EAAP;AACA,MAAA,IAAI,CAAC,SAAL,CAAe,CAAf,EAAkB,CAAlB;AACA,MAAA,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,CAAd,EAAiB,IAAI,CAAC,MAAL,EAAjB;AACA,WAAK,sBAAL,CAA4B,IAA5B,CAAiC,CAAjC;AACH;;AACD,SAAK,eAAL,GAAuB,KAAK,CAAC,SAAN,CAAgB,WAAhB,EAAvB;AACA,SAAK,4BAAL,GAAoC,KAAK,CAAC,SAAN,CAAgB,WAAhB,EAApC;AACA,SAAK,6BAAL,GAAqC,KAAK,CAAC,SAAN,CAAgB,WAAhB,EAArC;AAEA,QAAM,EAAE,GAAG,IAAI,CAAC,KAAL,CAAW,KAAK,GAAG,KAAK,SAAxB,CAAX;AACA,QAAM,EAAE,GAAG,IAAI,CAAC,KAAL,CAAW,MAAM,GAAG,KAAK,SAAzB,CAAX;AAEA,SAAK,gBAAL,GAAwB,KAAK,CAAC,SAAN,CAAgB,OAAhB,CAAwB,aAAxB,EAAuC,MAAvC,EAA+C,OAA/C,EAAwD,SAAxD,CAAxB;AACA,SAAK,gBAAL,CAAsB,MAAtB,CAA6B,EAA7B,EAAiC,EAAjC;AACA,SAAK,gBAAL,CAAsB,iBAAtB,CAAwC,KAAK,eAA7C,EAA8D,QAA9D;AAEA,SAAK,yBAAL,GAAiC,KAAK,CAAC,SAAN,CAAgB,OAAhB,CAAwB,aAAxB,EAAuC,MAAvC,EAA+C,OAA/C,EAAwD,SAAxD,CAAjC;AACA,SAAK,yBAAL,CAA+B,MAA/B,CAAsC,EAAtC,EAA0C,EAA1C;AACA,SAAK,yBAAL,CAA+B,iBAA/B,CAAiD,KAAK,4BAAtD,EAAoF,QAApF;AAEA,SAAK,gBAAL,CAAsB,iBAAtB,CAAwC,KAAK,6BAA7C,EAA4E,QAA5E;AAEA,SAAK,cAAL,GAAsB,iBAAiB,CAAC,KAAD,EAAQ,YAAR,CAAvC;AACA,SAAK,2BAAL,GAAmC,qBAAqB,CAAC,KAAD,EAAQ,KAAK,gBAAb,EAA+B,YAA/B,CAAxD;AACA,SAAK,4BAAL,GAAoC,qBAAqB,CAAC,KAAD,EAAQ,KAAK,yBAAb,EAAwC,UAAxC,CAAzD;AACA,SAAK,UAAL,GAAkB,2BAA2B,CAAC,KAAD,EAAQ,WAAW,CAAC,OAApB,EAA6B,YAA7B,EAA2C,KAAK,cAAL,CAAoB,OAA/D,EAAwE,KAAK,gBAA7E,CAA7C;AACH;;AA/EM,EAAA,kBAAA,CAAA,SAAA,GAAP,UAAiB,KAAjB,EAA2C;AACvC,WAAO,KAAK,CAAC,SAAN,CAAgB,IAAhB,KAAyB,IAAzB,IAAiC,KAAK,CAAC,OAAN,CAAc,IAAd,KAAuB,IAA/D;AACH,GAFM;;AA2BC,EAAA,kBAAA,CAAA,SAAA,CAAA,aAAA,GAAR,YAAA;AACI;AACA,WAAO,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,IAAI,KAAK,KAAL,CAAW,UAA3B,CAAP;AACH,GAHO;;AAsDR,EAAA,kBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,KAAR,EAAuB,MAAvB,EAAqC;AAC3B,QAAA,EAAA,GAAS,KAAK,UAAL,CAAgB,MAAhB,CAAuB,QAAvB,CAAgC,GAAhC,CAAoC,KAA7C;AAAA,QAAC,CAAC,GAAA,EAAA,CAAA,CAAA,CAAF;AAAA,QAAI,CAAC,GAAA,EAAA,CAAA,CAAA,CAAL;AACN,QAAM,SAAS,GAAG,KAAK,aAAL,EAAlB;;AAEA,QAAI,KAAK,KAAK,CAAV,IAAe,MAAM,KAAK,CAA1B,IAA+B,KAAK,SAAL,KAAmB,SAAtD,EAAiE;AAC7D,WAAK,SAAL,GAAiB,SAAjB;AAEA,UAAM,EAAE,GAAG,IAAI,CAAC,KAAL,CAAW,KAAK,GAAG,KAAK,SAAxB,CAAX;AACA,UAAM,EAAE,GAAG,IAAI,CAAC,KAAL,CAAW,MAAM,GAAG,KAAK,SAAzB,CAAX;AACA,WAAK,MAAL,CAAY,OAAZ,CAAoB,KAApB,EAA2B,MAA3B;AACA,WAAK,cAAL,CAAoB,OAApB,CAA4B,KAA5B,EAAmC,MAAnC;AACA,WAAK,gBAAL,CAAsB,MAAtB,CAA6B,EAA7B,EAAiC,EAAjC;AACA,WAAK,yBAAL,CAA+B,MAA/B,CAAsC,EAAtC,EAA0C,EAA1C;AAEA,MAAA,SAAS,CAAC,MAAV,CAAiB,KAAK,UAAL,CAAgB,MAAhB,CAAuB,QAAxC,EAAkD,IAAI,CAAC,GAAL,CAAS,KAAK,UAAL,CAAgB,MAAhB,CAAuB,QAAvB,CAAgC,GAAhC,CAAoC,KAA7C,EAAoD,KAApD,EAA2D,MAA3D,CAAlD;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,KAAK,kBAAL,CAAwB,MAAxB,CAA+B,QAAhD,EAA0D,IAAI,CAAC,GAAL,CAAS,KAAK,kBAAL,CAAwB,MAAxB,CAA+B,QAA/B,CAAwC,GAAxC,CAA4C,KAArD,EAA4D,KAA5D,EAAmE,MAAnE,CAA1D;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,KAAK,cAAL,CAAoB,MAApB,CAA2B,QAA5C,EAAsD,IAAI,CAAC,GAAL,CAAS,KAAK,cAAL,CAAoB,MAApB,CAA2B,QAA3B,CAAoC,GAApC,CAAwC,KAAjD,EAAwD,EAAxD,EAA4D,EAA5D,CAAtD;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,KAAK,2BAAL,CAAiC,MAAjC,CAAwC,QAAzD,EAAmE,IAAI,CAAC,GAAL,CAAS,KAAK,2BAAL,CAAiC,MAAjC,CAAwC,QAAxC,CAAiD,GAAjD,CAAqD,KAA9D,EAAqE,EAArE,EAAyE,EAAzE,CAAnE;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,KAAK,4BAAL,CAAkC,MAAlC,CAAyC,QAA1D,EAAoE,IAAI,CAAC,GAAL,CAAS,KAAK,4BAAL,CAAkC,MAAlC,CAAyC,QAAzC,CAAkD,GAAlD,CAAsD,KAA/D,EAAsE,EAAtE,EAA0E,EAA1E,CAApE;AACH;AACJ,GApBD;;AAsBQ,EAAA,kBAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,MAApB,EAAqC,qBAArC,EAAqE,eAArE,EAA6F,KAA7F,EAAuH;AACnH,QAAI,eAAe,GAAG,KAAtB;AACA,QAAI,eAAe,GAAG,KAAtB;AACA,QAAI,mBAAmB,GAAG,KAA1B;AAEA,QAAM,YAAY,GAAG,MAAM,CAAC,KAAP,CAAa,IAAb,KAAsB,cAAtB,GAAuC,CAAvC,GAA2C,CAAhE;AACA,QAAM,eAAe,GAAG,KAAK,CAAC,OAAN,CAAc,IAAd,KAAuB,IAA/C;AACA,QAAM,gBAAgB,GAAG,KAAK,CAAC,SAAN,CAAgB,IAAhB,KAAyB,IAAlD;AAEA,QAAM,aAAa,GAAG,IAAI,CAAC,QAAL,EAAtB;AACA,IAAA,IAAI,CAAC,MAAL,CAAY,aAAZ,EAA2B,MAAM,CAAC,UAAlC;;AAEA,QAAI,KAAK,CAAC,SAAN,CAAgB,IAAhB,KAAyB,IAA7B,EAAmC;AAC/B,MAAA,SAAS,CAAC,MAAV,CAAiB,KAAK,cAAL,CAAoB,MAApB,CAA2B,WAA5C,EAAyD,MAAM,CAAC,UAAhE;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,KAAK,cAAL,CAAoB,MAApB,CAA2B,cAA5C,EAA4D,aAA5D;AAEM,UAAA,EAAA,GAAS,KAAK,UAAL,CAAgB,MAAhB,CAAuB,QAAvB,CAAgC,GAAhC,CAAoC,KAA7C;AAAA,UAAC,CAAC,GAAA,EAAA,CAAA,CAAA,CAAF;AAAA,UAAI,CAAC,GAAA,EAAA,CAAA,CAAA,CAAL;AACN,UAAM,CAAC,GAAG,KAAK,cAAL,CAAoB,MAApB,CAA2B,OAArC;AACA,UAAM,CAAC,GAAG,MAAM,CAAC,QAAjB;AACA,UAAM,CAAC,GAAG,KAAK,SAAf;AACA,MAAA,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,GAAF,CAAM,KAAf,EACI,IAAI,CAAC,KAAL,CAAW,CAAC,CAAC,CAAF,GAAM,CAAjB,KAAuB,CAAC,GAAG,CAA3B,CADJ,EAEI,IAAI,CAAC,KAAL,CAAW,CAAC,CAAC,CAAF,GAAM,CAAjB,KAAuB,CAAC,GAAG,CAA3B,CAFJ,EAGI,IAAI,CAAC,IAAL,CAAU,CAAC,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,KAAT,IAAkB,CAA5B,KAAkC,CAAC,GAAG,CAAtC,CAHJ,EAII,IAAI,CAAC,IAAL,CAAU,CAAC,CAAC,CAAC,CAAF,GAAM,CAAC,CAAC,MAAT,IAAmB,CAA7B,KAAmC,CAAC,GAAG,CAAvC,CAJJ;AAMA,MAAA,SAAS,CAAC,MAAV,CAAiB,CAAjB,EAAoB,CAAC,CAAC,GAAF,CAAM,KAA1B;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,KAAK,2BAAL,CAAiC,MAAjC,CAAwC,OAAzD,EAAkE,CAAC,CAAC,GAAF,CAAM,KAAxE;AACA,MAAA,SAAS,CAAC,MAAV,CAAiB,KAAK,4BAAL,CAAkC,MAAlC,CAAyC,OAA1D,EAAmE,CAAC,CAAC,GAAF,CAAM,KAAzE;AAEA,MAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,2BAAL,CAAiC,MAAjC,CAAwC,KAAlE,EAAyE,MAAM,CAAC,IAAhF;AACA,MAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,4BAAL,CAAkC,MAAlC,CAAyC,KAAnE,EAA0E,MAAM,CAAC,IAAjF;AAEA,MAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,2BAAL,CAAiC,MAAjC,CAAwC,IAAlE,EAAwE,MAAM,CAAC,GAA/E;AACA,MAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,4BAAL,CAAkC,MAAlC,CAAyC,IAAnE,EAAyE,MAAM,CAAC,GAAhF;;AAEA,UAAI,KAAK,2BAAL,CAAiC,MAAjC,CAAwC,aAAxC,CAAsD,GAAtD,CAA0D,KAA1D,KAAoE,YAAxE,EAAsF;AAClF,QAAA,mBAAmB,GAAG,IAAtB;AACH;;AACD,MAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,2BAAL,CAAiC,MAAjC,CAAwC,aAAlE,EAAiF,YAAjF;AACA,MAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,4BAAL,CAAkC,MAAlC,CAAyC,aAAnE,EAAkF,YAAlF;;AAEA,UAAI,KAAK,QAAL,KAAkB,KAAK,CAAC,SAAN,CAAgB,MAAhB,CAAuB,OAA7C,EAAsD;AAClD,QAAA,eAAe,GAAG,IAAlB;AAEA,aAAK,QAAL,GAAgB,KAAK,CAAC,SAAN,CAAgB,MAAhB,CAAuB,OAAvC;AACA,QAAA,SAAS,CAAC,MAAV,CAAiB,KAAK,cAAL,CAAoB,MAApB,CAA2B,QAA5C,EAAsD,UAAU,CAAC,KAAK,sBAAN,EAA8B,KAAK,QAAnC,CAAhE;AACA,QAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,cAAL,CAAoB,MAApB,CAA2B,SAArD,EAAgE,KAAK,QAArE;AACH;;AACD,MAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,cAAL,CAAoB,MAApB,CAA2B,OAArD,EAA8D,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,KAAK,CAAC,SAAN,CAAgB,MAAhB,CAAuB,MAAnC,CAA9D;AACA,MAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,cAAL,CAAoB,MAApB,CAA2B,KAArD,EAA4D,KAAK,CAAC,SAAN,CAAgB,MAAhB,CAAuB,IAAnF;;AAEA,UAAI,KAAK,cAAL,KAAwB,KAAK,CAAC,SAAN,CAAgB,MAAhB,CAAuB,cAAnD,EAAmE;AAC/D,QAAA,mBAAmB,GAAG,IAAtB;AAEA,aAAK,cAAL,GAAsB,KAAK,CAAC,SAAN,CAAgB,MAAhB,CAAuB,cAA7C;AACA,YAAM,MAAM,GAAG,aAAa,CAAC,KAAK,cAAN,CAA5B;AAEA,QAAA,SAAS,CAAC,MAAV,CAAiB,KAAK,2BAAL,CAAiC,MAAjC,CAAwC,OAAzD,EAAkE,MAAlE;AACA,QAAA,SAAS,CAAC,MAAV,CAAiB,KAAK,4BAAL,CAAkC,MAAlC,CAAyC,OAA1D,EAAmE,MAAnE;AACA,QAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,2BAAL,CAAiC,MAAjC,CAAwC,oBAAlE,EAAwF,KAAK,cAA7F;AACA,QAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,4BAAL,CAAkC,MAAlC,CAAyC,oBAAnE,EAAyF,KAAK,cAA9F;AACH;AAEJ;;AAED,QAAI,KAAK,CAAC,OAAN,CAAc,IAAd,KAAuB,IAA3B,EAAiC;AACvB,UAAA,SAAS,GAAK,KAAK,CAAC,OAAN,CAAc,MAAd,CAAL,SAAT,CADuB,CAE7B;;AACA,UAAI,MAAM,CAAC,KAAP,CAAa,IAAb,KAAsB,cAA1B,EAA0C,SAAS,IAAI,CAAb;AAC1C,UAAM,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,SAAf,IAA4B,IAA3C,CAJ6B,CAK7B;;AACA,UAAM,oBAAoB,GAAG,MAAM,GAAG,MAAM,CAAC,KAAP,CAAa,SAAnD;AACA,UAAM,YAAY,GAAG,KAAK,CAAC,OAAN,CAAc,MAAd,CAAqB,KAArB,GAA6B,CAAlD;AAEA,MAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,kBAAL,CAAwB,MAAxB,CAA+B,KAAzD,EAAgE,MAAM,CAAC,IAAvE;AACA,MAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,kBAAL,CAAwB,MAAxB,CAA+B,IAAzD,EAA+D,MAAM,CAAC,GAAtE;AACA,MAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,kBAAL,CAAwB,MAAxB,CAA+B,qBAAzD,EAAgF,oBAAhF;AAEA,MAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,UAAL,CAAgB,MAAhB,CAAuB,qBAAjD,EAAwE,oBAAxE;;AACA,UAAI,KAAK,UAAL,CAAgB,MAAhB,CAAuB,aAAvB,CAAqC,GAArC,CAAyC,KAAzC,KAAmD,YAAvD,EAAqE;AAAE,QAAA,eAAe,GAAG,IAAlB;AAAyB;;AAChG,MAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,UAAL,CAAgB,MAAhB,CAAuB,aAAjD,EAAgE,YAAhE;AACH;;AAED,IAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,UAAL,CAAgB,MAAhB,CAAuB,IAAjD,EAAuD,MAAM,CAAC,GAA9D;AACA,IAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,UAAL,CAAgB,MAAhB,CAAuB,KAAjD,EAAwD,MAAM,CAAC,IAA/D;AACA,IAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,UAAL,CAAgB,MAAhB,CAAuB,OAAjD,EAA0D,MAAM,CAAC,MAAjE;AACA,IAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,UAAL,CAAgB,MAAhB,CAAuB,QAAjD,EAA2D,MAAM,CAAC,OAAlE;AACA,IAAA,SAAS,CAAC,MAAV,CAAiB,KAAK,UAAL,CAAgB,MAAhB,CAAuB,SAAxC,EAAmD,KAAK,CAAC,gBAAN,CAAuB,KAAK,UAAL,CAAgB,MAAhB,CAAuB,SAAvB,CAAiC,GAAjC,CAAqC,KAA5D,EAAmE,eAAnE,CAAnD;AACA,IAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,UAAL,CAAgB,MAAhB,CAAuB,sBAAjD,EAAyE,qBAAzE;;AACA,QAAI,KAAK,UAAL,CAAgB,MAAhB,CAAuB,aAAvB,CAAqC,GAArC,CAAyC,KAAzC,KAAmD,YAAvD,EAAqE;AAAE,MAAA,eAAe,GAAG,IAAlB;AAAyB;;AAChG,IAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,UAAL,CAAgB,MAAhB,CAAuB,aAAjD,EAAgE,YAAhE;;AACA,QAAI,KAAK,UAAL,CAAgB,MAAhB,CAAuB,cAAvB,CAAsC,GAAtC,CAA0C,KAA1C,KAAoD,eAAxD,EAAyE;AAAE,MAAA,eAAe,GAAG,IAAlB;AAAyB;;AACpG,IAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,UAAL,CAAgB,MAAhB,CAAuB,cAAjD,EAAiE,eAAjE;;AACA,QAAI,KAAK,UAAL,CAAgB,MAAhB,CAAuB,gBAAvB,CAAwC,GAAxC,CAA4C,KAA5C,KAAsD,gBAA1D,EAA4E;AAAE,MAAA,eAAe,GAAG,IAAlB;AAAyB;;AACvG,IAAA,SAAS,CAAC,eAAV,CAA0B,KAAK,UAAL,CAAgB,MAAhB,CAAuB,gBAAjD,EAAmE,gBAAnE;;AAEA,QAAI,eAAJ,EAAqB;AACjB,WAAK,cAAL,CAAoB,MAApB;AACH;;AAED,QAAI,mBAAJ,EAAyB;AACrB,WAAK,2BAAL,CAAiC,MAAjC;AACA,WAAK,4BAAL,CAAkC,MAAlC;AACH;;AAED,QAAI,eAAJ,EAAqB;AACjB,WAAK,UAAL,CAAgB,MAAhB;AACH;;AAEK,QAAA,EAAA,GAAgB,KAAK,KAArB;AAAA,QAAE,EAAE,GAAA,EAAA,CAAA,EAAJ;AAAA,QAAM,KAAK,GAAA,EAAA,CAAA,KAAX;AAEN,IAAA,KAAK,CAAC,MAAN,CAAa,EAAE,CAAC,YAAhB;AACA,IAAA,KAAK,CAAC,OAAN,CAAc,EAAE,CAAC,KAAjB;AACA,IAAA,KAAK,CAAC,OAAN,CAAc,EAAE,CAAC,UAAjB;AACA,IAAA,KAAK,CAAC,SAAN,CAAgB,KAAhB;AAEM,QAAA,EAAA,GAA0B,MAAM,CAAC,QAAjC;AAAA,QAAE,CAAC,GAAA,EAAA,CAAA,CAAH;AAAA,QAAK,CAAC,GAAA,EAAA,CAAA,CAAN;AAAA,QAAQ,KAAK,GAAA,EAAA,CAAA,KAAb;AAAA,QAAe,MAAM,GAAA,EAAA,CAAA,MAArB;AACN,IAAA,EAAE,CAAC,QAAH,CAAY,CAAZ,EAAe,CAAf,EAAkB,KAAlB,EAAyB,MAAzB;AACA,IAAA,EAAE,CAAC,OAAH,CAAW,CAAX,EAAc,CAAd,EAAiB,KAAjB,EAAwB,MAAxB;AACH,GAxHO;;AA0HR,EAAA,kBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAwB,eAAxB,EAAkD,qBAAlD,EAAkF,eAAlF,EAA0G,KAA1G,EAAoI;AAChI,SAAK,WAAL,CAAiB,MAAjB,EAAyB,qBAAzB,EAAgD,eAAhD,EAAiE,KAAjE;;AAEA,QAAI,KAAK,CAAC,OAAN,CAAc,IAAd,KAAuB,IAA3B,EAAiC;AAC7B,WAAK,cAAL,CAAoB,IAApB;AACA,WAAK,kBAAL,CAAwB,MAAxB;AACH;;AAED,QAAI,KAAK,CAAC,SAAN,CAAgB,IAAhB,KAAyB,IAA7B,EAAmC;AACzB,UAAA,EAAA,GAA0B,MAAM,CAAC,QAAjC;AAAA,UAAE,CAAC,GAAA,EAAA,CAAA,CAAH;AAAA,UAAK,CAAC,GAAA,EAAA,CAAA,CAAN;AAAA,UAAQ,KAAK,GAAA,EAAA,CAAA,KAAb;AAAA,UAAe,MAAM,GAAA,EAAA,CAAA,MAArB;AACN,UAAM,EAAE,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,GAAG,KAAK,SAApB,CAAX;AACA,UAAM,EAAE,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,GAAG,KAAK,SAApB,CAAX;AACA,UAAM,EAAE,GAAG,IAAI,CAAC,IAAL,CAAU,KAAK,GAAG,KAAK,SAAvB,CAAX;AACA,UAAM,EAAE,GAAG,IAAI,CAAC,IAAL,CAAU,MAAM,GAAG,KAAK,SAAxB,CAAX;AACA,WAAK,KAAL,CAAW,EAAX,CAAc,QAAd,CAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC;AACA,WAAK,KAAL,CAAW,EAAX,CAAc,OAAd,CAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC;AAEA,WAAK,eAAL,CAAqB,IAArB;AACA,WAAK,cAAL,CAAoB,MAApB;AAEA,WAAK,4BAAL,CAAkC,IAAlC;AACA,WAAK,2BAAL,CAAiC,MAAjC;AAEA,WAAK,6BAAL,CAAmC,IAAnC;AACA,WAAK,4BAAL,CAAkC,MAAlC;AAEA,WAAK,KAAL,CAAW,EAAX,CAAc,QAAd,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,KAA7B,EAAoC,MAApC;AACA,WAAK,KAAL,CAAW,EAAX,CAAc,OAAd,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,KAA5B,EAAmC,MAAnC;AACH;;AAED,QAAI,eAAJ,EAAqB;AACjB,WAAK,KAAL,CAAW,iBAAX;AACH,KAFD,MAEO;AACH,WAAK,MAAL,CAAY,IAAZ;AACH;;AAEK,QAAA,EAAA,GAAgB,KAAK,KAArB;AAAA,QAAE,EAAE,GAAA,EAAA,CAAA,EAAJ;AAAA,QAAM,KAAK,GAAA,EAAA,CAAA,KAAX;AACN,IAAA,KAAK,CAAC,UAAN,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,IAAA,EAAE,CAAC,KAAH,CAAS,EAAE,CAAC,gBAAZ;AAEA,SAAK,UAAL,CAAgB,MAAhB;AACH,GAzCD;;AA0CJ,SAAA,kBAAA;AAAC,CA5QD,EAAA;;;;AA8QA,IAAA,gBAAA;AAAA;AAAA,YAAA;AASI,WAAA,gBAAA,CAAY,KAAZ,EAAyC,QAAzC,EAA2D;AAAlB,SAAA,QAAA,GAAA,QAAA;AAC7B,QAAA,WAAW,GAAK,QAAQ,CAAb,WAAX;AACR,QAAM,KAAK,GAAG,WAAW,CAAC,QAAZ,EAAd;AACA,QAAM,MAAM,GAAG,WAAW,CAAC,SAAZ,EAAf;AAEA,SAAK,MAAL,GAAc,KAAK,CAAC,kBAAN,CAAyB,KAAzB,EAAgC,MAAhC,EAAwC,KAAxC,CAAd;AACA,SAAK,IAAL,GAAY,IAAI,QAAJ,CAAa,KAAb,EAAoB,KAAK,MAAL,CAAY,OAAhC,CAAZ;AACA,SAAK,IAAL,GAAY,IAAI,QAAJ,CAAa,KAAb,EAAoB,KAAK,MAAL,CAAY,OAAhC,CAAZ;AACH;;AAhBM,EAAA,gBAAA,CAAA,SAAA,GAAP,UAAiB,KAAjB,EAA2C;AACvC,WAAO,KAAK,CAAC,YAAN,CAAmB,IAAnB,KAA4B,KAAnC;AACH,GAFM;;AAkBP,EAAA,gBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,KAAR,EAAuB,MAAvB,EAAqC;AACjC,QAAM,CAAC,GAAG,KAAK,MAAL,CAAY,OAAZ,CAAoB,QAApB,EAAV;AACA,QAAM,CAAC,GAAG,KAAK,MAAL,CAAY,OAAZ,CAAoB,SAApB,EAAV;;AAEA,QAAI,KAAK,KAAK,CAAV,IAAe,MAAM,KAAK,CAA9B,EAAiC;AAC7B,WAAK,MAAL,CAAY,OAAZ,CAAoB,KAApB,EAA2B,MAA3B;AACA,WAAK,IAAL,CAAU,OAAV,CAAkB,KAAlB,EAAyB,MAAzB;AACA,UAAI,KAAK,IAAL,CAAU,SAAd,EAAyB,KAAK,IAAL,CAAU,OAAV,CAAkB,KAAlB,EAAyB,MAAzB;AAC5B;AACJ,GATD;;AAWQ,EAAA,gBAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,MAApB,EAAqC,eAArC,EAA+D,KAA/D,EAAyF;AACrF,QAAI,KAAK,CAAC,YAAN,CAAmB,IAAnB,KAA4B,MAAhC,EAAwC;AAExC,QAAM,KAAK,GAAG,kBAAkB,CAAC,SAAnB,CAA6B,KAA7B,IACR,KAAK,QAAL,CAAc,cAAd,CAA6B,MAA7B,CAAoC,OAD5B,GAER,KAAK,QAAL,CAAc,WAAd,CAA0B,OAFhC;AAGA,SAAK,IAAL,CAAU,MAAV,CAAiB,KAAjB,EAAwB,KAAK,CAAC,YAAN,CAAmB,MAA3C;AACA,SAAK,IAAL,CAAU,MAAV,CAAiB,MAAM,CAAC,QAAxB,EAAkC,eAAe,GAAG,SAAH,GAAe,KAAK,MAArE;AACH,GARO;;AAUA,EAAA,gBAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,MAApB,EAAqC,eAArC,EAA+D,KAA/D,EAAyF;AACrF,QAAI,KAAK,CAAC,YAAN,CAAmB,IAAnB,KAA4B,MAAhC,EAAwC;AAExC,QAAM,KAAK,GAAG,kBAAkB,CAAC,SAAnB,CAA6B,KAA7B,IACR,KAAK,QAAL,CAAc,cAAd,CAA6B,MAA7B,CAAoC,OAD5B,GAER,KAAK,QAAL,CAAc,WAAd,CAA0B,OAFhC;AAGA,SAAK,IAAL,CAAU,MAAV,CAAiB,KAAjB,EAAwB,KAAK,CAAC,YAAN,CAAmB,MAA3C;AACA,SAAK,IAAL,CAAU,MAAV,CAAiB,MAAM,CAAC,QAAxB,EAAkC,eAAe,GAAG,SAAH,GAAe,KAAK,MAArE;AACH,GARO;;AAUR,EAAA,gBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAwB,eAAxB,EAAkD,KAAlD,EAA4E;AACxE,QAAI,KAAK,CAAC,YAAN,CAAmB,IAAnB,KAA4B,KAAhC,EAAuC;;AAEvC,QAAI,KAAK,CAAC,YAAN,CAAmB,IAAnB,KAA4B,MAAhC,EAAwC;AACpC,WAAK,WAAL,CAAiB,MAAjB,EAAyB,eAAzB,EAA0C,KAA1C;AACH,KAFD,MAEO,IAAI,KAAK,CAAC,YAAN,CAAmB,IAAnB,KAA4B,MAAhC,EAAwC;AAC3C,UAAI,CAAC,KAAK,IAAL,CAAU,SAAf,EAA0B;AACtB,cAAM,IAAI,KAAJ,CAAU,gDAAV,CAAN;AACH;;AACD,WAAK,WAAL,CAAiB,MAAjB,EAAyB,eAAzB,EAA0C,KAA1C;AACH;AACJ,GAXD;;AAYJ,SAAA,gBAAA;AAAC,CA9DD,EAAA","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Áron Samuel Kovács <aron.kovacs@mail.muni.cz>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { QuadSchema, QuadValues } from '../../mol-gl/compute/util';\r\nimport { TextureSpec, UniformSpec, DefineSpec } from '../../mol-gl/renderable/schema';\r\nimport { ShaderCode } from '../../mol-gl/shader-code';\r\nimport { ValueCell } from '../../mol-util';\r\nimport { createComputeRenderItem } from '../../mol-gl/webgl/render-item';\r\nimport { createComputeRenderable } from '../../mol-gl/renderable';\r\nimport { Mat4, Vec2, Vec3, Vec4 } from '../../mol-math/linear-algebra';\r\nimport { ParamDefinition as PD } from '../../mol-util/param-definition';\r\nimport { quad_vert } from '../../mol-gl/shader/quad.vert';\r\nimport { outlines_frag } from '../../mol-gl/shader/outlines.frag';\r\nimport { ssao_frag } from '../../mol-gl/shader/ssao.frag';\r\nimport { ssaoBlur_frag } from '../../mol-gl/shader/ssao-blur.frag';\r\nimport { postprocessing_frag } from '../../mol-gl/shader/postprocessing.frag';\r\nimport { Color } from '../../mol-util/color';\r\nimport { FxaaParams, FxaaPass } from './fxaa';\r\nimport { SmaaParams, SmaaPass } from './smaa';\r\nvar OutlinesSchema = __assign(__assign({}, QuadSchema), { tDepth: TextureSpec('texture', 'rgba', 'ubyte', 'nearest'), uTexSize: UniformSpec('v2'), dOrthographic: DefineSpec('number'), uNear: UniformSpec('f'), uFar: UniformSpec('f'), uMaxPossibleViewZDiff: UniformSpec('f') });\r\nfunction getOutlinesRenderable(ctx, depthTexture) {\r\n    var values = __assign(__assign({}, QuadValues), { tDepth: ValueCell.create(depthTexture), uTexSize: ValueCell.create(Vec2.create(depthTexture.getWidth(), depthTexture.getHeight())), dOrthographic: ValueCell.create(0), uNear: ValueCell.create(1), uFar: ValueCell.create(10000), uMaxPossibleViewZDiff: ValueCell.create(0.5) });\r\n    var schema = __assign({}, OutlinesSchema);\r\n    var shaderCode = ShaderCode('outlines', quad_vert, outlines_frag);\r\n    var renderItem = createComputeRenderItem(ctx, 'triangles', shaderCode, schema, values);\r\n    return createComputeRenderable(renderItem, values);\r\n}\r\nvar SsaoSchema = __assign(__assign({}, QuadSchema), { tDepth: TextureSpec('texture', 'rgba', 'ubyte', 'nearest'), uSamples: UniformSpec('v3[]'), dNSamples: DefineSpec('number'), uProjection: UniformSpec('m4'), uInvProjection: UniformSpec('m4'), uBounds: UniformSpec('v4'), uTexSize: UniformSpec('v2'), uRadius: UniformSpec('f'), uBias: UniformSpec('f') });\r\nfunction getSsaoRenderable(ctx, depthTexture) {\r\n    var values = __assign(__assign({}, QuadValues), { tDepth: ValueCell.create(depthTexture), uSamples: ValueCell.create([0.0, 0.0, 1.0]), dNSamples: ValueCell.create(1), uProjection: ValueCell.create(Mat4.identity()), uInvProjection: ValueCell.create(Mat4.identity()), uBounds: ValueCell.create(Vec4()), uTexSize: ValueCell.create(Vec2.create(ctx.gl.drawingBufferWidth, ctx.gl.drawingBufferHeight)), uRadius: ValueCell.create(8.0), uBias: ValueCell.create(0.025) });\r\n    var schema = __assign({}, SsaoSchema);\r\n    var shaderCode = ShaderCode('ssao', quad_vert, ssao_frag);\r\n    var renderItem = createComputeRenderItem(ctx, 'triangles', shaderCode, schema, values);\r\n    return createComputeRenderable(renderItem, values);\r\n}\r\nvar SsaoBlurSchema = __assign(__assign({}, QuadSchema), { tSsaoDepth: TextureSpec('texture', 'rgba', 'ubyte', 'nearest'), uTexSize: UniformSpec('v2'), uKernel: UniformSpec('f[]'), dOcclusionKernelSize: DefineSpec('number'), uBlurDirectionX: UniformSpec('f'), uBlurDirectionY: UniformSpec('f'), uMaxPossibleViewZDiff: UniformSpec('f'), uNear: UniformSpec('f'), uFar: UniformSpec('f'), uBounds: UniformSpec('v4'), dOrthographic: DefineSpec('number') });\r\nfunction getSsaoBlurRenderable(ctx, ssaoDepthTexture, direction) {\r\n    var values = __assign(__assign({}, QuadValues), { tSsaoDepth: ValueCell.create(ssaoDepthTexture), uTexSize: ValueCell.create(Vec2.create(ssaoDepthTexture.getWidth(), ssaoDepthTexture.getHeight())), uKernel: ValueCell.create([0.0]), dOcclusionKernelSize: ValueCell.create(1), uBlurDirectionX: ValueCell.create(direction === 'horizontal' ? 1 : 0), uBlurDirectionY: ValueCell.create(direction === 'vertical' ? 1 : 0), uMaxPossibleViewZDiff: ValueCell.create(0.5), uNear: ValueCell.create(0.0), uFar: ValueCell.create(10000.0), uBounds: ValueCell.create(Vec4()), dOrthographic: ValueCell.create(0) });\r\n    var schema = __assign({}, SsaoBlurSchema);\r\n    var shaderCode = ShaderCode('ssao_blur', quad_vert, ssaoBlur_frag);\r\n    var renderItem = createComputeRenderItem(ctx, 'triangles', shaderCode, schema, values);\r\n    return createComputeRenderable(renderItem, values);\r\n}\r\nfunction getBlurKernel(kernelSize) {\r\n    var sigma = kernelSize / 3.0;\r\n    var halfKernelSize = Math.floor((kernelSize + 1) / 2);\r\n    var kernel = [];\r\n    for (var x = 0; x < halfKernelSize; x++) {\r\n        kernel.push((1.0 / ((Math.sqrt(2 * Math.PI)) * sigma)) * Math.exp(-x * x / (2 * sigma * sigma)));\r\n    }\r\n    return kernel;\r\n}\r\nfunction getSamples(vectorSamples, nSamples) {\r\n    var samples = [];\r\n    for (var i = 0; i < nSamples; i++) {\r\n        var scale = (i * i + 2.0 * i + 1) / (nSamples * nSamples);\r\n        scale = 0.1 + scale * (1.0 - 0.1);\r\n        samples.push(vectorSamples[i][0] * scale);\r\n        samples.push(vectorSamples[i][1] * scale);\r\n        samples.push(vectorSamples[i][2] * scale);\r\n    }\r\n    return samples;\r\n}\r\nvar PostprocessingSchema = __assign(__assign({}, QuadSchema), { tSsaoDepth: TextureSpec('texture', 'rgba', 'ubyte', 'nearest'), tColor: TextureSpec('texture', 'rgba', 'ubyte', 'nearest'), tDepth: TextureSpec('texture', 'rgba', 'ubyte', 'nearest'), tOutlines: TextureSpec('texture', 'rgba', 'ubyte', 'nearest'), uTexSize: UniformSpec('v2'), dOrthographic: DefineSpec('number'), uNear: UniformSpec('f'), uFar: UniformSpec('f'), uFogNear: UniformSpec('f'), uFogFar: UniformSpec('f'), uFogColor: UniformSpec('v3'), uTransparentBackground: UniformSpec('b'), uMaxPossibleViewZDiff: UniformSpec('f'), dOcclusionEnable: DefineSpec('boolean'), dOutlineEnable: DefineSpec('boolean'), dOutlineScale: DefineSpec('number'), uOutlineThreshold: UniformSpec('f') });\r\nfunction getPostprocessingRenderable(ctx, colorTexture, depthTexture, outlinesTexture, ssaoDepthTexture) {\r\n    var values = __assign(__assign({}, QuadValues), { tSsaoDepth: ValueCell.create(ssaoDepthTexture), tColor: ValueCell.create(colorTexture), tDepth: ValueCell.create(depthTexture), tOutlines: ValueCell.create(outlinesTexture), uTexSize: ValueCell.create(Vec2.create(colorTexture.getWidth(), colorTexture.getHeight())), dOrthographic: ValueCell.create(0), uNear: ValueCell.create(1), uFar: ValueCell.create(10000), uFogNear: ValueCell.create(10000), uFogFar: ValueCell.create(10000), uFogColor: ValueCell.create(Vec3.create(1, 1, 1)), uTransparentBackground: ValueCell.create(false), uMaxPossibleViewZDiff: ValueCell.create(0.5), dOcclusionEnable: ValueCell.create(false), dOutlineEnable: ValueCell.create(false), dOutlineScale: ValueCell.create(1), uOutlineThreshold: ValueCell.create(0.33) });\r\n    var schema = __assign({}, PostprocessingSchema);\r\n    var shaderCode = ShaderCode('postprocessing', quad_vert, postprocessing_frag);\r\n    var renderItem = createComputeRenderItem(ctx, 'triangles', shaderCode, schema, values);\r\n    return createComputeRenderable(renderItem, values);\r\n}\r\nexport var PostprocessingParams = {\r\n    occlusion: PD.MappedStatic('on', {\r\n        on: PD.Group({\r\n            samples: PD.Numeric(32, { min: 1, max: 256, step: 1 }),\r\n            radius: PD.Numeric(5, { min: 0, max: 10, step: 0.1 }, { description: 'Final radius is 2^x.' }),\r\n            bias: PD.Numeric(0.8, { min: 0, max: 3, step: 0.1 }),\r\n            blurKernelSize: PD.Numeric(15, { min: 1, max: 25, step: 2 }),\r\n        }),\r\n        off: PD.Group({})\r\n    }, { cycle: true, description: 'Darken occluded crevices with the ambient occlusion effect' }),\r\n    outline: PD.MappedStatic('off', {\r\n        on: PD.Group({\r\n            scale: PD.Numeric(1, { min: 1, max: 5, step: 1 }),\r\n            threshold: PD.Numeric(0.33, { min: 0.01, max: 1, step: 0.01 }),\r\n        }),\r\n        off: PD.Group({})\r\n    }, { cycle: true, description: 'Draw outline around 3D objects' }),\r\n    antialiasing: PD.MappedStatic('smaa', {\r\n        fxaa: PD.Group(FxaaParams),\r\n        smaa: PD.Group(SmaaParams),\r\n        off: PD.Group({})\r\n    }, { options: [['fxaa', 'FXAA'], ['smaa', 'SMAA'], ['off', 'Off']], description: 'Smooth pixel edges' }),\r\n};\r\nvar PostprocessingPass = /** @class */ (function () {\r\n    function PostprocessingPass(webgl, drawPass) {\r\n        this.webgl = webgl;\r\n        this.ssaoScale = this.calcSsaoScale();\r\n        var colorTarget = drawPass.colorTarget, depthTexture = drawPass.depthTexture;\r\n        var width = colorTarget.getWidth();\r\n        var height = colorTarget.getHeight();\r\n        this.nSamples = 1;\r\n        this.blurKernelSize = 1;\r\n        // needs to be linear for anti-aliasing pass\r\n        this.target = webgl.createRenderTarget(width, height, false, 'uint8', 'linear');\r\n        this.outlinesTarget = webgl.createRenderTarget(width, height, false);\r\n        this.outlinesRenderable = getOutlinesRenderable(webgl, depthTexture);\r\n        this.randomHemisphereVector = [];\r\n        for (var i = 0; i < 256; i++) {\r\n            var v = Vec3();\r\n            v[0] = Math.random() * 2.0 - 1.0;\r\n            v[1] = Math.random() * 2.0 - 1.0;\r\n            v[2] = Math.random();\r\n            Vec3.normalize(v, v);\r\n            Vec3.scale(v, v, Math.random());\r\n            this.randomHemisphereVector.push(v);\r\n        }\r\n        this.ssaoFramebuffer = webgl.resources.framebuffer();\r\n        this.ssaoBlurFirstPassFramebuffer = webgl.resources.framebuffer();\r\n        this.ssaoBlurSecondPassFramebuffer = webgl.resources.framebuffer();\r\n        var sw = Math.floor(width * this.ssaoScale);\r\n        var sh = Math.floor(height * this.ssaoScale);\r\n        this.ssaoDepthTexture = webgl.resources.texture('image-uint8', 'rgba', 'ubyte', 'nearest');\r\n        this.ssaoDepthTexture.define(sw, sh);\r\n        this.ssaoDepthTexture.attachFramebuffer(this.ssaoFramebuffer, 'color0');\r\n        this.ssaoDepthBlurProxyTexture = webgl.resources.texture('image-uint8', 'rgba', 'ubyte', 'nearest');\r\n        this.ssaoDepthBlurProxyTexture.define(sw, sh);\r\n        this.ssaoDepthBlurProxyTexture.attachFramebuffer(this.ssaoBlurFirstPassFramebuffer, 'color0');\r\n        this.ssaoDepthTexture.attachFramebuffer(this.ssaoBlurSecondPassFramebuffer, 'color0');\r\n        this.ssaoRenderable = getSsaoRenderable(webgl, depthTexture);\r\n        this.ssaoBlurFirstPassRenderable = getSsaoBlurRenderable(webgl, this.ssaoDepthTexture, 'horizontal');\r\n        this.ssaoBlurSecondPassRenderable = getSsaoBlurRenderable(webgl, this.ssaoDepthBlurProxyTexture, 'vertical');\r\n        this.renderable = getPostprocessingRenderable(webgl, colorTarget.texture, depthTexture, this.outlinesTarget.texture, this.ssaoDepthTexture);\r\n    }\r\n    PostprocessingPass.isEnabled = function (props) {\r\n        return props.occlusion.name === 'on' || props.outline.name === 'on';\r\n    };\r\n    PostprocessingPass.prototype.calcSsaoScale = function () {\r\n        // downscale ssao for high pixel-ratios\r\n        return Math.min(1, 1 / this.webgl.pixelRatio);\r\n    };\r\n    PostprocessingPass.prototype.setSize = function (width, height) {\r\n        var _a = this.renderable.values.uTexSize.ref.value, w = _a[0], h = _a[1];\r\n        var ssaoScale = this.calcSsaoScale();\r\n        if (width !== w || height !== h || this.ssaoScale !== ssaoScale) {\r\n            this.ssaoScale = ssaoScale;\r\n            var sw = Math.floor(width * this.ssaoScale);\r\n            var sh = Math.floor(height * this.ssaoScale);\r\n            this.target.setSize(width, height);\r\n            this.outlinesTarget.setSize(width, height);\r\n            this.ssaoDepthTexture.define(sw, sh);\r\n            this.ssaoDepthBlurProxyTexture.define(sw, sh);\r\n            ValueCell.update(this.renderable.values.uTexSize, Vec2.set(this.renderable.values.uTexSize.ref.value, width, height));\r\n            ValueCell.update(this.outlinesRenderable.values.uTexSize, Vec2.set(this.outlinesRenderable.values.uTexSize.ref.value, width, height));\r\n            ValueCell.update(this.ssaoRenderable.values.uTexSize, Vec2.set(this.ssaoRenderable.values.uTexSize.ref.value, sw, sh));\r\n            ValueCell.update(this.ssaoBlurFirstPassRenderable.values.uTexSize, Vec2.set(this.ssaoBlurFirstPassRenderable.values.uTexSize.ref.value, sw, sh));\r\n            ValueCell.update(this.ssaoBlurSecondPassRenderable.values.uTexSize, Vec2.set(this.ssaoBlurSecondPassRenderable.values.uTexSize.ref.value, sw, sh));\r\n        }\r\n    };\r\n    PostprocessingPass.prototype.updateState = function (camera, transparentBackground, backgroundColor, props) {\r\n        var needsUpdateMain = false;\r\n        var needsUpdateSsao = false;\r\n        var needsUpdateSsaoBlur = false;\r\n        var orthographic = camera.state.mode === 'orthographic' ? 1 : 0;\r\n        var outlinesEnabled = props.outline.name === 'on';\r\n        var occlusionEnabled = props.occlusion.name === 'on';\r\n        var invProjection = Mat4.identity();\r\n        Mat4.invert(invProjection, camera.projection);\r\n        if (props.occlusion.name === 'on') {\r\n            ValueCell.update(this.ssaoRenderable.values.uProjection, camera.projection);\r\n            ValueCell.update(this.ssaoRenderable.values.uInvProjection, invProjection);\r\n            var _a = this.renderable.values.uTexSize.ref.value, w = _a[0], h = _a[1];\r\n            var b = this.ssaoRenderable.values.uBounds;\r\n            var v = camera.viewport;\r\n            var s = this.ssaoScale;\r\n            Vec4.set(b.ref.value, Math.floor(v.x * s) / (w * s), Math.floor(v.y * s) / (h * s), Math.ceil((v.x + v.width) * s) / (w * s), Math.ceil((v.y + v.height) * s) / (h * s));\r\n            ValueCell.update(b, b.ref.value);\r\n            ValueCell.update(this.ssaoBlurFirstPassRenderable.values.uBounds, b.ref.value);\r\n            ValueCell.update(this.ssaoBlurSecondPassRenderable.values.uBounds, b.ref.value);\r\n            ValueCell.updateIfChanged(this.ssaoBlurFirstPassRenderable.values.uNear, camera.near);\r\n            ValueCell.updateIfChanged(this.ssaoBlurSecondPassRenderable.values.uNear, camera.near);\r\n            ValueCell.updateIfChanged(this.ssaoBlurFirstPassRenderable.values.uFar, camera.far);\r\n            ValueCell.updateIfChanged(this.ssaoBlurSecondPassRenderable.values.uFar, camera.far);\r\n            if (this.ssaoBlurFirstPassRenderable.values.dOrthographic.ref.value !== orthographic) {\r\n                needsUpdateSsaoBlur = true;\r\n            }\r\n            ValueCell.updateIfChanged(this.ssaoBlurFirstPassRenderable.values.dOrthographic, orthographic);\r\n            ValueCell.updateIfChanged(this.ssaoBlurSecondPassRenderable.values.dOrthographic, orthographic);\r\n            if (this.nSamples !== props.occlusion.params.samples) {\r\n                needsUpdateSsao = true;\r\n                this.nSamples = props.occlusion.params.samples;\r\n                ValueCell.update(this.ssaoRenderable.values.uSamples, getSamples(this.randomHemisphereVector, this.nSamples));\r\n                ValueCell.updateIfChanged(this.ssaoRenderable.values.dNSamples, this.nSamples);\r\n            }\r\n            ValueCell.updateIfChanged(this.ssaoRenderable.values.uRadius, Math.pow(2, props.occlusion.params.radius));\r\n            ValueCell.updateIfChanged(this.ssaoRenderable.values.uBias, props.occlusion.params.bias);\r\n            if (this.blurKernelSize !== props.occlusion.params.blurKernelSize) {\r\n                needsUpdateSsaoBlur = true;\r\n                this.blurKernelSize = props.occlusion.params.blurKernelSize;\r\n                var kernel = getBlurKernel(this.blurKernelSize);\r\n                ValueCell.update(this.ssaoBlurFirstPassRenderable.values.uKernel, kernel);\r\n                ValueCell.update(this.ssaoBlurSecondPassRenderable.values.uKernel, kernel);\r\n                ValueCell.updateIfChanged(this.ssaoBlurFirstPassRenderable.values.dOcclusionKernelSize, this.blurKernelSize);\r\n                ValueCell.updateIfChanged(this.ssaoBlurSecondPassRenderable.values.dOcclusionKernelSize, this.blurKernelSize);\r\n            }\r\n        }\r\n        if (props.outline.name === 'on') {\r\n            var threshold = props.outline.params.threshold;\r\n            // orthographic needs lower threshold\r\n            if (camera.state.mode === 'orthographic')\r\n                threshold /= 5;\r\n            var factor = Math.pow(1000, threshold) / 1000;\r\n            // use radiusMax for stable outlines when zooming\r\n            var maxPossibleViewZDiff = factor * camera.state.radiusMax;\r\n            var outlineScale = props.outline.params.scale - 1;\r\n            ValueCell.updateIfChanged(this.outlinesRenderable.values.uNear, camera.near);\r\n            ValueCell.updateIfChanged(this.outlinesRenderable.values.uFar, camera.far);\r\n            ValueCell.updateIfChanged(this.outlinesRenderable.values.uMaxPossibleViewZDiff, maxPossibleViewZDiff);\r\n            ValueCell.updateIfChanged(this.renderable.values.uMaxPossibleViewZDiff, maxPossibleViewZDiff);\r\n            if (this.renderable.values.dOutlineScale.ref.value !== outlineScale) {\r\n                needsUpdateMain = true;\r\n            }\r\n            ValueCell.updateIfChanged(this.renderable.values.dOutlineScale, outlineScale);\r\n        }\r\n        ValueCell.updateIfChanged(this.renderable.values.uFar, camera.far);\r\n        ValueCell.updateIfChanged(this.renderable.values.uNear, camera.near);\r\n        ValueCell.updateIfChanged(this.renderable.values.uFogFar, camera.fogFar);\r\n        ValueCell.updateIfChanged(this.renderable.values.uFogNear, camera.fogNear);\r\n        ValueCell.update(this.renderable.values.uFogColor, Color.toVec3Normalized(this.renderable.values.uFogColor.ref.value, backgroundColor));\r\n        ValueCell.updateIfChanged(this.renderable.values.uTransparentBackground, transparentBackground);\r\n        if (this.renderable.values.dOrthographic.ref.value !== orthographic) {\r\n            needsUpdateMain = true;\r\n        }\r\n        ValueCell.updateIfChanged(this.renderable.values.dOrthographic, orthographic);\r\n        if (this.renderable.values.dOutlineEnable.ref.value !== outlinesEnabled) {\r\n            needsUpdateMain = true;\r\n        }\r\n        ValueCell.updateIfChanged(this.renderable.values.dOutlineEnable, outlinesEnabled);\r\n        if (this.renderable.values.dOcclusionEnable.ref.value !== occlusionEnabled) {\r\n            needsUpdateMain = true;\r\n        }\r\n        ValueCell.updateIfChanged(this.renderable.values.dOcclusionEnable, occlusionEnabled);\r\n        if (needsUpdateSsao) {\r\n            this.ssaoRenderable.update();\r\n        }\r\n        if (needsUpdateSsaoBlur) {\r\n            this.ssaoBlurFirstPassRenderable.update();\r\n            this.ssaoBlurSecondPassRenderable.update();\r\n        }\r\n        if (needsUpdateMain) {\r\n            this.renderable.update();\r\n        }\r\n        var _b = this.webgl, gl = _b.gl, state = _b.state;\r\n        state.enable(gl.SCISSOR_TEST);\r\n        state.disable(gl.BLEND);\r\n        state.disable(gl.DEPTH_TEST);\r\n        state.depthMask(false);\r\n        var _c = camera.viewport, x = _c.x, y = _c.y, width = _c.width, height = _c.height;\r\n        gl.viewport(x, y, width, height);\r\n        gl.scissor(x, y, width, height);\r\n    };\r\n    PostprocessingPass.prototype.render = function (camera, toDrawingBuffer, transparentBackground, backgroundColor, props) {\r\n        this.updateState(camera, transparentBackground, backgroundColor, props);\r\n        if (props.outline.name === 'on') {\r\n            this.outlinesTarget.bind();\r\n            this.outlinesRenderable.render();\r\n        }\r\n        if (props.occlusion.name === 'on') {\r\n            var _a = camera.viewport, x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n            var sx = Math.floor(x * this.ssaoScale);\r\n            var sy = Math.floor(y * this.ssaoScale);\r\n            var sw = Math.ceil(width * this.ssaoScale);\r\n            var sh = Math.ceil(height * this.ssaoScale);\r\n            this.webgl.gl.viewport(sx, sy, sw, sh);\r\n            this.webgl.gl.scissor(sx, sy, sw, sh);\r\n            this.ssaoFramebuffer.bind();\r\n            this.ssaoRenderable.render();\r\n            this.ssaoBlurFirstPassFramebuffer.bind();\r\n            this.ssaoBlurFirstPassRenderable.render();\r\n            this.ssaoBlurSecondPassFramebuffer.bind();\r\n            this.ssaoBlurSecondPassRenderable.render();\r\n            this.webgl.gl.viewport(x, y, width, height);\r\n            this.webgl.gl.scissor(x, y, width, height);\r\n        }\r\n        if (toDrawingBuffer) {\r\n            this.webgl.unbindFramebuffer();\r\n        }\r\n        else {\r\n            this.target.bind();\r\n        }\r\n        var _b = this.webgl, gl = _b.gl, state = _b.state;\r\n        state.clearColor(0, 0, 0, 1);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        this.renderable.render();\r\n    };\r\n    return PostprocessingPass;\r\n}());\r\nexport { PostprocessingPass };\r\nvar AntialiasingPass = /** @class */ (function () {\r\n    function AntialiasingPass(webgl, drawPass) {\r\n        this.drawPass = drawPass;\r\n        var colorTarget = drawPass.colorTarget;\r\n        var width = colorTarget.getWidth();\r\n        var height = colorTarget.getHeight();\r\n        this.target = webgl.createRenderTarget(width, height, false);\r\n        this.fxaa = new FxaaPass(webgl, this.target.texture);\r\n        this.smaa = new SmaaPass(webgl, this.target.texture);\r\n    }\r\n    AntialiasingPass.isEnabled = function (props) {\r\n        return props.antialiasing.name !== 'off';\r\n    };\r\n    AntialiasingPass.prototype.setSize = function (width, height) {\r\n        var w = this.target.texture.getWidth();\r\n        var h = this.target.texture.getHeight();\r\n        if (width !== w || height !== h) {\r\n            this.target.setSize(width, height);\r\n            this.fxaa.setSize(width, height);\r\n            if (this.smaa.supported)\r\n                this.smaa.setSize(width, height);\r\n        }\r\n    };\r\n    AntialiasingPass.prototype._renderFxaa = function (camera, toDrawingBuffer, props) {\r\n        if (props.antialiasing.name !== 'fxaa')\r\n            return;\r\n        var input = PostprocessingPass.isEnabled(props)\r\n            ? this.drawPass.postprocessing.target.texture\r\n            : this.drawPass.colorTarget.texture;\r\n        this.fxaa.update(input, props.antialiasing.params);\r\n        this.fxaa.render(camera.viewport, toDrawingBuffer ? undefined : this.target);\r\n    };\r\n    AntialiasingPass.prototype._renderSmaa = function (camera, toDrawingBuffer, props) {\r\n        if (props.antialiasing.name !== 'smaa')\r\n            return;\r\n        var input = PostprocessingPass.isEnabled(props)\r\n            ? this.drawPass.postprocessing.target.texture\r\n            : this.drawPass.colorTarget.texture;\r\n        this.smaa.update(input, props.antialiasing.params);\r\n        this.smaa.render(camera.viewport, toDrawingBuffer ? undefined : this.target);\r\n    };\r\n    AntialiasingPass.prototype.render = function (camera, toDrawingBuffer, props) {\r\n        if (props.antialiasing.name === 'off')\r\n            return;\r\n        if (props.antialiasing.name === 'fxaa') {\r\n            this._renderFxaa(camera, toDrawingBuffer, props);\r\n        }\r\n        else if (props.antialiasing.name === 'smaa') {\r\n            if (!this.smaa.supported) {\r\n                throw new Error('SMAA not supported, missing \"HTMLImageElement\"');\r\n            }\r\n            this._renderSmaa(camera, toDrawingBuffer, props);\r\n        }\r\n    };\r\n    return AntialiasingPass;\r\n}());\r\nexport { AntialiasingPass };\r\n//# sourceMappingURL=postprocessing.js.map"]},"metadata":{},"sourceType":"module"}