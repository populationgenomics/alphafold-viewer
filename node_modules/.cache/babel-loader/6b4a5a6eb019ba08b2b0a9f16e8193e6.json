{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { CifField } from '../../../mol-io/reader/cif';\nimport { TokenBuilder, Tokenizer } from '../../../mol-io/reader/common/text/tokenizer';\nimport { guessElementSymbolTokens } from '../util';\nimport { Column } from '../../../mol-data/db';\nimport { areTokensEmpty } from '../../../mol-io/reader/common/text/column/token';\nexport function getAtomSiteTemplate(data, count) {\n  var str = function () {\n    return [];\n  };\n\n  var ts = function () {\n    return TokenBuilder.create(data, 2 * count);\n  };\n\n  return {\n    index: 0,\n    group_PDB: ts(),\n    id: str(),\n    auth_atom_id: ts(),\n    label_alt_id: ts(),\n    auth_comp_id: ts(),\n    auth_asym_id: ts(),\n    auth_seq_id: ts(),\n    pdbx_PDB_ins_code: ts(),\n    Cartn_x: ts(),\n    Cartn_y: ts(),\n    Cartn_z: ts(),\n    occupancy: ts(),\n    B_iso_or_equiv: ts(),\n    type_symbol: ts(),\n    pdbx_PDB_model_num: str(),\n    label_entity_id: str(),\n    partial_charge: ts()\n  };\n}\nexport function getAtomSite(sites) {\n  var auth_asym_id = CifField.ofTokens(sites.auth_asym_id);\n  var auth_atom_id = CifField.ofTokens(sites.auth_atom_id);\n  var auth_comp_id = CifField.ofTokens(sites.auth_comp_id);\n  return {\n    auth_asym_id: auth_asym_id,\n    auth_atom_id: auth_atom_id,\n    auth_comp_id: auth_comp_id,\n    auth_seq_id: CifField.ofTokens(sites.auth_seq_id),\n    B_iso_or_equiv: CifField.ofTokens(sites.B_iso_or_equiv),\n    Cartn_x: CifField.ofTokens(sites.Cartn_x),\n    Cartn_y: CifField.ofTokens(sites.Cartn_y),\n    Cartn_z: CifField.ofTokens(sites.Cartn_z),\n    group_PDB: CifField.ofTokens(sites.group_PDB),\n    id: CifField.ofStrings(sites.id),\n    label_alt_id: CifField.ofTokens(sites.label_alt_id),\n    label_asym_id: auth_asym_id,\n    label_atom_id: auth_atom_id,\n    label_comp_id: auth_comp_id,\n    label_seq_id: CifField.ofUndefined(sites.index, Column.Schema.int),\n    label_entity_id: CifField.ofStrings(sites.label_entity_id),\n    occupancy: areTokensEmpty(sites.occupancy) ? CifField.ofUndefined(sites.index, Column.Schema.float) : CifField.ofTokens(sites.occupancy),\n    type_symbol: CifField.ofTokens(sites.type_symbol),\n    pdbx_PDB_ins_code: CifField.ofTokens(sites.pdbx_PDB_ins_code),\n    pdbx_PDB_model_num: CifField.ofStrings(sites.pdbx_PDB_model_num),\n    partial_charge: CifField.ofTokens(sites.partial_charge)\n  };\n}\nexport function addAtom(sites, model, data, s, e, isPdbqt) {\n  var str = data.data;\n  var length = e - s; // TODO: filter invalid atoms\n  // COLUMNS        DATA TYPE       CONTENTS\n  // --------------------------------------------------------------------------------\n  // 1 -  6        Record name     \"ATOM  \"\n\n  TokenBuilder.addToken(sites.group_PDB, Tokenizer.trim(data, s, s + 6)); // 7 - 11        Integer         Atom serial number.\n  // TODO: support HEX\n\n  Tokenizer.trim(data, s + 6, s + 11);\n  sites.id[sites.index] = data.data.substring(data.tokenStart, data.tokenEnd); // 13 - 16        Atom            Atom name.\n\n  TokenBuilder.addToken(sites.auth_atom_id, Tokenizer.trim(data, s + 12, s + 16)); // 17             Character       Alternate location indicator.\n\n  if (str.charCodeAt(s + 16) === 32) {\n    // ' '\n    TokenBuilder.add(sites.label_alt_id, 0, 0);\n  } else {\n    TokenBuilder.add(sites.label_alt_id, s + 16, s + 17);\n  } // 18 - 20        Residue name    Residue name.\n\n\n  TokenBuilder.addToken(sites.auth_comp_id, Tokenizer.trim(data, s + 17, s + 20)); // 22             Character       Chain identifier.\n\n  TokenBuilder.add(sites.auth_asym_id, s + 21, s + 22); // 23 - 26        Integer         Residue sequence number.\n  // TODO: support HEX\n\n  TokenBuilder.addToken(sites.auth_seq_id, Tokenizer.trim(data, s + 22, s + 26)); // 27             AChar           Code for insertion of residues.\n\n  if (str.charCodeAt(s + 26) === 32) {\n    // ' '\n    TokenBuilder.add(sites.pdbx_PDB_ins_code, 0, 0);\n  } else {\n    TokenBuilder.add(sites.pdbx_PDB_ins_code, s + 26, s + 27);\n  } // 31 - 38        Real(8.3)       Orthogonal coordinates for X in Angstroms.\n\n\n  TokenBuilder.addToken(sites.Cartn_x, Tokenizer.trim(data, s + 30, s + 38)); // 39 - 46        Real(8.3)       Orthogonal coordinates for Y in Angstroms.\n\n  TokenBuilder.addToken(sites.Cartn_y, Tokenizer.trim(data, s + 38, s + 46)); // 47 - 54        Real(8.3)       Orthogonal coordinates for Z in Angstroms.\n\n  TokenBuilder.addToken(sites.Cartn_z, Tokenizer.trim(data, s + 46, s + 54)); // 55 - 60        Real(6.2)       Occupancy.\n\n  TokenBuilder.addToken(sites.occupancy, Tokenizer.trim(data, s + 54, s + 60)); // 61 - 66        Real(6.2)       Temperature factor (Default = 0.0).\n\n  if (length >= 66) {\n    TokenBuilder.addToken(sites.B_iso_or_equiv, Tokenizer.trim(data, s + 60, s + 66));\n  } else {\n    TokenBuilder.add(sites.B_iso_or_equiv, 0, 0);\n  } // 73 - 76        LString(4)      Segment identifier, left-justified.\n\n\n  if (isPdbqt) {\n    TokenBuilder.addToken(sites.partial_charge, Tokenizer.trim(data, s + 70, s + 76));\n  } else {// ignored\n  } // 77 - 78        LString(2)      Element symbol, right-justified.\n\n\n  if (length >= 78 && !isPdbqt) {\n    Tokenizer.trim(data, s + 76, s + 78);\n\n    if (data.tokenStart < data.tokenEnd) {\n      TokenBuilder.addToken(sites.type_symbol, data);\n    } else {\n      guessElementSymbolTokens(sites.type_symbol, str, s + 12, s + 16);\n    }\n  } else {\n    guessElementSymbolTokens(sites.type_symbol, str, s + 12, s + 16);\n  } // 79 - 80        LString(2)    charge       Charge  on the atom.\n  // TODO\n\n\n  sites.pdbx_PDB_model_num[sites.index] = model;\n  sites.index++;\n}","map":{"version":3,"sources":["../../../../src/mol-model-formats/structure/pdb/atom-site.ts"],"names":[],"mappings":"AAAA;;;;;AAKG;AAEH,SAAS,QAAT,QAAyB,4BAAzB;AAEA,SAAS,YAAT,EAAuB,SAAvB,QAAwC,8CAAxC;AACA,SAAS,wBAAT,QAAyC,SAAzC;AACA,SAAS,MAAT,QAAuB,sBAAvB;AACA,SAAS,cAAT,QAA+B,iDAA/B;AAGA,OAAM,SAAU,mBAAV,CAA8B,IAA9B,EAA4C,KAA5C,EAAyD;AAC3D,MAAM,GAAG,GAAG,YAAA;AAAM,WAAA,EAAA;AAAc,GAAhC;;AACA,MAAM,EAAE,GAAG,YAAA;AAAM,WAAA,YAAY,CAAC,MAAb,CAAoB,IAApB,EAA0B,IAA1B,KAAA,CAAA;AAAoC,GAArD;;AACA,SAAO;AACH,IAAA,KAAK,EAAE,CADJ;AAEH,IAAA,SAAS,EAAE,EAAE,EAFV;AAGH,IAAA,EAAE,EAAE,GAAG,EAHJ;AAIH,IAAA,YAAY,EAAE,EAAE,EAJb;AAKH,IAAA,YAAY,EAAE,EAAE,EALb;AAMH,IAAA,YAAY,EAAE,EAAE,EANb;AAOH,IAAA,YAAY,EAAE,EAAE,EAPb;AAQH,IAAA,WAAW,EAAE,EAAE,EARZ;AASH,IAAA,iBAAiB,EAAE,EAAE,EATlB;AAUH,IAAA,OAAO,EAAE,EAAE,EAVR;AAWH,IAAA,OAAO,EAAE,EAAE,EAXR;AAYH,IAAA,OAAO,EAAE,EAAE,EAZR;AAaH,IAAA,SAAS,EAAE,EAAE,EAbV;AAcH,IAAA,cAAc,EAAE,EAAE,EAdf;AAeH,IAAA,WAAW,EAAE,EAAE,EAfZ;AAgBH,IAAA,kBAAkB,EAAE,GAAG,EAhBpB;AAiBH,IAAA,eAAe,EAAE,GAAG,EAjBjB;AAmBH,IAAA,cAAc,EAAE,EAAE;AAnBf,GAAP;AAqBH;AAED,OAAM,SAAU,WAAV,CAAsB,KAAtB,EAA6C;AAC/C,MAAM,YAAY,GAAG,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,YAAxB,CAArB;AACA,MAAM,YAAY,GAAG,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,YAAxB,CAArB;AACA,MAAM,YAAY,GAAG,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,YAAxB,CAArB;AAEA,SAAO;AACH,IAAA,YAAY,EAAA,YADT;AAEH,IAAA,YAAY,EAAA,YAFT;AAGH,IAAA,YAAY,EAAA,YAHT;AAIH,IAAA,WAAW,EAAE,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,WAAxB,CAJV;AAKH,IAAA,cAAc,EAAE,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,cAAxB,CALb;AAMH,IAAA,OAAO,EAAE,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,OAAxB,CANN;AAOH,IAAA,OAAO,EAAE,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,OAAxB,CAPN;AAQH,IAAA,OAAO,EAAE,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,OAAxB,CARN;AASH,IAAA,SAAS,EAAE,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,SAAxB,CATR;AAUH,IAAA,EAAE,EAAE,QAAQ,CAAC,SAAT,CAAmB,KAAK,CAAC,EAAzB,CAVD;AAYH,IAAA,YAAY,EAAE,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,YAAxB,CAZX;AAcH,IAAA,aAAa,EAAE,YAdZ;AAeH,IAAA,aAAa,EAAE,YAfZ;AAgBH,IAAA,aAAa,EAAE,YAhBZ;AAiBH,IAAA,YAAY,EAAE,QAAQ,CAAC,WAAT,CAAqB,KAAK,CAAC,KAA3B,EAAkC,MAAM,CAAC,MAAP,CAAc,GAAhD,CAjBX;AAkBH,IAAA,eAAe,EAAE,QAAQ,CAAC,SAAT,CAAmB,KAAK,CAAC,eAAzB,CAlBd;AAoBH,IAAA,SAAS,EAAE,cAAc,CAAC,KAAK,CAAC,SAAP,CAAd,GAAkC,QAAQ,CAAC,WAAT,CAAqB,KAAK,CAAC,KAA3B,EAAkC,MAAM,CAAC,MAAP,CAAc,KAAhD,CAAlC,GAA2F,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,SAAxB,CApBnG;AAqBH,IAAA,WAAW,EAAE,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,WAAxB,CArBV;AAuBH,IAAA,iBAAiB,EAAE,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,iBAAxB,CAvBhB;AAwBH,IAAA,kBAAkB,EAAE,QAAQ,CAAC,SAAT,CAAmB,KAAK,CAAC,kBAAzB,CAxBjB;AA0BH,IAAA,cAAc,EAAE,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,cAAxB;AA1Bb,GAAP;AA4BH;AAED,OAAM,SAAU,OAAV,CAAkB,KAAlB,EAA2C,KAA3C,EAA0D,IAA1D,EAA2E,CAA3E,EAAsF,CAAtF,EAAiG,OAAjG,EAAiH;AAC3G,MAAM,GAAG,GAAK,IAAI,CAAT,IAAT;AACR,MAAM,MAAM,GAAG,CAAC,GAAG,CAAnB,CAFmH,CAInH;AAEA;AACA;AACA;;AACA,EAAA,YAAY,CAAC,QAAb,CAAsB,KAAK,CAAC,SAA5B,EAAuC,SAAS,CAAC,IAAV,CAAe,IAAf,EAAqB,CAArB,EAAwB,CAAC,GAAG,CAA5B,CAAvC,EATmH,CAWnH;AACA;;AACA,EAAA,SAAS,CAAC,IAAV,CAAe,IAAf,EAAqB,CAAC,GAAG,CAAzB,EAA4B,CAAC,GAAG,EAAhC;AACA,EAAA,KAAK,CAAC,EAAN,CAAS,KAAK,CAAC,KAAf,IAAwB,IAAI,CAAC,IAAL,CAAU,SAAV,CAAoB,IAAI,CAAC,UAAzB,EAAqC,IAAI,CAAC,QAA1C,CAAxB,CAdmH,CAgBnH;;AACA,EAAA,YAAY,CAAC,QAAb,CAAsB,KAAK,CAAC,YAA5B,EAA0C,SAAS,CAAC,IAAV,CAAe,IAAf,EAAqB,CAAC,GAAG,EAAzB,EAA6B,CAAC,GAAG,EAAjC,CAA1C,EAjBmH,CAmBnH;;AACA,MAAI,GAAG,CAAC,UAAJ,CAAe,CAAC,GAAG,EAAnB,MAA2B,EAA/B,EAAmC;AAAE;AACjC,IAAA,YAAY,CAAC,GAAb,CAAiB,KAAK,CAAC,YAAvB,EAAqC,CAArC,EAAwC,CAAxC;AACH,GAFD,MAEO;AACH,IAAA,YAAY,CAAC,GAAb,CAAiB,KAAK,CAAC,YAAvB,EAAqC,CAAC,GAAG,EAAzC,EAA6C,CAAC,GAAG,EAAjD;AACH,GAxBkH,CA0BnH;;;AACA,EAAA,YAAY,CAAC,QAAb,CAAsB,KAAK,CAAC,YAA5B,EAA0C,SAAS,CAAC,IAAV,CAAe,IAAf,EAAqB,CAAC,GAAG,EAAzB,EAA6B,CAAC,GAAG,EAAjC,CAA1C,EA3BmH,CA6BnH;;AACA,EAAA,YAAY,CAAC,GAAb,CAAiB,KAAK,CAAC,YAAvB,EAAqC,CAAC,GAAG,EAAzC,EAA6C,CAAC,GAAG,EAAjD,EA9BmH,CAgCnH;AACA;;AACA,EAAA,YAAY,CAAC,QAAb,CAAsB,KAAK,CAAC,WAA5B,EAAyC,SAAS,CAAC,IAAV,CAAe,IAAf,EAAqB,CAAC,GAAG,EAAzB,EAA6B,CAAC,GAAG,EAAjC,CAAzC,EAlCmH,CAoCnH;;AACA,MAAI,GAAG,CAAC,UAAJ,CAAe,CAAC,GAAG,EAAnB,MAA2B,EAA/B,EAAmC;AAAE;AACjC,IAAA,YAAY,CAAC,GAAb,CAAiB,KAAK,CAAC,iBAAvB,EAA0C,CAA1C,EAA6C,CAA7C;AACH,GAFD,MAEO;AACH,IAAA,YAAY,CAAC,GAAb,CAAiB,KAAK,CAAC,iBAAvB,EAA0C,CAAC,GAAG,EAA9C,EAAkD,CAAC,GAAG,EAAtD;AACH,GAzCkH,CA2CnH;;;AACA,EAAA,YAAY,CAAC,QAAb,CAAsB,KAAK,CAAC,OAA5B,EAAqC,SAAS,CAAC,IAAV,CAAe,IAAf,EAAqB,CAAC,GAAG,EAAzB,EAA6B,CAAC,GAAG,EAAjC,CAArC,EA5CmH,CA8CnH;;AACA,EAAA,YAAY,CAAC,QAAb,CAAsB,KAAK,CAAC,OAA5B,EAAqC,SAAS,CAAC,IAAV,CAAe,IAAf,EAAqB,CAAC,GAAG,EAAzB,EAA6B,CAAC,GAAG,EAAjC,CAArC,EA/CmH,CAiDnH;;AACA,EAAA,YAAY,CAAC,QAAb,CAAsB,KAAK,CAAC,OAA5B,EAAqC,SAAS,CAAC,IAAV,CAAe,IAAf,EAAqB,CAAC,GAAG,EAAzB,EAA6B,CAAC,GAAG,EAAjC,CAArC,EAlDmH,CAoDnH;;AACA,EAAA,YAAY,CAAC,QAAb,CAAsB,KAAK,CAAC,SAA5B,EAAuC,SAAS,CAAC,IAAV,CAAe,IAAf,EAAqB,CAAC,GAAG,EAAzB,EAA6B,CAAC,GAAG,EAAjC,CAAvC,EArDmH,CAuDnH;;AACA,MAAI,MAAM,IAAI,EAAd,EAAkB;AACd,IAAA,YAAY,CAAC,QAAb,CAAsB,KAAK,CAAC,cAA5B,EAA4C,SAAS,CAAC,IAAV,CAAe,IAAf,EAAqB,CAAC,GAAG,EAAzB,EAA6B,CAAC,GAAG,EAAjC,CAA5C;AACH,GAFD,MAEO;AACH,IAAA,YAAY,CAAC,GAAb,CAAiB,KAAK,CAAC,cAAvB,EAAuC,CAAvC,EAA0C,CAA1C;AACH,GA5DkH,CA8DnH;;;AACA,MAAI,OAAJ,EAAa;AACT,IAAA,YAAY,CAAC,QAAb,CAAsB,KAAK,CAAC,cAA5B,EAA4C,SAAS,CAAC,IAAV,CAAe,IAAf,EAAqB,CAAC,GAAG,EAAzB,EAA6B,CAAC,GAAG,EAAjC,CAA5C;AACH,GAFD,MAEO,CACH;AACH,GAnEkH,CAqEnH;;;AACA,MAAI,MAAM,IAAI,EAAV,IAAgB,CAAC,OAArB,EAA8B;AAC1B,IAAA,SAAS,CAAC,IAAV,CAAe,IAAf,EAAqB,CAAC,GAAG,EAAzB,EAA6B,CAAC,GAAG,EAAjC;;AAEA,QAAI,IAAI,CAAC,UAAL,GAAkB,IAAI,CAAC,QAA3B,EAAqC;AACjC,MAAA,YAAY,CAAC,QAAb,CAAsB,KAAK,CAAC,WAA5B,EAAyC,IAAzC;AACH,KAFD,MAEO;AACH,MAAA,wBAAwB,CAAC,KAAK,CAAC,WAAP,EAAoB,GAApB,EAAyB,CAAC,GAAG,EAA7B,EAAiC,CAAC,GAAG,EAArC,CAAxB;AACH;AACJ,GARD,MAQO;AACH,IAAA,wBAAwB,CAAC,KAAK,CAAC,WAAP,EAAoB,GAApB,EAAyB,CAAC,GAAG,EAA7B,EAAiC,CAAC,GAAG,EAArC,CAAxB;AACH,GAhFkH,CAkFnH;AACA;;;AAEA,EAAA,KAAK,CAAC,kBAAN,CAAyB,KAAK,CAAC,KAA/B,IAAwC,KAAxC;AAEA,EAAA,KAAK,CAAC,KAAN;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { CifField } from '../../../mol-io/reader/cif';\r\nimport { TokenBuilder, Tokenizer } from '../../../mol-io/reader/common/text/tokenizer';\r\nimport { guessElementSymbolTokens } from '../util';\r\nimport { Column } from '../../../mol-data/db';\r\nimport { areTokensEmpty } from '../../../mol-io/reader/common/text/column/token';\r\nexport function getAtomSiteTemplate(data, count) {\r\n    var str = function () { return []; };\r\n    var ts = function () { return TokenBuilder.create(data, 2 * count); };\r\n    return {\r\n        index: 0,\r\n        group_PDB: ts(),\r\n        id: str(),\r\n        auth_atom_id: ts(),\r\n        label_alt_id: ts(),\r\n        auth_comp_id: ts(),\r\n        auth_asym_id: ts(),\r\n        auth_seq_id: ts(),\r\n        pdbx_PDB_ins_code: ts(),\r\n        Cartn_x: ts(),\r\n        Cartn_y: ts(),\r\n        Cartn_z: ts(),\r\n        occupancy: ts(),\r\n        B_iso_or_equiv: ts(),\r\n        type_symbol: ts(),\r\n        pdbx_PDB_model_num: str(),\r\n        label_entity_id: str(),\r\n        partial_charge: ts(),\r\n    };\r\n}\r\nexport function getAtomSite(sites) {\r\n    var auth_asym_id = CifField.ofTokens(sites.auth_asym_id);\r\n    var auth_atom_id = CifField.ofTokens(sites.auth_atom_id);\r\n    var auth_comp_id = CifField.ofTokens(sites.auth_comp_id);\r\n    return {\r\n        auth_asym_id: auth_asym_id,\r\n        auth_atom_id: auth_atom_id,\r\n        auth_comp_id: auth_comp_id,\r\n        auth_seq_id: CifField.ofTokens(sites.auth_seq_id),\r\n        B_iso_or_equiv: CifField.ofTokens(sites.B_iso_or_equiv),\r\n        Cartn_x: CifField.ofTokens(sites.Cartn_x),\r\n        Cartn_y: CifField.ofTokens(sites.Cartn_y),\r\n        Cartn_z: CifField.ofTokens(sites.Cartn_z),\r\n        group_PDB: CifField.ofTokens(sites.group_PDB),\r\n        id: CifField.ofStrings(sites.id),\r\n        label_alt_id: CifField.ofTokens(sites.label_alt_id),\r\n        label_asym_id: auth_asym_id,\r\n        label_atom_id: auth_atom_id,\r\n        label_comp_id: auth_comp_id,\r\n        label_seq_id: CifField.ofUndefined(sites.index, Column.Schema.int),\r\n        label_entity_id: CifField.ofStrings(sites.label_entity_id),\r\n        occupancy: areTokensEmpty(sites.occupancy) ? CifField.ofUndefined(sites.index, Column.Schema.float) : CifField.ofTokens(sites.occupancy),\r\n        type_symbol: CifField.ofTokens(sites.type_symbol),\r\n        pdbx_PDB_ins_code: CifField.ofTokens(sites.pdbx_PDB_ins_code),\r\n        pdbx_PDB_model_num: CifField.ofStrings(sites.pdbx_PDB_model_num),\r\n        partial_charge: CifField.ofTokens(sites.partial_charge)\r\n    };\r\n}\r\nexport function addAtom(sites, model, data, s, e, isPdbqt) {\r\n    var str = data.data;\r\n    var length = e - s;\r\n    // TODO: filter invalid atoms\r\n    // COLUMNS        DATA TYPE       CONTENTS\r\n    // --------------------------------------------------------------------------------\r\n    // 1 -  6        Record name     \"ATOM  \"\r\n    TokenBuilder.addToken(sites.group_PDB, Tokenizer.trim(data, s, s + 6));\r\n    // 7 - 11        Integer         Atom serial number.\r\n    // TODO: support HEX\r\n    Tokenizer.trim(data, s + 6, s + 11);\r\n    sites.id[sites.index] = data.data.substring(data.tokenStart, data.tokenEnd);\r\n    // 13 - 16        Atom            Atom name.\r\n    TokenBuilder.addToken(sites.auth_atom_id, Tokenizer.trim(data, s + 12, s + 16));\r\n    // 17             Character       Alternate location indicator.\r\n    if (str.charCodeAt(s + 16) === 32) { // ' '\r\n        TokenBuilder.add(sites.label_alt_id, 0, 0);\r\n    }\r\n    else {\r\n        TokenBuilder.add(sites.label_alt_id, s + 16, s + 17);\r\n    }\r\n    // 18 - 20        Residue name    Residue name.\r\n    TokenBuilder.addToken(sites.auth_comp_id, Tokenizer.trim(data, s + 17, s + 20));\r\n    // 22             Character       Chain identifier.\r\n    TokenBuilder.add(sites.auth_asym_id, s + 21, s + 22);\r\n    // 23 - 26        Integer         Residue sequence number.\r\n    // TODO: support HEX\r\n    TokenBuilder.addToken(sites.auth_seq_id, Tokenizer.trim(data, s + 22, s + 26));\r\n    // 27             AChar           Code for insertion of residues.\r\n    if (str.charCodeAt(s + 26) === 32) { // ' '\r\n        TokenBuilder.add(sites.pdbx_PDB_ins_code, 0, 0);\r\n    }\r\n    else {\r\n        TokenBuilder.add(sites.pdbx_PDB_ins_code, s + 26, s + 27);\r\n    }\r\n    // 31 - 38        Real(8.3)       Orthogonal coordinates for X in Angstroms.\r\n    TokenBuilder.addToken(sites.Cartn_x, Tokenizer.trim(data, s + 30, s + 38));\r\n    // 39 - 46        Real(8.3)       Orthogonal coordinates for Y in Angstroms.\r\n    TokenBuilder.addToken(sites.Cartn_y, Tokenizer.trim(data, s + 38, s + 46));\r\n    // 47 - 54        Real(8.3)       Orthogonal coordinates for Z in Angstroms.\r\n    TokenBuilder.addToken(sites.Cartn_z, Tokenizer.trim(data, s + 46, s + 54));\r\n    // 55 - 60        Real(6.2)       Occupancy.\r\n    TokenBuilder.addToken(sites.occupancy, Tokenizer.trim(data, s + 54, s + 60));\r\n    // 61 - 66        Real(6.2)       Temperature factor (Default = 0.0).\r\n    if (length >= 66) {\r\n        TokenBuilder.addToken(sites.B_iso_or_equiv, Tokenizer.trim(data, s + 60, s + 66));\r\n    }\r\n    else {\r\n        TokenBuilder.add(sites.B_iso_or_equiv, 0, 0);\r\n    }\r\n    // 73 - 76        LString(4)      Segment identifier, left-justified.\r\n    if (isPdbqt) {\r\n        TokenBuilder.addToken(sites.partial_charge, Tokenizer.trim(data, s + 70, s + 76));\r\n    }\r\n    else {\r\n        // ignored\r\n    }\r\n    // 77 - 78        LString(2)      Element symbol, right-justified.\r\n    if (length >= 78 && !isPdbqt) {\r\n        Tokenizer.trim(data, s + 76, s + 78);\r\n        if (data.tokenStart < data.tokenEnd) {\r\n            TokenBuilder.addToken(sites.type_symbol, data);\r\n        }\r\n        else {\r\n            guessElementSymbolTokens(sites.type_symbol, str, s + 12, s + 16);\r\n        }\r\n    }\r\n    else {\r\n        guessElementSymbolTokens(sites.type_symbol, str, s + 12, s + 16);\r\n    }\r\n    // 79 - 80        LString(2)    charge       Charge  on the atom.\r\n    // TODO\r\n    sites.pdbx_PDB_model_num[sites.index] = model;\r\n    sites.index++;\r\n}\r\n//# sourceMappingURL=atom-site.js.map"]},"metadata":{},"sourceType":"module"}