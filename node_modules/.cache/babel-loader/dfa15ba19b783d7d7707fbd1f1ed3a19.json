{"ast":null,"code":"/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __awaiter, __generator } from \"tslib\";\nimport { arrayFind } from '../../../mol-data/util';\nimport { StateObjectRef } from '../../../mol-state';\nimport { Task } from '../../../mol-task';\nimport { isProductionMode } from '../../../mol-util/debug';\nimport { objectForEach } from '../../../mol-util/object';\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { createStructureRepresentationParams } from '../../helpers/structure-representation-params';\nimport { StructureRepresentation3D } from '../../transforms/representation';\nimport { PresetStructureRepresentations } from './representation-preset';\nimport { arrayRemoveInPlace } from '../../../mol-util/array';\nimport { PluginConfig } from '../../../mol-plugin/config';\n\nvar StructureRepresentationBuilder =\n/** @class */\nfunction () {\n  function StructureRepresentationBuilder(plugin) {\n    var _this = this;\n\n    this.plugin = plugin;\n    this._providers = [];\n    this.providerMap = new Map();\n    this.defaultProvider = PresetStructureRepresentations.auto;\n    objectForEach(PresetStructureRepresentations, function (r) {\n      return _this.registerPreset(r);\n    });\n  }\n\n  Object.defineProperty(StructureRepresentationBuilder.prototype, \"dataState\", {\n    get: function () {\n      return this.plugin.state.data;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StructureRepresentationBuilder.prototype.resolveProvider = function (ref) {\n    var _a;\n\n    return typeof ref === 'string' ? (_a = PresetStructureRepresentations[ref]) !== null && _a !== void 0 ? _a : arrayFind(this._providers, function (p) {\n      return p.id === ref;\n    }) : ref;\n  };\n\n  StructureRepresentationBuilder.prototype.hasPreset = function (s) {\n    for (var _i = 0, _a = this._providers; _i < _a.length; _i++) {\n      var p = _a[_i];\n      if (!p.isApplicable || p.isApplicable(s, this.plugin)) return true;\n    }\n\n    return false;\n  };\n\n  Object.defineProperty(StructureRepresentationBuilder.prototype, \"providers\", {\n    get: function () {\n      return this._providers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StructureRepresentationBuilder.prototype.getPresets = function (s) {\n    if (!s) return this.providers;\n    var ret = [];\n\n    for (var _i = 0, _a = this._providers; _i < _a.length; _i++) {\n      var p = _a[_i];\n      if (p.isApplicable && !p.isApplicable(s, this.plugin)) continue;\n      ret.push(p);\n    }\n\n    return ret;\n  };\n\n  StructureRepresentationBuilder.prototype.getPresetSelect = function (s) {\n    var options = [];\n\n    for (var _i = 0, _a = this._providers; _i < _a.length; _i++) {\n      var p = _a[_i];\n      if (s && p.isApplicable && !p.isApplicable(s, this.plugin)) continue;\n      options.push([p.id, p.display.name, p.display.group]);\n    }\n\n    return PD.Select('auto', options);\n  };\n\n  StructureRepresentationBuilder.prototype.getPresetsWithOptions = function (s) {\n    var options = [];\n    var map = Object.create(null);\n\n    for (var _i = 0, _a = this._providers; _i < _a.length; _i++) {\n      var p = _a[_i];\n      if (p.isApplicable && !p.isApplicable(s, this.plugin)) continue;\n      options.push([p.id, p.display.name]);\n      map[p.id] = p.params ? PD.Group(p.params(s, this.plugin)) : PD.EmptyGroup();\n    }\n\n    if (options.length === 0) return PD.MappedStatic('', {\n      '': PD.EmptyGroup()\n    });\n    return PD.MappedStatic(options[0][0], map, {\n      options: options\n    });\n  };\n\n  StructureRepresentationBuilder.prototype.registerPreset = function (provider) {\n    if (this.providerMap.has(provider.id)) {\n      throw new Error(\"Representation provider with id '\" + provider.id + \"' already registered.\");\n    }\n\n    this._providers.push(provider);\n\n    this.providerMap.set(provider.id, provider);\n  };\n\n  StructureRepresentationBuilder.prototype.unregisterPreset = function (provider) {\n    this.providerMap.delete(provider.id);\n    arrayRemoveInPlace(this._providers, provider);\n  };\n\n  StructureRepresentationBuilder.prototype.applyPreset = function (parent, providerRef, params) {\n    var _this = this;\n\n    var _a;\n\n    var provider = this.resolveProvider(providerRef);\n    if (!provider) return;\n    var state = this.plugin.state.data;\n    var cell = StateObjectRef.resolveAndCheck(state, parent);\n\n    if (!cell) {\n      if (!isProductionMode) console.warn(\"Applying structure repr. provider to bad cell.\");\n      return;\n    }\n\n    var pd = ((_a = provider.params) === null || _a === void 0 ? void 0 : _a.call(provider, cell.obj, this.plugin)) || {};\n    var prms = params || (provider.params ? PD.getDefaultValues(pd) : {});\n    var defaults = this.plugin.config.get(PluginConfig.Structure.DefaultRepresentationPresetParams);\n    prms = PD.merge(pd, defaults, prms);\n    var task = Task.create(\"\" + provider.display.name, function () {\n      return provider.apply(cell, prms, _this.plugin);\n    });\n    return this.plugin.runTask(task);\n  };\n\n  StructureRepresentationBuilder.prototype.addRepresentation = function (structure, props, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var repr, selector;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            repr = this.dataState.build();\n            selector = this.buildRepresentation(repr, structure, props, options);\n            if (!selector) return [2\n            /*return*/\n            ];\n            return [4\n            /*yield*/\n            , repr.commit()];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , selector];\n        }\n      });\n    });\n  };\n\n  StructureRepresentationBuilder.prototype.buildRepresentation = function (builder, structure, props, options) {\n    var _a, _b;\n\n    if (!structure) return;\n    var data = (_b = (_a = StateObjectRef.resolveAndCheck(this.dataState, structure)) === null || _a === void 0 ? void 0 : _a.obj) === null || _b === void 0 ? void 0 : _b.data;\n    if (!data) return;\n    var params = createStructureRepresentationParams(this.plugin, data, props);\n    return (options === null || options === void 0 ? void 0 : options.tag) ? builder.to(structure).applyOrUpdateTagged(options.tag, StructureRepresentation3D, params, {\n      state: options === null || options === void 0 ? void 0 : options.initialState\n    }).selector : builder.to(structure).apply(StructureRepresentation3D, params, {\n      state: options === null || options === void 0 ? void 0 : options.initialState\n    }).selector;\n  };\n\n  return StructureRepresentationBuilder;\n}();\n\nexport { StructureRepresentationBuilder };","map":{"version":3,"sources":["../../../../src/mol-plugin-state/builder/structure/representation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __awaiter, __generator } from \"tslib\";\r\nimport { arrayFind } from '../../../mol-data/util';\r\nimport { StateObjectRef } from '../../../mol-state';\r\nimport { Task } from '../../../mol-task';\r\nimport { isProductionMode } from '../../../mol-util/debug';\r\nimport { objectForEach } from '../../../mol-util/object';\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { createStructureRepresentationParams } from '../../helpers/structure-representation-params';\r\nimport { StructureRepresentation3D } from '../../transforms/representation';\r\nimport { PresetStructureRepresentations } from './representation-preset';\r\nimport { arrayRemoveInPlace } from '../../../mol-util/array';\r\nimport { PluginConfig } from '../../../mol-plugin/config';\r\nvar StructureRepresentationBuilder = /** @class */ (function () {\r\n    function StructureRepresentationBuilder(plugin) {\r\n        var _this = this;\r\n        this.plugin = plugin;\r\n        this._providers = [];\r\n        this.providerMap = new Map();\r\n        this.defaultProvider = PresetStructureRepresentations.auto;\r\n        objectForEach(PresetStructureRepresentations, function (r) { return _this.registerPreset(r); });\r\n    }\r\n    Object.defineProperty(StructureRepresentationBuilder.prototype, \"dataState\", {\r\n        get: function () { return this.plugin.state.data; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StructureRepresentationBuilder.prototype.resolveProvider = function (ref) {\r\n        var _a;\r\n        return typeof ref === 'string'\r\n            ? (_a = PresetStructureRepresentations[ref]) !== null && _a !== void 0 ? _a : arrayFind(this._providers, function (p) { return p.id === ref; })\r\n            : ref;\r\n    };\r\n    StructureRepresentationBuilder.prototype.hasPreset = function (s) {\r\n        for (var _i = 0, _a = this._providers; _i < _a.length; _i++) {\r\n            var p = _a[_i];\r\n            if (!p.isApplicable || p.isApplicable(s, this.plugin))\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(StructureRepresentationBuilder.prototype, \"providers\", {\r\n        get: function () { return this._providers; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StructureRepresentationBuilder.prototype.getPresets = function (s) {\r\n        if (!s)\r\n            return this.providers;\r\n        var ret = [];\r\n        for (var _i = 0, _a = this._providers; _i < _a.length; _i++) {\r\n            var p = _a[_i];\r\n            if (p.isApplicable && !p.isApplicable(s, this.plugin))\r\n                continue;\r\n            ret.push(p);\r\n        }\r\n        return ret;\r\n    };\r\n    StructureRepresentationBuilder.prototype.getPresetSelect = function (s) {\r\n        var options = [];\r\n        for (var _i = 0, _a = this._providers; _i < _a.length; _i++) {\r\n            var p = _a[_i];\r\n            if (s && p.isApplicable && !p.isApplicable(s, this.plugin))\r\n                continue;\r\n            options.push([p.id, p.display.name, p.display.group]);\r\n        }\r\n        return PD.Select('auto', options);\r\n    };\r\n    StructureRepresentationBuilder.prototype.getPresetsWithOptions = function (s) {\r\n        var options = [];\r\n        var map = Object.create(null);\r\n        for (var _i = 0, _a = this._providers; _i < _a.length; _i++) {\r\n            var p = _a[_i];\r\n            if (p.isApplicable && !p.isApplicable(s, this.plugin))\r\n                continue;\r\n            options.push([p.id, p.display.name]);\r\n            map[p.id] = p.params ? PD.Group(p.params(s, this.plugin)) : PD.EmptyGroup();\r\n        }\r\n        if (options.length === 0)\r\n            return PD.MappedStatic('', { '': PD.EmptyGroup() });\r\n        return PD.MappedStatic(options[0][0], map, { options: options });\r\n    };\r\n    StructureRepresentationBuilder.prototype.registerPreset = function (provider) {\r\n        if (this.providerMap.has(provider.id)) {\r\n            throw new Error(\"Representation provider with id '\" + provider.id + \"' already registered.\");\r\n        }\r\n        this._providers.push(provider);\r\n        this.providerMap.set(provider.id, provider);\r\n    };\r\n    StructureRepresentationBuilder.prototype.unregisterPreset = function (provider) {\r\n        this.providerMap.delete(provider.id);\r\n        arrayRemoveInPlace(this._providers, provider);\r\n    };\r\n    StructureRepresentationBuilder.prototype.applyPreset = function (parent, providerRef, params) {\r\n        var _this = this;\r\n        var _a;\r\n        var provider = this.resolveProvider(providerRef);\r\n        if (!provider)\r\n            return;\r\n        var state = this.plugin.state.data;\r\n        var cell = StateObjectRef.resolveAndCheck(state, parent);\r\n        if (!cell) {\r\n            if (!isProductionMode)\r\n                console.warn(\"Applying structure repr. provider to bad cell.\");\r\n            return;\r\n        }\r\n        var pd = ((_a = provider.params) === null || _a === void 0 ? void 0 : _a.call(provider, cell.obj, this.plugin)) || {};\r\n        var prms = params || (provider.params\r\n            ? PD.getDefaultValues(pd)\r\n            : {});\r\n        var defaults = this.plugin.config.get(PluginConfig.Structure.DefaultRepresentationPresetParams);\r\n        prms = PD.merge(pd, defaults, prms);\r\n        var task = Task.create(\"\" + provider.display.name, function () { return provider.apply(cell, prms, _this.plugin); });\r\n        return this.plugin.runTask(task);\r\n    };\r\n    StructureRepresentationBuilder.prototype.addRepresentation = function (structure, props, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var repr, selector;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        repr = this.dataState.build();\r\n                        selector = this.buildRepresentation(repr, structure, props, options);\r\n                        if (!selector)\r\n                            return [2 /*return*/];\r\n                        return [4 /*yield*/, repr.commit()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, selector];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    StructureRepresentationBuilder.prototype.buildRepresentation = function (builder, structure, props, options) {\r\n        var _a, _b;\r\n        if (!structure)\r\n            return;\r\n        var data = (_b = (_a = StateObjectRef.resolveAndCheck(this.dataState, structure)) === null || _a === void 0 ? void 0 : _a.obj) === null || _b === void 0 ? void 0 : _b.data;\r\n        if (!data)\r\n            return;\r\n        var params = createStructureRepresentationParams(this.plugin, data, props);\r\n        return (options === null || options === void 0 ? void 0 : options.tag)\r\n            ? builder.to(structure).applyOrUpdateTagged(options.tag, StructureRepresentation3D, params, { state: options === null || options === void 0 ? void 0 : options.initialState }).selector\r\n            : builder.to(structure).apply(StructureRepresentation3D, params, { state: options === null || options === void 0 ? void 0 : options.initialState }).selector;\r\n    };\r\n    return StructureRepresentationBuilder;\r\n}());\r\nexport { StructureRepresentationBuilder };\r\n//# sourceMappingURL=representation.js.map"]},"metadata":{},"sourceType":"module"}