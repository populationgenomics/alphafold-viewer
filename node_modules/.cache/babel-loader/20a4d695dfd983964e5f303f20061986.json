{"ast":null,"code":"/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { Structure, StructureElement } from '../../../mol-model/structure';\nimport { Mesh } from '../../../mol-geo/geometry/mesh/mesh';\nimport { Vec3 } from '../../../mol-math/linear-algebra';\nimport { createLinkCylinderMesh, LinkCylinderParams } from '../../../mol-repr/structure/visual/util/link';\nimport { ComplexMeshParams, ComplexMeshVisual } from '../../../mol-repr/structure/complex-visual';\nimport { EmptyLoci } from '../../../mol-model/loci';\nimport { Interval, OrderedSet, SortedArray } from '../../../mol-data/int';\nimport { Interactions } from '../interactions/interactions';\nimport { InteractionsProvider } from '../interactions';\nimport { LocationIterator } from '../../../mol-geo/util/location-iterator';\nimport { Unit } from '../../../mol-model/structure/structure';\nimport { Sphere3D } from '../../../mol-math/geometry';\n\nfunction createInterUnitInteractionCylinderMesh(ctx, structure, theme, props, mesh) {\n  if (!structure.hasAtomic) return Mesh.createEmpty(mesh);\n  var l = StructureElement.Location.create(structure);\n  var interactions = InteractionsProvider.get(structure).value;\n  var contacts = interactions.contacts,\n      unitsFeatures = interactions.unitsFeatures;\n  var edgeCount = contacts.edgeCount,\n      edges = contacts.edges;\n  var sizeFactor = props.sizeFactor;\n  if (!edgeCount) return Mesh.createEmpty(mesh);\n  var child = structure.child;\n  var builderProps = {\n    linkCount: edgeCount,\n    position: function (posA, posB, edgeIndex) {\n      var _a = edges[edgeIndex],\n          unitA = _a.unitA,\n          indexA = _a.indexA,\n          unitB = _a.unitB,\n          indexB = _a.indexB;\n      var fA = unitsFeatures.get(unitA);\n      var fB = unitsFeatures.get(unitB);\n      var uA = structure.unitMap.get(unitA);\n      var uB = structure.unitMap.get(unitB);\n      Vec3.set(posA, fA.x[indexA], fA.y[indexA], fA.z[indexA]);\n      Vec3.transformMat4(posA, posA, uA.conformation.operator.matrix);\n      Vec3.set(posB, fB.x[indexB], fB.y[indexB], fB.z[indexB]);\n      Vec3.transformMat4(posB, posB, uB.conformation.operator.matrix);\n    },\n    style: function (edgeIndex) {\n      return 1\n      /* Dashed */\n      ;\n    },\n    radius: function (edgeIndex) {\n      var b = edges[edgeIndex];\n      var fA = unitsFeatures.get(b.unitA);\n      l.unit = structure.unitMap.get(b.unitA);\n      l.element = l.unit.elements[fA.members[fA.offsets[b.indexA]]];\n      var sizeA = theme.size.size(l);\n      var fB = unitsFeatures.get(b.unitB);\n      l.unit = structure.unitMap.get(b.unitB);\n      l.element = l.unit.elements[fB.members[fB.offsets[b.indexB]]];\n      var sizeB = theme.size.size(l);\n      return Math.min(sizeA, sizeB) * sizeFactor;\n    },\n    ignore: function (edgeIndex) {\n      if (edges[edgeIndex].props.flag === 1\n      /* Filtered */\n      ) return true;\n\n      if (child) {\n        var b = edges[edgeIndex];\n        var childUnitA = child.unitMap.get(b.unitA);\n        if (!childUnitA) return true;\n        var unitA = structure.unitMap.get(b.unitA);\n        var fA = unitsFeatures.get(b.unitA); // TODO: check all members\n\n        var eA = unitA.elements[fA.members[fA.offsets[b.indexA]]];\n        if (!SortedArray.has(childUnitA.elements, eA)) return true;\n      }\n\n      return false;\n    }\n  };\n  var m = createLinkCylinderMesh(ctx, builderProps, props, mesh);\n  var sphere = Sphere3D.expand(Sphere3D(), (child !== null && child !== void 0 ? child : structure).boundary.sphere, 1 * sizeFactor);\n  m.setBoundingSphere(sphere);\n  return m;\n}\n\nexport var InteractionsInterUnitParams = __assign(__assign(__assign({}, ComplexMeshParams), LinkCylinderParams), {\n  sizeFactor: PD.Numeric(0.3, {\n    min: 0,\n    max: 10,\n    step: 0.01\n  }),\n  dashCount: PD.Numeric(6, {\n    min: 2,\n    max: 10,\n    step: 2\n  }),\n  dashScale: PD.Numeric(0.4, {\n    min: 0,\n    max: 2,\n    step: 0.1\n  }),\n  includeParent: PD.Boolean(false)\n});\nexport function InteractionsInterUnitVisual(materialId) {\n  return ComplexMeshVisual({\n    defaultProps: PD.getDefaultValues(InteractionsInterUnitParams),\n    createGeometry: createInterUnitInteractionCylinderMesh,\n    createLocationIterator: createInteractionsIterator,\n    getLoci: getInteractionLoci,\n    eachLocation: eachInteraction,\n    setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\n      state.createGeometry = newProps.sizeFactor !== currentProps.sizeFactor || newProps.dashCount !== currentProps.dashCount || newProps.dashScale !== currentProps.dashScale || newProps.dashCap !== currentProps.dashCap || newProps.radialSegments !== currentProps.radialSegments;\n      var interactionsHash = InteractionsProvider.get(newStructure).version;\n\n      if (state.info.interactionsHash !== interactionsHash) {\n        state.createGeometry = true;\n        state.updateTransform = true;\n        state.updateColor = true;\n        state.info.interactionsHash = interactionsHash;\n      }\n    }\n  }, materialId);\n}\n\nfunction getInteractionLoci(pickingId, structure, id) {\n  var objectId = pickingId.objectId,\n      groupId = pickingId.groupId;\n\n  if (id === objectId) {\n    var interactions = InteractionsProvider.get(structure).value;\n    var c = interactions.contacts.edges[groupId];\n    var unitA = structure.unitMap.get(c.unitA);\n    var unitB = structure.unitMap.get(c.unitB);\n    return Interactions.Loci(structure, interactions, [{\n      unitA: unitA,\n      indexA: c.indexA,\n      unitB: unitB,\n      indexB: c.indexB\n    }, {\n      unitA: unitB,\n      indexA: c.indexB,\n      unitB: unitA,\n      indexB: c.indexA\n    }]);\n  }\n\n  return EmptyLoci;\n}\n\nfunction eachInteraction(loci, structure, apply, isMarking) {\n  var _a;\n\n  var changed = false;\n\n  if (Interactions.isLoci(loci)) {\n    if (!Structure.areEquivalent(loci.data.structure, structure)) return false;\n    var interactions = InteractionsProvider.get(structure).value;\n    if (loci.data.interactions !== interactions) return false;\n    var contacts = interactions.contacts;\n\n    for (var _i = 0, _b = loci.elements; _i < _b.length; _i++) {\n      var c = _b[_i];\n      var idx = contacts.getEdgeIndex(c.indexA, c.unitA.id, c.indexB, c.unitB.id);\n\n      if (idx !== -1) {\n        if (apply(Interval.ofSingleton(idx))) changed = true;\n      }\n    }\n  } else if (StructureElement.Loci.is(loci)) {\n    if (!Structure.areEquivalent(loci.structure, structure)) return false;\n    if (isMarking && loci.elements.length === 1) return false; // only a single unit\n\n    var contacts_1 = (_a = InteractionsProvider.get(structure).value) === null || _a === void 0 ? void 0 : _a.contacts;\n    if (!contacts_1) return false;\n\n    var _loop_1 = function (e) {\n      var unit = e.unit;\n      if (!Unit.isAtomic(unit)) return \"continue\";\n      if (isMarking && OrderedSet.size(e.indices) === 1) return \"continue\";\n      OrderedSet.forEach(e.indices, function (v) {\n        for (var _i = 0, _a = contacts_1.getContactIndicesForElement(v, unit); _i < _a.length; _i++) {\n          var idx = _a[_i];\n          if (apply(Interval.ofSingleton(idx))) changed = true;\n        }\n      });\n    }; // TODO when isMarking, all elements of contact features need to be in the loci\n\n\n    for (var _c = 0, _d = loci.elements; _c < _d.length; _c++) {\n      var e = _d[_c];\n\n      _loop_1(e);\n    }\n  }\n\n  return changed;\n}\n\nfunction createInteractionsIterator(structure) {\n  var interactions = InteractionsProvider.get(structure).value;\n  var contacts = interactions.contacts;\n  var groupCount = contacts.edgeCount;\n  var instanceCount = 1;\n  var location = Interactions.Location(interactions, structure);\n  var element = location.element;\n\n  var getLocation = function (groupIndex) {\n    var c = contacts.edges[groupIndex];\n    element.unitA = structure.unitMap.get(c.unitA);\n    element.indexA = c.indexA;\n    element.unitB = structure.unitMap.get(c.unitB);\n    element.indexB = c.indexB;\n    return location;\n  };\n\n  return LocationIterator(groupCount, instanceCount, 1, getLocation, true);\n}","map":{"version":3,"sources":["../../../../src/mol-model-props/computed/representations/interactions-inter-unit-cylinder.ts"],"names":[],"mappings":"AAAA;;;;AAIG;;AAEH,SAAS,eAAe,IAAI,EAA5B,QAAsC,oCAAtC;AAEA,SAAS,SAAT,EAAoB,gBAApB,QAA4C,8BAA5C;AAEA,SAAS,IAAT,QAAqB,qCAArB;AACA,SAAS,IAAT,QAAqB,kCAArB;AACA,SAAS,sBAAT,EAAiC,kBAAjC,QAAsE,8CAAtE;AACA,SAAS,iBAAT,EAA2C,iBAA3C,QAAoE,4CAApE;AAGA,SAAS,SAAT,QAAgC,yBAAhC;AACA,SAAS,QAAT,EAAmB,UAAnB,EAA+B,WAA/B,QAAkD,uBAAlD;AACA,SAAS,YAAT,QAA6B,8BAA7B;AACA,SAAS,oBAAT,QAAqC,iBAArC;AACA,SAAS,gBAAT,QAAiC,yCAAjC;AAEA,SAAS,IAAT,QAAqB,wCAArB;AACA,SAAS,QAAT,QAAyB,4BAAzB;;AAEA,SAAS,sCAAT,CAAgD,GAAhD,EAAoE,SAApE,EAA0F,KAA1F,EAAwG,KAAxG,EAAuJ,IAAvJ,EAAkK;AAC9J,MAAI,CAAC,SAAS,CAAC,SAAf,EAA0B,OAAO,IAAI,CAAC,WAAL,CAAiB,IAAjB,CAAP;AAE1B,MAAM,CAAC,GAAG,gBAAgB,CAAC,QAAjB,CAA0B,MAA1B,CAAiC,SAAjC,CAAV;AACA,MAAM,YAAY,GAAG,oBAAoB,CAAC,GAArB,CAAyB,SAAzB,EAAoC,KAAzD;AACQ,MAAA,QAAQ,GAAoB,YAAY,CAAhC,QAAR;AAAA,MAAU,aAAa,GAAK,YAAY,CAAjB,aAAvB;AAEA,MAAA,SAAS,GAAY,QAAQ,CAApB,SAAT;AAAA,MAAW,KAAK,GAAK,QAAQ,CAAb,KAAhB;AACA,MAAA,UAAU,GAAK,KAAK,CAAV,UAAV;AAER,MAAI,CAAC,SAAL,EAAgB,OAAO,IAAI,CAAC,WAAL,CAAiB,IAAjB,CAAP;AAER,MAAA,KAAK,GAAK,SAAS,CAAd,KAAL;AAER,MAAM,YAAY,GAAG;AACjB,IAAA,SAAS,EAAE,SADM;AAEjB,IAAA,QAAQ,EAAE,UAAC,IAAD,EAAa,IAAb,EAAyB,SAAzB,EAA0C;AAC1C,UAAA,EAAA,GAAmC,KAAK,CAAC,SAAD,CAAxC;AAAA,UAAE,KAAK,GAAA,EAAA,CAAA,KAAP;AAAA,UAAS,MAAM,GAAA,EAAA,CAAA,MAAf;AAAA,UAAiB,KAAK,GAAA,EAAA,CAAA,KAAtB;AAAA,UAAwB,MAAM,GAAA,EAAA,CAAA,MAA9B;AACN,UAAM,EAAE,GAAG,aAAa,CAAC,GAAd,CAAkB,KAAlB,CAAX;AACA,UAAM,EAAE,GAAG,aAAa,CAAC,GAAd,CAAkB,KAAlB,CAAX;AACA,UAAM,EAAE,GAAG,SAAS,CAAC,OAAV,CAAkB,GAAlB,CAAsB,KAAtB,CAAX;AACA,UAAM,EAAE,GAAG,SAAS,CAAC,OAAV,CAAkB,GAAlB,CAAsB,KAAtB,CAAX;AAEA,MAAA,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,EAAE,CAAC,CAAH,CAAK,MAAL,CAAf,EAA6B,EAAE,CAAC,CAAH,CAAK,MAAL,CAA7B,EAA2C,EAAE,CAAC,CAAH,CAAK,MAAL,CAA3C;AACA,MAAA,IAAI,CAAC,aAAL,CAAmB,IAAnB,EAAyB,IAAzB,EAA+B,EAAE,CAAC,YAAH,CAAgB,QAAhB,CAAyB,MAAxD;AAEA,MAAA,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,EAAE,CAAC,CAAH,CAAK,MAAL,CAAf,EAA6B,EAAE,CAAC,CAAH,CAAK,MAAL,CAA7B,EAA2C,EAAE,CAAC,CAAH,CAAK,MAAL,CAA3C;AACA,MAAA,IAAI,CAAC,aAAL,CAAmB,IAAnB,EAAyB,IAAzB,EAA+B,EAAE,CAAC,YAAH,CAAgB,QAAhB,CAAyB,MAAxD;AACH,KAdgB;AAejB,IAAA,KAAK,EAAE,UAAC,SAAD,EAAkB;AAAK,aAAA;AAAA;AAAA;AAAgB,KAf7B;AAgBjB,IAAA,MAAM,EAAE,UAAC,SAAD,EAAkB;AACtB,UAAM,CAAC,GAAG,KAAK,CAAC,SAAD,CAAf;AACA,UAAM,EAAE,GAAG,aAAa,CAAC,GAAd,CAAkB,CAAC,CAAC,KAApB,CAAX;AACA,MAAA,CAAC,CAAC,IAAF,GAAS,SAAS,CAAC,OAAV,CAAkB,GAAlB,CAAsB,CAAC,CAAC,KAAxB,CAAT;AACA,MAAA,CAAC,CAAC,OAAF,GAAY,CAAC,CAAC,IAAF,CAAO,QAAP,CAAgB,EAAE,CAAC,OAAH,CAAW,EAAE,CAAC,OAAH,CAAW,CAAC,CAAC,MAAb,CAAX,CAAhB,CAAZ;AACA,UAAM,KAAK,GAAG,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,CAAhB,CAAd;AACA,UAAM,EAAE,GAAG,aAAa,CAAC,GAAd,CAAkB,CAAC,CAAC,KAApB,CAAX;AACA,MAAA,CAAC,CAAC,IAAF,GAAS,SAAS,CAAC,OAAV,CAAkB,GAAlB,CAAsB,CAAC,CAAC,KAAxB,CAAT;AACA,MAAA,CAAC,CAAC,OAAF,GAAY,CAAC,CAAC,IAAF,CAAO,QAAP,CAAgB,EAAE,CAAC,OAAH,CAAW,EAAE,CAAC,OAAH,CAAW,CAAC,CAAC,MAAb,CAAX,CAAhB,CAAZ;AACA,UAAM,KAAK,GAAG,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,CAAhB,CAAd;AACA,aAAO,IAAI,CAAC,GAAL,CAAS,KAAT,EAAgB,KAAhB,IAAyB,UAAhC;AACH,KA3BgB;AA4BjB,IAAA,MAAM,EAAE,UAAC,SAAD,EAAkB;AACtB,UAAI,KAAK,CAAC,SAAD,CAAL,CAAiB,KAAjB,CAAuB,IAAvB,KAA2B;AAAA;AAA/B,QAA8D,OAAO,IAAP;;AAE9D,UAAI,KAAJ,EAAW;AACP,YAAM,CAAC,GAAG,KAAK,CAAC,SAAD,CAAf;AACA,YAAM,UAAU,GAAG,KAAK,CAAC,OAAN,CAAc,GAAd,CAAkB,CAAC,CAAC,KAApB,CAAnB;AACA,YAAI,CAAC,UAAL,EAAiB,OAAO,IAAP;AAEjB,YAAM,KAAK,GAAG,SAAS,CAAC,OAAV,CAAkB,GAAlB,CAAsB,CAAC,CAAC,KAAxB,CAAd;AACA,YAAM,EAAE,GAAG,aAAa,CAAC,GAAd,CAAkB,CAAC,CAAC,KAApB,CAAX,CANO,CAOP;;AACA,YAAM,EAAE,GAAG,KAAK,CAAC,QAAN,CAAe,EAAE,CAAC,OAAH,CAAW,EAAE,CAAC,OAAH,CAAW,CAAC,CAAC,MAAb,CAAX,CAAf,CAAX;AACA,YAAI,CAAC,WAAW,CAAC,GAAZ,CAAgB,UAAU,CAAC,QAA3B,EAAqC,EAArC,CAAL,EAA+C,OAAO,IAAP;AAClD;;AAED,aAAO,KAAP;AACH;AA5CgB,GAArB;AA+CA,MAAM,CAAC,GAAG,sBAAsB,CAAC,GAAD,EAAM,YAAN,EAAoB,KAApB,EAA2B,IAA3B,CAAhC;AAEA,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAT,CAAgB,QAAQ,EAAxB,EAA4B,CAAC,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAA,KAAA,GAAS,SAAV,EAAqB,QAArB,CAA8B,MAA1D,EAAkE,IAAI,UAAtE,CAAf;AACA,EAAA,CAAC,CAAC,iBAAF,CAAoB,MAApB;AAEA,SAAO,CAAP;AACH;;AAED,OAAO,IAAM,2BAA2B,GAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACjC,iBADiC,CAAA,EAEjC,kBAFiC,CAAA,EAEf;AACrB,EAAA,UAAU,EAAE,EAAE,CAAC,OAAH,CAAW,GAAX,EAAgB;AAAE,IAAA,GAAG,EAAE,CAAP;AAAU,IAAA,GAAG,EAAE,EAAf;AAAmB,IAAA,IAAI,EAAE;AAAzB,GAAhB,CADS;AAErB,EAAA,SAAS,EAAE,EAAE,CAAC,OAAH,CAAW,CAAX,EAAc;AAAE,IAAA,GAAG,EAAE,CAAP;AAAU,IAAA,GAAG,EAAE,EAAf;AAAmB,IAAA,IAAI,EAAE;AAAzB,GAAd,CAFU;AAGrB,EAAA,SAAS,EAAE,EAAE,CAAC,OAAH,CAAW,GAAX,EAAgB;AAAE,IAAA,GAAG,EAAE,CAAP;AAAU,IAAA,GAAG,EAAE,CAAf;AAAkB,IAAA,IAAI,EAAE;AAAxB,GAAhB,CAHU;AAIrB,EAAA,aAAa,EAAE,EAAE,CAAC,OAAH,CAAW,KAAX;AAJM,CAFe,CAAjC;AAUP,OAAM,SAAU,2BAAV,CAAsC,UAAtC,EAAwD;AAC1D,SAAO,iBAAiB,CAA8B;AAClD,IAAA,YAAY,EAAE,EAAE,CAAC,gBAAH,CAAoB,2BAApB,CADoC;AAElD,IAAA,cAAc,EAAE,sCAFkC;AAGlD,IAAA,sBAAsB,EAAE,0BAH0B;AAIlD,IAAA,OAAO,EAAE,kBAJyC;AAKlD,IAAA,YAAY,EAAE,eALoC;AAMlD,IAAA,cAAc,EAAE,UAAC,KAAD,EAA2B,QAA3B,EAA6E,YAA7E,EAAmI,QAAnI,EAAoJ,YAApJ,EAAyK,YAAzK,EAAkM,gBAAlM,EAA6N;AACzO,MAAA,KAAK,CAAC,cAAN,GACI,QAAQ,CAAC,UAAT,KAAwB,YAAY,CAAC,UAArC,IACA,QAAQ,CAAC,SAAT,KAAuB,YAAY,CAAC,SADpC,IAEA,QAAQ,CAAC,SAAT,KAAuB,YAAY,CAAC,SAFpC,IAGA,QAAQ,CAAC,OAAT,KAAqB,YAAY,CAAC,OAHlC,IAIA,QAAQ,CAAC,cAAT,KAA4B,YAAY,CAAC,cAL7C;AAQA,UAAM,gBAAgB,GAAG,oBAAoB,CAAC,GAArB,CAAyB,YAAzB,EAAuC,OAAhE;;AACA,UAAK,KAAK,CAAC,IAAN,CAAW,gBAAX,KAA2C,gBAAhD,EAAkE;AAC9D,QAAA,KAAK,CAAC,cAAN,GAAuB,IAAvB;AACA,QAAA,KAAK,CAAC,eAAN,GAAwB,IAAxB;AACA,QAAA,KAAK,CAAC,WAAN,GAAoB,IAApB;AACA,QAAA,KAAK,CAAC,IAAN,CAAW,gBAAX,GAA8B,gBAA9B;AACH;AACJ;AAtBiD,GAA9B,EAuBrB,UAvBqB,CAAxB;AAwBH;;AAED,SAAS,kBAAT,CAA4B,SAA5B,EAAkD,SAAlD,EAAwE,EAAxE,EAAkF;AACtE,MAAA,QAAQ,GAAc,SAAS,CAAvB,QAAR;AAAA,MAAU,OAAO,GAAK,SAAS,CAAd,OAAjB;;AACR,MAAI,EAAE,KAAK,QAAX,EAAqB;AACjB,QAAM,YAAY,GAAG,oBAAoB,CAAC,GAArB,CAAyB,SAAzB,EAAoC,KAAzD;AACA,QAAM,CAAC,GAAG,YAAY,CAAC,QAAb,CAAsB,KAAtB,CAA4B,OAA5B,CAAV;AACA,QAAM,KAAK,GAAG,SAAS,CAAC,OAAV,CAAkB,GAAlB,CAAsB,CAAC,CAAC,KAAxB,CAAd;AACA,QAAM,KAAK,GAAG,SAAS,CAAC,OAAV,CAAkB,GAAlB,CAAsB,CAAC,CAAC,KAAxB,CAAd;AACA,WAAO,YAAY,CAAC,IAAb,CAAkB,SAAlB,EAA6B,YAA7B,EAA2C,CAC9C;AAAE,MAAA,KAAK,EAAE,KAAT;AAAgB,MAAA,MAAM,EAAE,CAAC,CAAC,MAA1B;AAAkC,MAAA,KAAK,EAAE,KAAzC;AAAgD,MAAA,MAAM,EAAE,CAAC,CAAC;AAA1D,KAD8C,EAE9C;AAAE,MAAA,KAAK,EAAE,KAAT;AAAgB,MAAA,MAAM,EAAE,CAAC,CAAC,MAA1B;AAAkC,MAAA,KAAK,EAAE,KAAzC;AAAgD,MAAA,MAAM,EAAE,CAAC,CAAC;AAA1D,KAF8C,CAA3C,CAAP;AAIH;;AACD,SAAO,SAAP;AACH;;AAED,SAAS,eAAT,CAAyB,IAAzB,EAAqC,SAArC,EAA2D,KAA3D,EAAmG,SAAnG,EAAqH;;;AACjH,MAAI,OAAO,GAAG,KAAd;;AACA,MAAI,YAAY,CAAC,MAAb,CAAoB,IAApB,CAAJ,EAA+B;AAC3B,QAAI,CAAC,SAAS,CAAC,aAAV,CAAwB,IAAI,CAAC,IAAL,CAAU,SAAlC,EAA6C,SAA7C,CAAL,EAA8D,OAAO,KAAP;AAC9D,QAAM,YAAY,GAAG,oBAAoB,CAAC,GAArB,CAAyB,SAAzB,EAAoC,KAAzD;AACA,QAAI,IAAI,CAAC,IAAL,CAAU,YAAV,KAA2B,YAA/B,EAA6C,OAAO,KAAP;AACrC,QAAA,QAAQ,GAAK,YAAY,CAAjB,QAAR;;AAER,SAAgB,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,IAAI,CAAC,QAArB,EAAgB,EAAA,GAAA,EAAA,CAAA,MAAhB,EAAgB,EAAA,EAAhB,EAA+B;AAA1B,UAAM,CAAC,GAAA,EAAA,CAAA,EAAA,CAAP;AACD,UAAM,GAAG,GAAG,QAAQ,CAAC,YAAT,CAAsB,CAAC,CAAC,MAAxB,EAAgC,CAAC,CAAC,KAAF,CAAQ,EAAxC,EAA4C,CAAC,CAAC,MAA9C,EAAsD,CAAC,CAAC,KAAF,CAAQ,EAA9D,CAAZ;;AACA,UAAI,GAAG,KAAK,CAAC,CAAb,EAAgB;AACZ,YAAI,KAAK,CAAC,QAAQ,CAAC,WAAT,CAAqB,GAArB,CAAD,CAAT,EAAsC,OAAO,GAAG,IAAV;AACzC;AACJ;AACJ,GAZD,MAYO,IAAI,gBAAgB,CAAC,IAAjB,CAAsB,EAAtB,CAAyB,IAAzB,CAAJ,EAAoC;AACvC,QAAI,CAAC,SAAS,CAAC,aAAV,CAAwB,IAAI,CAAC,SAA7B,EAAwC,SAAxC,CAAL,EAAyD,OAAO,KAAP;AACzD,QAAI,SAAS,IAAI,IAAI,CAAC,QAAL,CAAc,MAAd,KAAyB,CAA1C,EAA6C,OAAO,KAAP,CAFN,CAEoB;;AAE3D,QAAM,UAAQ,GAAG,CAAA,EAAA,GAAA,oBAAoB,CAAC,GAArB,CAAyB,SAAzB,EAAoC,KAApC,MAAyC,IAAzC,IAAyC,EAAA,KAAA,KAAA,CAAzC,GAAyC,KAAA,CAAzC,GAAyC,EAAA,CAAE,QAA5D;AACA,QAAI,CAAC,UAAL,EAAe,OAAO,KAAP;;4BAGJ,C,EAAC;AACA,UAAA,IAAI,GAAK,CAAC,CAAN,IAAJ;AACR,UAAI,CAAC,IAAI,CAAC,QAAL,CAAc,IAAd,CAAL,E,OAAmC,U;AACnC,UAAI,SAAS,IAAI,UAAU,CAAC,IAAX,CAAgB,CAAC,CAAC,OAAlB,MAA+B,CAAhD,E,OAA4D,U;AAE5D,MAAA,UAAU,CAAC,OAAX,CAAmB,CAAC,CAAC,OAArB,EAA8B,UAAA,CAAA,EAAC;AAC3B,aAAkB,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,UAAQ,CAAC,2BAAT,CAAqC,CAArC,EAAwC,IAAxC,CAAlB,EAAkB,EAAA,GAAA,EAAA,CAAA,MAAlB,EAAkB,EAAA,EAAlB,EAAiE;AAA5D,cAAM,GAAG,GAAA,EAAA,CAAA,EAAA,CAAT;AACD,cAAI,KAAK,CAAC,QAAQ,CAAC,WAAT,CAAqB,GAArB,CAAD,CAAT,EAAsC,OAAO,GAAG,IAAV;AACzC;AACJ,OAJD;MAbmC,CAOvC;;;AACA,SAAgB,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,IAAI,CAAC,QAArB,EAAgB,EAAA,GAAA,EAAA,CAAA,MAAhB,EAAgB,EAAA,EAAhB,EAA6B;AAAxB,UAAM,CAAC,GAAA,EAAA,CAAA,EAAA,CAAP;;cAAM,C;AAUV;AACJ;;AACD,SAAO,OAAP;AACH;;AAED,SAAS,0BAAT,CAAoC,SAApC,EAAwD;AACpD,MAAM,YAAY,GAAG,oBAAoB,CAAC,GAArB,CAAyB,SAAzB,EAAoC,KAAzD;AACQ,MAAA,QAAQ,GAAK,YAAY,CAAjB,QAAR;AACR,MAAM,UAAU,GAAG,QAAQ,CAAC,SAA5B;AACA,MAAM,aAAa,GAAG,CAAtB;AACA,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAb,CAAsB,YAAtB,EAAoC,SAApC,CAAjB;AACQ,MAAA,OAAO,GAAK,QAAQ,CAAb,OAAP;;AACR,MAAM,WAAW,GAAG,UAAC,UAAD,EAAmB;AACnC,QAAM,CAAC,GAAG,QAAQ,CAAC,KAAT,CAAe,UAAf,CAAV;AACA,IAAA,OAAO,CAAC,KAAR,GAAgB,SAAS,CAAC,OAAV,CAAkB,GAAlB,CAAsB,CAAC,CAAC,KAAxB,CAAhB;AACA,IAAA,OAAO,CAAC,MAAR,GAAiB,CAAC,CAAC,MAAnB;AACA,IAAA,OAAO,CAAC,KAAR,GAAgB,SAAS,CAAC,OAAV,CAAkB,GAAlB,CAAsB,CAAC,CAAC,KAAxB,CAAhB;AACA,IAAA,OAAO,CAAC,MAAR,GAAiB,CAAC,CAAC,MAAnB;AACA,WAAO,QAAP;AACH,GAPD;;AAQA,SAAO,gBAAgB,CAAC,UAAD,EAAa,aAAb,EAA4B,CAA5B,EAA+B,WAA/B,EAA4C,IAA5C,CAAvB;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { Structure, StructureElement } from '../../../mol-model/structure';\r\nimport { Mesh } from '../../../mol-geo/geometry/mesh/mesh';\r\nimport { Vec3 } from '../../../mol-math/linear-algebra';\r\nimport { createLinkCylinderMesh, LinkCylinderParams } from '../../../mol-repr/structure/visual/util/link';\r\nimport { ComplexMeshParams, ComplexMeshVisual } from '../../../mol-repr/structure/complex-visual';\r\nimport { EmptyLoci } from '../../../mol-model/loci';\r\nimport { Interval, OrderedSet, SortedArray } from '../../../mol-data/int';\r\nimport { Interactions } from '../interactions/interactions';\r\nimport { InteractionsProvider } from '../interactions';\r\nimport { LocationIterator } from '../../../mol-geo/util/location-iterator';\r\nimport { Unit } from '../../../mol-model/structure/structure';\r\nimport { Sphere3D } from '../../../mol-math/geometry';\r\nfunction createInterUnitInteractionCylinderMesh(ctx, structure, theme, props, mesh) {\r\n    if (!structure.hasAtomic)\r\n        return Mesh.createEmpty(mesh);\r\n    var l = StructureElement.Location.create(structure);\r\n    var interactions = InteractionsProvider.get(structure).value;\r\n    var contacts = interactions.contacts, unitsFeatures = interactions.unitsFeatures;\r\n    var edgeCount = contacts.edgeCount, edges = contacts.edges;\r\n    var sizeFactor = props.sizeFactor;\r\n    if (!edgeCount)\r\n        return Mesh.createEmpty(mesh);\r\n    var child = structure.child;\r\n    var builderProps = {\r\n        linkCount: edgeCount,\r\n        position: function (posA, posB, edgeIndex) {\r\n            var _a = edges[edgeIndex], unitA = _a.unitA, indexA = _a.indexA, unitB = _a.unitB, indexB = _a.indexB;\r\n            var fA = unitsFeatures.get(unitA);\r\n            var fB = unitsFeatures.get(unitB);\r\n            var uA = structure.unitMap.get(unitA);\r\n            var uB = structure.unitMap.get(unitB);\r\n            Vec3.set(posA, fA.x[indexA], fA.y[indexA], fA.z[indexA]);\r\n            Vec3.transformMat4(posA, posA, uA.conformation.operator.matrix);\r\n            Vec3.set(posB, fB.x[indexB], fB.y[indexB], fB.z[indexB]);\r\n            Vec3.transformMat4(posB, posB, uB.conformation.operator.matrix);\r\n        },\r\n        style: function (edgeIndex) { return 1 /* Dashed */; },\r\n        radius: function (edgeIndex) {\r\n            var b = edges[edgeIndex];\r\n            var fA = unitsFeatures.get(b.unitA);\r\n            l.unit = structure.unitMap.get(b.unitA);\r\n            l.element = l.unit.elements[fA.members[fA.offsets[b.indexA]]];\r\n            var sizeA = theme.size.size(l);\r\n            var fB = unitsFeatures.get(b.unitB);\r\n            l.unit = structure.unitMap.get(b.unitB);\r\n            l.element = l.unit.elements[fB.members[fB.offsets[b.indexB]]];\r\n            var sizeB = theme.size.size(l);\r\n            return Math.min(sizeA, sizeB) * sizeFactor;\r\n        },\r\n        ignore: function (edgeIndex) {\r\n            if (edges[edgeIndex].props.flag === 1 /* Filtered */)\r\n                return true;\r\n            if (child) {\r\n                var b = edges[edgeIndex];\r\n                var childUnitA = child.unitMap.get(b.unitA);\r\n                if (!childUnitA)\r\n                    return true;\r\n                var unitA = structure.unitMap.get(b.unitA);\r\n                var fA = unitsFeatures.get(b.unitA);\r\n                // TODO: check all members\r\n                var eA = unitA.elements[fA.members[fA.offsets[b.indexA]]];\r\n                if (!SortedArray.has(childUnitA.elements, eA))\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    var m = createLinkCylinderMesh(ctx, builderProps, props, mesh);\r\n    var sphere = Sphere3D.expand(Sphere3D(), (child !== null && child !== void 0 ? child : structure).boundary.sphere, 1 * sizeFactor);\r\n    m.setBoundingSphere(sphere);\r\n    return m;\r\n}\r\nexport var InteractionsInterUnitParams = __assign(__assign(__assign({}, ComplexMeshParams), LinkCylinderParams), { sizeFactor: PD.Numeric(0.3, { min: 0, max: 10, step: 0.01 }), dashCount: PD.Numeric(6, { min: 2, max: 10, step: 2 }), dashScale: PD.Numeric(0.4, { min: 0, max: 2, step: 0.1 }), includeParent: PD.Boolean(false) });\r\nexport function InteractionsInterUnitVisual(materialId) {\r\n    return ComplexMeshVisual({\r\n        defaultProps: PD.getDefaultValues(InteractionsInterUnitParams),\r\n        createGeometry: createInterUnitInteractionCylinderMesh,\r\n        createLocationIterator: createInteractionsIterator,\r\n        getLoci: getInteractionLoci,\r\n        eachLocation: eachInteraction,\r\n        setUpdateState: function (state, newProps, currentProps, newTheme, currentTheme, newStructure, currentStructure) {\r\n            state.createGeometry = (newProps.sizeFactor !== currentProps.sizeFactor ||\r\n                newProps.dashCount !== currentProps.dashCount ||\r\n                newProps.dashScale !== currentProps.dashScale ||\r\n                newProps.dashCap !== currentProps.dashCap ||\r\n                newProps.radialSegments !== currentProps.radialSegments);\r\n            var interactionsHash = InteractionsProvider.get(newStructure).version;\r\n            if (state.info.interactionsHash !== interactionsHash) {\r\n                state.createGeometry = true;\r\n                state.updateTransform = true;\r\n                state.updateColor = true;\r\n                state.info.interactionsHash = interactionsHash;\r\n            }\r\n        }\r\n    }, materialId);\r\n}\r\nfunction getInteractionLoci(pickingId, structure, id) {\r\n    var objectId = pickingId.objectId, groupId = pickingId.groupId;\r\n    if (id === objectId) {\r\n        var interactions = InteractionsProvider.get(structure).value;\r\n        var c = interactions.contacts.edges[groupId];\r\n        var unitA = structure.unitMap.get(c.unitA);\r\n        var unitB = structure.unitMap.get(c.unitB);\r\n        return Interactions.Loci(structure, interactions, [\r\n            { unitA: unitA, indexA: c.indexA, unitB: unitB, indexB: c.indexB },\r\n            { unitA: unitB, indexA: c.indexB, unitB: unitA, indexB: c.indexA },\r\n        ]);\r\n    }\r\n    return EmptyLoci;\r\n}\r\nfunction eachInteraction(loci, structure, apply, isMarking) {\r\n    var _a;\r\n    var changed = false;\r\n    if (Interactions.isLoci(loci)) {\r\n        if (!Structure.areEquivalent(loci.data.structure, structure))\r\n            return false;\r\n        var interactions = InteractionsProvider.get(structure).value;\r\n        if (loci.data.interactions !== interactions)\r\n            return false;\r\n        var contacts = interactions.contacts;\r\n        for (var _i = 0, _b = loci.elements; _i < _b.length; _i++) {\r\n            var c = _b[_i];\r\n            var idx = contacts.getEdgeIndex(c.indexA, c.unitA.id, c.indexB, c.unitB.id);\r\n            if (idx !== -1) {\r\n                if (apply(Interval.ofSingleton(idx)))\r\n                    changed = true;\r\n            }\r\n        }\r\n    }\r\n    else if (StructureElement.Loci.is(loci)) {\r\n        if (!Structure.areEquivalent(loci.structure, structure))\r\n            return false;\r\n        if (isMarking && loci.elements.length === 1)\r\n            return false; // only a single unit\r\n        var contacts_1 = (_a = InteractionsProvider.get(structure).value) === null || _a === void 0 ? void 0 : _a.contacts;\r\n        if (!contacts_1)\r\n            return false;\r\n        var _loop_1 = function (e) {\r\n            var unit = e.unit;\r\n            if (!Unit.isAtomic(unit))\r\n                return \"continue\";\r\n            if (isMarking && OrderedSet.size(e.indices) === 1)\r\n                return \"continue\";\r\n            OrderedSet.forEach(e.indices, function (v) {\r\n                for (var _i = 0, _a = contacts_1.getContactIndicesForElement(v, unit); _i < _a.length; _i++) {\r\n                    var idx = _a[_i];\r\n                    if (apply(Interval.ofSingleton(idx)))\r\n                        changed = true;\r\n                }\r\n            });\r\n        };\r\n        // TODO when isMarking, all elements of contact features need to be in the loci\r\n        for (var _c = 0, _d = loci.elements; _c < _d.length; _c++) {\r\n            var e = _d[_c];\r\n            _loop_1(e);\r\n        }\r\n    }\r\n    return changed;\r\n}\r\nfunction createInteractionsIterator(structure) {\r\n    var interactions = InteractionsProvider.get(structure).value;\r\n    var contacts = interactions.contacts;\r\n    var groupCount = contacts.edgeCount;\r\n    var instanceCount = 1;\r\n    var location = Interactions.Location(interactions, structure);\r\n    var element = location.element;\r\n    var getLocation = function (groupIndex) {\r\n        var c = contacts.edges[groupIndex];\r\n        element.unitA = structure.unitMap.get(c.unitA);\r\n        element.indexA = c.indexA;\r\n        element.unitB = structure.unitMap.get(c.unitB);\r\n        element.indexB = c.indexB;\r\n        return location;\r\n    };\r\n    return LocationIterator(groupCount, instanceCount, 1, getLocation, true);\r\n}\r\n//# sourceMappingURL=interactions-inter-unit-cylinder.js.map"]},"metadata":{},"sourceType":"module"}