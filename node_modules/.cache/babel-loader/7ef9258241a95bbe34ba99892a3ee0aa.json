{"ast":null,"code":"/**\r\n * Copyright (c) 2020-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { StateObjectRef, StateTransformer } from '../../../mol-state';\nimport { StateTransforms } from '../../transforms';\nimport { RootStructureDefinition } from '../../helpers/root-structure';\nimport { StructureRepresentationPresetProvider } from './representation-preset';\nimport { Vec3 } from '../../../mol-math/linear-algebra';\nimport { Model } from '../../../mol-model/structure';\nimport { getStructureQuality } from '../../../mol-repr/util';\nimport { OperatorNameColorThemeProvider } from '../../../mol-theme/color/operator-name';\nexport function TrajectoryHierarchyPresetProvider(preset) {\n  return preset;\n}\n\n(function (TrajectoryHierarchyPresetProvider) {\n  TrajectoryHierarchyPresetProvider.CommonParams = function (a, plugin) {\n    return {\n      modelProperties: PD.Optional(PD.Group(StateTransformer.getParamDefinition(StateTransforms.Model.CustomModelProperties, void 0, plugin))),\n      structureProperties: PD.Optional(PD.Group(StateTransformer.getParamDefinition(StateTransforms.Model.CustomStructureProperties, void 0, plugin))),\n      representationPreset: PD.Optional(PD.Text('auto'))\n    };\n  };\n})(TrajectoryHierarchyPresetProvider || (TrajectoryHierarchyPresetProvider = {}));\n\nvar CommonParams = TrajectoryHierarchyPresetProvider.CommonParams;\n\nvar DefaultParams = function (a, plugin) {\n  return __assign({\n    model: PD.Optional(PD.Group(StateTransformer.getParamDefinition(StateTransforms.Model.ModelFromTrajectory, a, plugin))),\n    showUnitcell: PD.Optional(PD.Boolean(false)),\n    structure: PD.Optional(RootStructureDefinition.getParams(void 0, 'assembly').type),\n    representationPresetParams: PD.Optional(PD.Group(StructureRepresentationPresetProvider.CommonParams))\n  }, CommonParams(a, plugin));\n};\n\nvar defaultPreset = TrajectoryHierarchyPresetProvider({\n  id: 'preset-trajectory-default',\n  display: {\n    name: 'Default (Assembly)',\n    group: 'Preset',\n    description: 'Shows the first assembly or, if that is unavailable, the first model.'\n  },\n  isApplicable: function (o) {\n    return true;\n  },\n  params: DefaultParams,\n  apply: function (trajectory, params, plugin) {\n    return __awaiter(this, void 0, void 0, function () {\n      var builder, model, modelProperties, structure, structureProperties, unitcell, _a, representation;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            builder = plugin.builders.structure;\n            return [4\n            /*yield*/\n            , builder.createModel(trajectory, params.model)];\n\n          case 1:\n            model = _b.sent();\n            return [4\n            /*yield*/\n            , builder.insertModelProperties(model, params.modelProperties)];\n\n          case 2:\n            modelProperties = _b.sent();\n            return [4\n            /*yield*/\n            , builder.createStructure(modelProperties || model, params.structure)];\n\n          case 3:\n            structure = _b.sent();\n            return [4\n            /*yield*/\n            , builder.insertStructureProperties(structure, params.structureProperties)];\n\n          case 4:\n            structureProperties = _b.sent();\n            if (!(params.showUnitcell === void 0 || !!params.showUnitcell)) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , builder.tryCreateUnitcell(modelProperties, undefined, {\n              isHidden: true\n            })];\n\n          case 5:\n            _a = _b.sent();\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            _a = void 0;\n            _b.label = 7;\n\n          case 7:\n            unitcell = _a;\n            return [4\n            /*yield*/\n            , plugin.builders.structure.representation.applyPreset(structureProperties, params.representationPreset || 'auto', params.representationPresetParams)];\n\n          case 8:\n            representation = _b.sent();\n            return [2\n            /*return*/\n            , {\n              model: model,\n              modelProperties: modelProperties,\n              unitcell: unitcell,\n              structure: structure,\n              structureProperties: structureProperties,\n              representation: representation\n            }];\n        }\n      });\n    });\n  }\n});\n\nvar AllModelsParams = function (a, plugin) {\n  return __assign({\n    useDefaultIfSingleModel: PD.Optional(PD.Boolean(false)),\n    representationPresetParams: PD.Optional(PD.Group(StructureRepresentationPresetProvider.CommonParams))\n  }, CommonParams(a, plugin));\n};\n\nvar allModels = TrajectoryHierarchyPresetProvider({\n  id: 'preset-trajectory-all-models',\n  display: {\n    name: 'All Models',\n    group: 'Preset',\n    description: 'Shows all models; colored by model-index.'\n  },\n  isApplicable: function (o) {\n    return o.data.frameCount > 1;\n  },\n  params: AllModelsParams,\n  apply: function (trajectory, params, plugin) {\n    var _a, _b;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var tr, builder, models, structures, i, model, modelProperties, structure, structureProperties, quality;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            tr = (_b = (_a = StateObjectRef.resolveAndCheck(plugin.state.data, trajectory)) === null || _a === void 0 ? void 0 : _a.obj) === null || _b === void 0 ? void 0 : _b.data;\n            if (!tr) return [2\n            /*return*/\n            , {}];\n\n            if (tr.frameCount === 1 && params.useDefaultIfSingleModel) {\n              return [2\n              /*return*/\n              , defaultPreset.apply(trajectory, params, plugin)];\n            }\n\n            builder = plugin.builders.structure;\n            models = [], structures = [];\n            i = 0;\n            _c.label = 1;\n\n          case 1:\n            if (!(i < tr.frameCount)) return [3\n            /*break*/\n            , 8];\n            return [4\n            /*yield*/\n            , builder.createModel(trajectory, {\n              modelIndex: i\n            })];\n\n          case 2:\n            model = _c.sent();\n            return [4\n            /*yield*/\n            , builder.insertModelProperties(model, params.modelProperties, {\n              isCollapsed: true\n            })];\n\n          case 3:\n            modelProperties = _c.sent();\n            return [4\n            /*yield*/\n            , builder.createStructure(modelProperties || model, {\n              name: 'model',\n              params: {}\n            })];\n\n          case 4:\n            structure = _c.sent();\n            return [4\n            /*yield*/\n            , builder.insertStructureProperties(structure, params.structureProperties)];\n\n          case 5:\n            structureProperties = _c.sent();\n            models.push(model);\n            structures.push(structure);\n            quality = structure.obj ? getStructureQuality(structure.obj.data, {\n              elementCountFactor: tr.frameCount\n            }) : 'medium';\n            return [4\n            /*yield*/\n            , builder.representation.applyPreset(structureProperties, params.representationPreset || 'auto', {\n              theme: {\n                globalName: 'model-index'\n              },\n              quality: quality\n            })];\n\n          case 6:\n            _c.sent();\n\n            _c.label = 7;\n\n          case 7:\n            i++;\n            return [3\n            /*break*/\n            , 1];\n\n          case 8:\n            return [2\n            /*return*/\n            , {\n              models: models,\n              structures: structures\n            }];\n        }\n      });\n    });\n  }\n});\n\nvar CrystalSymmetryParams = function (a, plugin) {\n  return __assign({\n    model: PD.Optional(PD.Group(StateTransformer.getParamDefinition(StateTransforms.Model.ModelFromTrajectory, a, plugin)))\n  }, CommonParams(a, plugin));\n};\n\nfunction applyCrystalSymmetry(props, trajectory, params, plugin) {\n  return __awaiter(this, void 0, void 0, function () {\n    var builder, model, modelProperties, structure, structureProperties, unitcell, representation;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          builder = plugin.builders.structure;\n          return [4\n          /*yield*/\n          , builder.createModel(trajectory, params.model)];\n\n        case 1:\n          model = _a.sent();\n          return [4\n          /*yield*/\n          , builder.insertModelProperties(model, params.modelProperties)];\n\n        case 2:\n          modelProperties = _a.sent();\n          return [4\n          /*yield*/\n          , builder.createStructure(modelProperties || model, {\n            name: 'symmetry',\n            params: props\n          })];\n\n        case 3:\n          structure = _a.sent();\n          return [4\n          /*yield*/\n          , builder.insertStructureProperties(structure, params.structureProperties)];\n\n        case 4:\n          structureProperties = _a.sent();\n          return [4\n          /*yield*/\n          , builder.tryCreateUnitcell(modelProperties, undefined, {\n            isHidden: false\n          })];\n\n        case 5:\n          unitcell = _a.sent();\n          return [4\n          /*yield*/\n          , plugin.builders.structure.representation.applyPreset(structureProperties, params.representationPreset || 'auto', {\n            theme: {\n              globalName: props.theme\n            }\n          })];\n\n        case 6:\n          representation = _a.sent();\n          return [2\n          /*return*/\n          , {\n            model: model,\n            modelProperties: modelProperties,\n            unitcell: unitcell,\n            structure: structure,\n            structureProperties: structureProperties,\n            representation: representation\n          }];\n      }\n    });\n  });\n}\n\nvar unitcell = TrajectoryHierarchyPresetProvider({\n  id: 'preset-trajectory-unitcell',\n  display: {\n    name: 'Unit Cell',\n    group: 'Preset',\n    description: 'Shows the fully populated unit cell.'\n  },\n  isApplicable: function (o) {\n    return Model.hasCrystalSymmetry(o.data.representative);\n  },\n  params: CrystalSymmetryParams,\n  apply: function (trajectory, params, plugin) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , applyCrystalSymmetry({\n              ijkMin: Vec3.create(0, 0, 0),\n              ijkMax: Vec3.create(0, 0, 0)\n            }, trajectory, params, plugin)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  }\n});\nvar supercell = TrajectoryHierarchyPresetProvider({\n  id: 'preset-trajectory-supercell',\n  display: {\n    name: 'Super Cell',\n    group: 'Preset',\n    description: 'Shows the super cell, i.e. the central unit cell and all adjacent unit cells.'\n  },\n  isApplicable: function (o) {\n    return Model.hasCrystalSymmetry(o.data.representative);\n  },\n  params: CrystalSymmetryParams,\n  apply: function (trajectory, params, plugin) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , applyCrystalSymmetry({\n              ijkMin: Vec3.create(-1, -1, -1),\n              ijkMax: Vec3.create(1, 1, 1),\n              theme: 'operator-hkl'\n            }, trajectory, params, plugin)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  }\n});\n\nvar CrystalContactsParams = function (a, plugin) {\n  return __assign({\n    model: PD.Optional(PD.Group(StateTransformer.getParamDefinition(StateTransforms.Model.ModelFromTrajectory, a, plugin)))\n  }, CommonParams(a, plugin));\n};\n\nvar crystalContacts = TrajectoryHierarchyPresetProvider({\n  id: 'preset-trajectory-crystal-contacts',\n  display: {\n    name: 'Crystal Contacts',\n    group: 'Preset',\n    description: 'Showsasymetric unit and chains from neighbours within 5 \\u212B, i.e., symmetry mates.'\n  },\n  isApplicable: function (o) {\n    return Model.hasCrystalSymmetry(o.data.representative);\n  },\n  params: CrystalContactsParams,\n  apply: function (trajectory, params, plugin) {\n    return __awaiter(this, void 0, void 0, function () {\n      var builder, model, modelProperties, structure, structureProperties, unitcell, representation;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            builder = plugin.builders.structure;\n            return [4\n            /*yield*/\n            , builder.createModel(trajectory, params.model)];\n\n          case 1:\n            model = _a.sent();\n            return [4\n            /*yield*/\n            , builder.insertModelProperties(model, params.modelProperties)];\n\n          case 2:\n            modelProperties = _a.sent();\n            return [4\n            /*yield*/\n            , builder.createStructure(modelProperties || model, {\n              name: 'symmetry-mates',\n              params: {\n                radius: 5\n              }\n            })];\n\n          case 3:\n            structure = _a.sent();\n            return [4\n            /*yield*/\n            , builder.insertStructureProperties(structure, params.structureProperties)];\n\n          case 4:\n            structureProperties = _a.sent();\n            return [4\n            /*yield*/\n            , builder.tryCreateUnitcell(modelProperties, undefined, {\n              isHidden: true\n            })];\n\n          case 5:\n            unitcell = _a.sent();\n            return [4\n            /*yield*/\n            , plugin.builders.structure.representation.applyPreset(structureProperties, params.representationPreset || 'auto', {\n              theme: {\n                globalName: 'operator-name',\n                carbonColor: 'operator-name',\n                focus: {\n                  name: 'element-symbol',\n                  params: {\n                    carbonColor: {\n                      name: 'operator-name',\n                      params: OperatorNameColorThemeProvider.defaultValues\n                    }\n                  }\n                }\n              }\n            })];\n\n          case 6:\n            representation = _a.sent();\n            return [2\n            /*return*/\n            , {\n              model: model,\n              modelProperties: modelProperties,\n              unitcell: unitcell,\n              structure: structure,\n              structureProperties: structureProperties,\n              representation: representation\n            }];\n        }\n      });\n    });\n  }\n});\nexport var PresetTrajectoryHierarchy = {\n  'default': defaultPreset,\n  'all-models': allModels,\n  unitcell: unitcell,\n  supercell: supercell,\n  crystalContacts: crystalContacts\n};","map":{"version":3,"sources":["../../../../src/mol-plugin-state/builder/structure/hierarchy-preset.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { StateObjectRef, StateTransformer } from '../../../mol-state';\r\nimport { StateTransforms } from '../../transforms';\r\nimport { RootStructureDefinition } from '../../helpers/root-structure';\r\nimport { StructureRepresentationPresetProvider } from './representation-preset';\r\nimport { Vec3 } from '../../../mol-math/linear-algebra';\r\nimport { Model } from '../../../mol-model/structure';\r\nimport { getStructureQuality } from '../../../mol-repr/util';\r\nimport { OperatorNameColorThemeProvider } from '../../../mol-theme/color/operator-name';\r\nexport function TrajectoryHierarchyPresetProvider(preset) { return preset; }\r\n(function (TrajectoryHierarchyPresetProvider) {\r\n    TrajectoryHierarchyPresetProvider.CommonParams = function (a, plugin) { return ({\r\n        modelProperties: PD.Optional(PD.Group(StateTransformer.getParamDefinition(StateTransforms.Model.CustomModelProperties, void 0, plugin))),\r\n        structureProperties: PD.Optional(PD.Group(StateTransformer.getParamDefinition(StateTransforms.Model.CustomStructureProperties, void 0, plugin))),\r\n        representationPreset: PD.Optional(PD.Text('auto'))\r\n    }); };\r\n})(TrajectoryHierarchyPresetProvider || (TrajectoryHierarchyPresetProvider = {}));\r\nvar CommonParams = TrajectoryHierarchyPresetProvider.CommonParams;\r\nvar DefaultParams = function (a, plugin) { return (__assign({ model: PD.Optional(PD.Group(StateTransformer.getParamDefinition(StateTransforms.Model.ModelFromTrajectory, a, plugin))), showUnitcell: PD.Optional(PD.Boolean(false)), structure: PD.Optional(RootStructureDefinition.getParams(void 0, 'assembly').type), representationPresetParams: PD.Optional(PD.Group(StructureRepresentationPresetProvider.CommonParams)) }, CommonParams(a, plugin))); };\r\nvar defaultPreset = TrajectoryHierarchyPresetProvider({\r\n    id: 'preset-trajectory-default',\r\n    display: {\r\n        name: 'Default (Assembly)', group: 'Preset',\r\n        description: 'Shows the first assembly or, if that is unavailable, the first model.'\r\n    },\r\n    isApplicable: function (o) {\r\n        return true;\r\n    },\r\n    params: DefaultParams,\r\n    apply: function (trajectory, params, plugin) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var builder, model, modelProperties, structure, structureProperties, unitcell, _a, representation;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        builder = plugin.builders.structure;\r\n                        return [4 /*yield*/, builder.createModel(trajectory, params.model)];\r\n                    case 1:\r\n                        model = _b.sent();\r\n                        return [4 /*yield*/, builder.insertModelProperties(model, params.modelProperties)];\r\n                    case 2:\r\n                        modelProperties = _b.sent();\r\n                        return [4 /*yield*/, builder.createStructure(modelProperties || model, params.structure)];\r\n                    case 3:\r\n                        structure = _b.sent();\r\n                        return [4 /*yield*/, builder.insertStructureProperties(structure, params.structureProperties)];\r\n                    case 4:\r\n                        structureProperties = _b.sent();\r\n                        if (!(params.showUnitcell === void 0 || !!params.showUnitcell)) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, builder.tryCreateUnitcell(modelProperties, undefined, { isHidden: true })];\r\n                    case 5:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        _a = void 0;\r\n                        _b.label = 7;\r\n                    case 7:\r\n                        unitcell = _a;\r\n                        return [4 /*yield*/, plugin.builders.structure.representation.applyPreset(structureProperties, params.representationPreset || 'auto', params.representationPresetParams)];\r\n                    case 8:\r\n                        representation = _b.sent();\r\n                        return [2 /*return*/, {\r\n                                model: model,\r\n                                modelProperties: modelProperties,\r\n                                unitcell: unitcell,\r\n                                structure: structure,\r\n                                structureProperties: structureProperties,\r\n                                representation: representation\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    }\r\n});\r\nvar AllModelsParams = function (a, plugin) { return (__assign({ useDefaultIfSingleModel: PD.Optional(PD.Boolean(false)), representationPresetParams: PD.Optional(PD.Group(StructureRepresentationPresetProvider.CommonParams)) }, CommonParams(a, plugin))); };\r\nvar allModels = TrajectoryHierarchyPresetProvider({\r\n    id: 'preset-trajectory-all-models',\r\n    display: {\r\n        name: 'All Models', group: 'Preset',\r\n        description: 'Shows all models; colored by model-index.'\r\n    },\r\n    isApplicable: function (o) {\r\n        return o.data.frameCount > 1;\r\n    },\r\n    params: AllModelsParams,\r\n    apply: function (trajectory, params, plugin) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tr, builder, models, structures, i, model, modelProperties, structure, structureProperties, quality;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        tr = (_b = (_a = StateObjectRef.resolveAndCheck(plugin.state.data, trajectory)) === null || _a === void 0 ? void 0 : _a.obj) === null || _b === void 0 ? void 0 : _b.data;\r\n                        if (!tr)\r\n                            return [2 /*return*/, {}];\r\n                        if (tr.frameCount === 1 && params.useDefaultIfSingleModel) {\r\n                            return [2 /*return*/, defaultPreset.apply(trajectory, params, plugin)];\r\n                        }\r\n                        builder = plugin.builders.structure;\r\n                        models = [], structures = [];\r\n                        i = 0;\r\n                        _c.label = 1;\r\n                    case 1:\r\n                        if (!(i < tr.frameCount)) return [3 /*break*/, 8];\r\n                        return [4 /*yield*/, builder.createModel(trajectory, { modelIndex: i })];\r\n                    case 2:\r\n                        model = _c.sent();\r\n                        return [4 /*yield*/, builder.insertModelProperties(model, params.modelProperties, { isCollapsed: true })];\r\n                    case 3:\r\n                        modelProperties = _c.sent();\r\n                        return [4 /*yield*/, builder.createStructure(modelProperties || model, { name: 'model', params: {} })];\r\n                    case 4:\r\n                        structure = _c.sent();\r\n                        return [4 /*yield*/, builder.insertStructureProperties(structure, params.structureProperties)];\r\n                    case 5:\r\n                        structureProperties = _c.sent();\r\n                        models.push(model);\r\n                        structures.push(structure);\r\n                        quality = structure.obj ? getStructureQuality(structure.obj.data, { elementCountFactor: tr.frameCount }) : 'medium';\r\n                        return [4 /*yield*/, builder.representation.applyPreset(structureProperties, params.representationPreset || 'auto', { theme: { globalName: 'model-index' }, quality: quality })];\r\n                    case 6:\r\n                        _c.sent();\r\n                        _c.label = 7;\r\n                    case 7:\r\n                        i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 8: return [2 /*return*/, { models: models, structures: structures }];\r\n                }\r\n            });\r\n        });\r\n    }\r\n});\r\nvar CrystalSymmetryParams = function (a, plugin) { return (__assign({ model: PD.Optional(PD.Group(StateTransformer.getParamDefinition(StateTransforms.Model.ModelFromTrajectory, a, plugin))) }, CommonParams(a, plugin))); };\r\nfunction applyCrystalSymmetry(props, trajectory, params, plugin) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var builder, model, modelProperties, structure, structureProperties, unitcell, representation;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    builder = plugin.builders.structure;\r\n                    return [4 /*yield*/, builder.createModel(trajectory, params.model)];\r\n                case 1:\r\n                    model = _a.sent();\r\n                    return [4 /*yield*/, builder.insertModelProperties(model, params.modelProperties)];\r\n                case 2:\r\n                    modelProperties = _a.sent();\r\n                    return [4 /*yield*/, builder.createStructure(modelProperties || model, {\r\n                            name: 'symmetry',\r\n                            params: props\r\n                        })];\r\n                case 3:\r\n                    structure = _a.sent();\r\n                    return [4 /*yield*/, builder.insertStructureProperties(structure, params.structureProperties)];\r\n                case 4:\r\n                    structureProperties = _a.sent();\r\n                    return [4 /*yield*/, builder.tryCreateUnitcell(modelProperties, undefined, { isHidden: false })];\r\n                case 5:\r\n                    unitcell = _a.sent();\r\n                    return [4 /*yield*/, plugin.builders.structure.representation.applyPreset(structureProperties, params.representationPreset || 'auto', { theme: { globalName: props.theme } })];\r\n                case 6:\r\n                    representation = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            model: model,\r\n                            modelProperties: modelProperties,\r\n                            unitcell: unitcell,\r\n                            structure: structure,\r\n                            structureProperties: structureProperties,\r\n                            representation: representation\r\n                        }];\r\n            }\r\n        });\r\n    });\r\n}\r\nvar unitcell = TrajectoryHierarchyPresetProvider({\r\n    id: 'preset-trajectory-unitcell',\r\n    display: {\r\n        name: 'Unit Cell', group: 'Preset',\r\n        description: 'Shows the fully populated unit cell.'\r\n    },\r\n    isApplicable: function (o) {\r\n        return Model.hasCrystalSymmetry(o.data.representative);\r\n    },\r\n    params: CrystalSymmetryParams,\r\n    apply: function (trajectory, params, plugin) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, applyCrystalSymmetry({ ijkMin: Vec3.create(0, 0, 0), ijkMax: Vec3.create(0, 0, 0) }, trajectory, params, plugin)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    }\r\n});\r\nvar supercell = TrajectoryHierarchyPresetProvider({\r\n    id: 'preset-trajectory-supercell',\r\n    display: {\r\n        name: 'Super Cell', group: 'Preset',\r\n        description: 'Shows the super cell, i.e. the central unit cell and all adjacent unit cells.'\r\n    },\r\n    isApplicable: function (o) {\r\n        return Model.hasCrystalSymmetry(o.data.representative);\r\n    },\r\n    params: CrystalSymmetryParams,\r\n    apply: function (trajectory, params, plugin) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, applyCrystalSymmetry({ ijkMin: Vec3.create(-1, -1, -1), ijkMax: Vec3.create(1, 1, 1), theme: 'operator-hkl' }, trajectory, params, plugin)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    }\r\n});\r\nvar CrystalContactsParams = function (a, plugin) { return (__assign({ model: PD.Optional(PD.Group(StateTransformer.getParamDefinition(StateTransforms.Model.ModelFromTrajectory, a, plugin))) }, CommonParams(a, plugin))); };\r\nvar crystalContacts = TrajectoryHierarchyPresetProvider({\r\n    id: 'preset-trajectory-crystal-contacts',\r\n    display: {\r\n        name: 'Crystal Contacts', group: 'Preset',\r\n        description: 'Showsasymetric unit and chains from neighbours within 5 \\u212B, i.e., symmetry mates.'\r\n    },\r\n    isApplicable: function (o) {\r\n        return Model.hasCrystalSymmetry(o.data.representative);\r\n    },\r\n    params: CrystalContactsParams,\r\n    apply: function (trajectory, params, plugin) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var builder, model, modelProperties, structure, structureProperties, unitcell, representation;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        builder = plugin.builders.structure;\r\n                        return [4 /*yield*/, builder.createModel(trajectory, params.model)];\r\n                    case 1:\r\n                        model = _a.sent();\r\n                        return [4 /*yield*/, builder.insertModelProperties(model, params.modelProperties)];\r\n                    case 2:\r\n                        modelProperties = _a.sent();\r\n                        return [4 /*yield*/, builder.createStructure(modelProperties || model, {\r\n                                name: 'symmetry-mates',\r\n                                params: { radius: 5 }\r\n                            })];\r\n                    case 3:\r\n                        structure = _a.sent();\r\n                        return [4 /*yield*/, builder.insertStructureProperties(structure, params.structureProperties)];\r\n                    case 4:\r\n                        structureProperties = _a.sent();\r\n                        return [4 /*yield*/, builder.tryCreateUnitcell(modelProperties, undefined, { isHidden: true })];\r\n                    case 5:\r\n                        unitcell = _a.sent();\r\n                        return [4 /*yield*/, plugin.builders.structure.representation.applyPreset(structureProperties, params.representationPreset || 'auto', { theme: { globalName: 'operator-name', carbonColor: 'operator-name', focus: { name: 'element-symbol', params: { carbonColor: { name: 'operator-name', params: OperatorNameColorThemeProvider.defaultValues } } } } })];\r\n                    case 6:\r\n                        representation = _a.sent();\r\n                        return [2 /*return*/, {\r\n                                model: model,\r\n                                modelProperties: modelProperties,\r\n                                unitcell: unitcell,\r\n                                structure: structure,\r\n                                structureProperties: structureProperties,\r\n                                representation: representation\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    }\r\n});\r\nexport var PresetTrajectoryHierarchy = {\r\n    'default': defaultPreset,\r\n    'all-models': allModels,\r\n    unitcell: unitcell,\r\n    supercell: supercell,\r\n    crystalContacts: crystalContacts,\r\n};\r\n//# sourceMappingURL=hierarchy-preset.js.map"]},"metadata":{},"sourceType":"module"}