{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nfunction P(m, n) {\n  var p = 1;\n\n  while (n--) p *= m--;\n\n  return p;\n}\n\nfunction C(m, n) {\n  if (n > m) return 0;\n  return P(m, n) / P(n, n);\n}\n\nfunction nextIndex(n) {\n  var smallest = n & -n;\n  var ripple = n + smallest;\n  var newSmallest = ripple & -ripple;\n  var ones = (newSmallest / smallest >> 1) - 1;\n  return ripple | ones;\n}\n\n;\n\nvar CombinationIterator =\n/** @class */\nfunction () {\n  function CombinationIterator(array, count) {\n    this.array = array;\n    this.hasNext = false;\n    this.index = (1 << count) - 1;\n    this.size = C(array.length, count);\n    this.maxIndex = 1 << array.length, this.value = new Array(count);\n    this.hasNext = count > 0 && count <= array.length;\n  }\n\n  CombinationIterator.prototype.move = function () {\n    if (this.hasNext) {\n      var i = 0,\n          j = 0,\n          n = this.index;\n\n      for (; n; n >>>= 1, i++) {\n        if (n & 1) this.value[j++] = this.array[i];\n      }\n\n      this.index = nextIndex(this.index);\n      this.hasNext = this.index < this.maxIndex;\n    }\n\n    return this.value;\n  };\n\n  return CombinationIterator;\n}();\n\nexport { CombinationIterator };\nexport function combinations(array, count) {\n  var out = [];\n  var combinationIt = new CombinationIterator(array, count);\n\n  while (combinationIt.hasNext) out.push(combinationIt.move().slice());\n\n  return out;\n}","map":{"version":3,"sources":["../../../src/mol-data/util/combination.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAMH,SAAS,CAAT,CAAW,CAAX,EAAsB,CAAtB,EAA+B;AAC3B,MAAI,CAAC,GAAG,CAAR;;AACA,SAAO,CAAC,EAAR,EAAY,CAAC,IAAI,CAAC,EAAN;;AACZ,SAAO,CAAP;AACH;;AAED,SAAS,CAAT,CAAW,CAAX,EAAsB,CAAtB,EAA+B;AAC3B,MAAI,CAAC,GAAG,CAAR,EAAW,OAAO,CAAP;AACX,SAAO,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,GAAU,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAlB;AACH;;AAED,SAAS,SAAT,CAAmB,CAAnB,EAA4B;AACxB,MAAM,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAtB;AACA,MAAM,MAAM,GAAG,CAAC,GAAG,QAAnB;AACA,MAAM,WAAW,GAAG,MAAM,GAAG,CAAC,MAA9B;AACA,MAAM,IAAI,GAAG,CAAE,WAAW,GAAG,QAAf,IAA4B,CAA7B,IAAkC,CAA/C;AACA,SAAO,MAAM,GAAG,IAAhB;AACH;;AAAA;;AAED,IAAA,mBAAA;AAAA;AAAA,YAAA;AAoBI,WAAA,mBAAA,CAAoB,KAApB,EAAgC,KAAhC,EAA6C;AAAzB,SAAA,KAAA,GAAA,KAAA;AAdpB,SAAA,OAAA,GAAmB,KAAnB;AAeI,SAAK,KAAL,GAAa,CAAC,KAAK,KAAN,IAAe,CAA5B;AACA,SAAK,IAAL,GAAY,CAAC,CAAC,KAAK,CAAC,MAAP,EAAe,KAAf,CAAb;AACA,SAAK,QAAL,GAAgB,KAAK,KAAK,CAAC,MAA3B,EAEA,KAAK,KAAL,GAAa,IAAI,KAAJ,CAAU,KAAV,CAFb;AAGA,SAAK,OAAL,GAAe,KAAK,GAAG,CAAR,IAAa,KAAK,IAAI,KAAK,CAAC,MAA3C;AACH;;AAnBD,EAAA,mBAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACI,QAAI,KAAK,OAAT,EAAkB;AACd,UAAI,CAAC,GAAG,CAAR;AAAA,UAAW,CAAC,GAAG,CAAf;AAAA,UAAkB,CAAC,GAAG,KAAK,KAA3B;;AACA,aAAO,CAAP,EAAU,CAAC,MAAM,CAAP,EAAU,CAAC,EAArB,EAAyB;AACrB,YAAI,CAAC,GAAG,CAAR,EAAW,KAAK,KAAL,CAAW,CAAC,EAAZ,IAAkB,KAAK,KAAL,CAAW,CAAX,CAAlB;AACd;;AACD,WAAK,KAAL,GAAa,SAAS,CAAC,KAAK,KAAN,CAAtB;AACA,WAAK,OAAL,GAAe,KAAK,KAAL,GAAa,KAAK,QAAjC;AACH;;AACD,WAAO,KAAK,KAAZ;AACH,GAVD;;AAoBJ,SAAA,mBAAA;AAAC,CA5BD,EAAA;;;AA8BA,OAAM,SAAU,YAAV,CAA0B,KAA1B,EAAsC,KAAtC,EAAmD;AACrD,MAAM,GAAG,GAAU,EAAnB;AACA,MAAM,aAAa,GAAG,IAAI,mBAAJ,CAAwB,KAAxB,EAA+B,KAA/B,CAAtB;;AACA,SAAO,aAAa,CAAC,OAArB,EAA8B,GAAG,CAAC,IAAJ,CAAS,aAAa,CAAC,IAAd,GAAqB,KAArB,EAAT;;AAC9B,SAAO,GAAP;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nfunction P(m, n) {\r\n    var p = 1;\r\n    while (n--)\r\n        p *= m--;\r\n    return p;\r\n}\r\nfunction C(m, n) {\r\n    if (n > m)\r\n        return 0;\r\n    return P(m, n) / P(n, n);\r\n}\r\nfunction nextIndex(n) {\r\n    var smallest = n & -n;\r\n    var ripple = n + smallest;\r\n    var newSmallest = ripple & -ripple;\r\n    var ones = ((newSmallest / smallest) >> 1) - 1;\r\n    return ripple | ones;\r\n}\r\n;\r\nvar CombinationIterator = /** @class */ (function () {\r\n    function CombinationIterator(array, count) {\r\n        this.array = array;\r\n        this.hasNext = false;\r\n        this.index = (1 << count) - 1;\r\n        this.size = C(array.length, count);\r\n        this.maxIndex = 1 << array.length,\r\n            this.value = new Array(count);\r\n        this.hasNext = count > 0 && count <= array.length;\r\n    }\r\n    CombinationIterator.prototype.move = function () {\r\n        if (this.hasNext) {\r\n            var i = 0, j = 0, n = this.index;\r\n            for (; n; n >>>= 1, i++) {\r\n                if (n & 1)\r\n                    this.value[j++] = this.array[i];\r\n            }\r\n            this.index = nextIndex(this.index);\r\n            this.hasNext = this.index < this.maxIndex;\r\n        }\r\n        return this.value;\r\n    };\r\n    return CombinationIterator;\r\n}());\r\nexport { CombinationIterator };\r\nexport function combinations(array, count) {\r\n    var out = [];\r\n    var combinationIt = new CombinationIterator(array, count);\r\n    while (combinationIt.hasNext)\r\n        out.push(combinationIt.move().slice());\r\n    return out;\r\n}\r\n//# sourceMappingURL=combination.js.map"]},"metadata":{},"sourceType":"module"}