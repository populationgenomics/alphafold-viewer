{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { Vec3 } from '../../../../mol-math/linear-algebra';\nimport { ParamDefinition as PD } from '../../../../mol-util/param-definition';\nimport { Mesh } from '../../../../mol-geo/geometry/mesh/mesh';\nimport { MeshBuilder } from '../../../../mol-geo/geometry/mesh/mesh-builder';\nimport { addFixedCountDashedCylinder, addCylinder, addDoubleCylinder } from '../../../../mol-geo/geometry/mesh/builder/cylinder';\nimport { BaseGeometry } from '../../../../mol-geo/geometry/base';\nimport { Lines } from '../../../../mol-geo/geometry/lines/lines';\nimport { LinesBuilder } from '../../../../mol-geo/geometry/lines/lines-builder';\nimport { Cylinders } from '../../../../mol-geo/geometry/cylinders/cylinders';\nimport { CylindersBuilder } from '../../../../mol-geo/geometry/cylinders/cylinders-builder';\nexport var LinkCylinderParams = {\n  linkScale: PD.Numeric(0.45, {\n    min: 0,\n    max: 1,\n    step: 0.01\n  }),\n  linkSpacing: PD.Numeric(1, {\n    min: 0,\n    max: 2,\n    step: 0.01\n  }),\n  linkCap: PD.Boolean(false),\n  dashCount: PD.Numeric(4, {\n    min: 2,\n    max: 10,\n    step: 2\n  }),\n  dashScale: PD.Numeric(0.8, {\n    min: 0,\n    max: 2,\n    step: 0.1\n  }),\n  dashCap: PD.Boolean(true),\n  stubCap: PD.Boolean(true),\n  radialSegments: PD.Numeric(16, {\n    min: 2,\n    max: 56,\n    step: 2\n  }, BaseGeometry.CustomQualityParamInfo)\n};\nexport var DefaultLinkCylinderProps = PD.getDefaultValues(LinkCylinderParams);\nexport var LinkLineParams = {\n  linkScale: PD.Numeric(0.5, {\n    min: 0,\n    max: 1,\n    step: 0.1\n  }),\n  linkSpacing: PD.Numeric(0.1, {\n    min: 0,\n    max: 2,\n    step: 0.01\n  }),\n  dashCount: PD.Numeric(4, {\n    min: 2,\n    max: 10,\n    step: 2\n  })\n};\nexport var DefaultLinkLineProps = PD.getDefaultValues(LinkLineParams);\nvar tmpV12 = Vec3();\nvar tmpShiftV12 = Vec3();\nvar tmpShiftV13 = Vec3();\nvar up = Vec3.create(0, 1, 0);\n/** Calculate 'shift' direction that is perpendiculat to v1 - v2 and goes through v3 */\n\nexport function calculateShiftDir(out, v1, v2, v3) {\n  Vec3.normalize(tmpShiftV12, Vec3.sub(tmpShiftV12, v1, v2));\n\n  if (v3 !== null) {\n    Vec3.sub(tmpShiftV13, v1, v3);\n  } else {\n    Vec3.copy(tmpShiftV13, v1); // no reference point, use v1\n  }\n\n  Vec3.normalize(tmpShiftV13, tmpShiftV13); // ensure v13 and v12 are not colinear\n\n  var dp = Vec3.dot(tmpShiftV12, tmpShiftV13);\n\n  if (1 - Math.abs(dp) < 1e-5) {\n    Vec3.set(tmpShiftV13, 1, 0, 0);\n    dp = Vec3.dot(tmpShiftV12, tmpShiftV13);\n\n    if (1 - Math.abs(dp) < 1e-5) {\n      Vec3.set(tmpShiftV13, 0, 1, 0);\n      dp = Vec3.dot(tmpShiftV12, tmpShiftV13);\n    }\n  }\n\n  Vec3.setMagnitude(tmpShiftV12, tmpShiftV12, dp);\n  Vec3.sub(tmpShiftV13, tmpShiftV13, tmpShiftV12);\n  return Vec3.normalize(out, tmpShiftV13);\n} // avoiding namespace lookup improved performance in Chrome (Aug 2020)\n\nvar v3scale = Vec3.scale;\nvar v3add = Vec3.add;\nvar v3sub = Vec3.sub;\nvar v3setMagnitude = Vec3.setMagnitude;\nvar v3dot = Vec3.dot;\n/**\r\n * Each edge is included twice to allow for coloring/picking\r\n * the half closer to the first vertex, i.e. vertex a.\r\n */\n\nexport function createLinkCylinderMesh(ctx, linkBuilder, props, mesh) {\n  var linkCount = linkBuilder.linkCount,\n      referencePosition = linkBuilder.referencePosition,\n      position = linkBuilder.position,\n      style = linkBuilder.style,\n      radius = linkBuilder.radius,\n      ignore = linkBuilder.ignore,\n      stub = linkBuilder.stub;\n  if (!linkCount) return Mesh.createEmpty(mesh);\n  var linkScale = props.linkScale,\n      linkSpacing = props.linkSpacing,\n      radialSegments = props.radialSegments,\n      linkCap = props.linkCap,\n      dashCount = props.dashCount,\n      dashScale = props.dashScale,\n      dashCap = props.dashCap,\n      stubCap = props.stubCap;\n  var vertexCountEstimate = radialSegments * 2 * linkCount * 2;\n  var builderState = MeshBuilder.createState(vertexCountEstimate, vertexCountEstimate / 4, mesh);\n  var va = Vec3();\n  var vb = Vec3();\n  var vShift = Vec3();\n  var cylinderProps = {\n    radiusTop: 1,\n    radiusBottom: 1,\n    radialSegments: radialSegments,\n    topCap: linkCap,\n    bottomCap: linkCap\n  };\n  var segmentCount = dashCount + 1;\n\n  for (var edgeIndex = 0, _eI = linkCount; edgeIndex < _eI; ++edgeIndex) {\n    if (ignore && ignore(edgeIndex)) continue;\n    position(va, vb, edgeIndex);\n    v3sub(tmpV12, vb, va);\n    var dirFlag = v3dot(tmpV12, up) > 0;\n    var linkRadius = radius(edgeIndex);\n    var linkStyle = style ? style(edgeIndex) : 0\n    /* Solid */\n    ;\n    var linkStub = stubCap && (stub ? stub(edgeIndex) : false);\n\n    var _a = dirFlag ? [linkStub, linkCap] : [linkCap, linkStub],\n        topCap = _a[0],\n        bottomCap = _a[1];\n\n    builderState.currentGroup = edgeIndex;\n    var aromaticOffsetFactor = 5.5;\n    var multipleOffsetFactor = 4;\n\n    if (linkStyle === 0\n    /* Solid */\n    ) {\n      cylinderProps.radiusTop = cylinderProps.radiusBottom = linkRadius;\n      cylinderProps.topCap = topCap;\n      cylinderProps.bottomCap = bottomCap;\n      addCylinder(builderState, va, vb, 0.5, cylinderProps);\n    } else if (linkStyle === 1\n    /* Dashed */\n    ) {\n      cylinderProps.radiusTop = cylinderProps.radiusBottom = linkRadius * dashScale;\n      cylinderProps.topCap = cylinderProps.bottomCap = dashCap;\n      addFixedCountDashedCylinder(builderState, va, vb, 0.5, segmentCount, cylinderProps);\n    } else if (linkStyle === 2\n    /* Double */\n    || linkStyle === 3\n    /* OffsetDouble */\n    || linkStyle === 4\n    /* Triple */\n    || linkStyle === 5\n    /* OffsetTriple */\n    || linkStyle === 7\n    /* Aromatic */\n    || linkStyle === 8\n    /* MirroredAromatic */\n    ) {\n      var order = linkStyle === 2\n      /* Double */\n      || linkStyle === 3\n      /* OffsetDouble */\n      ? 2 : linkStyle === 4\n      /* Triple */\n      || linkStyle === 5\n      /* OffsetTriple */\n      ? 3 : 1.5;\n      var multiRadius = linkRadius * (linkScale / (0.5 * order));\n      var absOffset = (linkRadius - multiRadius) * linkSpacing;\n      calculateShiftDir(vShift, va, vb, referencePosition ? referencePosition(edgeIndex) : null);\n      cylinderProps.topCap = topCap;\n      cylinderProps.bottomCap = bottomCap;\n\n      if (linkStyle === 7\n      /* Aromatic */\n      || linkStyle === 8\n      /* MirroredAromatic */\n      ) {\n        cylinderProps.radiusTop = cylinderProps.radiusBottom = linkRadius;\n        addCylinder(builderState, va, vb, 0.5, cylinderProps);\n        cylinderProps.radiusTop = cylinderProps.radiusBottom = linkRadius * linkScale;\n        cylinderProps.topCap = cylinderProps.bottomCap = dashCap;\n        v3setMagnitude(vShift, vShift, absOffset * aromaticOffsetFactor);\n        v3sub(va, va, vShift);\n        v3sub(vb, vb, vShift);\n        addFixedCountDashedCylinder(builderState, va, vb, 0.5, 3, cylinderProps);\n\n        if (linkStyle === 8\n        /* MirroredAromatic */\n        ) {\n          v3setMagnitude(vShift, vShift, absOffset * aromaticOffsetFactor * 2);\n          v3add(va, va, vShift);\n          v3add(vb, vb, vShift);\n          addFixedCountDashedCylinder(builderState, va, vb, 0.5, 3, cylinderProps);\n        }\n      } else if (linkStyle === 3\n      /* OffsetDouble */\n      || linkStyle === 5\n      /* OffsetTriple */\n      ) {\n        v3setMagnitude(vShift, vShift, absOffset);\n        cylinderProps.radiusTop = cylinderProps.radiusBottom = linkRadius;\n        addCylinder(builderState, va, vb, 0.5, cylinderProps);\n        v3scale(tmpV12, tmpV12, linkSpacing * linkScale * 0.2);\n        v3add(va, va, tmpV12);\n        v3sub(vb, vb, tmpV12);\n        cylinderProps.radiusTop = cylinderProps.radiusBottom = multiRadius;\n        cylinderProps.topCap = dirFlag ? linkStub : dashCap;\n        cylinderProps.bottomCap = dirFlag ? dashCap : linkStub;\n        v3setMagnitude(vShift, vShift, absOffset * multipleOffsetFactor);\n        v3sub(va, va, vShift);\n        v3sub(vb, vb, vShift);\n        addCylinder(builderState, va, vb, 0.5, cylinderProps);\n\n        if (order === 3) {\n          v3setMagnitude(vShift, vShift, absOffset * multipleOffsetFactor * 2);\n          v3add(va, va, vShift);\n          v3add(vb, vb, vShift);\n          addCylinder(builderState, va, vb, 0.5, cylinderProps);\n        }\n      } else {\n        v3setMagnitude(vShift, vShift, absOffset);\n        cylinderProps.radiusTop = cylinderProps.radiusBottom = multiRadius;\n        if (order === 3) addCylinder(builderState, va, vb, 0.5, cylinderProps);\n        addDoubleCylinder(builderState, va, vb, 0.5, vShift, cylinderProps);\n      }\n    } else if (linkStyle === 6\n    /* Disk */\n    ) {\n      v3scale(tmpV12, tmpV12, 0.475);\n      v3add(va, va, tmpV12);\n      v3sub(vb, vb, tmpV12);\n      cylinderProps.radiusTop = cylinderProps.radiusBottom = linkRadius;\n      cylinderProps.topCap = topCap;\n      cylinderProps.bottomCap = bottomCap;\n      addCylinder(builderState, va, vb, 0.5, cylinderProps);\n    }\n  }\n\n  return MeshBuilder.getMesh(builderState);\n}\n/**\r\n * Each edge is included twice to allow for coloring/picking\r\n * the half closer to the first vertex, i.e. vertex a.\r\n */\n\nexport function createLinkCylinderImpostors(ctx, linkBuilder, props, cylinders) {\n  var linkCount = linkBuilder.linkCount,\n      referencePosition = linkBuilder.referencePosition,\n      position = linkBuilder.position,\n      style = linkBuilder.style,\n      radius = linkBuilder.radius,\n      ignore = linkBuilder.ignore,\n      stub = linkBuilder.stub;\n  if (!linkCount) return Cylinders.createEmpty(cylinders);\n  var linkScale = props.linkScale,\n      linkSpacing = props.linkSpacing,\n      linkCap = props.linkCap,\n      dashCount = props.dashCount,\n      dashScale = props.dashScale,\n      dashCap = props.dashCap,\n      stubCap = props.stubCap;\n  var cylindersCountEstimate = linkCount * 2;\n  var builder = CylindersBuilder.create(cylindersCountEstimate, cylindersCountEstimate / 4, cylinders);\n  var va = Vec3();\n  var vb = Vec3();\n  var vm = Vec3();\n  var vShift = Vec3(); // automatically adjust length for evenly spaced dashed cylinders\n\n  var segmentCount = dashCount % 2 === 1 ? dashCount : dashCount + 1;\n  var lengthScale = 0.5 - 0.5 / 2 / segmentCount;\n  var aromaticSegmentCount = 3;\n  var aromaticLengthScale = 0.5 - 0.5 / 2 / aromaticSegmentCount;\n  var aromaticOffsetFactor = 5.5;\n  var multipleOffsetFactor = 4;\n\n  for (var edgeIndex = 0, _eI = linkCount; edgeIndex < _eI; ++edgeIndex) {\n    if (ignore && ignore(edgeIndex)) continue;\n    position(va, vb, edgeIndex);\n    var linkRadius = radius(edgeIndex);\n    var linkStyle = style ? style(edgeIndex) : 0\n    /* Solid */\n    ;\n    var linkStub = stubCap && (stub ? stub(edgeIndex) : false);\n\n    if (linkStyle === 0\n    /* Solid */\n    ) {\n      v3scale(vm, v3add(vm, va, vb), 0.5);\n      builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], 1, linkCap, linkStub, edgeIndex);\n    } else if (linkStyle === 1\n    /* Dashed */\n    ) {\n      v3scale(tmpV12, v3sub(tmpV12, vb, va), lengthScale);\n      v3sub(vb, vb, tmpV12);\n      builder.addFixedCountDashes(va, vb, segmentCount, dashScale, dashCap, dashCap, edgeIndex);\n    } else if (linkStyle === 2\n    /* Double */\n    || linkStyle === 3\n    /* OffsetDouble */\n    || linkStyle === 4\n    /* Triple */\n    || linkStyle === 5\n    /* OffsetTriple */\n    || linkStyle === 7\n    /* Aromatic */\n    || linkStyle === 8\n    /* MirroredAromatic */\n    ) {\n      var order = linkStyle === 2\n      /* Double */\n      || linkStyle === 3\n      /* OffsetDouble */\n      ? 2 : linkStyle === 4\n      /* Triple */\n      || linkStyle === 5\n      /* OffsetTriple */\n      ? 3 : 1.5;\n      var multiScale = linkScale / (0.5 * order);\n      var absOffset = (linkRadius - multiScale * linkRadius) * linkSpacing;\n      v3scale(vm, v3add(vm, va, vb), 0.5);\n      calculateShiftDir(vShift, va, vb, referencePosition ? referencePosition(edgeIndex) : null);\n\n      if (linkStyle === 7\n      /* Aromatic */\n      || linkStyle === 8\n      /* MirroredAromatic */\n      ) {\n        builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], 1, linkCap, linkStub, edgeIndex);\n        v3scale(tmpV12, v3sub(tmpV12, vb, va), aromaticLengthScale);\n        v3sub(vb, vb, tmpV12);\n        v3setMagnitude(vShift, vShift, absOffset * aromaticOffsetFactor);\n        v3sub(va, va, vShift);\n        v3sub(vb, vb, vShift);\n        builder.addFixedCountDashes(va, vb, aromaticSegmentCount, linkScale, dashCap, dashCap, edgeIndex);\n\n        if (linkStyle === 8\n        /* MirroredAromatic */\n        ) {\n          v3setMagnitude(vShift, vShift, absOffset * aromaticOffsetFactor * 2);\n          v3add(va, va, vShift);\n          v3add(vb, vb, vShift);\n          builder.addFixedCountDashes(va, vb, aromaticSegmentCount, linkScale, dashCap, dashCap, edgeIndex);\n        }\n      } else if (linkStyle === 3\n      /* OffsetDouble */\n      || linkStyle === 5\n      /* OffsetTriple */\n      ) {\n        v3setMagnitude(vShift, vShift, absOffset * multipleOffsetFactor);\n        builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], 1, linkCap, linkStub, edgeIndex);\n        v3scale(tmpV12, v3sub(tmpV12, va, vb), linkSpacing * linkScale * 0.2);\n        v3sub(va, va, tmpV12);\n        if (order === 3) builder.add(va[0] + vShift[0], va[1] + vShift[1], va[2] + vShift[2], vm[0] + vShift[0], vm[1] + vShift[1], vm[2] + vShift[2], multiScale, linkCap, linkStub, edgeIndex);\n        builder.add(va[0] - vShift[0], va[1] - vShift[1], va[2] - vShift[2], vm[0] - vShift[0], vm[1] - vShift[1], vm[2] - vShift[2], multiScale, dashCap, linkStub, edgeIndex);\n      } else {\n        v3setMagnitude(vShift, vShift, absOffset);\n        if (order === 3) builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], multiScale, linkCap, linkStub, edgeIndex);\n        builder.add(va[0] + vShift[0], va[1] + vShift[1], va[2] + vShift[2], vm[0] + vShift[0], vm[1] + vShift[1], vm[2] + vShift[2], multiScale, linkCap, linkStub, edgeIndex);\n        builder.add(va[0] - vShift[0], va[1] - vShift[1], va[2] - vShift[2], vm[0] - vShift[0], vm[1] - vShift[1], vm[2] - vShift[2], multiScale, linkCap, linkStub, edgeIndex);\n      }\n    } else if (linkStyle === 6\n    /* Disk */\n    ) {\n      v3scale(tmpV12, v3sub(tmpV12, vb, va), 0.475);\n      v3add(va, va, tmpV12);\n      v3sub(vb, vb, tmpV12);\n      builder.add(va[0], va[1], va[2], vb[0], vb[1], vb[2], 1, linkCap, linkStub, edgeIndex);\n    }\n  }\n\n  return builder.getCylinders();\n}\n/**\r\n * Each edge is included twice to allow for coloring/picking\r\n * the half closer to the first vertex, i.e. vertex a.\r\n */\n\nexport function createLinkLines(ctx, linkBuilder, props, lines) {\n  var linkCount = linkBuilder.linkCount,\n      referencePosition = linkBuilder.referencePosition,\n      position = linkBuilder.position,\n      style = linkBuilder.style,\n      ignore = linkBuilder.ignore;\n  if (!linkCount) return Lines.createEmpty(lines);\n  var linkScale = props.linkScale,\n      linkSpacing = props.linkSpacing,\n      dashCount = props.dashCount;\n  var linesCountEstimate = linkCount * 2;\n  var builder = LinesBuilder.create(linesCountEstimate, linesCountEstimate / 4, lines);\n  var va = Vec3();\n  var vb = Vec3();\n  var vm = Vec3();\n  var vShift = Vec3(); // automatically adjust length for evenly spaced dashed lines\n\n  var segmentCount = dashCount % 2 === 1 ? dashCount : dashCount + 1;\n  var lengthScale = 0.5 - 0.5 / 2 / segmentCount;\n  var aromaticSegmentCount = 3;\n  var aromaticLengthScale = 0.5 - 0.5 / 2 / aromaticSegmentCount;\n  var aromaticOffsetFactor = 4.5;\n  var multipleOffsetFactor = 3;\n\n  for (var edgeIndex = 0, _eI = linkCount; edgeIndex < _eI; ++edgeIndex) {\n    if (ignore && ignore(edgeIndex)) continue;\n    position(va, vb, edgeIndex);\n    var linkStyle = style ? style(edgeIndex) : 0\n    /* Solid */\n    ;\n\n    if (linkStyle === 0\n    /* Solid */\n    ) {\n      v3scale(vm, v3add(vm, va, vb), 0.5);\n      builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], edgeIndex);\n    } else if (linkStyle === 1\n    /* Dashed */\n    ) {\n      v3scale(tmpV12, v3sub(tmpV12, vb, va), lengthScale);\n      v3sub(vb, vb, tmpV12);\n      builder.addFixedCountDashes(va, vb, segmentCount, edgeIndex);\n    } else if (linkStyle === 2\n    /* Double */\n    || linkStyle === 3\n    /* OffsetDouble */\n    || linkStyle === 4\n    /* Triple */\n    || linkStyle === 5\n    /* OffsetTriple */\n    || linkStyle === 7\n    /* Aromatic */\n    || linkStyle === 8\n    /* MirroredAromatic */\n    ) {\n      var order = linkStyle === 2\n      /* Double */\n      || linkStyle === 3\n      /* OffsetDouble */\n      ? 2 : linkStyle === 4\n      /* Triple */\n      || linkStyle === 5\n      /* OffsetTriple */\n      ? 3 : 1.5;\n      var multiRadius = 1 * (linkScale / (0.5 * order));\n      var absOffset = (1 - multiRadius) * linkSpacing;\n      v3scale(vm, v3add(vm, va, vb), 0.5);\n      calculateShiftDir(vShift, va, vb, referencePosition ? referencePosition(edgeIndex) : null);\n\n      if (linkStyle === 7\n      /* Aromatic */\n      || linkStyle === 8\n      /* MirroredAromatic */\n      ) {\n        builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], edgeIndex);\n        v3scale(tmpV12, v3sub(tmpV12, vb, va), aromaticLengthScale);\n        v3sub(vb, vb, tmpV12);\n        v3setMagnitude(vShift, vShift, absOffset * aromaticOffsetFactor);\n        v3sub(va, va, vShift);\n        v3sub(vb, vb, vShift);\n        builder.addFixedCountDashes(va, vb, aromaticSegmentCount, edgeIndex);\n\n        if (linkStyle === 8\n        /* MirroredAromatic */\n        ) {\n          v3setMagnitude(vShift, vShift, absOffset * aromaticOffsetFactor * 2);\n          v3add(va, va, vShift);\n          v3add(vb, vb, vShift);\n          builder.addFixedCountDashes(va, vb, aromaticSegmentCount, edgeIndex);\n        }\n      } else if (linkStyle === 3\n      /* OffsetDouble */\n      || linkStyle === 5\n      /* OffsetTriple */\n      ) {\n        v3setMagnitude(vShift, vShift, absOffset * multipleOffsetFactor);\n        builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], edgeIndex);\n        v3scale(tmpV12, v3sub(tmpV12, va, vb), linkSpacing * linkScale);\n        v3sub(va, va, tmpV12);\n        if (order === 3) builder.add(va[0] + vShift[0], va[1] + vShift[1], va[2] + vShift[2], vm[0] + vShift[0], vm[1] + vShift[1], vm[2] + vShift[2], edgeIndex);\n        builder.add(va[0] - vShift[0], va[1] - vShift[1], va[2] - vShift[2], vm[0] - vShift[0], vm[1] - vShift[1], vm[2] - vShift[2], edgeIndex);\n      } else {\n        v3setMagnitude(vShift, vShift, absOffset * 1.5);\n        if (order === 3) builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], edgeIndex);\n        builder.add(va[0] + vShift[0], va[1] + vShift[1], va[2] + vShift[2], vm[0] + vShift[0], vm[1] + vShift[1], vm[2] + vShift[2], edgeIndex);\n        builder.add(va[0] - vShift[0], va[1] - vShift[1], va[2] - vShift[2], vm[0] - vShift[0], vm[1] - vShift[1], vm[2] - vShift[2], edgeIndex);\n      }\n    } else if (linkStyle === 6\n    /* Disk */\n    ) {\n      v3scale(tmpV12, v3sub(tmpV12, vb, va), 0.475);\n      v3add(va, va, tmpV12);\n      v3sub(vb, vb, tmpV12); // TODO what to do here? Line as disk doesn't work well.\n\n      builder.add(va[0], va[1], va[2], vb[0], vb[1], vb[2], edgeIndex);\n    }\n  }\n\n  return builder.getLines();\n}","map":{"version":3,"sources":["../../../../../src/mol-repr/structure/visual/util/link.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { Vec3 } from '../../../../mol-math/linear-algebra';\r\nimport { ParamDefinition as PD } from '../../../../mol-util/param-definition';\r\nimport { Mesh } from '../../../../mol-geo/geometry/mesh/mesh';\r\nimport { MeshBuilder } from '../../../../mol-geo/geometry/mesh/mesh-builder';\r\nimport { addFixedCountDashedCylinder, addCylinder, addDoubleCylinder } from '../../../../mol-geo/geometry/mesh/builder/cylinder';\r\nimport { BaseGeometry } from '../../../../mol-geo/geometry/base';\r\nimport { Lines } from '../../../../mol-geo/geometry/lines/lines';\r\nimport { LinesBuilder } from '../../../../mol-geo/geometry/lines/lines-builder';\r\nimport { Cylinders } from '../../../../mol-geo/geometry/cylinders/cylinders';\r\nimport { CylindersBuilder } from '../../../../mol-geo/geometry/cylinders/cylinders-builder';\r\nexport var LinkCylinderParams = {\r\n    linkScale: PD.Numeric(0.45, { min: 0, max: 1, step: 0.01 }),\r\n    linkSpacing: PD.Numeric(1, { min: 0, max: 2, step: 0.01 }),\r\n    linkCap: PD.Boolean(false),\r\n    dashCount: PD.Numeric(4, { min: 2, max: 10, step: 2 }),\r\n    dashScale: PD.Numeric(0.8, { min: 0, max: 2, step: 0.1 }),\r\n    dashCap: PD.Boolean(true),\r\n    stubCap: PD.Boolean(true),\r\n    radialSegments: PD.Numeric(16, { min: 2, max: 56, step: 2 }, BaseGeometry.CustomQualityParamInfo),\r\n};\r\nexport var DefaultLinkCylinderProps = PD.getDefaultValues(LinkCylinderParams);\r\nexport var LinkLineParams = {\r\n    linkScale: PD.Numeric(0.5, { min: 0, max: 1, step: 0.1 }),\r\n    linkSpacing: PD.Numeric(0.1, { min: 0, max: 2, step: 0.01 }),\r\n    dashCount: PD.Numeric(4, { min: 2, max: 10, step: 2 }),\r\n};\r\nexport var DefaultLinkLineProps = PD.getDefaultValues(LinkLineParams);\r\nvar tmpV12 = Vec3();\r\nvar tmpShiftV12 = Vec3();\r\nvar tmpShiftV13 = Vec3();\r\nvar up = Vec3.create(0, 1, 0);\r\n/** Calculate 'shift' direction that is perpendiculat to v1 - v2 and goes through v3 */\r\nexport function calculateShiftDir(out, v1, v2, v3) {\r\n    Vec3.normalize(tmpShiftV12, Vec3.sub(tmpShiftV12, v1, v2));\r\n    if (v3 !== null) {\r\n        Vec3.sub(tmpShiftV13, v1, v3);\r\n    }\r\n    else {\r\n        Vec3.copy(tmpShiftV13, v1); // no reference point, use v1\r\n    }\r\n    Vec3.normalize(tmpShiftV13, tmpShiftV13);\r\n    // ensure v13 and v12 are not colinear\r\n    var dp = Vec3.dot(tmpShiftV12, tmpShiftV13);\r\n    if (1 - Math.abs(dp) < 1e-5) {\r\n        Vec3.set(tmpShiftV13, 1, 0, 0);\r\n        dp = Vec3.dot(tmpShiftV12, tmpShiftV13);\r\n        if (1 - Math.abs(dp) < 1e-5) {\r\n            Vec3.set(tmpShiftV13, 0, 1, 0);\r\n            dp = Vec3.dot(tmpShiftV12, tmpShiftV13);\r\n        }\r\n    }\r\n    Vec3.setMagnitude(tmpShiftV12, tmpShiftV12, dp);\r\n    Vec3.sub(tmpShiftV13, tmpShiftV13, tmpShiftV12);\r\n    return Vec3.normalize(out, tmpShiftV13);\r\n}\r\n// avoiding namespace lookup improved performance in Chrome (Aug 2020)\r\nvar v3scale = Vec3.scale;\r\nvar v3add = Vec3.add;\r\nvar v3sub = Vec3.sub;\r\nvar v3setMagnitude = Vec3.setMagnitude;\r\nvar v3dot = Vec3.dot;\r\n/**\r\n * Each edge is included twice to allow for coloring/picking\r\n * the half closer to the first vertex, i.e. vertex a.\r\n */\r\nexport function createLinkCylinderMesh(ctx, linkBuilder, props, mesh) {\r\n    var linkCount = linkBuilder.linkCount, referencePosition = linkBuilder.referencePosition, position = linkBuilder.position, style = linkBuilder.style, radius = linkBuilder.radius, ignore = linkBuilder.ignore, stub = linkBuilder.stub;\r\n    if (!linkCount)\r\n        return Mesh.createEmpty(mesh);\r\n    var linkScale = props.linkScale, linkSpacing = props.linkSpacing, radialSegments = props.radialSegments, linkCap = props.linkCap, dashCount = props.dashCount, dashScale = props.dashScale, dashCap = props.dashCap, stubCap = props.stubCap;\r\n    var vertexCountEstimate = radialSegments * 2 * linkCount * 2;\r\n    var builderState = MeshBuilder.createState(vertexCountEstimate, vertexCountEstimate / 4, mesh);\r\n    var va = Vec3();\r\n    var vb = Vec3();\r\n    var vShift = Vec3();\r\n    var cylinderProps = {\r\n        radiusTop: 1,\r\n        radiusBottom: 1,\r\n        radialSegments: radialSegments,\r\n        topCap: linkCap,\r\n        bottomCap: linkCap\r\n    };\r\n    var segmentCount = dashCount + 1;\r\n    for (var edgeIndex = 0, _eI = linkCount; edgeIndex < _eI; ++edgeIndex) {\r\n        if (ignore && ignore(edgeIndex))\r\n            continue;\r\n        position(va, vb, edgeIndex);\r\n        v3sub(tmpV12, vb, va);\r\n        var dirFlag = v3dot(tmpV12, up) > 0;\r\n        var linkRadius = radius(edgeIndex);\r\n        var linkStyle = style ? style(edgeIndex) : 0 /* Solid */;\r\n        var linkStub = stubCap && (stub ? stub(edgeIndex) : false);\r\n        var _a = dirFlag ? [linkStub, linkCap] : [linkCap, linkStub], topCap = _a[0], bottomCap = _a[1];\r\n        builderState.currentGroup = edgeIndex;\r\n        var aromaticOffsetFactor = 5.5;\r\n        var multipleOffsetFactor = 4;\r\n        if (linkStyle === 0 /* Solid */) {\r\n            cylinderProps.radiusTop = cylinderProps.radiusBottom = linkRadius;\r\n            cylinderProps.topCap = topCap;\r\n            cylinderProps.bottomCap = bottomCap;\r\n            addCylinder(builderState, va, vb, 0.5, cylinderProps);\r\n        }\r\n        else if (linkStyle === 1 /* Dashed */) {\r\n            cylinderProps.radiusTop = cylinderProps.radiusBottom = linkRadius * dashScale;\r\n            cylinderProps.topCap = cylinderProps.bottomCap = dashCap;\r\n            addFixedCountDashedCylinder(builderState, va, vb, 0.5, segmentCount, cylinderProps);\r\n        }\r\n        else if (linkStyle === 2 /* Double */ || linkStyle === 3 /* OffsetDouble */ || linkStyle === 4 /* Triple */ || linkStyle === 5 /* OffsetTriple */ || linkStyle === 7 /* Aromatic */ || linkStyle === 8 /* MirroredAromatic */) {\r\n            var order = linkStyle === 2 /* Double */ || linkStyle === 3 /* OffsetDouble */ ? 2 :\r\n                linkStyle === 4 /* Triple */ || linkStyle === 5 /* OffsetTriple */ ? 3 : 1.5;\r\n            var multiRadius = linkRadius * (linkScale / (0.5 * order));\r\n            var absOffset = (linkRadius - multiRadius) * linkSpacing;\r\n            calculateShiftDir(vShift, va, vb, referencePosition ? referencePosition(edgeIndex) : null);\r\n            cylinderProps.topCap = topCap;\r\n            cylinderProps.bottomCap = bottomCap;\r\n            if (linkStyle === 7 /* Aromatic */ || linkStyle === 8 /* MirroredAromatic */) {\r\n                cylinderProps.radiusTop = cylinderProps.radiusBottom = linkRadius;\r\n                addCylinder(builderState, va, vb, 0.5, cylinderProps);\r\n                cylinderProps.radiusTop = cylinderProps.radiusBottom = linkRadius * linkScale;\r\n                cylinderProps.topCap = cylinderProps.bottomCap = dashCap;\r\n                v3setMagnitude(vShift, vShift, absOffset * aromaticOffsetFactor);\r\n                v3sub(va, va, vShift);\r\n                v3sub(vb, vb, vShift);\r\n                addFixedCountDashedCylinder(builderState, va, vb, 0.5, 3, cylinderProps);\r\n                if (linkStyle === 8 /* MirroredAromatic */) {\r\n                    v3setMagnitude(vShift, vShift, absOffset * aromaticOffsetFactor * 2);\r\n                    v3add(va, va, vShift);\r\n                    v3add(vb, vb, vShift);\r\n                    addFixedCountDashedCylinder(builderState, va, vb, 0.5, 3, cylinderProps);\r\n                }\r\n            }\r\n            else if (linkStyle === 3 /* OffsetDouble */ || linkStyle === 5 /* OffsetTriple */) {\r\n                v3setMagnitude(vShift, vShift, absOffset);\r\n                cylinderProps.radiusTop = cylinderProps.radiusBottom = linkRadius;\r\n                addCylinder(builderState, va, vb, 0.5, cylinderProps);\r\n                v3scale(tmpV12, tmpV12, linkSpacing * linkScale * 0.2);\r\n                v3add(va, va, tmpV12);\r\n                v3sub(vb, vb, tmpV12);\r\n                cylinderProps.radiusTop = cylinderProps.radiusBottom = multiRadius;\r\n                cylinderProps.topCap = dirFlag ? linkStub : dashCap;\r\n                cylinderProps.bottomCap = dirFlag ? dashCap : linkStub;\r\n                v3setMagnitude(vShift, vShift, absOffset * multipleOffsetFactor);\r\n                v3sub(va, va, vShift);\r\n                v3sub(vb, vb, vShift);\r\n                addCylinder(builderState, va, vb, 0.5, cylinderProps);\r\n                if (order === 3) {\r\n                    v3setMagnitude(vShift, vShift, absOffset * multipleOffsetFactor * 2);\r\n                    v3add(va, va, vShift);\r\n                    v3add(vb, vb, vShift);\r\n                    addCylinder(builderState, va, vb, 0.5, cylinderProps);\r\n                }\r\n            }\r\n            else {\r\n                v3setMagnitude(vShift, vShift, absOffset);\r\n                cylinderProps.radiusTop = cylinderProps.radiusBottom = multiRadius;\r\n                if (order === 3)\r\n                    addCylinder(builderState, va, vb, 0.5, cylinderProps);\r\n                addDoubleCylinder(builderState, va, vb, 0.5, vShift, cylinderProps);\r\n            }\r\n        }\r\n        else if (linkStyle === 6 /* Disk */) {\r\n            v3scale(tmpV12, tmpV12, 0.475);\r\n            v3add(va, va, tmpV12);\r\n            v3sub(vb, vb, tmpV12);\r\n            cylinderProps.radiusTop = cylinderProps.radiusBottom = linkRadius;\r\n            cylinderProps.topCap = topCap;\r\n            cylinderProps.bottomCap = bottomCap;\r\n            addCylinder(builderState, va, vb, 0.5, cylinderProps);\r\n        }\r\n    }\r\n    return MeshBuilder.getMesh(builderState);\r\n}\r\n/**\r\n * Each edge is included twice to allow for coloring/picking\r\n * the half closer to the first vertex, i.e. vertex a.\r\n */\r\nexport function createLinkCylinderImpostors(ctx, linkBuilder, props, cylinders) {\r\n    var linkCount = linkBuilder.linkCount, referencePosition = linkBuilder.referencePosition, position = linkBuilder.position, style = linkBuilder.style, radius = linkBuilder.radius, ignore = linkBuilder.ignore, stub = linkBuilder.stub;\r\n    if (!linkCount)\r\n        return Cylinders.createEmpty(cylinders);\r\n    var linkScale = props.linkScale, linkSpacing = props.linkSpacing, linkCap = props.linkCap, dashCount = props.dashCount, dashScale = props.dashScale, dashCap = props.dashCap, stubCap = props.stubCap;\r\n    var cylindersCountEstimate = linkCount * 2;\r\n    var builder = CylindersBuilder.create(cylindersCountEstimate, cylindersCountEstimate / 4, cylinders);\r\n    var va = Vec3();\r\n    var vb = Vec3();\r\n    var vm = Vec3();\r\n    var vShift = Vec3();\r\n    // automatically adjust length for evenly spaced dashed cylinders\r\n    var segmentCount = dashCount % 2 === 1 ? dashCount : dashCount + 1;\r\n    var lengthScale = 0.5 - (0.5 / 2 / segmentCount);\r\n    var aromaticSegmentCount = 3;\r\n    var aromaticLengthScale = 0.5 - (0.5 / 2 / aromaticSegmentCount);\r\n    var aromaticOffsetFactor = 5.5;\r\n    var multipleOffsetFactor = 4;\r\n    for (var edgeIndex = 0, _eI = linkCount; edgeIndex < _eI; ++edgeIndex) {\r\n        if (ignore && ignore(edgeIndex))\r\n            continue;\r\n        position(va, vb, edgeIndex);\r\n        var linkRadius = radius(edgeIndex);\r\n        var linkStyle = style ? style(edgeIndex) : 0 /* Solid */;\r\n        var linkStub = stubCap && (stub ? stub(edgeIndex) : false);\r\n        if (linkStyle === 0 /* Solid */) {\r\n            v3scale(vm, v3add(vm, va, vb), 0.5);\r\n            builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], 1, linkCap, linkStub, edgeIndex);\r\n        }\r\n        else if (linkStyle === 1 /* Dashed */) {\r\n            v3scale(tmpV12, v3sub(tmpV12, vb, va), lengthScale);\r\n            v3sub(vb, vb, tmpV12);\r\n            builder.addFixedCountDashes(va, vb, segmentCount, dashScale, dashCap, dashCap, edgeIndex);\r\n        }\r\n        else if (linkStyle === 2 /* Double */ || linkStyle === 3 /* OffsetDouble */ || linkStyle === 4 /* Triple */ || linkStyle === 5 /* OffsetTriple */ || linkStyle === 7 /* Aromatic */ || linkStyle === 8 /* MirroredAromatic */) {\r\n            var order = linkStyle === 2 /* Double */ || linkStyle === 3 /* OffsetDouble */ ? 2 :\r\n                linkStyle === 4 /* Triple */ || linkStyle === 5 /* OffsetTriple */ ? 3 : 1.5;\r\n            var multiScale = linkScale / (0.5 * order);\r\n            var absOffset = (linkRadius - multiScale * linkRadius) * linkSpacing;\r\n            v3scale(vm, v3add(vm, va, vb), 0.5);\r\n            calculateShiftDir(vShift, va, vb, referencePosition ? referencePosition(edgeIndex) : null);\r\n            if (linkStyle === 7 /* Aromatic */ || linkStyle === 8 /* MirroredAromatic */) {\r\n                builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], 1, linkCap, linkStub, edgeIndex);\r\n                v3scale(tmpV12, v3sub(tmpV12, vb, va), aromaticLengthScale);\r\n                v3sub(vb, vb, tmpV12);\r\n                v3setMagnitude(vShift, vShift, absOffset * aromaticOffsetFactor);\r\n                v3sub(va, va, vShift);\r\n                v3sub(vb, vb, vShift);\r\n                builder.addFixedCountDashes(va, vb, aromaticSegmentCount, linkScale, dashCap, dashCap, edgeIndex);\r\n                if (linkStyle === 8 /* MirroredAromatic */) {\r\n                    v3setMagnitude(vShift, vShift, absOffset * aromaticOffsetFactor * 2);\r\n                    v3add(va, va, vShift);\r\n                    v3add(vb, vb, vShift);\r\n                    builder.addFixedCountDashes(va, vb, aromaticSegmentCount, linkScale, dashCap, dashCap, edgeIndex);\r\n                }\r\n            }\r\n            else if (linkStyle === 3 /* OffsetDouble */ || linkStyle === 5 /* OffsetTriple */) {\r\n                v3setMagnitude(vShift, vShift, absOffset * multipleOffsetFactor);\r\n                builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], 1, linkCap, linkStub, edgeIndex);\r\n                v3scale(tmpV12, v3sub(tmpV12, va, vb), linkSpacing * linkScale * 0.2);\r\n                v3sub(va, va, tmpV12);\r\n                if (order === 3)\r\n                    builder.add(va[0] + vShift[0], va[1] + vShift[1], va[2] + vShift[2], vm[0] + vShift[0], vm[1] + vShift[1], vm[2] + vShift[2], multiScale, linkCap, linkStub, edgeIndex);\r\n                builder.add(va[0] - vShift[0], va[1] - vShift[1], va[2] - vShift[2], vm[0] - vShift[0], vm[1] - vShift[1], vm[2] - vShift[2], multiScale, dashCap, linkStub, edgeIndex);\r\n            }\r\n            else {\r\n                v3setMagnitude(vShift, vShift, absOffset);\r\n                if (order === 3)\r\n                    builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], multiScale, linkCap, linkStub, edgeIndex);\r\n                builder.add(va[0] + vShift[0], va[1] + vShift[1], va[2] + vShift[2], vm[0] + vShift[0], vm[1] + vShift[1], vm[2] + vShift[2], multiScale, linkCap, linkStub, edgeIndex);\r\n                builder.add(va[0] - vShift[0], va[1] - vShift[1], va[2] - vShift[2], vm[0] - vShift[0], vm[1] - vShift[1], vm[2] - vShift[2], multiScale, linkCap, linkStub, edgeIndex);\r\n            }\r\n        }\r\n        else if (linkStyle === 6 /* Disk */) {\r\n            v3scale(tmpV12, v3sub(tmpV12, vb, va), 0.475);\r\n            v3add(va, va, tmpV12);\r\n            v3sub(vb, vb, tmpV12);\r\n            builder.add(va[0], va[1], va[2], vb[0], vb[1], vb[2], 1, linkCap, linkStub, edgeIndex);\r\n        }\r\n    }\r\n    return builder.getCylinders();\r\n}\r\n/**\r\n * Each edge is included twice to allow for coloring/picking\r\n * the half closer to the first vertex, i.e. vertex a.\r\n */\r\nexport function createLinkLines(ctx, linkBuilder, props, lines) {\r\n    var linkCount = linkBuilder.linkCount, referencePosition = linkBuilder.referencePosition, position = linkBuilder.position, style = linkBuilder.style, ignore = linkBuilder.ignore;\r\n    if (!linkCount)\r\n        return Lines.createEmpty(lines);\r\n    var linkScale = props.linkScale, linkSpacing = props.linkSpacing, dashCount = props.dashCount;\r\n    var linesCountEstimate = linkCount * 2;\r\n    var builder = LinesBuilder.create(linesCountEstimate, linesCountEstimate / 4, lines);\r\n    var va = Vec3();\r\n    var vb = Vec3();\r\n    var vm = Vec3();\r\n    var vShift = Vec3();\r\n    // automatically adjust length for evenly spaced dashed lines\r\n    var segmentCount = dashCount % 2 === 1 ? dashCount : dashCount + 1;\r\n    var lengthScale = 0.5 - (0.5 / 2 / segmentCount);\r\n    var aromaticSegmentCount = 3;\r\n    var aromaticLengthScale = 0.5 - (0.5 / 2 / aromaticSegmentCount);\r\n    var aromaticOffsetFactor = 4.5;\r\n    var multipleOffsetFactor = 3;\r\n    for (var edgeIndex = 0, _eI = linkCount; edgeIndex < _eI; ++edgeIndex) {\r\n        if (ignore && ignore(edgeIndex))\r\n            continue;\r\n        position(va, vb, edgeIndex);\r\n        var linkStyle = style ? style(edgeIndex) : 0 /* Solid */;\r\n        if (linkStyle === 0 /* Solid */) {\r\n            v3scale(vm, v3add(vm, va, vb), 0.5);\r\n            builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], edgeIndex);\r\n        }\r\n        else if (linkStyle === 1 /* Dashed */) {\r\n            v3scale(tmpV12, v3sub(tmpV12, vb, va), lengthScale);\r\n            v3sub(vb, vb, tmpV12);\r\n            builder.addFixedCountDashes(va, vb, segmentCount, edgeIndex);\r\n        }\r\n        else if (linkStyle === 2 /* Double */ || linkStyle === 3 /* OffsetDouble */ || linkStyle === 4 /* Triple */ || linkStyle === 5 /* OffsetTriple */ || linkStyle === 7 /* Aromatic */ || linkStyle === 8 /* MirroredAromatic */) {\r\n            var order = linkStyle === 2 /* Double */ || linkStyle === 3 /* OffsetDouble */ ? 2 :\r\n                linkStyle === 4 /* Triple */ || linkStyle === 5 /* OffsetTriple */ ? 3 : 1.5;\r\n            var multiRadius = 1 * (linkScale / (0.5 * order));\r\n            var absOffset = (1 - multiRadius) * linkSpacing;\r\n            v3scale(vm, v3add(vm, va, vb), 0.5);\r\n            calculateShiftDir(vShift, va, vb, referencePosition ? referencePosition(edgeIndex) : null);\r\n            if (linkStyle === 7 /* Aromatic */ || linkStyle === 8 /* MirroredAromatic */) {\r\n                builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], edgeIndex);\r\n                v3scale(tmpV12, v3sub(tmpV12, vb, va), aromaticLengthScale);\r\n                v3sub(vb, vb, tmpV12);\r\n                v3setMagnitude(vShift, vShift, absOffset * aromaticOffsetFactor);\r\n                v3sub(va, va, vShift);\r\n                v3sub(vb, vb, vShift);\r\n                builder.addFixedCountDashes(va, vb, aromaticSegmentCount, edgeIndex);\r\n                if (linkStyle === 8 /* MirroredAromatic */) {\r\n                    v3setMagnitude(vShift, vShift, absOffset * aromaticOffsetFactor * 2);\r\n                    v3add(va, va, vShift);\r\n                    v3add(vb, vb, vShift);\r\n                    builder.addFixedCountDashes(va, vb, aromaticSegmentCount, edgeIndex);\r\n                }\r\n            }\r\n            else if (linkStyle === 3 /* OffsetDouble */ || linkStyle === 5 /* OffsetTriple */) {\r\n                v3setMagnitude(vShift, vShift, absOffset * multipleOffsetFactor);\r\n                builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], edgeIndex);\r\n                v3scale(tmpV12, v3sub(tmpV12, va, vb), linkSpacing * linkScale);\r\n                v3sub(va, va, tmpV12);\r\n                if (order === 3)\r\n                    builder.add(va[0] + vShift[0], va[1] + vShift[1], va[2] + vShift[2], vm[0] + vShift[0], vm[1] + vShift[1], vm[2] + vShift[2], edgeIndex);\r\n                builder.add(va[0] - vShift[0], va[1] - vShift[1], va[2] - vShift[2], vm[0] - vShift[0], vm[1] - vShift[1], vm[2] - vShift[2], edgeIndex);\r\n            }\r\n            else {\r\n                v3setMagnitude(vShift, vShift, absOffset * 1.5);\r\n                if (order === 3)\r\n                    builder.add(va[0], va[1], va[2], vm[0], vm[1], vm[2], edgeIndex);\r\n                builder.add(va[0] + vShift[0], va[1] + vShift[1], va[2] + vShift[2], vm[0] + vShift[0], vm[1] + vShift[1], vm[2] + vShift[2], edgeIndex);\r\n                builder.add(va[0] - vShift[0], va[1] - vShift[1], va[2] - vShift[2], vm[0] - vShift[0], vm[1] - vShift[1], vm[2] - vShift[2], edgeIndex);\r\n            }\r\n        }\r\n        else if (linkStyle === 6 /* Disk */) {\r\n            v3scale(tmpV12, v3sub(tmpV12, vb, va), 0.475);\r\n            v3add(va, va, tmpV12);\r\n            v3sub(vb, vb, tmpV12);\r\n            // TODO what to do here? Line as disk doesn't work well.\r\n            builder.add(va[0], va[1], va[2], vb[0], vb[1], vb[2], edgeIndex);\r\n        }\r\n    }\r\n    return builder.getLines();\r\n}\r\n//# sourceMappingURL=link.js.map"]},"metadata":{},"sourceType":"module"}