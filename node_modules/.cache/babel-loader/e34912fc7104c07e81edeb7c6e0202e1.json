{"ast":null,"code":"/**\r\n * Copyright (c) 2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { Bond, StructureElement, Unit } from '../../../mol-model/structure';\nimport { Color } from '../../../mol-util/color';\nimport { getPalette, getPaletteParams } from '../../../mol-util/color/palette';\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { BestDatabaseSequenceMapping } from '../best-database-mapping';\nvar DefaultColor = Color(0xFAFAFA);\nvar Description = 'Assigns a color based on best dababase sequence mapping.'; // same colors for same accessions\n\nvar globalAccessionMap = new Map();\nexport var BestDatabaseSequenceMappingColorThemeParams = __assign({}, getPaletteParams({\n  type: 'colors',\n  colorList: 'set-1'\n}));\nexport function getBestDatabaseSequenceMappingColorThemeParams(ctx) {\n  return BestDatabaseSequenceMappingColorThemeParams; // TODO return copy\n}\nexport function BestDatabaseSequenceMappingColorTheme(ctx, props) {\n  var color;\n\n  if (ctx.structure) {\n    for (var _i = 0, _a = ctx.structure.models; _i < _a.length; _i++) {\n      var m = _a[_i];\n      var mapping = BestDatabaseSequenceMapping.Provider.get(m).value;\n      if (!mapping) continue;\n\n      for (var _b = 0, _c = mapping.accession; _b < _c.length; _b++) {\n        var acc = _c[_b];\n        if (!acc || globalAccessionMap.has(acc)) continue;\n        globalAccessionMap.set(acc, globalAccessionMap.size);\n      }\n    }\n\n    var l_1 = StructureElement.Location.create(ctx.structure);\n    var palette_1 = getPalette(globalAccessionMap.size + 1, props, {\n      valueLabel: function (i) {\n        return \"\" + i;\n      }\n    });\n    var colorMap_1 = new Map();\n\n    var getColor_1 = function (location) {\n      var key = BestDatabaseSequenceMapping.getKey(location);\n      if (!key) return DefaultColor;\n      if (colorMap_1.has(key)) return colorMap_1.get(key);\n      var color = palette_1.color(globalAccessionMap.get(key));\n      colorMap_1.set(key, color);\n      return color;\n    };\n\n    color = function (location) {\n      if (StructureElement.Location.is(location) && Unit.isAtomic(location.unit)) {\n        return getColor_1(location);\n      } else if (Bond.isLocation(location)) {\n        l_1.unit = location.aUnit;\n        l_1.element = location.aUnit.elements[location.aIndex];\n        return getColor_1(l_1);\n      }\n\n      return DefaultColor;\n    };\n  } else {\n    color = function () {\n      return DefaultColor;\n    };\n  }\n\n  return {\n    factory: BestDatabaseSequenceMappingColorTheme,\n    granularity: 'group',\n    preferSmoothing: true,\n    color: color,\n    props: props,\n    description: Description\n  };\n}\nexport var BestDatabaseSequenceMappingColorThemeProvider = {\n  name: 'best-sequence-database-mapping',\n  label: 'Best Database Sequence Mapping',\n  category: \"Residue Property\"\n  /* Residue */\n  ,\n  factory: BestDatabaseSequenceMappingColorTheme,\n  getParams: getBestDatabaseSequenceMappingColorThemeParams,\n  defaultValues: PD.getDefaultValues(BestDatabaseSequenceMappingColorThemeParams),\n  isApplicable: function (ctx) {\n    var _a;\n\n    return !!((_a = ctx.structure) === null || _a === void 0 ? void 0 : _a.models.some(function (m) {\n      return BestDatabaseSequenceMapping.Provider.isApplicable(m);\n    }));\n  },\n  ensureCustomProperties: {\n    attach: function (ctx, data) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var _i, _a, m;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (!data.structure) return [2\n              /*return*/\n              ];\n              _i = 0, _a = data.structure.models;\n              _b.label = 1;\n\n            case 1:\n              if (!(_i < _a.length)) return [3\n              /*break*/\n              , 4];\n              m = _a[_i];\n              return [4\n              /*yield*/\n              , BestDatabaseSequenceMapping.Provider.attach(ctx, m, void 0, true)];\n\n            case 2:\n              _b.sent();\n\n              _b.label = 3;\n\n            case 3:\n              _i++;\n              return [3\n              /*break*/\n              , 1];\n\n            case 4:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    },\n    detach: function (data) {\n      if (!data.structure) return;\n\n      for (var _i = 0, _a = data.structure.models; _i < _a.length; _i++) {\n        var m = _a[_i];\n        BestDatabaseSequenceMapping.Provider.ref(m, false);\n      }\n    }\n  }\n};","map":{"version":3,"sources":["../../../../src/mol-model-props/sequence/themes/best-database-mapping.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { Bond, StructureElement, Unit } from '../../../mol-model/structure';\r\nimport { Color } from '../../../mol-util/color';\r\nimport { getPalette, getPaletteParams } from '../../../mol-util/color/palette';\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { BestDatabaseSequenceMapping } from '../best-database-mapping';\r\nvar DefaultColor = Color(0xFAFAFA);\r\nvar Description = 'Assigns a color based on best dababase sequence mapping.';\r\n// same colors for same accessions\r\nvar globalAccessionMap = new Map();\r\nexport var BestDatabaseSequenceMappingColorThemeParams = __assign({}, getPaletteParams({ type: 'colors', colorList: 'set-1' }));\r\nexport function getBestDatabaseSequenceMappingColorThemeParams(ctx) {\r\n    return BestDatabaseSequenceMappingColorThemeParams; // TODO return copy\r\n}\r\nexport function BestDatabaseSequenceMappingColorTheme(ctx, props) {\r\n    var color;\r\n    if (ctx.structure) {\r\n        for (var _i = 0, _a = ctx.structure.models; _i < _a.length; _i++) {\r\n            var m = _a[_i];\r\n            var mapping = BestDatabaseSequenceMapping.Provider.get(m).value;\r\n            if (!mapping)\r\n                continue;\r\n            for (var _b = 0, _c = mapping.accession; _b < _c.length; _b++) {\r\n                var acc = _c[_b];\r\n                if (!acc || globalAccessionMap.has(acc))\r\n                    continue;\r\n                globalAccessionMap.set(acc, globalAccessionMap.size);\r\n            }\r\n        }\r\n        var l_1 = StructureElement.Location.create(ctx.structure);\r\n        var palette_1 = getPalette(globalAccessionMap.size + 1, props, { valueLabel: function (i) { return \"\" + i; } });\r\n        var colorMap_1 = new Map();\r\n        var getColor_1 = function (location) {\r\n            var key = BestDatabaseSequenceMapping.getKey(location);\r\n            if (!key)\r\n                return DefaultColor;\r\n            if (colorMap_1.has(key))\r\n                return colorMap_1.get(key);\r\n            var color = palette_1.color(globalAccessionMap.get(key));\r\n            colorMap_1.set(key, color);\r\n            return color;\r\n        };\r\n        color = function (location) {\r\n            if (StructureElement.Location.is(location) && Unit.isAtomic(location.unit)) {\r\n                return getColor_1(location);\r\n            }\r\n            else if (Bond.isLocation(location)) {\r\n                l_1.unit = location.aUnit;\r\n                l_1.element = location.aUnit.elements[location.aIndex];\r\n                return getColor_1(l_1);\r\n            }\r\n            return DefaultColor;\r\n        };\r\n    }\r\n    else {\r\n        color = function () { return DefaultColor; };\r\n    }\r\n    return {\r\n        factory: BestDatabaseSequenceMappingColorTheme,\r\n        granularity: 'group',\r\n        preferSmoothing: true,\r\n        color: color,\r\n        props: props,\r\n        description: Description,\r\n    };\r\n}\r\nexport var BestDatabaseSequenceMappingColorThemeProvider = {\r\n    name: 'best-sequence-database-mapping',\r\n    label: 'Best Database Sequence Mapping',\r\n    category: \"Residue Property\" /* Residue */,\r\n    factory: BestDatabaseSequenceMappingColorTheme,\r\n    getParams: getBestDatabaseSequenceMappingColorThemeParams,\r\n    defaultValues: PD.getDefaultValues(BestDatabaseSequenceMappingColorThemeParams),\r\n    isApplicable: function (ctx) { var _a; return !!((_a = ctx.structure) === null || _a === void 0 ? void 0 : _a.models.some(function (m) { return BestDatabaseSequenceMapping.Provider.isApplicable(m); })); },\r\n    ensureCustomProperties: {\r\n        attach: function (ctx, data) { return __awaiter(void 0, void 0, void 0, function () {\r\n            var _i, _a, m;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!data.structure)\r\n                            return [2 /*return*/];\r\n                        _i = 0, _a = data.structure.models;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        if (!(_i < _a.length)) return [3 /*break*/, 4];\r\n                        m = _a[_i];\r\n                        return [4 /*yield*/, BestDatabaseSequenceMapping.Provider.attach(ctx, m, void 0, true)];\r\n                    case 2:\r\n                        _b.sent();\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        _i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); },\r\n        detach: function (data) {\r\n            if (!data.structure)\r\n                return;\r\n            for (var _i = 0, _a = data.structure.models; _i < _a.length; _i++) {\r\n                var m = _a[_i];\r\n                BestDatabaseSequenceMapping.Provider.ref(m, false);\r\n            }\r\n        }\r\n    }\r\n};\r\n//# sourceMappingURL=best-database-mapping.js.map"]},"metadata":{},"sourceType":"module"}