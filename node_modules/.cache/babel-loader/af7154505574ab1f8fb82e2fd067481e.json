{"ast":null,"code":"/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __assign } from \"tslib\";\nimport { UUID } from '../mol-util';\nimport { ParamDefinition as PD } from '../mol-util/param-definition';\nexport { StateAction };\nvar StateAction;\n\n(function (StateAction) {\n  function create(definition) {\n    var action = {\n      create: function (params) {\n        return {\n          action: action,\n          params: params\n        };\n      },\n      id: UUID.create22(),\n      definition: definition,\n      createDefaultParams: function (a, globalCtx) {\n        return definition.params ? PD.getDefaultValues(definition.params(a, globalCtx)) : {};\n      }\n    };\n    return action;\n  }\n\n  StateAction.create = create;\n\n  function fromTransformer(transformer) {\n    var def = transformer.definition;\n    return create({\n      from: def.from,\n      display: def.display,\n      params: def.params,\n      isApplicable: transformer.definition.isApplicable ? function (a, t, ctx) {\n        return transformer.definition.isApplicable(a, ctx);\n      } : void 0,\n      run: function (_a) {\n        var cell = _a.cell,\n            state = _a.state,\n            params = _a.params;\n        var tree = state.build().to(cell.transform.ref).apply(transformer, params);\n        return state.updateTree(tree);\n      }\n    });\n  }\n\n  StateAction.fromTransformer = fromTransformer;\n  var Builder;\n\n  (function (Builder) {\n    function root(info) {\n      return function (def) {\n        return create(__assign({\n          from: info.from instanceof Array ? info.from : !!info.from ? [info.from] : [],\n          display: typeof info.display === 'string' ? {\n            name: info.display\n          } : !!info.display ? info.display : {\n            name: 'Unnamed State Action'\n          },\n          params: typeof info.params === 'object' ? function () {\n            return info.params;\n          } : !!info.params ? info.params : void 0,\n          isApplicable: info.isApplicable\n        }, typeof def === 'function' ? {\n          run: def\n        } : def));\n      };\n    }\n\n    Builder.build = function (info) {\n      return root(info);\n    };\n  })(Builder = StateAction.Builder || (StateAction.Builder = {}));\n\n  StateAction.build = Builder.build;\n})(StateAction || (StateAction = {}));","map":{"version":3,"sources":["../../src/mol-state/action.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { UUID } from '../mol-util';\r\nimport { ParamDefinition as PD } from '../mol-util/param-definition';\r\nexport { StateAction };\r\nvar StateAction;\r\n(function (StateAction) {\r\n    function create(definition) {\r\n        var action = {\r\n            create: function (params) { return { action: action, params: params }; },\r\n            id: UUID.create22(),\r\n            definition: definition,\r\n            createDefaultParams: function (a, globalCtx) { return definition.params ? PD.getDefaultValues(definition.params(a, globalCtx)) : {}; }\r\n        };\r\n        return action;\r\n    }\r\n    StateAction.create = create;\r\n    function fromTransformer(transformer) {\r\n        var def = transformer.definition;\r\n        return create({\r\n            from: def.from,\r\n            display: def.display,\r\n            params: def.params,\r\n            isApplicable: transformer.definition.isApplicable\r\n                ? function (a, t, ctx) { return transformer.definition.isApplicable(a, ctx); }\r\n                : void 0,\r\n            run: function (_a) {\r\n                var cell = _a.cell, state = _a.state, params = _a.params;\r\n                var tree = state.build().to(cell.transform.ref).apply(transformer, params);\r\n                return state.updateTree(tree);\r\n            }\r\n        });\r\n    }\r\n    StateAction.fromTransformer = fromTransformer;\r\n    var Builder;\r\n    (function (Builder) {\r\n        function root(info) {\r\n            return function (def) { return create(__assign({ from: info.from instanceof Array\r\n                    ? info.from\r\n                    : !!info.from ? [info.from] : [], display: typeof info.display === 'string'\r\n                    ? { name: info.display }\r\n                    : !!info.display\r\n                        ? info.display\r\n                        : { name: 'Unnamed State Action' }, params: typeof info.params === 'object'\r\n                    ? function () { return info.params; }\r\n                    : !!info.params\r\n                        ? info.params\r\n                        : void 0, isApplicable: info.isApplicable }, (typeof def === 'function'\r\n                ? { run: def }\r\n                : def))); };\r\n        }\r\n        Builder.build = function (info) { return root(info); };\r\n    })(Builder = StateAction.Builder || (StateAction.Builder = {}));\r\n    StateAction.build = Builder.build;\r\n})(StateAction || (StateAction = {}));\r\n//# sourceMappingURL=action.js.map"]},"metadata":{},"sourceType":"module"}