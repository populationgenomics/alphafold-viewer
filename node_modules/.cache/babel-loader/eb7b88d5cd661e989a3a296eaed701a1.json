{"ast":null,"code":"/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nimport { __awaiter, __extends, __generator } from \"tslib\";\nimport { PluginStateTransform, PluginStateObject } from '../../mol-plugin-state/objects';\nimport { StateTransformer } from '../../mol-state';\nimport { Task } from '../../mol-task';\nimport { ParamDefinition } from '../../mol-util/param-definition';\nimport { shallowEqualObjects } from '../../mol-util';\nexport { PluginBehavior };\nvar PluginBehavior;\n\n(function (PluginBehavior) {\n  var Root =\n  /** @class */\n  function (_super) {\n    __extends(Root, _super);\n\n    function Root() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    return Root;\n  }(PluginStateObject.Create({\n    name: 'Root',\n    typeClass: 'Root'\n  }));\n\n  PluginBehavior.Root = Root;\n\n  var Category =\n  /** @class */\n  function (_super) {\n    __extends(Category, _super);\n\n    function Category() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    return Category;\n  }(PluginStateObject.Create({\n    name: 'Category',\n    typeClass: 'Object'\n  }));\n\n  PluginBehavior.Category = Category;\n\n  var Behavior =\n  /** @class */\n  function (_super) {\n    __extends(Behavior, _super);\n\n    function Behavior() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    return Behavior;\n  }(PluginStateObject.CreateBehavior({\n    name: 'Behavior'\n  }));\n\n  PluginBehavior.Behavior = Behavior;\n  PluginBehavior.Categories = {\n    'common': 'Common',\n    'representation': 'Representation',\n    'interaction': 'Interaction',\n    'custom-props': 'Custom Properties',\n    'misc': 'Miscellaneous'\n  };\n  PluginBehavior.CreateCategory = PluginStateTransform.BuiltIn({\n    name: 'create-behavior-category',\n    display: {\n      name: 'Behavior Category'\n    },\n    from: Root,\n    to: Category,\n    params: {\n      label: ParamDefinition.Text('', {\n        isHidden: true\n      })\n    }\n  })({\n    apply: function (_a) {\n      var params = _a.params;\n      return new Category({}, {\n        label: params.label\n      });\n    }\n  });\n  var categoryMap = new Map();\n\n  function getCategoryId(t) {\n    return categoryMap.get(t.id);\n  }\n\n  PluginBehavior.getCategoryId = getCategoryId;\n\n  function create(params) {\n    var t = PluginStateTransform.CreateBuiltIn({\n      name: params.name,\n      display: params.display,\n      from: [Root],\n      to: [Behavior],\n      params: params.params,\n      apply: function (_a, ctx) {\n        var p = _a.params;\n        var label = params.label ? params.label(p) : {\n          label: params.display.name,\n          description: params.display.description\n        };\n        return new Behavior(new params.ctor(ctx, p), label);\n      },\n      update: function (_a) {\n        var _this = this;\n\n        var b = _a.b,\n            newParams = _a.newParams;\n        return Task.create('Update Behavior', function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var updated;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  if (!b.data.update) return [2\n                  /*return*/\n                  , StateTransformer.UpdateResult.Unchanged];\n                  return [4\n                  /*yield*/\n                  , b.data.update(newParams)];\n\n                case 1:\n                  updated = _a.sent();\n                  return [2\n                  /*return*/\n                  , updated ? StateTransformer.UpdateResult.Updated : StateTransformer.UpdateResult.Unchanged];\n              }\n            });\n          });\n        });\n      },\n      canAutoUpdate: params.canAutoUpdate\n    });\n    categoryMap.set(t.id, params.category);\n    return t;\n  }\n\n  PluginBehavior.create = create;\n\n  function simpleCommandHandler(cmd, action) {\n    return (\n      /** @class */\n      function () {\n        // TODO can't be private due to bug with generating declerations, see https://github.com/Microsoft/TypeScript/issues/17293\n        function class_1(\n        /** private */\n        ctx) {\n          this.ctx = ctx; // TODO can't be private due to bug with generating declerations, see https://github.com/Microsoft/TypeScript/issues/17293\n\n          /** private */\n\n          this.sub = void 0;\n        }\n\n        class_1.prototype.register = function () {\n          var _this = this;\n\n          this.sub = cmd.subscribe(this.ctx, function (data) {\n            return action(data, _this.ctx);\n          });\n        };\n\n        class_1.prototype.unregister = function () {\n          if (this.sub) this.sub.unsubscribe();\n          this.sub = void 0;\n        };\n\n        return class_1;\n      }()\n    );\n  }\n\n  PluginBehavior.simpleCommandHandler = simpleCommandHandler;\n\n  var Handler =\n  /** @class */\n  function () {\n    function Handler(ctx, params) {\n      this.ctx = ctx;\n      this.params = params;\n      this.subs = [];\n    }\n\n    Handler.prototype.subscribeCommand = function (cmd, action) {\n      this.subs.push(cmd.subscribe(this.ctx, action));\n    };\n\n    Handler.prototype.subscribeObservable = function (o, action) {\n      this.subs.push(o.subscribe(action));\n    };\n\n    Handler.prototype.track = function (sub) {\n      this.subs.push(sub);\n    };\n\n    Handler.prototype.unregister = function () {\n      for (var _i = 0, _a = this.subs; _i < _a.length; _i++) {\n        var s = _a[_i];\n        s.unsubscribe();\n      }\n\n      this.subs = [];\n    };\n\n    Handler.prototype.update = function (params) {\n      if (shallowEqualObjects(params, this.params)) return false;\n      this.params = params;\n      return true;\n    };\n\n    return Handler;\n  }();\n\n  PluginBehavior.Handler = Handler;\n\n  var WithSubscribers =\n  /** @class */\n  function () {\n    function WithSubscribers(plugin, params) {\n      this.plugin = plugin;\n      this.params = params;\n      this.subs = [];\n    }\n\n    WithSubscribers.prototype.subscribeCommand = function (cmd, action) {\n      this.subs.push(cmd.subscribe(this.plugin, action));\n    };\n\n    WithSubscribers.prototype.subscribeObservable = function (o, action) {\n      this.subs.push(o.subscribe(action));\n    };\n\n    WithSubscribers.prototype.unregister = function () {\n      for (var _i = 0, _a = this.subs; _i < _a.length; _i++) {\n        var s = _a[_i];\n        s.unsubscribe();\n      }\n\n      this.subs = [];\n    };\n\n    return WithSubscribers;\n  }();\n\n  PluginBehavior.WithSubscribers = WithSubscribers;\n})(PluginBehavior || (PluginBehavior = {}));","map":{"version":3,"sources":["../../../src/mol-plugin/behavior/behavior.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nimport { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { PluginStateTransform, PluginStateObject } from '../../mol-plugin-state/objects';\r\nimport { StateTransformer } from '../../mol-state';\r\nimport { Task } from '../../mol-task';\r\nimport { ParamDefinition } from '../../mol-util/param-definition';\r\nimport { shallowEqualObjects } from '../../mol-util';\r\nexport { PluginBehavior };\r\nvar PluginBehavior;\r\n(function (PluginBehavior) {\r\n    var Root = /** @class */ (function (_super) {\r\n        __extends(Root, _super);\r\n        function Root() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        return Root;\r\n    }(PluginStateObject.Create({ name: 'Root', typeClass: 'Root' })));\r\n    PluginBehavior.Root = Root;\r\n    var Category = /** @class */ (function (_super) {\r\n        __extends(Category, _super);\r\n        function Category() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        return Category;\r\n    }(PluginStateObject.Create({ name: 'Category', typeClass: 'Object' })));\r\n    PluginBehavior.Category = Category;\r\n    var Behavior = /** @class */ (function (_super) {\r\n        __extends(Behavior, _super);\r\n        function Behavior() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        return Behavior;\r\n    }(PluginStateObject.CreateBehavior({ name: 'Behavior' })));\r\n    PluginBehavior.Behavior = Behavior;\r\n    PluginBehavior.Categories = {\r\n        'common': 'Common',\r\n        'representation': 'Representation',\r\n        'interaction': 'Interaction',\r\n        'custom-props': 'Custom Properties',\r\n        'misc': 'Miscellaneous'\r\n    };\r\n    PluginBehavior.CreateCategory = PluginStateTransform.BuiltIn({\r\n        name: 'create-behavior-category',\r\n        display: { name: 'Behavior Category' },\r\n        from: Root,\r\n        to: Category,\r\n        params: {\r\n            label: ParamDefinition.Text('', { isHidden: true }),\r\n        }\r\n    })({\r\n        apply: function (_a) {\r\n            var params = _a.params;\r\n            return new Category({}, { label: params.label });\r\n        }\r\n    });\r\n    var categoryMap = new Map();\r\n    function getCategoryId(t) {\r\n        return categoryMap.get(t.id);\r\n    }\r\n    PluginBehavior.getCategoryId = getCategoryId;\r\n    function create(params) {\r\n        var t = PluginStateTransform.CreateBuiltIn({\r\n            name: params.name,\r\n            display: params.display,\r\n            from: [Root],\r\n            to: [Behavior],\r\n            params: params.params,\r\n            apply: function (_a, ctx) {\r\n                var p = _a.params;\r\n                var label = params.label ? params.label(p) : { label: params.display.name, description: params.display.description };\r\n                return new Behavior(new params.ctor(ctx, p), label);\r\n            },\r\n            update: function (_a) {\r\n                var _this = this;\r\n                var b = _a.b, newParams = _a.newParams;\r\n                return Task.create('Update Behavior', function () { return __awaiter(_this, void 0, void 0, function () {\r\n                    var updated;\r\n                    return __generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                if (!b.data.update)\r\n                                    return [2 /*return*/, StateTransformer.UpdateResult.Unchanged];\r\n                                return [4 /*yield*/, b.data.update(newParams)];\r\n                            case 1:\r\n                                updated = _a.sent();\r\n                                return [2 /*return*/, updated ? StateTransformer.UpdateResult.Updated : StateTransformer.UpdateResult.Unchanged];\r\n                        }\r\n                    });\r\n                }); });\r\n            },\r\n            canAutoUpdate: params.canAutoUpdate\r\n        });\r\n        categoryMap.set(t.id, params.category);\r\n        return t;\r\n    }\r\n    PluginBehavior.create = create;\r\n    function simpleCommandHandler(cmd, action) {\r\n        return /** @class */ (function () {\r\n            // TODO can't be private due to bug with generating declerations, see https://github.com/Microsoft/TypeScript/issues/17293\r\n            function class_1(/** private */ ctx) {\r\n                this.ctx = ctx;\r\n                // TODO can't be private due to bug with generating declerations, see https://github.com/Microsoft/TypeScript/issues/17293\r\n                /** private */ this.sub = void 0;\r\n            }\r\n            class_1.prototype.register = function () {\r\n                var _this = this;\r\n                this.sub = cmd.subscribe(this.ctx, function (data) { return action(data, _this.ctx); });\r\n            };\r\n            class_1.prototype.unregister = function () {\r\n                if (this.sub)\r\n                    this.sub.unsubscribe();\r\n                this.sub = void 0;\r\n            };\r\n            return class_1;\r\n        }());\r\n    }\r\n    PluginBehavior.simpleCommandHandler = simpleCommandHandler;\r\n    var Handler = /** @class */ (function () {\r\n        function Handler(ctx, params) {\r\n            this.ctx = ctx;\r\n            this.params = params;\r\n            this.subs = [];\r\n        }\r\n        Handler.prototype.subscribeCommand = function (cmd, action) {\r\n            this.subs.push(cmd.subscribe(this.ctx, action));\r\n        };\r\n        Handler.prototype.subscribeObservable = function (o, action) {\r\n            this.subs.push(o.subscribe(action));\r\n        };\r\n        Handler.prototype.track = function (sub) {\r\n            this.subs.push(sub);\r\n        };\r\n        Handler.prototype.unregister = function () {\r\n            for (var _i = 0, _a = this.subs; _i < _a.length; _i++) {\r\n                var s = _a[_i];\r\n                s.unsubscribe();\r\n            }\r\n            this.subs = [];\r\n        };\r\n        Handler.prototype.update = function (params) {\r\n            if (shallowEqualObjects(params, this.params))\r\n                return false;\r\n            this.params = params;\r\n            return true;\r\n        };\r\n        return Handler;\r\n    }());\r\n    PluginBehavior.Handler = Handler;\r\n    var WithSubscribers = /** @class */ (function () {\r\n        function WithSubscribers(plugin, params) {\r\n            this.plugin = plugin;\r\n            this.params = params;\r\n            this.subs = [];\r\n        }\r\n        WithSubscribers.prototype.subscribeCommand = function (cmd, action) {\r\n            this.subs.push(cmd.subscribe(this.plugin, action));\r\n        };\r\n        WithSubscribers.prototype.subscribeObservable = function (o, action) {\r\n            this.subs.push(o.subscribe(action));\r\n        };\r\n        WithSubscribers.prototype.unregister = function () {\r\n            for (var _i = 0, _a = this.subs; _i < _a.length; _i++) {\r\n                var s = _a[_i];\r\n                s.unsubscribe();\r\n            }\r\n            this.subs = [];\r\n        };\r\n        return WithSubscribers;\r\n    }());\r\n    PluginBehavior.WithSubscribers = WithSubscribers;\r\n})(PluginBehavior || (PluginBehavior = {}));\r\n//# sourceMappingURL=behavior.js.map"]},"metadata":{},"sourceType":"module"}