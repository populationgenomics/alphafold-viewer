{"ast":null,"code":"/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { createRenderable } from '../renderable';\nimport { createGraphicsRenderItem } from '../webgl/render-item';\nimport { GlobalUniformSchema, BaseSchema, AttributeSpec, UniformSpec, InternalSchema, SizeSchema, TextureSpec, ElementsSpec, ValueSpec, GlobalTextureSchema } from './schema';\nimport { TextShaderCode } from '../shader-code';\nimport { ValueCell } from '../../mol-util';\nexport var TextSchema = __assign(__assign(__assign({}, BaseSchema), SizeSchema), {\n  aGroup: AttributeSpec('float32', 1, 0),\n  aPosition: AttributeSpec('float32', 3, 0),\n  aMapping: AttributeSpec('float32', 2, 0),\n  aDepth: AttributeSpec('float32', 1, 0),\n  elements: ElementsSpec('uint32'),\n  aTexCoord: AttributeSpec('float32', 2, 0),\n  tFont: TextureSpec('image-uint8', 'alpha', 'ubyte', 'linear'),\n  padding: ValueSpec('number'),\n  uBorderWidth: UniformSpec('f'),\n  uBorderColor: UniformSpec('v3'),\n  uOffsetX: UniformSpec('f'),\n  uOffsetY: UniformSpec('f'),\n  uOffsetZ: UniformSpec('f'),\n  uBackgroundColor: UniformSpec('v3'),\n  uBackgroundOpacity: UniformSpec('f')\n});\nexport function TextRenderable(ctx, id, values, state, materialId) {\n  var schema = __assign(__assign(__assign(__assign({}, GlobalUniformSchema), GlobalTextureSchema), InternalSchema), TextSchema);\n\n  var internalValues = {\n    uObjectId: ValueCell.create(id)\n  };\n  var shaderCode = TextShaderCode;\n  var renderItem = createGraphicsRenderItem(ctx, 'triangles', shaderCode, schema, __assign(__assign({}, values), internalValues), materialId);\n  return createRenderable(renderItem, values, state);\n}","map":{"version":3,"sources":["../../../src/mol-gl/renderable/text.ts"],"names":[],"mappings":"AAAA;;;;AAIG;;AAEH,SAAsC,gBAAtC,QAA8D,eAA9D;AAEA,SAAS,wBAAT,QAAyC,sBAAzC;AACA,SAAS,mBAAT,EAA8B,UAA9B,EAA0C,aAA1C,EAAyD,WAAzD,EAA8E,cAA9E,EAA8F,UAA9F,EAA0H,WAA1H,EAAuI,YAAvI,EAAqJ,SAArJ,EAAgK,mBAAhK,QAA2L,UAA3L;AACA,SAAS,cAAT,QAA+B,gBAA/B;AACA,SAAS,SAAT,QAA0B,gBAA1B;AAEA,OAAO,IAAM,UAAU,GAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAChB,UADgB,CAAA,EAEhB,UAFgB,CAAA,EAEN;AACb,EAAA,MAAM,EAAE,aAAa,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CADR;AAEb,EAAA,SAAS,EAAE,aAAa,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CAFX;AAGb,EAAA,QAAQ,EAAE,aAAa,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CAHV;AAIb,EAAA,MAAM,EAAE,aAAa,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CAJR;AAKb,EAAA,QAAQ,EAAE,YAAY,CAAC,QAAD,CALT;AAOb,EAAA,SAAS,EAAE,aAAa,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CAPX;AAQb,EAAA,KAAK,EAAE,WAAW,CAAC,aAAD,EAAgB,OAAhB,EAAyB,OAAzB,EAAkC,QAAlC,CARL;AASb,EAAA,OAAO,EAAE,SAAS,CAAC,QAAD,CATL;AAWb,EAAA,YAAY,EAAE,WAAW,CAAC,GAAD,CAXZ;AAYb,EAAA,YAAY,EAAE,WAAW,CAAC,IAAD,CAZZ;AAab,EAAA,QAAQ,EAAE,WAAW,CAAC,GAAD,CAbR;AAcb,EAAA,QAAQ,EAAE,WAAW,CAAC,GAAD,CAdR;AAeb,EAAA,QAAQ,EAAE,WAAW,CAAC,GAAD,CAfR;AAgBb,EAAA,gBAAgB,EAAE,WAAW,CAAC,IAAD,CAhBhB;AAiBb,EAAA,kBAAkB,EAAE,WAAW,CAAC,GAAD;AAjBlB,CAFM,CAAhB;AAwBP,OAAM,SAAU,cAAV,CAAyB,GAAzB,EAA4C,EAA5C,EAAwD,MAAxD,EAA4E,KAA5E,EAAoG,UAApG,EAAsH;AACxH,MAAM,MAAM,GAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,mBAAR,CAAA,EAAgC,mBAAhC,CAAA,EAAwD,cAAxD,CAAA,EAA2E,UAA3E,CAAZ;;AACA,MAAM,cAAc,GAAmB;AACnC,IAAA,SAAS,EAAE,SAAS,CAAC,MAAV,CAAiB,EAAjB;AADwB,GAAvC;AAGA,MAAM,UAAU,GAAG,cAAnB;AACA,MAAM,UAAU,GAAG,wBAAwB,CAAC,GAAD,EAAM,WAAN,EAAmB,UAAnB,EAA+B,MAA/B,EAAqC,QAAA,CAAA,QAAA,CAAA,EAAA,EAAO,MAAP,CAAA,EAAkB,cAAlB,CAArC,EAAyE,UAAzE,CAA3C;AACA,SAAO,gBAAgB,CAAC,UAAD,EAAa,MAAb,EAAqB,KAArB,CAAvB;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { createRenderable } from '../renderable';\r\nimport { createGraphicsRenderItem } from '../webgl/render-item';\r\nimport { GlobalUniformSchema, BaseSchema, AttributeSpec, UniformSpec, InternalSchema, SizeSchema, TextureSpec, ElementsSpec, ValueSpec, GlobalTextureSchema } from './schema';\r\nimport { TextShaderCode } from '../shader-code';\r\nimport { ValueCell } from '../../mol-util';\r\nexport var TextSchema = __assign(__assign(__assign({}, BaseSchema), SizeSchema), { aGroup: AttributeSpec('float32', 1, 0), aPosition: AttributeSpec('float32', 3, 0), aMapping: AttributeSpec('float32', 2, 0), aDepth: AttributeSpec('float32', 1, 0), elements: ElementsSpec('uint32'), aTexCoord: AttributeSpec('float32', 2, 0), tFont: TextureSpec('image-uint8', 'alpha', 'ubyte', 'linear'), padding: ValueSpec('number'), uBorderWidth: UniformSpec('f'), uBorderColor: UniformSpec('v3'), uOffsetX: UniformSpec('f'), uOffsetY: UniformSpec('f'), uOffsetZ: UniformSpec('f'), uBackgroundColor: UniformSpec('v3'), uBackgroundOpacity: UniformSpec('f') });\r\nexport function TextRenderable(ctx, id, values, state, materialId) {\r\n    var schema = __assign(__assign(__assign(__assign({}, GlobalUniformSchema), GlobalTextureSchema), InternalSchema), TextSchema);\r\n    var internalValues = {\r\n        uObjectId: ValueCell.create(id),\r\n    };\r\n    var shaderCode = TextShaderCode;\r\n    var renderItem = createGraphicsRenderItem(ctx, 'triangles', shaderCode, schema, __assign(__assign({}, values), internalValues), materialId);\r\n    return createRenderable(renderItem, values, state);\r\n}\r\n//# sourceMappingURL=text.js.map"]},"metadata":{},"sourceType":"module"}