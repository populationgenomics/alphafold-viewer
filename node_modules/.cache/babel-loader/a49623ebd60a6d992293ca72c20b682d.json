{"ast":null,"code":"/**\r\n * Copyright (c) 2017 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\nvar UniqueArray;\n\n(function (UniqueArray) {\n  function create() {\n    return {\n      keys: new Set(),\n      array: []\n    };\n  }\n\n  UniqueArray.create = create;\n\n  function add(_a, key, value) {\n    var keys = _a.keys,\n        array = _a.array;\n    if (keys.has(key)) return false;\n    keys.add(key);\n    array[array.length] = value;\n    return true;\n  }\n\n  UniqueArray.add = add;\n\n  function has(_a, key) {\n    var keys = _a.keys;\n    return keys.has(key);\n  }\n\n  UniqueArray.has = has;\n})(UniqueArray || (UniqueArray = {}));\n\nexport { UniqueArray };","map":{"version":3,"sources":["../../../src/mol-data/generic/unique-array.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AAOH,IAAU,WAAV;;AAAA,CAAA,UAAU,WAAV,EAAqB;AACjB,WAAgB,MAAhB,GAAsB;AAClB,WAAO;AAAE,MAAA,IAAI,EAAE,IAAI,GAAJ,EAAR;AAAsB,MAAA,KAAK,EAAE;AAA7B,KAAP;AACH;;AAFe,EAAA,WAAA,CAAA,MAAA,GAAM,MAAN;;AAIhB,WAAgB,GAAhB,CAA0B,EAA1B,EAA8D,GAA9D,EAAsE,KAAtE,EAA8E;QAAlD,IAAI,GAAA,EAAA,CAAA,I;QAAE,KAAK,GAAA,EAAA,CAAA,K;AACnC,QAAI,IAAI,CAAC,GAAL,CAAS,GAAT,CAAJ,EAAmB,OAAO,KAAP;AACnB,IAAA,IAAI,CAAC,GAAL,CAAS,GAAT;AACA,IAAA,KAAK,CAAC,KAAK,CAAC,MAAP,CAAL,GAAsB,KAAtB;AACA,WAAO,IAAP;AACH;;AALe,EAAA,WAAA,CAAA,GAAA,GAAG,GAAH;;AAOhB,WAAgB,GAAhB,CAA0B,EAA1B,EAAuD,GAAvD,EAA6D;QAAjC,IAAI,GAAA,EAAA,CAAA,I;AAC5B,WAAO,IAAI,CAAC,GAAL,CAAS,GAAT,CAAP;AACH;;AAFe,EAAA,WAAA,CAAA,GAAA,GAAG,GAAH;AAGnB,CAfD,EAAU,WAAW,KAAX,WAAW,GAAA,EAAA,CAArB;;AAiBA,SAAS,WAAT","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2017 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\nvar UniqueArray;\r\n(function (UniqueArray) {\r\n    function create() {\r\n        return { keys: new Set(), array: [] };\r\n    }\r\n    UniqueArray.create = create;\r\n    function add(_a, key, value) {\r\n        var keys = _a.keys, array = _a.array;\r\n        if (keys.has(key))\r\n            return false;\r\n        keys.add(key);\r\n        array[array.length] = value;\r\n        return true;\r\n    }\r\n    UniqueArray.add = add;\r\n    function has(_a, key) {\r\n        var keys = _a.keys;\r\n        return keys.has(key);\r\n    }\r\n    UniqueArray.has = has;\r\n})(UniqueArray || (UniqueArray = {}));\r\nexport { UniqueArray };\r\n//# sourceMappingURL=unique-array.js.map"]},"metadata":{},"sourceType":"module"}