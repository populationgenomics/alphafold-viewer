{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/Projects/AlphaFoldVisualisation/alphafold-viewer/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport Viewer from \"./viewer\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [url, setUrl] = useState(\"\");\n  const [searchResults, setSearchResults] = useState(null);\n\n  const clear = event => {\n    setUrl(\"\");\n  }; // const handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n  //     event.preventDefault();\n  //     const form = event.currentTarget;\n  //     const formElements = form.elements as typeof form.elements & {\n  //         url: { value: string };\n  //     };\n  //     setUrl(formElements.url.value);\n  // };\n\n\n  const handleSearch = async event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const formElements = form.elements;\n    const response = await fetch(`https://mygene.info/v3/query?q=${formElements.searchTerm.value}&fields=symbol%2C%20name%2C%20entrezgene&species=human&entrezonly=true`);\n    const data = await response.json();\n    const hits = data.hits;\n    hits.forEach(item => {\n      // console.table(item);\n      async function seek() {\n        try {\n          let res = await fetch(\"http://rest.genenames.org/fetch/symbol/\" + item.symbol, {\n            headers: {\n              Accept: \"application/json\"\n            }\n          });\n          let data = await res.json();\n          console.log(data.response()); // return await res.json();\n        } catch (error) {\n          console.log(error);\n        }\n      }\n\n      seek();\n    });\n    setSearchResults(data.hits);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AlphaFold Protein Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Search protein or gene:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"searchTerm\",\n          style: {\n            width: 600\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchResults && searchResults.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: [item.name, \" \", item.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: url && /*#__PURE__*/_jsxDEV(Viewer, {\n        left: 250,\n        top: 250,\n        url: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"hFgkDFAuzpBqHNLdUR32ZrdnY8s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/daniel/Documents/Projects/AlphaFoldVisualisation/alphafold-viewer/src/App.tsx"],"names":["Viewer","React","useState","App","url","setUrl","searchResults","setSearchResults","clear","event","handleSearch","preventDefault","form","currentTarget","formElements","elements","response","fetch","searchTerm","value","data","json","hits","forEach","item","seek","res","symbol","headers","Accept","console","log","error","width","map","name"],"mappings":"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","sourcesContent":["import Viewer from \"./viewer\";\nimport React, { useState } from \"react\";\n\ninterface searchResultsHits {\n    entrezgeneID: string;\n    symbol: string;\n    score: number;\n    _id: string;\n    name: string;\n}\n\nfunction App() {\n    const [url, setUrl] = useState(\"\");\n    const [searchResults, setSearchResults] = useState<\n        searchResultsHits[] | null\n    >(null);\n\n    const clear = (event: React.MouseEvent) => {\n        setUrl(\"\");\n    };\n\n    // const handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    //     event.preventDefault();\n    //     const form = event.currentTarget;\n    //     const formElements = form.elements as typeof form.elements & {\n    //         url: { value: string };\n    //     };\n    //     setUrl(formElements.url.value);\n    // };\n\n    const handleSearch = async (\n        event: React.SyntheticEvent<HTMLFormElement>\n    ) => {\n        event.preventDefault();\n        const form = event.currentTarget;\n        const formElements = form.elements as typeof form.elements & {\n            searchTerm: { value: string };\n        };\n        const response = await fetch(\n            `https://mygene.info/v3/query?q=${formElements.searchTerm.value}&fields=symbol%2C%20name%2C%20entrezgene&species=human&entrezonly=true`\n        );\n        const data = await response.json();\n        const hits: searchResultsHits[] = data.hits;\n        hits.forEach((item) => {\n            // console.table(item);\n            async function seek() {\n                try {\n                    let res = await fetch(\n                        \"http://rest.genenames.org/fetch/symbol/\" + item.symbol,\n                        {\n                            headers: {\n                                Accept: \"application/json\",\n                            },\n                        }\n                    );\n                    let data = await res.json();\n                    console.log(data.response());\n                    // return await res.json();\n                } catch (error) {\n                    console.log(error);\n                }\n            }\n            seek();\n        });\n        setSearchResults(data.hits);\n    };\n\n    return (\n        <>\n            <h1>AlphaFold Protein Viewer</h1>\n            {/* <form id=\"alphafold\" onSubmit={handleSubmit}>\n                <label>\n                    Submit Alphafold URL:\n                    <input type=\"text\" id=\"url\" style={{ width: 600 }} />\n                </label>\n                <input type=\"submit\" />\n            </form> */}\n            <form onSubmit={handleSearch}>\n                <label>\n                    Search protein or gene:\n                    <input type=\"text\" id=\"searchTerm\" style={{ width: 600 }} />\n                </label>\n                <input type=\"submit\" />\n            </form>\n            <br />\n            <div>\n                {searchResults &&\n                    searchResults.map((item) => (\n                        <>\n                            <button>\n                                {item.name} {item.symbol}\n                            </button>\n                            <br />\n                        </>\n                    ))}\n            </div>\n            <div>{url && <Viewer left={250} top={250} url={url}></Viewer>}</div>\n        </>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}