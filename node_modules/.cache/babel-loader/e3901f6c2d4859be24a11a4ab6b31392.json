{"ast":null,"code":"/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n *\r\n * based in part on NGL (https://github.com/arose/ngl)\r\n */\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\nimport { Features } from './features';\nimport { typeSymbol, compId, atomId } from '../chemistry/util';\nimport { isTransitionMetal, isHalogen } from '../../../mol-model/structure/model/properties/atomic/types';\nimport { AminoAcidNames, BaseNames, ProteinBackboneAtoms, NucleicBackboneAtoms } from '../../../mol-model/structure/model/types';\nexport var MetalCoordinationParams = {\n  distanceMax: PD.Numeric(3.0, {\n    min: 1,\n    max: 5,\n    step: 0.1\n  })\n};\nvar IonicTypeMetals = [\"LI\"\n/* LI */\n, \"NA\"\n/* NA */\n, \"K\"\n/* K */\n, \"RB\"\n/* RB */\n, \"CS\"\n/* CS */\n, \"MG\"\n/* MG */\n, \"CA\"\n/* CA */\n, \"SR\"\n/* SR */\n, \"BA\"\n/* BA */\n, \"AL\"\n/* AL */\n, \"GA\"\n/* GA */\n, \"IN\"\n/* IN */\n, \"TL\"\n/* TL */\n, \"SC\"\n/* SC */\n, \"SN\"\n/* SN */\n, \"PB\"\n/* PB */\n, \"BI\"\n/* BI */\n, \"SB\"\n/* SB */\n, \"HG\"\n/* HG */\n];\n\nfunction addMetal(structure, unit, builder) {\n  var elements = unit.elements;\n  var _a = unit.model.atomicConformation,\n      x = _a.x,\n      y = _a.y,\n      z = _a.z;\n\n  for (var i = 0, il = elements.length; i < il; ++i) {\n    var element = typeSymbol(unit, i);\n    var type = 0\n    /* None */\n    ;\n\n    if (IonicTypeMetals.includes(element)) {\n      type = 13\n      /* IonicTypeMetal */\n      ;\n    } else if (isTransitionMetal(element) || element === \"ZN\"\n    /* ZN */\n    || element === \"CD\"\n    /* CD */\n    ) {\n      type = 12\n      /* TransitionMetal */\n      ;\n    }\n\n    if (type) {\n      builder.add(type, 0\n      /* None */\n      , x[elements[i]], y[elements[i]], z[elements[i]], i);\n    }\n  }\n}\n\nfunction isProteinSidechain(atomname) {\n  return !ProteinBackboneAtoms.has(atomname);\n}\n\nfunction isProteinBackbone(atomname) {\n  return ProteinBackboneAtoms.has(atomname);\n}\n\nfunction isNucleicBackbone(atomname) {\n  return NucleicBackboneAtoms.has(atomname);\n}\n/**\r\n * Metal binding partners (dative bond or ionic-type interaction)\r\n */\n\n\nfunction addMetalBinding(structure, unit, builder) {\n  var elements = unit.elements;\n  var _a = unit.model.atomicConformation,\n      x = _a.x,\n      y = _a.y,\n      z = _a.z;\n\n  for (var i = 0, il = elements.length; i < il; ++i) {\n    var element = typeSymbol(unit, i);\n    var resname = compId(unit, i);\n    var atomname = atomId(unit, i);\n    var dative = false;\n    var ionic = false;\n    var isStandardAminoacid = AminoAcidNames.has(resname);\n    var isStandardBase = BaseNames.has(resname);\n\n    if (!isStandardAminoacid && !isStandardBase) {\n      if (isHalogen(element) || element === \"O\"\n      /* O */\n      || element === \"S\"\n      /* S */\n      ) {\n        dative = true;\n        ionic = true;\n      } else if (element === \"N\"\n      /* N */\n      ) {\n        dative = true;\n      }\n    } else if (isStandardAminoacid) {\n      // main chain oxygen atom or oxygen, nitrogen and sulfur from specific amino acids\n      if (element === \"O\"\n      /* O */\n      ) {\n        if (['ASP', 'GLU', 'SER', 'THR', 'TYR', 'ASN', 'GLN'].includes(resname) && isProteinSidechain(atomname)) {\n          dative = true;\n          ionic = true;\n        } else if (isProteinBackbone(atomname)) {\n          dative = true;\n          ionic = true;\n        }\n      } else if (element === \"S\"\n      /* S */\n      && (resname === 'CYS' || resname === 'MET')) {\n        dative = true;\n        ionic = true;\n      } else if (element === \"N\"\n      /* N */\n      ) {\n        if (resname === 'HIS' && isProteinSidechain(atomname)) {\n          dative = true;\n        }\n      }\n    } else if (isStandardBase) {\n      // http://pubs.acs.org/doi/pdf/10.1021/acs.accounts.6b00253\n      // http://onlinelibrary.wiley.com/doi/10.1002/anie.200900399/full\n      if (element === \"O\"\n      /* O */\n      && isNucleicBackbone(atomname)) {\n        dative = true;\n        ionic = true;\n      } else if (['N3', 'N4', 'N7'].includes(atomname)) {\n        dative = true;\n      } else if (['O2', 'O4', 'O6'].includes(atomname)) {\n        dative = true;\n        ionic = true;\n      }\n    }\n\n    if (dative) {\n      builder.add(11\n      /* DativeBondPartner */\n      , 0\n      /* None */\n      , x[elements[i]], y[elements[i]], z[elements[i]], i);\n    }\n\n    if (ionic) {\n      builder.add(10\n      /* IonicTypePartner */\n      , 0\n      /* None */\n      , x[elements[i]], y[elements[i]], z[elements[i]], i);\n    }\n  }\n}\n\nfunction isMetalCoordination(ti, tj) {\n  if (ti === 12\n  /* TransitionMetal */\n  ) {\n    return tj === 11\n    /* DativeBondPartner */\n    || tj === 12\n    /* TransitionMetal */\n    ;\n  } else if (ti === 13\n  /* IonicTypeMetal */\n  ) {\n    return tj === 10\n    /* IonicTypePartner */\n    ;\n  }\n}\n\nfunction testMetalCoordination(structure, infoA, infoB, distanceSq) {\n  var typeA = infoA.types[infoA.feature];\n  var typeB = infoB.types[infoB.feature];\n  if (!isMetalCoordination(typeA, typeB) && !isMetalCoordination(typeB, typeA)) return;\n  return 7\n  /* MetalCoordination */\n  ;\n} //\n\n\nexport var MetalProvider = Features.Provider([13\n/* IonicTypeMetal */\n, 12\n/* TransitionMetal */\n], addMetal);\nexport var MetalBindingProvider = Features.Provider([10\n/* IonicTypePartner */\n, 11\n/* DativeBondPartner */\n], addMetalBinding);\nexport var MetalCoordinationProvider = {\n  name: 'metal-coordination',\n  params: MetalCoordinationParams,\n  createTester: function (props) {\n    return {\n      maxDistance: props.distanceMax,\n      requiredFeatures: new Set([13\n      /* IonicTypeMetal */\n      , 12\n      /* TransitionMetal */\n      , 10\n      /* IonicTypePartner */\n      , 11\n      /* DativeBondPartner */\n      ]),\n      getType: function (structure, infoA, infoB, distanceSq) {\n        return testMetalCoordination(structure, infoA, infoB, distanceSq);\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../../../src/mol-model-props/computed/interactions/metal.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2019 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n *\r\n * based in part on NGL (https://github.com/arose/ngl)\r\n */\r\nimport { ParamDefinition as PD } from '../../../mol-util/param-definition';\r\nimport { Features } from './features';\r\nimport { typeSymbol, compId, atomId } from '../chemistry/util';\r\nimport { isTransitionMetal, isHalogen } from '../../../mol-model/structure/model/properties/atomic/types';\r\nimport { AminoAcidNames, BaseNames, ProteinBackboneAtoms, NucleicBackboneAtoms } from '../../../mol-model/structure/model/types';\r\nexport var MetalCoordinationParams = {\r\n    distanceMax: PD.Numeric(3.0, { min: 1, max: 5, step: 0.1 }),\r\n};\r\nvar IonicTypeMetals = [\r\n    \"LI\" /* LI */, \"NA\" /* NA */, \"K\" /* K */, \"RB\" /* RB */, \"CS\" /* CS */,\r\n    \"MG\" /* MG */, \"CA\" /* CA */, \"SR\" /* SR */, \"BA\" /* BA */, \"AL\" /* AL */,\r\n    \"GA\" /* GA */, \"IN\" /* IN */, \"TL\" /* TL */, \"SC\" /* SC */, \"SN\" /* SN */,\r\n    \"PB\" /* PB */, \"BI\" /* BI */, \"SB\" /* SB */, \"HG\" /* HG */\r\n];\r\nfunction addMetal(structure, unit, builder) {\r\n    var elements = unit.elements;\r\n    var _a = unit.model.atomicConformation, x = _a.x, y = _a.y, z = _a.z;\r\n    for (var i = 0, il = elements.length; i < il; ++i) {\r\n        var element = typeSymbol(unit, i);\r\n        var type = 0 /* None */;\r\n        if (IonicTypeMetals.includes(element)) {\r\n            type = 13 /* IonicTypeMetal */;\r\n        }\r\n        else if (isTransitionMetal(element) || element === \"ZN\" /* ZN */ || element === \"CD\" /* CD */) {\r\n            type = 12 /* TransitionMetal */;\r\n        }\r\n        if (type) {\r\n            builder.add(type, 0 /* None */, x[elements[i]], y[elements[i]], z[elements[i]], i);\r\n        }\r\n    }\r\n}\r\nfunction isProteinSidechain(atomname) {\r\n    return !ProteinBackboneAtoms.has(atomname);\r\n}\r\nfunction isProteinBackbone(atomname) {\r\n    return ProteinBackboneAtoms.has(atomname);\r\n}\r\nfunction isNucleicBackbone(atomname) {\r\n    return NucleicBackboneAtoms.has(atomname);\r\n}\r\n/**\r\n * Metal binding partners (dative bond or ionic-type interaction)\r\n */\r\nfunction addMetalBinding(structure, unit, builder) {\r\n    var elements = unit.elements;\r\n    var _a = unit.model.atomicConformation, x = _a.x, y = _a.y, z = _a.z;\r\n    for (var i = 0, il = elements.length; i < il; ++i) {\r\n        var element = typeSymbol(unit, i);\r\n        var resname = compId(unit, i);\r\n        var atomname = atomId(unit, i);\r\n        var dative = false;\r\n        var ionic = false;\r\n        var isStandardAminoacid = AminoAcidNames.has(resname);\r\n        var isStandardBase = BaseNames.has(resname);\r\n        if (!isStandardAminoacid && !isStandardBase) {\r\n            if (isHalogen(element) || element === \"O\" /* O */ || element === \"S\" /* S */) {\r\n                dative = true;\r\n                ionic = true;\r\n            }\r\n            else if (element === \"N\" /* N */) {\r\n                dative = true;\r\n            }\r\n        }\r\n        else if (isStandardAminoacid) {\r\n            // main chain oxygen atom or oxygen, nitrogen and sulfur from specific amino acids\r\n            if (element === \"O\" /* O */) {\r\n                if (['ASP', 'GLU', 'SER', 'THR', 'TYR', 'ASN', 'GLN'].includes(resname) && isProteinSidechain(atomname)) {\r\n                    dative = true;\r\n                    ionic = true;\r\n                }\r\n                else if (isProteinBackbone(atomname)) {\r\n                    dative = true;\r\n                    ionic = true;\r\n                }\r\n            }\r\n            else if (element === \"S\" /* S */ && (resname === 'CYS' || resname === 'MET')) {\r\n                dative = true;\r\n                ionic = true;\r\n            }\r\n            else if (element === \"N\" /* N */) {\r\n                if (resname === 'HIS' && isProteinSidechain(atomname)) {\r\n                    dative = true;\r\n                }\r\n            }\r\n        }\r\n        else if (isStandardBase) {\r\n            // http://pubs.acs.org/doi/pdf/10.1021/acs.accounts.6b00253\r\n            // http://onlinelibrary.wiley.com/doi/10.1002/anie.200900399/full\r\n            if (element === \"O\" /* O */ && isNucleicBackbone(atomname)) {\r\n                dative = true;\r\n                ionic = true;\r\n            }\r\n            else if (['N3', 'N4', 'N7'].includes(atomname)) {\r\n                dative = true;\r\n            }\r\n            else if (['O2', 'O4', 'O6'].includes(atomname)) {\r\n                dative = true;\r\n                ionic = true;\r\n            }\r\n        }\r\n        if (dative) {\r\n            builder.add(11 /* DativeBondPartner */, 0 /* None */, x[elements[i]], y[elements[i]], z[elements[i]], i);\r\n        }\r\n        if (ionic) {\r\n            builder.add(10 /* IonicTypePartner */, 0 /* None */, x[elements[i]], y[elements[i]], z[elements[i]], i);\r\n        }\r\n    }\r\n}\r\nfunction isMetalCoordination(ti, tj) {\r\n    if (ti === 12 /* TransitionMetal */) {\r\n        return (tj === 11 /* DativeBondPartner */ ||\r\n            tj === 12 /* TransitionMetal */);\r\n    }\r\n    else if (ti === 13 /* IonicTypeMetal */) {\r\n        return (tj === 10 /* IonicTypePartner */);\r\n    }\r\n}\r\nfunction testMetalCoordination(structure, infoA, infoB, distanceSq) {\r\n    var typeA = infoA.types[infoA.feature];\r\n    var typeB = infoB.types[infoB.feature];\r\n    if (!isMetalCoordination(typeA, typeB) && !isMetalCoordination(typeB, typeA))\r\n        return;\r\n    return 7 /* MetalCoordination */;\r\n}\r\n//\r\nexport var MetalProvider = Features.Provider([13 /* IonicTypeMetal */, 12 /* TransitionMetal */], addMetal);\r\nexport var MetalBindingProvider = Features.Provider([10 /* IonicTypePartner */, 11 /* DativeBondPartner */], addMetalBinding);\r\nexport var MetalCoordinationProvider = {\r\n    name: 'metal-coordination',\r\n    params: MetalCoordinationParams,\r\n    createTester: function (props) {\r\n        return {\r\n            maxDistance: props.distanceMax,\r\n            requiredFeatures: new Set([13 /* IonicTypeMetal */, 12 /* TransitionMetal */, 10 /* IonicTypePartner */, 11 /* DativeBondPartner */]),\r\n            getType: function (structure, infoA, infoB, distanceSq) { return testMetalCoordination(structure, infoA, infoB, distanceSq); }\r\n        };\r\n    }\r\n};\r\n//# sourceMappingURL=metal.js.map"]},"metadata":{},"sourceType":"module"}