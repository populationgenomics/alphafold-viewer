{"ast":null,"code":"/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign, __awaiter, __extends, __generator } from \"tslib\";\nimport { List } from 'immutable';\nimport { StatefulPluginComponent } from '../component';\nimport { utf8ByteCount, utf8Write } from '../../mol-io/common/utf8';\nimport { Zip } from '../../mol-util/zip/zip';\nimport { readFromFile } from '../../mol-util/data-source';\nimport { objectForEach } from '../../mol-util/object';\nimport { PLUGIN_VERSION } from '../../mol-plugin/version';\nexport { PluginStateSnapshotManager };\n\nvar PluginStateSnapshotManager =\n/** @class */\nfunction (_super) {\n  __extends(PluginStateSnapshotManager, _super);\n\n  function PluginStateSnapshotManager(plugin) {\n    var _this = _super.call(this, {\n      current: void 0,\n      entries: List(),\n      isPlaying: false,\n      nextSnapshotDelayInMs: PluginStateSnapshotManager.DefaultNextSnapshotDelayInMs\n    }) || this;\n\n    _this.plugin = plugin;\n    _this.entryMap = new Map();\n    _this.events = {\n      changed: _this.ev()\n    };\n    _this.timeoutHandle = void 0;\n\n    _this.next = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var next, snapshot, delay;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this.timeoutHandle = void 0;\n              next = this.getNextId(this.state.current, 1);\n\n              if (!next || next === this.state.current) {\n                this.stop();\n                return [2\n                /*return*/\n                ];\n              }\n\n              snapshot = this.setCurrent(next);\n              return [4\n              /*yield*/\n              , this.plugin.state.setSnapshot(snapshot)];\n\n            case 1:\n              _a.sent();\n\n              delay = typeof snapshot.durationInMs !== 'undefined' ? snapshot.durationInMs : this.state.nextSnapshotDelayInMs;\n              if (this.state.isPlaying) this.timeoutHandle = setTimeout(this.next, delay);\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    return _this; // TODO make nextSnapshotDelayInMs editable\n  }\n\n  PluginStateSnapshotManager.prototype.getIndex = function (e) {\n    return this.state.entries.indexOf(e);\n  };\n\n  PluginStateSnapshotManager.prototype.getEntry = function (id) {\n    if (!id) return;\n    return this.entryMap.get(id);\n  };\n\n  PluginStateSnapshotManager.prototype.remove = function (id) {\n    var e = this.entryMap.get(id);\n    if (!e) return;\n    this.entryMap.delete(id);\n    this.updateState({\n      current: this.state.current === id ? void 0 : this.state.current,\n      entries: this.state.entries.delete(this.getIndex(e))\n    });\n    this.events.changed.next(void 0);\n  };\n\n  PluginStateSnapshotManager.prototype.add = function (e) {\n    this.entryMap.set(e.snapshot.id, e);\n    this.updateState({\n      current: e.snapshot.id,\n      entries: this.state.entries.push(e)\n    });\n    this.events.changed.next(void 0);\n  };\n\n  PluginStateSnapshotManager.prototype.replace = function (id, snapshot) {\n    var old = this.getEntry(id);\n    if (!old) return;\n    var idx = this.getIndex(old); // The id changes here!\n\n    var e = PluginStateSnapshotManager.Entry(snapshot, {\n      name: old.name,\n      description: old.description\n    });\n    this.entryMap.set(snapshot.id, e);\n    this.updateState({\n      current: e.snapshot.id,\n      entries: this.state.entries.set(idx, e)\n    });\n    this.events.changed.next(void 0);\n  };\n\n  PluginStateSnapshotManager.prototype.move = function (id, dir) {\n    var len = this.state.entries.size;\n    if (len < 2) return;\n    var e = this.getEntry(id);\n    if (!e) return;\n    var from = this.getIndex(e);\n    var to = (from + dir) % len;\n    if (to < 0) to += len;\n    var f = this.state.entries.get(to);\n    var entries = this.state.entries.asMutable();\n    entries.set(to, e);\n    entries.set(from, f);\n    this.updateState({\n      current: e.snapshot.id,\n      entries: entries.asImmutable()\n    });\n    this.events.changed.next(void 0);\n  };\n\n  PluginStateSnapshotManager.prototype.clear = function () {\n    if (this.state.entries.size === 0) return;\n    this.entryMap.clear();\n    this.updateState({\n      current: void 0,\n      entries: List()\n    });\n    this.events.changed.next(void 0);\n  };\n\n  PluginStateSnapshotManager.prototype.setCurrent = function (id) {\n    var e = this.getEntry(id);\n\n    if (e) {\n      this.updateState({\n        current: id\n      });\n      this.events.changed.next(void 0);\n    }\n\n    return e && e.snapshot;\n  };\n\n  PluginStateSnapshotManager.prototype.getNextId = function (id, dir) {\n    var len = this.state.entries.size;\n\n    if (!id) {\n      if (len === 0) return void 0;\n      var idx_1 = dir === -1 ? len - 1 : 0;\n      return this.state.entries.get(idx_1).snapshot.id;\n    }\n\n    var e = this.getEntry(id);\n    if (!e) return;\n    var idx = this.getIndex(e);\n    if (idx < 0) return;\n    idx = (idx + dir) % len;\n    if (idx < 0) idx += len;\n    return this.state.entries.get(idx).snapshot.id;\n  };\n\n  PluginStateSnapshotManager.prototype.setStateSnapshot = function (snapshot) {\n    return __awaiter(this, void 0, void 0, function () {\n      var entries, _i, _a, e, current, entry, next;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (snapshot.version !== PLUGIN_VERSION) {// TODO\n              // console.warn('state snapshot version mismatch');\n            }\n\n            this.clear();\n            entries = List().asMutable();\n\n            for (_i = 0, _a = snapshot.entries; _i < _a.length; _i++) {\n              e = _a[_i];\n              this.entryMap.set(e.snapshot.id, e);\n              entries.push(e);\n            }\n\n            current = snapshot.current ? snapshot.current : snapshot.entries.length > 0 ? snapshot.entries[0].snapshot.id : void 0;\n            this.updateState({\n              current: current,\n              entries: entries.asImmutable(),\n              isPlaying: false,\n              nextSnapshotDelayInMs: snapshot.playback ? snapshot.playback.nextSnapshotDelayInMs : PluginStateSnapshotManager.DefaultNextSnapshotDelayInMs\n            });\n            this.events.changed.next(void 0);\n            if (!current) return [2\n            /*return*/\n            ];\n            entry = this.getEntry(current);\n            next = entry && entry.snapshot;\n            if (!next) return [2\n            /*return*/\n            ];\n            return [4\n            /*yield*/\n            , this.plugin.state.setSnapshot(next)];\n\n          case 1:\n            _b.sent();\n\n            if (snapshot.playback && snapshot.playback.isPlaying) this.play(true);\n            return [2\n            /*return*/\n            , next];\n        }\n      });\n    });\n  };\n\n  PluginStateSnapshotManager.prototype.syncCurrent = function (options) {\n    var snapshot = this.plugin.state.getSnapshot(options === null || options === void 0 ? void 0 : options.params);\n\n    if (this.state.entries.size === 0 || !this.state.current) {\n      this.add(PluginStateSnapshotManager.Entry(snapshot, {\n        name: options === null || options === void 0 ? void 0 : options.name,\n        description: options === null || options === void 0 ? void 0 : options.description\n      }));\n    } else {\n      this.replace(this.state.current, snapshot);\n    }\n  };\n\n  PluginStateSnapshotManager.prototype.getStateSnapshot = function (options) {\n    // TODO: diffing and all that fancy stuff\n    this.syncCurrent(options);\n    return {\n      timestamp: +new Date(),\n      version: PLUGIN_VERSION,\n      name: options && options.name,\n      description: options && options.description,\n      current: this.state.current,\n      playback: {\n        isPlaying: !!(options && options.playOnLoad),\n        nextSnapshotDelayInMs: this.state.nextSnapshotDelayInMs\n      },\n      entries: this.state.entries.valueSeq().toArray()\n    };\n  };\n\n  PluginStateSnapshotManager.prototype.serialize = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var json, state, zipDataObj, assets, _i, _a, _b, asset, file, _c, _d, _e, index, data, zipFile;\n\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            json = JSON.stringify(this.getStateSnapshot({\n              params: options === null || options === void 0 ? void 0 : options.params\n            }), null, 2);\n            if (!(!(options === null || options === void 0 ? void 0 : options.type) || options.type === 'json' || options.type === 'molj')) return [3\n            /*break*/\n            , 1];\n            return [2\n            /*return*/\n            , new Blob([json], {\n              type: 'application/json;charset=utf-8'\n            })];\n\n          case 1:\n            state = new Uint8Array(utf8ByteCount(json));\n            utf8Write(state, 0, json);\n            zipDataObj = {\n              'state.json': state\n            };\n            assets = [];\n            _i = 0, _a = this.plugin.managers.asset.assets;\n            _f.label = 2;\n\n          case 2:\n            if (!(_i < _a.length)) return [3\n            /*break*/\n            , 5];\n            _b = _a[_i], asset = _b.asset, file = _b.file;\n            assets.push([asset.id, asset]);\n            _c = zipDataObj;\n            _d = \"assets/\" + asset.id;\n            _e = Uint8Array.bind;\n            return [4\n            /*yield*/\n            , file.arrayBuffer()];\n\n          case 3:\n            _c[_d] = new (_e.apply(Uint8Array, [void 0, _f.sent()]))();\n            _f.label = 4;\n\n          case 4:\n            _i++;\n            return [3\n            /*break*/\n            , 2];\n\n          case 5:\n            if (assets.length > 0) {\n              index = JSON.stringify(assets, null, 2);\n              data = new Uint8Array(utf8ByteCount(index));\n              utf8Write(data, 0, index);\n              zipDataObj['assets.json'] = data;\n            }\n\n            return [4\n            /*yield*/\n            , this.plugin.runTask(Zip(zipDataObj))];\n\n          case 6:\n            zipFile = _f.sent();\n            return [2\n            /*return*/\n            , new Blob([zipFile], {\n              type: 'application/zip'\n            })];\n        }\n      });\n    });\n  };\n\n  PluginStateSnapshotManager.prototype.open = function (file) {\n    return __awaiter(this, void 0, void 0, function () {\n      var fn, data, snapshot, data, assets_1, stateFile, stateData, file_1, json, _a, _b, _i, json_1, _c, id, asset, snapshot, e_1;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _d.trys.push([0, 8,, 9]);\n\n            fn = file.name.toLowerCase();\n            if (!(fn.endsWith('json') || fn.endsWith('molj'))) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.plugin.runTask(readFromFile(file, 'string'))];\n\n          case 1:\n            data = _d.sent();\n            snapshot = JSON.parse(data);\n\n            if (PluginStateSnapshotManager.isStateSnapshot(snapshot)) {\n              return [2\n              /*return*/\n              , this.setStateSnapshot(snapshot)];\n            } else if (PluginStateSnapshotManager.isStateSnapshot(snapshot.data)) {\n              return [2\n              /*return*/\n              , this.setStateSnapshot(snapshot.data)];\n            } else {\n              this.plugin.state.setSnapshot(snapshot);\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this.plugin.runTask(readFromFile(file, 'zip'))];\n\n          case 3:\n            data = _d.sent();\n            assets_1 = Object.create(null);\n            objectForEach(data, function (v, k) {\n              if (k === 'state.json' || k === 'assets.json') return;\n              var name = k.substring(k.indexOf('/') + 1);\n              assets_1[name] = new File([v], name);\n            });\n            stateFile = new File([data['state.json']], 'state.json');\n            return [4\n            /*yield*/\n            , this.plugin.runTask(readFromFile(stateFile, 'string'))];\n\n          case 4:\n            stateData = _d.sent();\n            if (!data['assets.json']) return [3\n            /*break*/\n            , 6];\n            file_1 = new File([data['assets.json']], 'assets.json');\n            _b = (_a = JSON).parse;\n            return [4\n            /*yield*/\n            , this.plugin.runTask(readFromFile(file_1, 'string'))];\n\n          case 5:\n            json = _b.apply(_a, [_d.sent()]);\n\n            for (_i = 0, json_1 = json; _i < json_1.length; _i++) {\n              _c = json_1[_i], id = _c[0], asset = _c[1];\n              this.plugin.managers.asset.set(asset, assets_1[id]);\n            }\n\n            _d.label = 6;\n\n          case 6:\n            snapshot = JSON.parse(stateData);\n            return [2\n            /*return*/\n            , this.setStateSnapshot(snapshot)];\n\n          case 7:\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            e_1 = _d.sent();\n            this.plugin.log.error(\"Reading state: \" + e_1);\n            return [3\n            /*break*/\n            , 9];\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  PluginStateSnapshotManager.prototype.play = function (delayFirst) {\n    if (delayFirst === void 0) {\n      delayFirst = false;\n    }\n\n    this.updateState({\n      isPlaying: true\n    });\n\n    if (delayFirst) {\n      var e = this.getEntry(this.state.current);\n\n      if (!e) {\n        this.next();\n        return;\n      }\n\n      this.events.changed.next(void 0);\n      var snapshot = e.snapshot;\n      var delay = typeof snapshot.durationInMs !== 'undefined' ? snapshot.durationInMs : this.state.nextSnapshotDelayInMs;\n      this.timeoutHandle = setTimeout(this.next, delay);\n    } else {\n      this.next();\n    }\n  };\n\n  PluginStateSnapshotManager.prototype.stop = function () {\n    this.updateState({\n      isPlaying: false\n    });\n    if (typeof this.timeoutHandle !== 'undefined') clearTimeout(this.timeoutHandle);\n    this.timeoutHandle = void 0;\n    this.events.changed.next(void 0);\n  };\n\n  PluginStateSnapshotManager.prototype.togglePlay = function () {\n    if (this.state.isPlaying) {\n      this.stop();\n      this.plugin.managers.animation.stop();\n    } else {\n      this.play();\n    }\n  };\n\n  PluginStateSnapshotManager.DefaultNextSnapshotDelayInMs = 1500;\n  return PluginStateSnapshotManager;\n}(StatefulPluginComponent);\n\n(function (PluginStateSnapshotManager) {\n  function Entry(snapshot, params) {\n    return __assign({\n      timestamp: +new Date(),\n      snapshot: snapshot\n    }, params);\n  }\n\n  PluginStateSnapshotManager.Entry = Entry;\n\n  function isStateSnapshot(x) {\n    var s = x;\n    return !!s && !!s.timestamp && !!s.entries;\n  }\n\n  PluginStateSnapshotManager.isStateSnapshot = isStateSnapshot;\n})(PluginStateSnapshotManager || (PluginStateSnapshotManager = {}));","map":{"version":3,"sources":["../../../src/mol-plugin-state/manager/snapshots.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2018-2021 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign, __awaiter, __extends, __generator } from \"tslib\";\r\nimport { List } from 'immutable';\r\nimport { StatefulPluginComponent } from '../component';\r\nimport { utf8ByteCount, utf8Write } from '../../mol-io/common/utf8';\r\nimport { Zip } from '../../mol-util/zip/zip';\r\nimport { readFromFile } from '../../mol-util/data-source';\r\nimport { objectForEach } from '../../mol-util/object';\r\nimport { PLUGIN_VERSION } from '../../mol-plugin/version';\r\nexport { PluginStateSnapshotManager };\r\nvar PluginStateSnapshotManager = /** @class */ (function (_super) {\r\n    __extends(PluginStateSnapshotManager, _super);\r\n    function PluginStateSnapshotManager(plugin) {\r\n        var _this = _super.call(this, {\r\n            current: void 0,\r\n            entries: List(),\r\n            isPlaying: false,\r\n            nextSnapshotDelayInMs: PluginStateSnapshotManager.DefaultNextSnapshotDelayInMs\r\n        }) || this;\r\n        _this.plugin = plugin;\r\n        _this.entryMap = new Map();\r\n        _this.events = {\r\n            changed: _this.ev()\r\n        };\r\n        _this.timeoutHandle = void 0;\r\n        _this.next = function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var next, snapshot, delay;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.timeoutHandle = void 0;\r\n                        next = this.getNextId(this.state.current, 1);\r\n                        if (!next || next === this.state.current) {\r\n                            this.stop();\r\n                            return [2 /*return*/];\r\n                        }\r\n                        snapshot = this.setCurrent(next);\r\n                        return [4 /*yield*/, this.plugin.state.setSnapshot(snapshot)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        delay = typeof snapshot.durationInMs !== 'undefined' ? snapshot.durationInMs : this.state.nextSnapshotDelayInMs;\r\n                        if (this.state.isPlaying)\r\n                            this.timeoutHandle = setTimeout(this.next, delay);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); };\r\n        return _this;\r\n        // TODO make nextSnapshotDelayInMs editable\r\n    }\r\n    PluginStateSnapshotManager.prototype.getIndex = function (e) {\r\n        return this.state.entries.indexOf(e);\r\n    };\r\n    PluginStateSnapshotManager.prototype.getEntry = function (id) {\r\n        if (!id)\r\n            return;\r\n        return this.entryMap.get(id);\r\n    };\r\n    PluginStateSnapshotManager.prototype.remove = function (id) {\r\n        var e = this.entryMap.get(id);\r\n        if (!e)\r\n            return;\r\n        this.entryMap.delete(id);\r\n        this.updateState({\r\n            current: this.state.current === id ? void 0 : this.state.current,\r\n            entries: this.state.entries.delete(this.getIndex(e))\r\n        });\r\n        this.events.changed.next(void 0);\r\n    };\r\n    PluginStateSnapshotManager.prototype.add = function (e) {\r\n        this.entryMap.set(e.snapshot.id, e);\r\n        this.updateState({ current: e.snapshot.id, entries: this.state.entries.push(e) });\r\n        this.events.changed.next(void 0);\r\n    };\r\n    PluginStateSnapshotManager.prototype.replace = function (id, snapshot) {\r\n        var old = this.getEntry(id);\r\n        if (!old)\r\n            return;\r\n        var idx = this.getIndex(old);\r\n        // The id changes here!\r\n        var e = PluginStateSnapshotManager.Entry(snapshot, {\r\n            name: old.name,\r\n            description: old.description\r\n        });\r\n        this.entryMap.set(snapshot.id, e);\r\n        this.updateState({ current: e.snapshot.id, entries: this.state.entries.set(idx, e) });\r\n        this.events.changed.next(void 0);\r\n    };\r\n    PluginStateSnapshotManager.prototype.move = function (id, dir) {\r\n        var len = this.state.entries.size;\r\n        if (len < 2)\r\n            return;\r\n        var e = this.getEntry(id);\r\n        if (!e)\r\n            return;\r\n        var from = this.getIndex(e);\r\n        var to = (from + dir) % len;\r\n        if (to < 0)\r\n            to += len;\r\n        var f = this.state.entries.get(to);\r\n        var entries = this.state.entries.asMutable();\r\n        entries.set(to, e);\r\n        entries.set(from, f);\r\n        this.updateState({ current: e.snapshot.id, entries: entries.asImmutable() });\r\n        this.events.changed.next(void 0);\r\n    };\r\n    PluginStateSnapshotManager.prototype.clear = function () {\r\n        if (this.state.entries.size === 0)\r\n            return;\r\n        this.entryMap.clear();\r\n        this.updateState({ current: void 0, entries: List() });\r\n        this.events.changed.next(void 0);\r\n    };\r\n    PluginStateSnapshotManager.prototype.setCurrent = function (id) {\r\n        var e = this.getEntry(id);\r\n        if (e) {\r\n            this.updateState({ current: id });\r\n            this.events.changed.next(void 0);\r\n        }\r\n        return e && e.snapshot;\r\n    };\r\n    PluginStateSnapshotManager.prototype.getNextId = function (id, dir) {\r\n        var len = this.state.entries.size;\r\n        if (!id) {\r\n            if (len === 0)\r\n                return void 0;\r\n            var idx_1 = dir === -1 ? len - 1 : 0;\r\n            return this.state.entries.get(idx_1).snapshot.id;\r\n        }\r\n        var e = this.getEntry(id);\r\n        if (!e)\r\n            return;\r\n        var idx = this.getIndex(e);\r\n        if (idx < 0)\r\n            return;\r\n        idx = (idx + dir) % len;\r\n        if (idx < 0)\r\n            idx += len;\r\n        return this.state.entries.get(idx).snapshot.id;\r\n    };\r\n    PluginStateSnapshotManager.prototype.setStateSnapshot = function (snapshot) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var entries, _i, _a, e, current, entry, next;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (snapshot.version !== PLUGIN_VERSION) {\r\n                            // TODO\r\n                            // console.warn('state snapshot version mismatch');\r\n                        }\r\n                        this.clear();\r\n                        entries = List().asMutable();\r\n                        for (_i = 0, _a = snapshot.entries; _i < _a.length; _i++) {\r\n                            e = _a[_i];\r\n                            this.entryMap.set(e.snapshot.id, e);\r\n                            entries.push(e);\r\n                        }\r\n                        current = snapshot.current\r\n                            ? snapshot.current\r\n                            : snapshot.entries.length > 0\r\n                                ? snapshot.entries[0].snapshot.id\r\n                                : void 0;\r\n                        this.updateState({\r\n                            current: current,\r\n                            entries: entries.asImmutable(),\r\n                            isPlaying: false,\r\n                            nextSnapshotDelayInMs: snapshot.playback ? snapshot.playback.nextSnapshotDelayInMs : PluginStateSnapshotManager.DefaultNextSnapshotDelayInMs\r\n                        });\r\n                        this.events.changed.next(void 0);\r\n                        if (!current)\r\n                            return [2 /*return*/];\r\n                        entry = this.getEntry(current);\r\n                        next = entry && entry.snapshot;\r\n                        if (!next)\r\n                            return [2 /*return*/];\r\n                        return [4 /*yield*/, this.plugin.state.setSnapshot(next)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        if (snapshot.playback && snapshot.playback.isPlaying)\r\n                            this.play(true);\r\n                        return [2 /*return*/, next];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PluginStateSnapshotManager.prototype.syncCurrent = function (options) {\r\n        var snapshot = this.plugin.state.getSnapshot(options === null || options === void 0 ? void 0 : options.params);\r\n        if (this.state.entries.size === 0 || !this.state.current) {\r\n            this.add(PluginStateSnapshotManager.Entry(snapshot, { name: options === null || options === void 0 ? void 0 : options.name, description: options === null || options === void 0 ? void 0 : options.description }));\r\n        }\r\n        else {\r\n            this.replace(this.state.current, snapshot);\r\n        }\r\n    };\r\n    PluginStateSnapshotManager.prototype.getStateSnapshot = function (options) {\r\n        // TODO: diffing and all that fancy stuff\r\n        this.syncCurrent(options);\r\n        return {\r\n            timestamp: +new Date(),\r\n            version: PLUGIN_VERSION,\r\n            name: options && options.name,\r\n            description: options && options.description,\r\n            current: this.state.current,\r\n            playback: {\r\n                isPlaying: !!(options && options.playOnLoad),\r\n                nextSnapshotDelayInMs: this.state.nextSnapshotDelayInMs\r\n            },\r\n            entries: this.state.entries.valueSeq().toArray()\r\n        };\r\n    };\r\n    PluginStateSnapshotManager.prototype.serialize = function (options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var json, state, zipDataObj, assets, _i, _a, _b, asset, file, _c, _d, _e, index, data, zipFile;\r\n            return __generator(this, function (_f) {\r\n                switch (_f.label) {\r\n                    case 0:\r\n                        json = JSON.stringify(this.getStateSnapshot({ params: options === null || options === void 0 ? void 0 : options.params }), null, 2);\r\n                        if (!(!(options === null || options === void 0 ? void 0 : options.type) || options.type === 'json' || options.type === 'molj')) return [3 /*break*/, 1];\r\n                        return [2 /*return*/, new Blob([json], { type: 'application/json;charset=utf-8' })];\r\n                    case 1:\r\n                        state = new Uint8Array(utf8ByteCount(json));\r\n                        utf8Write(state, 0, json);\r\n                        zipDataObj = {\r\n                            'state.json': state\r\n                        };\r\n                        assets = [];\r\n                        _i = 0, _a = this.plugin.managers.asset.assets;\r\n                        _f.label = 2;\r\n                    case 2:\r\n                        if (!(_i < _a.length)) return [3 /*break*/, 5];\r\n                        _b = _a[_i], asset = _b.asset, file = _b.file;\r\n                        assets.push([asset.id, asset]);\r\n                        _c = zipDataObj;\r\n                        _d = \"assets/\" + asset.id;\r\n                        _e = Uint8Array.bind;\r\n                        return [4 /*yield*/, file.arrayBuffer()];\r\n                    case 3:\r\n                        _c[_d] = new (_e.apply(Uint8Array, [void 0, _f.sent()]))();\r\n                        _f.label = 4;\r\n                    case 4:\r\n                        _i++;\r\n                        return [3 /*break*/, 2];\r\n                    case 5:\r\n                        if (assets.length > 0) {\r\n                            index = JSON.stringify(assets, null, 2);\r\n                            data = new Uint8Array(utf8ByteCount(index));\r\n                            utf8Write(data, 0, index);\r\n                            zipDataObj['assets.json'] = data;\r\n                        }\r\n                        return [4 /*yield*/, this.plugin.runTask(Zip(zipDataObj))];\r\n                    case 6:\r\n                        zipFile = _f.sent();\r\n                        return [2 /*return*/, new Blob([zipFile], { type: 'application/zip' })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PluginStateSnapshotManager.prototype.open = function (file) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var fn, data, snapshot, data, assets_1, stateFile, stateData, file_1, json, _a, _b, _i, json_1, _c, id, asset, snapshot, e_1;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        _d.trys.push([0, 8, , 9]);\r\n                        fn = file.name.toLowerCase();\r\n                        if (!(fn.endsWith('json') || fn.endsWith('molj'))) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.plugin.runTask(readFromFile(file, 'string'))];\r\n                    case 1:\r\n                        data = _d.sent();\r\n                        snapshot = JSON.parse(data);\r\n                        if (PluginStateSnapshotManager.isStateSnapshot(snapshot)) {\r\n                            return [2 /*return*/, this.setStateSnapshot(snapshot)];\r\n                        }\r\n                        else if (PluginStateSnapshotManager.isStateSnapshot(snapshot.data)) {\r\n                            return [2 /*return*/, this.setStateSnapshot(snapshot.data)];\r\n                        }\r\n                        else {\r\n                            this.plugin.state.setSnapshot(snapshot);\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 2: return [4 /*yield*/, this.plugin.runTask(readFromFile(file, 'zip'))];\r\n                    case 3:\r\n                        data = _d.sent();\r\n                        assets_1 = Object.create(null);\r\n                        objectForEach(data, function (v, k) {\r\n                            if (k === 'state.json' || k === 'assets.json')\r\n                                return;\r\n                            var name = k.substring(k.indexOf('/') + 1);\r\n                            assets_1[name] = new File([v], name);\r\n                        });\r\n                        stateFile = new File([data['state.json']], 'state.json');\r\n                        return [4 /*yield*/, this.plugin.runTask(readFromFile(stateFile, 'string'))];\r\n                    case 4:\r\n                        stateData = _d.sent();\r\n                        if (!data['assets.json']) return [3 /*break*/, 6];\r\n                        file_1 = new File([data['assets.json']], 'assets.json');\r\n                        _b = (_a = JSON).parse;\r\n                        return [4 /*yield*/, this.plugin.runTask(readFromFile(file_1, 'string'))];\r\n                    case 5:\r\n                        json = _b.apply(_a, [_d.sent()]);\r\n                        for (_i = 0, json_1 = json; _i < json_1.length; _i++) {\r\n                            _c = json_1[_i], id = _c[0], asset = _c[1];\r\n                            this.plugin.managers.asset.set(asset, assets_1[id]);\r\n                        }\r\n                        _d.label = 6;\r\n                    case 6:\r\n                        snapshot = JSON.parse(stateData);\r\n                        return [2 /*return*/, this.setStateSnapshot(snapshot)];\r\n                    case 7: return [3 /*break*/, 9];\r\n                    case 8:\r\n                        e_1 = _d.sent();\r\n                        this.plugin.log.error(\"Reading state: \" + e_1);\r\n                        return [3 /*break*/, 9];\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PluginStateSnapshotManager.prototype.play = function (delayFirst) {\r\n        if (delayFirst === void 0) { delayFirst = false; }\r\n        this.updateState({ isPlaying: true });\r\n        if (delayFirst) {\r\n            var e = this.getEntry(this.state.current);\r\n            if (!e) {\r\n                this.next();\r\n                return;\r\n            }\r\n            this.events.changed.next(void 0);\r\n            var snapshot = e.snapshot;\r\n            var delay = typeof snapshot.durationInMs !== 'undefined' ? snapshot.durationInMs : this.state.nextSnapshotDelayInMs;\r\n            this.timeoutHandle = setTimeout(this.next, delay);\r\n        }\r\n        else {\r\n            this.next();\r\n        }\r\n    };\r\n    PluginStateSnapshotManager.prototype.stop = function () {\r\n        this.updateState({ isPlaying: false });\r\n        if (typeof this.timeoutHandle !== 'undefined')\r\n            clearTimeout(this.timeoutHandle);\r\n        this.timeoutHandle = void 0;\r\n        this.events.changed.next(void 0);\r\n    };\r\n    PluginStateSnapshotManager.prototype.togglePlay = function () {\r\n        if (this.state.isPlaying) {\r\n            this.stop();\r\n            this.plugin.managers.animation.stop();\r\n        }\r\n        else {\r\n            this.play();\r\n        }\r\n    };\r\n    PluginStateSnapshotManager.DefaultNextSnapshotDelayInMs = 1500;\r\n    return PluginStateSnapshotManager;\r\n}(StatefulPluginComponent));\r\n(function (PluginStateSnapshotManager) {\r\n    function Entry(snapshot, params) {\r\n        return __assign({ timestamp: +new Date(), snapshot: snapshot }, params);\r\n    }\r\n    PluginStateSnapshotManager.Entry = Entry;\r\n    function isStateSnapshot(x) {\r\n        var s = x;\r\n        return !!s && !!s.timestamp && !!s.entries;\r\n    }\r\n    PluginStateSnapshotManager.isStateSnapshot = isStateSnapshot;\r\n})(PluginStateSnapshotManager || (PluginStateSnapshotManager = {}));\r\n//# sourceMappingURL=snapshots.js.map"]},"metadata":{},"sourceType":"module"}