{"ast":null,"code":"/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\nimport { __assign } from \"tslib\";\nimport { createRenderable } from '../renderable';\nimport { createGraphicsRenderItem } from '../webgl/render-item';\nimport { GlobalUniformSchema, BaseSchema, AttributeSpec, InternalSchema, SizeSchema, ElementsSpec, ValueSpec, DefineSpec, GlobalTextureSchema } from './schema';\nimport { CylindersShaderCode } from '../shader-code';\nimport { ValueCell } from '../../mol-util';\nexport var CylindersSchema = __assign(__assign(__assign({}, BaseSchema), SizeSchema), {\n  aGroup: AttributeSpec('float32', 1, 0),\n  aStart: AttributeSpec('float32', 3, 0),\n  aEnd: AttributeSpec('float32', 3, 0),\n  aMapping: AttributeSpec('float32', 3, 0),\n  aScale: AttributeSpec('float32', 1, 0),\n  aCap: AttributeSpec('float32', 1, 0),\n  elements: ElementsSpec('uint32'),\n  padding: ValueSpec('number'),\n  dDoubleSided: DefineSpec('boolean'),\n  dIgnoreLight: DefineSpec('boolean'),\n  dXrayShaded: DefineSpec('boolean')\n});\nexport function CylindersRenderable(ctx, id, values, state, materialId) {\n  var schema = __assign(__assign(__assign(__assign({}, GlobalUniformSchema), GlobalTextureSchema), InternalSchema), CylindersSchema);\n\n  var internalValues = {\n    uObjectId: ValueCell.create(id)\n  };\n  var shaderCode = CylindersShaderCode;\n  var renderItem = createGraphicsRenderItem(ctx, 'triangles', shaderCode, schema, __assign(__assign({}, values), internalValues), materialId);\n  return createRenderable(renderItem, values, state);\n}","map":{"version":3,"sources":["../../../src/mol-gl/renderable/cylinders.ts"],"names":[],"mappings":"AAAA;;;;AAIG;;AAEH,SAAsC,gBAAtC,QAA8D,eAA9D;AAEA,SAAS,wBAAT,QAAyC,sBAAzC;AACA,SAAS,mBAAT,EAA8B,UAA9B,EAA0C,aAA1C,EAAiE,cAAjE,EAAiF,UAAjF,EAA6G,YAA7G,EAA2H,SAA3H,EAAsI,UAAtI,EAAkJ,mBAAlJ,QAA6K,UAA7K;AACA,SAAS,mBAAT,QAAoC,gBAApC;AACA,SAAS,SAAT,QAA0B,gBAA1B;AAEA,OAAO,IAAM,eAAe,GAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACrB,UADqB,CAAA,EAErB,UAFqB,CAAA,EAEX;AACb,EAAA,MAAM,EAAE,aAAa,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CADR;AAEb,EAAA,MAAM,EAAE,aAAa,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CAFR;AAGb,EAAA,IAAI,EAAE,aAAa,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CAHN;AAIb,EAAA,QAAQ,EAAE,aAAa,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CAJV;AAKb,EAAA,MAAM,EAAE,aAAa,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CALR;AAMb,EAAA,IAAI,EAAE,aAAa,CAAC,SAAD,EAAY,CAAZ,EAAe,CAAf,CANN;AAOb,EAAA,QAAQ,EAAE,YAAY,CAAC,QAAD,CAPT;AASb,EAAA,OAAO,EAAE,SAAS,CAAC,QAAD,CATL;AAUb,EAAA,YAAY,EAAE,UAAU,CAAC,SAAD,CAVX;AAWb,EAAA,YAAY,EAAE,UAAU,CAAC,SAAD,CAXX;AAYb,EAAA,WAAW,EAAE,UAAU,CAAC,SAAD;AAZV,CAFW,CAArB;AAmBP,OAAM,SAAU,mBAAV,CAA8B,GAA9B,EAAiD,EAAjD,EAA6D,MAA7D,EAAsF,KAAtF,EAA8G,UAA9G,EAAgI;AAClI,MAAM,MAAM,GAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,mBAAR,CAAA,EAAgC,mBAAhC,CAAA,EAAwD,cAAxD,CAAA,EAA2E,eAA3E,CAAZ;;AACA,MAAM,cAAc,GAAmB;AACnC,IAAA,SAAS,EAAE,SAAS,CAAC,MAAV,CAAiB,EAAjB;AADwB,GAAvC;AAGA,MAAM,UAAU,GAAG,mBAAnB;AACA,MAAM,UAAU,GAAG,wBAAwB,CAAC,GAAD,EAAM,WAAN,EAAmB,UAAnB,EAA+B,MAA/B,EAAqC,QAAA,CAAA,QAAA,CAAA,EAAA,EAAO,MAAP,CAAA,EAAkB,cAAlB,CAArC,EAAyE,UAAzE,CAA3C;AACA,SAAO,gBAAgB,CAAC,UAAD,EAAa,MAAb,EAAqB,KAArB,CAAvB;AACH","sourceRoot":"","sourcesContent":["/**\r\n * Copyright (c) 2020 mol* contributors, licensed under MIT, See LICENSE file for more info.\r\n *\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\nimport { __assign } from \"tslib\";\r\nimport { createRenderable } from '../renderable';\r\nimport { createGraphicsRenderItem } from '../webgl/render-item';\r\nimport { GlobalUniformSchema, BaseSchema, AttributeSpec, InternalSchema, SizeSchema, ElementsSpec, ValueSpec, DefineSpec, GlobalTextureSchema } from './schema';\r\nimport { CylindersShaderCode } from '../shader-code';\r\nimport { ValueCell } from '../../mol-util';\r\nexport var CylindersSchema = __assign(__assign(__assign({}, BaseSchema), SizeSchema), { aGroup: AttributeSpec('float32', 1, 0), aStart: AttributeSpec('float32', 3, 0), aEnd: AttributeSpec('float32', 3, 0), aMapping: AttributeSpec('float32', 3, 0), aScale: AttributeSpec('float32', 1, 0), aCap: AttributeSpec('float32', 1, 0), elements: ElementsSpec('uint32'), padding: ValueSpec('number'), dDoubleSided: DefineSpec('boolean'), dIgnoreLight: DefineSpec('boolean'), dXrayShaded: DefineSpec('boolean') });\r\nexport function CylindersRenderable(ctx, id, values, state, materialId) {\r\n    var schema = __assign(__assign(__assign(__assign({}, GlobalUniformSchema), GlobalTextureSchema), InternalSchema), CylindersSchema);\r\n    var internalValues = {\r\n        uObjectId: ValueCell.create(id),\r\n    };\r\n    var shaderCode = CylindersShaderCode;\r\n    var renderItem = createGraphicsRenderItem(ctx, 'triangles', shaderCode, schema, __assign(__assign({}, values), internalValues), materialId);\r\n    return createRenderable(renderItem, values, state);\r\n}\r\n//# sourceMappingURL=cylinders.js.map"]},"metadata":{},"sourceType":"module"}